{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/scripts/scripts.js","node_modules/6to5/browser-polyfill.js","node_modules/6to5/lib/6to5/browser.js","node_modules/6to5/lib/6to5/file.js","node_modules/6to5/lib/6to5/generation/buffer.js","node_modules/6to5/lib/6to5/generation/generator.js","node_modules/6to5/lib/6to5/generation/generators/base.js","node_modules/6to5/lib/6to5/generation/generators/classes.js","node_modules/6to5/lib/6to5/generation/generators/comprehensions.js","node_modules/6to5/lib/6to5/generation/generators/expressions.js","node_modules/6to5/lib/6to5/generation/generators/flow.js","node_modules/6to5/lib/6to5/generation/generators/jsx.js","node_modules/6to5/lib/6to5/generation/generators/methods.js","node_modules/6to5/lib/6to5/generation/generators/modules.js","node_modules/6to5/lib/6to5/generation/generators/playground.js","node_modules/6to5/lib/6to5/generation/generators/statements.js","node_modules/6to5/lib/6to5/generation/generators/template-literals.js","node_modules/6to5/lib/6to5/generation/generators/types.js","node_modules/6to5/lib/6to5/generation/node/index.js","node_modules/6to5/lib/6to5/generation/node/parentheses.js","node_modules/6to5/lib/6to5/generation/node/whitespace.js","node_modules/6to5/lib/6to5/generation/position.js","node_modules/6to5/lib/6to5/generation/source-map.js","node_modules/6to5/lib/6to5/generation/whitespace.js","node_modules/6to5/lib/6to5/patch.js","node_modules/6to5/lib/6to5/transformation/modules/_default.js","node_modules/6to5/lib/6to5/transformation/modules/amd.js","node_modules/6to5/lib/6to5/transformation/modules/common.js","node_modules/6to5/lib/6to5/transformation/modules/ignore.js","node_modules/6to5/lib/6to5/transformation/modules/system.js","node_modules/6to5/lib/6to5/transformation/modules/umd.js","node_modules/6to5/lib/6to5/transformation/transform.js","node_modules/6to5/lib/6to5/transformation/transformer.js","node_modules/6to5/lib/6to5/transformation/transformers/_alias-functions.js","node_modules/6to5/lib/6to5/transformation/transformers/_block-hoist.js","node_modules/6to5/lib/6to5/transformation/transformers/_declarations.js","node_modules/6to5/lib/6to5/transformation/transformers/_module-formatter.js","node_modules/6to5/lib/6to5/transformation/transformers/es5-property-method-assignment.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-arrow-functions.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-classes.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-computed-property-names.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-constants.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-default-parameters.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-destructuring.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-for-of.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-generators.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-let-scoping.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-modules.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-property-name-shorthand.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-rest-parameters.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-spread.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-template-literals.js","node_modules/6to5/lib/6to5/transformation/transformers/es6-unicode-regex.js","node_modules/6to5/lib/6to5/transformation/transformers/es7-abstract-references.js","node_modules/6to5/lib/6to5/transformation/transformers/es7-array-comprehension.js","node_modules/6to5/lib/6to5/transformation/transformers/es7-exponentiation-operator.js","node_modules/6to5/lib/6to5/transformation/transformers/es7-generator-comprehension.js","node_modules/6to5/lib/6to5/transformation/transformers/es7-object-spread.js","node_modules/6to5/lib/6to5/transformation/transformers/playground-memoization-operator.js","node_modules/6to5/lib/6to5/transformation/transformers/playground-method-binding.js","node_modules/6to5/lib/6to5/transformation/transformers/playground-object-getter-memoization.js","node_modules/6to5/lib/6to5/transformation/transformers/react.js","node_modules/6to5/lib/6to5/transformation/transformers/spec-block-hoist-functions.js","node_modules/6to5/lib/6to5/transformation/transformers/spec-member-expression-literals.js","node_modules/6to5/lib/6to5/transformation/transformers/spec-no-duplicate-properties.js","node_modules/6to5/lib/6to5/transformation/transformers/spec-no-for-in-of-assignment.js","node_modules/6to5/lib/6to5/transformation/transformers/spec-property-literals.js","node_modules/6to5/lib/6to5/transformation/transformers/use-strict.js","node_modules/6to5/lib/6to5/traverse/index.js","node_modules/6to5/lib/6to5/traverse/scope.js","node_modules/6to5/lib/6to5/types/alias-keys.json","node_modules/6to5/lib/6to5/types/builder-keys.json","node_modules/6to5/lib/6to5/types/index.js","node_modules/6to5/lib/6to5/types/visitor-keys.json","node_modules/6to5/lib/6to5/util.js","node_modules/6to5/node_modules/acorn-6to5/acorn.js","node_modules/6to5/node_modules/ast-types/def/core.js","node_modules/6to5/node_modules/ast-types/def/e4x.js","node_modules/6to5/node_modules/ast-types/def/es6.js","node_modules/6to5/node_modules/ast-types/def/es7.js","node_modules/6to5/node_modules/ast-types/def/fb-harmony.js","node_modules/6to5/node_modules/ast-types/def/mozilla.js","node_modules/6to5/node_modules/ast-types/lib/equiv.js","node_modules/6to5/node_modules/ast-types/lib/node-path.js","node_modules/6to5/node_modules/ast-types/lib/path-visitor.js","node_modules/6to5/node_modules/ast-types/lib/path.js","node_modules/6to5/node_modules/ast-types/lib/scope.js","node_modules/6to5/node_modules/ast-types/lib/shared.js","node_modules/6to5/node_modules/ast-types/lib/types.js","node_modules/6to5/node_modules/ast-types/main.js","node_modules/6to5/node_modules/core-js/shim.js","node_modules/6to5/node_modules/estraverse/estraverse.js","node_modules/6to5/node_modules/esutils/lib/ast.js","node_modules/6to5/node_modules/esutils/lib/code.js","node_modules/6to5/node_modules/esutils/lib/keyword.js","node_modules/6to5/node_modules/esutils/lib/utils.js","node_modules/6to5/node_modules/jshint/src/vars.js","node_modules/6to5/node_modules/private/private.js","node_modules/6to5/node_modules/regenerator/lib/emit.js","node_modules/6to5/node_modules/regenerator/lib/hoist.js","node_modules/6to5/node_modules/regenerator/lib/leap.js","node_modules/6to5/node_modules/regenerator/lib/meta.js","node_modules/6to5/node_modules/regenerator/lib/util.js","node_modules/6to5/node_modules/regenerator/lib/visit.js","node_modules/6to5/node_modules/regenerator/main.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/build/es5/defs-main.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/build/es5/error.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/build/es5/jshint_globals/vars.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/build/es5/options.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/build/es5/scope.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/build/es5/stats.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/node_modules/alter/alter.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/node_modules/alter/node_modules/stable/stable.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/node_modules/ast-traverse/ast-traverse.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/node_modules/breakable/breakable.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/node_modules/simple-fmt/simple-fmt.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/node_modules/simple-is/simple-is.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/node_modules/stringmap/stringmap.js","node_modules/6to5/node_modules/regenerator/node_modules/defs/node_modules/stringset/stringset.js","node_modules/6to5/node_modules/regenerator/node_modules/esprima-fb/esprima.js","node_modules/6to5/node_modules/regenerator/node_modules/recast/lib/comments.js","node_modules/6to5/node_modules/regenerator/node_modules/recast/lib/lines.js","node_modules/6to5/node_modules/regenerator/node_modules/recast/lib/mapping.js","node_modules/6to5/node_modules/regenerator/node_modules/recast/lib/options.js","node_modules/6to5/node_modules/regenerator/node_modules/recast/lib/parser.js","node_modules/6to5/node_modules/regenerator/node_modules/recast/lib/patcher.js","node_modules/6to5/node_modules/regenerator/node_modules/recast/lib/printer.js","node_modules/6to5/node_modules/regenerator/node_modules/recast/lib/types.js","node_modules/6to5/node_modules/regenerator/node_modules/recast/lib/util.js","node_modules/6to5/node_modules/regenerator/node_modules/recast/main.js","node_modules/6to5/node_modules/regenerator/node_modules/through/index.js","node_modules/6to5/node_modules/regenerator/runtime.js","node_modules/6to5/node_modules/regexpu/data/character-class-escape-sets.js","node_modules/6to5/node_modules/regexpu/data/iu-mappings.json","node_modules/6to5/node_modules/regexpu/node_modules/regenerate/regenerate.js","node_modules/6to5/node_modules/regexpu/node_modules/regjsgen/regjsgen.js","node_modules/6to5/node_modules/regexpu/node_modules/regjsparser/parser.js","node_modules/6to5/node_modules/regexpu/rewrite-pattern.js","node_modules/6to5/node_modules/source-map/lib/source-map.js","node_modules/6to5/node_modules/source-map/lib/source-map/array-set.js","node_modules/6to5/node_modules/source-map/lib/source-map/base64-vlq.js","node_modules/6to5/node_modules/source-map/lib/source-map/base64.js","node_modules/6to5/node_modules/source-map/lib/source-map/binary-search.js","node_modules/6to5/node_modules/source-map/lib/source-map/source-map-consumer.js","node_modules/6to5/node_modules/source-map/lib/source-map/source-map-generator.js","node_modules/6to5/node_modules/source-map/lib/source-map/source-node.js","node_modules/6to5/node_modules/source-map/lib/source-map/util.js","node_modules/6to5/node_modules/source-map/node_modules/amdefine/amdefine.js","node_modules/6to5/templates.json","node_modules/backbone/backbone.js","node_modules/backbone/node_modules/underscore/underscore.js","node_modules/bootstrap/dist/js/bootstrap.js","node_modules/browserify/lib/_empty.js","node_modules/browserify/node_modules/assert/assert.js","node_modules/browserify/node_modules/buffer/index.js","node_modules/browserify/node_modules/buffer/node_modules/base64-js/lib/b64.js","node_modules/browserify/node_modules/buffer/node_modules/ieee754/index.js","node_modules/browserify/node_modules/buffer/node_modules/is-array/index.js","node_modules/browserify/node_modules/events/events.js","node_modules/browserify/node_modules/inherits/inherits_browser.js","node_modules/browserify/node_modules/isarray/index.js","node_modules/browserify/node_modules/path-browserify/index.js","node_modules/browserify/node_modules/process/browser.js","node_modules/browserify/node_modules/readable-stream/duplex.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_readable.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_transform.js","node_modules/browserify/node_modules/readable-stream/lib/_stream_writable.js","node_modules/browserify/node_modules/readable-stream/node_modules/core-util-is/lib/util.js","node_modules/browserify/node_modules/readable-stream/passthrough.js","node_modules/browserify/node_modules/readable-stream/readable.js","node_modules/browserify/node_modules/readable-stream/transform.js","node_modules/browserify/node_modules/readable-stream/writable.js","node_modules/browserify/node_modules/stream-browserify/index.js","node_modules/browserify/node_modules/string_decoder/index.js","node_modules/browserify/node_modules/util/support/isBufferBrowser.js","node_modules/browserify/node_modules/util/util.js","node_modules/jquery/dist/jquery.js","node_modules/lodash/dist/lodash.js","src/scripts/components/editor.js","src/scripts/components/scrollspy.js","src/scripts/components/sidebar.js","src/scripts/components/toolbar.js","src/scripts/pages/docs.js","src/scripts/pages/index.js","src/scripts/pages/plugins.js","src/scripts/pages/repl.js","src/scripts/router.js"],"names":[],"mappings":"AAAA;;;;;;;ICAO,QAAQ,2BAAM,UAAU;;IACxB,CAAC,2BAAM,QAAQ;;AAEtB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;QAER,WAAW;;IAEX,MAAM,2BAAM,UAAU;;AAC7B,IAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AAC1B,CAAC,CAAC;SAAM,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;CAAA,CAAC,CAAC;;;ACTrD;AACA;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChzPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxllFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChrptEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACltGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjlhSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnlfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACttHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdpjzrvrOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACljcxzPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACztt0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChrzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrjvoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzrppxqhOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxprhhrjxnveA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxlhjxzjjnejxxkj4CA,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AACjC,QAAM,IAAI,KAAK,CAAC,wCAAyC,CAAC,CAAA;CAC3D;;AAED,CAAC,WAAU,CAAC,EAAE;AACZ,MAAI,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;AAClD,MAAI,AAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAM,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,AAAC,EAAE;AAChG,UAAM,IAAI,KAAK,CAAC,gEAAiE,CAAC,CAAA;GACnF;CACF,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;AAWV,CAAC,WAAU,CAAC,EAAE;AACZ,cAAY,CAAC;;;;;AAKb,WAAS,aAAa,GAAG;AACvB,QAAI,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CAAA;;AAE5C,QAAI,kBAAkB,GAAG;AACvB,sBAAgB,EAAG,qBAAqB;AACxC,mBAAa,EAAM,eAAe;AAClC,iBAAW,EAAQ,+BAA+B;AAClD,gBAAU,EAAS,eAAe;KACnC,CAAA;;AAED,SAAK,IAAI,IAAI,IAAI,kBAAkB,EAAE;AACnC,UAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;AAChC,eAAO,EAAE,GAAG,EAAE,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAA;OACzC;KACF;;AAED,WAAO,KAAK;KAAA;GACb;;;AAGD,GAAC,CAAC,EAAE,CAAC,oBAAoB,GAAG,UAAU,QAAQ,EAAE;AAC9C,QAAI,MAAM,GAAG,KAAK,CAAA;AAClB,QAAI,GAAG,GAAG,IAAI,CAAA;AACd,KAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,YAAY;AAAE,YAAM,GAAG,IAAI,CAAA;KAAE,CAAC,CAAA;AAC7D,QAAI,QAAQ,GAAG,YAAY;AAAE,UAAI,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;KAAE,CAAA;AACpF,cAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;AAC9B,WAAO,IAAI,CAAA;GACZ,CAAA;;AAED,GAAC,CAAC,YAAY;AACZ,KAAC,CAAC,OAAO,CAAC,UAAU,GAAG,aAAa,EAAE,CAAA;;AAEtC,QAAI,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,OAAM;;AAEjC,KAAC,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,GAAG;AAChC,cAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG;AAClC,kBAAY,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG;AACtC,YAAM,EAAE,UAAU,CAAC,EAAE;AACnB,YAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;OAC5E;KACF,CAAA;GACF,CAAC,CAAA;CAEH,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;AAWV,CAAC,WAAU,CAAC,EAAE;AACZ,cAAY,CAAC;;;;;AAKb,MAAI,OAAO,GAAG,0BAAwB,CAAA;AACtC,MAAI,KAAK,GAAK,UAAU,EAAE,EAAE;AAC1B,KAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;GACvC,CAAA;;AAED,OAAK,CAAC,OAAO,GAAG,OAAO,CAAA;;AAEvB,OAAK,CAAC,mBAAmB,GAAG,GAAG,CAAA;;AAE/B,OAAK,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE;AACnC,QAAI,KAAK,GAAM,CAAC,CAAC,IAAI,CAAC,CAAA;AACtB,QAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;;AAExC,QAAI,CAAC,QAAQ,EAAE;AACb,cAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAC7B,cAAQ,GAAG,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC;AAAA,OAAA;KAC9D;;AAED,QAAI,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAA;;AAEzB,QAAI,CAAC,EAAE,CAAC,CAAC,cAAc,EAAE,CAAA;;AAEzB,QAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACnB,aAAO,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;KAClC;;AAED,WAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAA;;AAE9C,QAAI,CAAC,CAAC,kBAAkB,EAAE,EAAE,OAAM;;AAElC,WAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;;AAEzB,aAAS,aAAa,GAAG;;AAEvB,aAAO,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAA;KACrD;;AAED,KAAC,CAAC,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,GAC9C,OAAO,CACJ,GAAG,CAAC,iBAAiB,EAAE,aAAa,CAAC,CACrC,oBAAoB,CAAC,KAAK,CAAC,mBAAmB,CAAC,GAClD,aAAa,EAAE,CAAA;GAClB,CAAA;;;;;;AAMD,WAAS,MAAM,CAAC,MAAM,EAAE;AACtB,WAAO,IAAI,CAAC,IAAI,CAAC,YAAY;AAC3B,UAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA;AACnB,UAAI,IAAI,GAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;;AAElC,UAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,UAAU,EAAG,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAE,CAAA;AAC3D,UAAI,OAAO,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;KACxD,CAAC,CAAA;GACH;;AAED,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAA;;AAEpB,GAAC,CAAC,EAAE,CAAC,KAAK,GAAe,MAAM,CAAA;AAC/B,GAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAA;;;;;;AAM9B,GAAC,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,GAAG,YAAY;AAClC,KAAC,CAAC,EAAE,CAAC,KAAK,GAAG,GAAG,CAAA;AAChB,WAAO,IAAI,CAAA;GACZ,CAAA;;;;;;AAMD,GAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,yBAAyB,EAAE,OAAO,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;CAE1E,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;AAWV,CAAC,WAAU,CAAC,EAAE;AACZ,cAAY,CAAC;;;;;AAKb,MAAI,MAAM,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE;AACvC,QAAI,CAAC,QAAQ,GAAI,CAAC,CAAC,OAAO,CAAC,CAAA;AAC3B,QAAI,CAAC,OAAO,GAAK,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;AACvD,QAAI,CAAC,SAAS,GAAG,KAAK,CAAA;GACvB,CAAA;;AAED,QAAM,CAAC,OAAO,GAAI,OAAO,CAAA;;AAEzB,QAAM,CAAC,QAAQ,GAAG;AAChB,eAAW,EAAE,YAAY;GAC1B,CAAA;;AAED,QAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,KAAK,EAAE;AAC3C,QAAI,CAAC,GAAM,UAAU,CAAA;AACrB,QAAI,GAAG,GAAI,IAAI,CAAC,QAAQ,CAAA;AACxB,QAAI,GAAG,GAAI,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,MAAM,CAAA;AAC3C,QAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAA;;AAErB,SAAK,GAAG,KAAK,GAAG,MAAM,CAAA;;AAEtB,QAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;;;AAG7D,cAAU,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY;AAC7B,SAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;;AAEjE,UAAI,KAAK,IAAI,aAAa,EAAE;AAC1B,YAAI,CAAC,SAAS,GAAG,IAAI,CAAA;AACrB,WAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;OAC3B,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;AACzB,YAAI,CAAC,SAAS,GAAG,KAAK,CAAA;AACtB,WAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;OACjC;KACF,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;GACb,CAAA;;AAED,QAAM,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AACpC,QAAI,OAAO,GAAG,IAAI,CAAA;AAClB,QAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,2BAAyB,CAAC,CAAA;;AAE9D,QAAI,OAAO,CAAC,MAAM,EAAE;AAClB,UAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AACxC,UAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,OAAO,EAAE;AAClC,YAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,OAAO,GAAG,KAAK,CAAA,KAC1E,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;OACnD;AACD,UAAI,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;KACzF,MAAM;AACL,UAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAA;KACtE;;AAED,QAAI,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;GACjD,CAAA;;;;;;AAMD,WAAS,MAAM,CAAC,MAAM,EAAE;AACtB,WAAO,IAAI,CAAC,IAAI,CAAC,YAAY;AAC3B,UAAI,KAAK,GAAK,CAAC,CAAC,IAAI,CAAC,CAAA;AACrB,UAAI,IAAI,GAAM,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;AACrC,UAAI,OAAO,GAAG,OAAO,MAAM,IAAI,QAAQ,IAAI,MAAM,CAAA;;AAEjD,UAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW,EAAG,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAE,CAAA;;AAEtE,UAAI,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,CAAA,KAChC,IAAI,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;OACtC;;;AAGJ,wBAAqB;;AAErB,gBAA0B,MAAM,CAAA;AAChC,mCAAgC;;;;;;AAMhC;AACE,sBAAiB;AACjB,gBAAW;IACZ;;;;;;AAMD,cACG,EAAE,CAAC,0BAA0B,EAAE,2BAAyB,EAAE,UAAU,CAAC,EAAE;AACtE,QAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;AACtB,QAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AACtD,UAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;AAC3B,KAAC,CAAC,cAAc,EAAE,CAAA;GACnB,CAAC,CACD,EAAE,CAAC,kDAAkD,EAAE,2BAAyB,EAAE,UAAU,CAAC,EAAE;AAC9F,KAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;GAC9E,CAAC,CAAA;CAEL,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;AAWV,CAAC,WAAU,CAAC,EAAE;AACZ,cAAY,CAAC;;;;;AAKb,MAAI,QAAQ,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE;AACzC,QAAI,CAAC,QAAQ,GAAM,CAAC,CAAC,OAAO,CAAC,CAAA;AAC7B,QAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAA;AAC7D,QAAI,CAAC,OAAO,GAAO,OAAO,CAAA;AAC1B,QAAI,CAAC,MAAM,GACX,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,QAAQ,GACb,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,MAAM,GAAQ,IAAI,CAAA;;AAEvB,QAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,qBAAqB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;;AAE7F,QAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,IAAI,CAAE,CAAA,cAAc,IAAI,QAAQ,CAAC,eAAe,CAAA,AAAC,IAAI,IAAI,CAAC,QAAQ,CAC5F,EAAE,CAAC,wBAAwB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CACvD,EAAE,CAAC,wBAAwB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAA;GAC3D,CAAA;;AAED,UAAQ,CAAC,OAAO,GAAI,OAAO,CAAA;;AAE3B,UAAQ,CAAC,mBAAmB,GAAG,GAAG,CAAA;;AAElC,UAAQ,CAAC,QAAQ,GAAG;AAClB,YAAQ,EAAE,IAAI;AACd,SAAK,EAAE,OAAO;AACd,QAAI,EAAE,IAAI;AACV,YAAQ,EAAE,IAAI;GACf,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE;AACxC,QAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,OAAM;AACpD,YAAQ,CAAC,CAAC,KAAK;AACb,WAAK,EAAE;AAAE,YAAI,CAAC,IAAI,EAAE,CAAC,AAAC,MAAK;AAAA,AAC3B,WAAK,EAAE;AAAE,YAAI,CAAC,IAAI,EAAE,CAAC,AAAC,MAAK;AAAA,AAC3B;AAAS,eAAM;AAAA,KAChB;;AAED,KAAC,CAAC,cAAc,EAAE,CAAA;GACnB,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE;AACtC,KAAC,IAAK,CAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA,AAAC,CAAA;;AAE1B,QAAI,CAAC,QAAQ,IAAI,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;;AAE7C,QAAI,CAAC,OAAO,CAAC,QAAQ,IAChB,CAAC,IAAI,CAAC,MAAM,IACX,CAAA,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA,AAAC,CAAA;;AAEnF,WAAO,IAAI,CAAA;GACZ,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,IAAI,EAAE;AAChD,QAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;AAC7C,WAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,CAAA;GAC/C,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,mBAAmB,GAAG,UAAU,SAAS,EAAE,MAAM,EAAE;AACpE,QAAI,KAAK,GAAG,SAAS,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;AACxC,QAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAA;AAC3C,QAAI,SAAS,GAAG,AAAC,CAAA,WAAW,GAAG,KAAK,CAAA,GAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;AAC1D,WAAO,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA;GACjC,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,EAAE,GAAG,UAAU,GAAG,EAAE;AACrC,QAAI,IAAI,GAAU,IAAI,CAAA;AACtB,QAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAA;;AAEtF,QAAI,GAAG,GAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,AAAC,IAAI,GAAG,GAAG,CAAC,EAAE,OAAM;;AAErD,QAAI,IAAI,CAAC,OAAO,EAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,EAAE,YAAY;AAAE,UAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;KAAE,CAAC,CAAA;AAClG,QAAI,WAAW,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAA;;AAEnD,WAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,GAAG,MAAM,GAAG,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;GAC5E,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE;AACtC,KAAC,IAAK,CAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA,AAAC,CAAA;;AAEzB,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE;AACrE,UAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;AAC/C,UAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;KACjB;;AAED,QAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;;AAE5C,WAAO,IAAI,CAAA;GACZ,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AACpC,QAAI,IAAI,CAAC,OAAO,EAAE,OAAM;AACxB,WAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;GAC1B,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AACpC,QAAI,IAAI,CAAC,OAAO,EAAE,OAAM;AACxB,WAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;GAC1B,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE;AAC/C,QAAI,OAAO,GAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;AAClD,QAAI,KAAK,GAAO,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;AAC/D,QAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAA;AAC7B,QAAI,SAAS,GAAG,IAAI,IAAI,MAAM,GAAG,MAAM,GAAG,OAAO,CAAA;AACjD,QAAI,QAAQ,GAAI,IAAI,IAAI,MAAM,GAAG,OAAO,GAAG,MAAM,CAAA;AACjD,QAAI,IAAI,GAAQ,IAAI,CAAA;;AAEpB,QAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACjB,UAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,OAAM;AAC9B,WAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAA;KAChD;;AAED,QAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,OAAQ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;AAE3D,QAAI,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;AAC5B,QAAI,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,mBAAmB,EAAE;AAC5C,mBAAa,EAAE,aAAa;AAC5B,eAAS,EAAE,SAAS;KACrB,CAAC,CAAA;AACF,QAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;AACjC,QAAI,UAAU,CAAC,kBAAkB,EAAE,EAAE,OAAM;;AAE3C,QAAI,CAAC,OAAO,GAAG,IAAI,CAAA;;AAEnB,aAAS,IAAI,IAAI,CAAC,KAAK,EAAE,CAAA;;AAEzB,QAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;AAC3B,UAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;AACtD,UAAI,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;AAC7E,oBAAc,IAAI,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;KACpD;;AAED,QAAI,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,kBAAkB,EAAE,EAAE,aAAa,EAAE,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAA;AACnG,QAAI,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC3D,WAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;AACpB,WAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAA;AACpB,aAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAA;AAC3B,WAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAA;AACzB,aAAO,CACJ,GAAG,CAAC,iBAAiB,EAAE,YAAY;AAClC,aAAK,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;AACjE,eAAO,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;AACpD,YAAI,CAAC,OAAO,GAAG,KAAK,CAAA;AACpB,kBAAU,CAAC,YAAY;AACrB,cAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;SACjC,EAAE,CAAC,CAAC,CAAA;OACN,CAAC,CACD,oBAAoB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAA;KACtD,MAAM;AACL,aAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;AAC7B,WAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;AACxB,UAAI,CAAC,OAAO,GAAG,KAAK,CAAA;AACpB,UAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;KACjC;;AAED,aAAS,IAAI,IAAI,CAAC,KAAK,EAAE,CAAA;;AAEzB,WAAO,IAAI,CAAA;GACZ,CAAA;;;;;;AAMD,WAAS,MAAM,CAAC,MAAM,EAAE;AACtB,WAAO,IAAI,CAAC,IAAI,CAAC,YAAY;AAC3B,UAAI,KAAK,GAAK,CAAC,CAAC,IAAI,CAAC,CAAA;AACrB,UAAI,IAAI,GAAM,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;AACvC,UAAI,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,OAAO,MAAM,IAAI,QAAQ,IAAI,MAAM,CAAC,CAAA;AAChG,UAAI,MAAM,GAAI,OAAO,MAAM,IAAI,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC,KAAK,CAAA;;AAEhE,UAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,aAAa,EAAG,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAE,CAAA;AAC1E,UAAI,OAAO,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA,KACzC,IAAI,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA,KAC1B,IAAI,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAA;KAChD,CAAC,CAAA;GACH;;AAED,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAA;;AAEvB,GAAC,CAAC,EAAE,CAAC,QAAQ,GAAe,MAAM,CAAA;AAClC,GAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAA;;;;;;AAMpC,GAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,GAAG,YAAY;AACrC,KAAC,CAAC,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAA;AACnB,WAAO,IAAI,CAAA;GACZ,CAAA;;;;;;AAMD,MAAI,YAAY,GAAG,UAAU,CAAC,EAAE;AAC9B,QAAI,IAAI,CAAA;AACR,QAAI,KAAK,GAAK,CAAC,CAAC,IAAI,CAAC,CAAA;AACrB,QAAI,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,AAAC,CAAA,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,IAAK,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC,CAAA;AAC/G,QAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,OAAM;AACzC,QAAI,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAA;AACxD,QAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;AAC5C,QAAI,UAAU,EAAE,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAA;;AAExC,UAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;;AAE7B,QAAI,UAAU,EAAE;AACd,aAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAA;KAC3C;;AAED,KAAC,CAAC,cAAc,EAAE,CAAA;GACnB,CAAA;;AAED,GAAC,CAAC,QAAQ,CAAC,CACR,EAAE,CAAC,4BAA4B,EAAE,cAAc,EAAE,YAAY,CAAC,CAC9D,EAAE,CAAC,4BAA4B,EAAE,iBAAiB,EAAE,YAAY,CAAC,CAAA;;AAEpE,GAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,YAAY;AAC/B,KAAC,CAAC,0BAAwB,CAAC,CAAC,IAAI,CAAC,YAAY;AAC3C,UAAI,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA;AACvB,YAAM,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC,CAAA;KACzC,CAAC,CAAA;GACH,CAAC,CAAA;CAEH,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;AAWV,CAAC,WAAU,CAAC,EAAE;AACZ,cAAY,CAAC;;;;;AAKb,MAAI,QAAQ,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE;AACzC,QAAI,CAAC,QAAQ,GAAQ,CAAC,CAAC,OAAO,CAAC,CAAA;AAC/B,QAAI,CAAC,OAAO,GAAS,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;AAC7D,QAAI,CAAC,QAAQ,GAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,WAAU,GAAG,OAAO,CAAC,EAAE,GAAG,uBAAqB,GAAG,OAAO,CAAC,EAAE,GAAG,KAAI,CAAC,CAAA;AACxH,QAAI,CAAC,aAAa,GAAG,IAAI,CAAA;;AAEzB,QAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACvB,UAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE,CAAA;KAChC,MAAM;AACL,UAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;KAC5D;;AAED,QAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAA;GACvC,CAAA;;AAED,UAAQ,CAAC,OAAO,GAAI,OAAO,CAAA;;AAE3B,UAAQ,CAAC,mBAAmB,GAAG,GAAG,CAAA;;AAElC,UAAQ,CAAC,QAAQ,GAAG;AAClB,UAAM,EAAE,IAAI;AACZ,WAAO,EAAE,4BAA0B;GACpC,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY;AACzC,QAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;AAC9C,WAAO,QAAQ,GAAG,OAAO,GAAG,QAAQ,CAAA;GACrC,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AACpC,QAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAM;;AAE9D,QAAI,WAAW,CAAA;AACf,QAAI,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAA;;AAExF,QAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;AAC7B,iBAAW,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;AACzC,UAAI,WAAW,IAAI,WAAW,CAAC,aAAa,EAAE,OAAM;KACrD;;AAED,QAAI,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;AAC5C,QAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;AACjC,QAAI,UAAU,CAAC,kBAAkB,EAAE,EAAE,OAAM;;AAE3C,QAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;AAC7B,YAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;AAC5B,iBAAW,IAAI,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAA;KACjD;;AAED,QAAI,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAA;;AAEhC,QAAI,CAAC,QAAQ,CACV,WAAW,CAAC,UAAU,CAAC,CACvB,QAAQ,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CACpC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAA;;AAE9B,QAAI,CAAC,QAAQ,CACV,WAAW,CAAC,WAAW,CAAC,CACxB,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAA;;AAE9B,QAAI,CAAC,aAAa,GAAG,CAAC,CAAA;;AAEtB,QAAI,QAAQ,GAAG,YAAY;AACzB,UAAI,CAAC,QAAQ,CACV,WAAW,CAAC,YAAY,CAAC,CACzB,QAAQ,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAA;AACzC,UAAI,CAAC,aAAa,GAAG,CAAC,CAAA;AACtB,UAAI,CAAC,QAAQ,CACV,OAAO,CAAC,mBAAmB,CAAC,CAAA;KAChC,CAAA;;AAED,QAAI,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;;AAErD,QAAI,UAAU,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;;AAE7D,QAAI,CAAC,QAAQ,CACV,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAC/C,oBAAoB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAA;GAC/F,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AACpC,QAAI,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAM;;AAE/D,QAAI,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;AAC5C,QAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;AACjC,QAAI,UAAU,CAAC,kBAAkB,EAAE,EAAE,OAAM;;AAE3C,QAAI,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAA;;AAEhC,QAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAA;;AAEpE,QAAI,CAAC,QAAQ,CACV,QAAQ,CAAC,YAAY,CAAC,CACtB,WAAW,CAAC,aAAa,CAAC,CAC1B,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAA;;AAE/B,QAAI,CAAC,QAAQ,CACV,QAAQ,CAAC,WAAW,CAAC,CACrB,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAA;;AAE/B,QAAI,CAAC,aAAa,GAAG,CAAC,CAAA;;AAEtB,QAAI,QAAQ,GAAG,YAAY;AACzB,UAAI,CAAC,aAAa,GAAG,CAAC,CAAA;AACtB,UAAI,CAAC,QAAQ,CACV,WAAW,CAAC,YAAY,CAAC,CACzB,QAAQ,CAAC,UAAU,CAAC,CACpB,OAAO,CAAC,oBAAoB,CAAC,CAAA;KACjC,CAAA;;AAED,QAAI,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;;AAErD,QAAI,CAAC,QAAQ,CACV,SAAS,CAAC,CAAC,CAAC,CAAC,CACb,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAC/C,oBAAoB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAA;GACtD,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AACtC,QAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,EAAE,CAAA;GACvD,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY;AACzC,WAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAC1B,IAAI,CAAC,2CAAwC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,CAC3E,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE;AAClC,UAAI,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,CAAA;AACzB,UAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAA;KACxE,EAAE,IAAI,CAAC,CAAC,CACR,GAAG,EAAE,CAAA;GACT,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,wBAAwB,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE;AAC1E,QAAI,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;;AAEpC,YAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;AACtC,YAAQ,CACL,WAAW,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CACjC,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;GACjC,CAAA;;AAED,WAAS,oBAAoB,CAAC,QAAQ,EAAE;AACtC,QAAI,IAAI,CAAA;AACR,QAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,IACpC,AAAC,CAAA,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,IAAK,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAA;;AAEzE,WAAO,CAAC,CAAC,MAAM,CAAC,CAAA;GACjB;;;;;;AAMD,WAAS,MAAM,CAAC,MAAM,EAAE;AACtB,WAAO,IAAI,CAAC,IAAI,CAAC,YAAY;AAC3B,UAAI,KAAK,GAAK,CAAC,CAAC,IAAI,CAAC,CAAA;AACrB,UAAI,IAAI,GAAM,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;AACvC,UAAI,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,OAAO,MAAM,IAAI,QAAQ,IAAI,MAAM,CAAC,CAAA;;AAEhG,UAAI,CAAC,IAAI,IAAI,OAAO,CAAC,MAAM,IAAI,MAAM,IAAI,MAAM,EAAE,OAAO,CAAC,MAAM,GAAG,KAAK,CAAA;AACvE,UAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,aAAa,EAAG,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAE,CAAA;AAC1E,UAAI,OAAO,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA;KAC9C,CAAC,CAAA;GACH;;AAED,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAA;;AAEvB,GAAC,CAAC,EAAE,CAAC,QAAQ,GAAe,MAAM,CAAA;AAClC,GAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAA;;;;;;AAMpC,GAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,GAAG,YAAY;AACrC,KAAC,CAAC,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAA;AACnB,WAAO,IAAI,CAAA;GACZ,CAAA;;;;;;AAMD,GAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,4BAA4B,EAAE,4BAA0B,EAAE,UAAU,CAAC,EAAE;AACpF,QAAI,KAAK,GAAK,CAAC,CAAC,IAAI,CAAC,CAAA;;AAErB,QAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,cAAc,EAAE,CAAA;;AAElD,QAAI,OAAO,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAA;AACzC,QAAI,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;AACzC,QAAI,MAAM,GAAI,IAAI,GAAG,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAA;;AAE7E,UAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;GAC7B,CAAC,CAAA;CAEH,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;AAWV,CAAC,WAAU,CAAC,EAAE;AACZ,cAAY,CAAC;;;;;AAKb,MAAI,QAAQ,GAAG,oBAAoB,CAAA;AACnC,MAAI,MAAM,GAAK,4BAA0B,CAAA;AACzC,MAAI,QAAQ,GAAG,UAAU,OAAO,EAAE;AAChC,KAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;GAChD,CAAA;;AAED,UAAQ,CAAC,OAAO,GAAG,OAAO,CAAA;;AAE1B,UAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;AACvC,QAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA;;AAEnB,QAAI,KAAK,CAAC,EAAE,CAAC,sBAAsB,CAAC,EAAE,OAAM;;AAE5C,QAAI,OAAO,GAAI,SAAS,CAAC,KAAK,CAAC,CAAA;AAC/B,QAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;;AAEvC,cAAU,EAAE,CAAA;;AAEZ,QAAI,CAAC,QAAQ,EAAE;AACb,UAAI,cAAc,IAAI,QAAQ,CAAC,eAAe,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE;;AAExF,SAAC,CAAC,oCAAkC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC,CAAA;OACnF;;AAED,UAAI,aAAa,GAAG,EAAE,aAAa,EAAE,IAAI,EAAE,CAAA;AAC3C,aAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC,CAAA;;AAE/D,UAAI,CAAC,CAAC,kBAAkB,EAAE,EAAE,OAAM;;AAElC,WAAK,CACF,OAAO,CAAC,OAAO,CAAC,CAChB,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;;AAEhC,aAAO,CACJ,WAAW,CAAC,MAAM,CAAC,CACnB,OAAO,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAA;KAC/C;;AAED,WAAO,KAAK,CAAA;GACb,CAAA;;AAED,UAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE;AACxC,QAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,OAAM;;AAEtF,QAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA;;AAEnB,KAAC,CAAC,cAAc,EAAE,CAAA;AAClB,KAAC,CAAC,eAAe,EAAE,CAAA;;AAEnB,QAAI,KAAK,CAAC,EAAE,CAAC,sBAAsB,CAAC,EAAE,OAAM;;AAE5C,QAAI,OAAO,GAAI,SAAS,CAAC,KAAK,CAAC,CAAA;AAC/B,QAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;;AAEvC,QAAI,AAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE,IAAM,QAAQ,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE,AAAC,EAAE;AAC/D,UAAI,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;AACxD,aAAO,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;KAC9B;;AAED,QAAI,IAAI,GAAG,6BAA6B,CAAA;AACxC,QAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,iBAAe,GAAG,IAAI,GAAG,sBAAoB,GAAG,IAAI,CAAC,CAAA;;AAE/E,QAAI,CAAC,MAAM,CAAC,MAAM,EAAE,OAAM;;AAE1B,QAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;;AAElC,QAAI,CAAC,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,GAAG,CAAC,EAAkB,KAAK,EAAE,CAAA;AACvD,QAAI,CAAC,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE,CAAA;AACvD,QAAI,EAAC,CAAC,KAAK,EAAuC,KAAK,GAAG,CAAC,CAAA;;AAE3D,UAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;GAClC,CAAA;;AAED,WAAS,UAAU,CAAC,CAAC,EAAE;AACrB,QAAI,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE,OAAM;AAC9B,KAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAA;AACpB,KAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY;AACzB,UAAI,KAAK,GAAW,CAAC,CAAC,IAAI,CAAC,CAAA;AAC3B,UAAI,OAAO,GAAS,SAAS,CAAC,KAAK,CAAC,CAAA;AACpC,UAAI,aAAa,GAAG,EAAE,aAAa,EAAE,IAAI,EAAE,CAAA;;AAE3C,UAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAM;;AAErC,aAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC,CAAA;;AAE/D,UAAI,CAAC,CAAC,kBAAkB,EAAE,EAAE,OAAM;;AAElC,WAAK,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,CAAC,CAAA;AACpC,aAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,oBAAoB,EAAE,aAAa,CAAC,CAAA;KACzE,CAAC,CAAA;GACH;;AAED,WAAS,SAAS,CAAC,KAAK,EAAE;AACxB,QAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;;AAExC,QAAI,CAAC,QAAQ,EAAE;AACb,cAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAC7B,cAAQ,GAAG,QAAQ,IAAI,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC;AAAA,OAAA;KAC5F;;AAED,QAAI,OAAO,GAAG,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAA;;AAErC,WAAO,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE,CAAA;GAC5D;;;;;;AAMD,WAAS,MAAM,CAAC,MAAM,EAAE;AACtB,WAAO,IAAI,CAAC,IAAI,CAAC,YAAY;AAC3B,UAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA;AACnB,UAAI,IAAI,GAAI,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;;AAErC,UAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,aAAa,EAAG,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAE,CAAA;AACjE,UAAI,OAAO,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;KACxD,CAAC,CAAA;GACH;;AAED,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAA;;AAEvB,GAAC,CAAC,EAAE,CAAC,QAAQ,GAAe,MAAM,CAAA;AAClC,GAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAA;;;;;;AAMpC,GAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,GAAG,YAAY;AACrC,KAAC,CAAC,EAAE,CAAC,QAAQ,GAAG,GAAG,CAAA;AACnB,WAAO,IAAI,CAAA;GACZ,CAAA;;;;;;AAMD,GAAC,CAAC,QAAQ,CAAC,CACR,EAAE,CAAC,4BAA4B,EAAE,UAAU,CAAC,CAC5C,EAAE,CAAC,4BAA4B,EAAE,gBAAgB,EAAE,UAAU,CAAC,EAAE;AAAE,KAAC,CAAC,eAAe,EAAE,CAAA;GAAE,CAAC,CACxF,EAAE,CAAC,4BAA4B,EAAE,MAAM,EAAE,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CACnE,EAAE,CAAC,8BAA8B,EAAE,MAAM,EAAE,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CACtE,EAAE,CAAC,8BAA8B,EAAE,iBAAe,EAAE,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAC/E,EAAE,CAAC,8BAA8B,EAAE,oBAAkB,EAAE,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;CAEtF,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;AAWV,CAAC,WAAU,CAAC,EAAE;AACZ,cAAY,CAAC;;;;;AAKb,MAAI,KAAK,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE;AACtC,QAAI,CAAC,OAAO,GAAU,OAAO,CAAA;AAC7B,QAAI,CAAC,KAAK,GAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;AACtC,QAAI,CAAC,QAAQ,GAAS,CAAC,CAAC,OAAO,CAAC,CAAA;AAChC,QAAI,CAAC,SAAS,GACd,IAAI,CAAC,OAAO,GAAU,IAAI,CAAA;AAC1B,QAAI,CAAC,cAAc,GAAG,CAAC,CAAA;;AAEvB,QAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACvB,UAAI,CAAC,QAAQ,CACV,IAAI,CAAC,gBAAgB,CAAC,CACtB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,YAAY;AAC7C,YAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAA;OACzC,EAAE,IAAI,CAAC,CAAC,CAAA;KACZ;GACF,CAAA;;AAED,OAAK,CAAC,OAAO,GAAI,OAAO,CAAA;;AAExB,OAAK,CAAC,mBAAmB,GAAG,GAAG,CAAA;AAC/B,OAAK,CAAC,4BAA4B,GAAG,GAAG,CAAA;;AAExC,OAAK,CAAC,QAAQ,GAAG;AACf,YAAQ,EAAE,IAAI;AACd,YAAQ,EAAE,IAAI;AACd,QAAI,EAAE,IAAI;GACX,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,cAAc,EAAE;AACjD,WAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;GAC9D,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,cAAc,EAAE;AAC/C,QAAI,IAAI,GAAG,IAAI,CAAA;AACf,QAAI,CAAC,GAAM,CAAC,CAAC,KAAK,CAAC,eAAe,EAAE,EAAE,aAAa,EAAE,cAAc,EAAE,CAAC,CAAA;;AAEtE,QAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;;AAExB,QAAI,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,kBAAkB,EAAE,EAAE,OAAM;;AAElD,QAAI,CAAC,OAAO,GAAG,IAAI,CAAA;;AAEnB,QAAI,CAAC,cAAc,EAAE,CAAA;AACrB,QAAI,CAAC,YAAY,EAAE,CAAA;AACnB,QAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;;AAEjC,QAAI,CAAC,MAAM,EAAE,CAAA;AACb,QAAI,CAAC,MAAM,EAAE,CAAA;;AAEb,QAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,wBAAwB,EAAE,0BAAwB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;;AAE9F,QAAI,CAAC,QAAQ,CAAC,YAAY;AACxB,UAAI,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;;AAEvE,UAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE;AAClC,YAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;OACnC;;AAED,UAAI,CAAC,QAAQ,CACV,IAAI,EAAE,CACN,SAAS,CAAC,CAAC,CAAC,CAAA;;AAEf,UAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE,CAAA;AAChD,UAAI,CAAC,YAAY,EAAE,CAAA;;AAEnB,UAAI,UAAU,EAAE;AACd,YAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW;AAAA,SAAA;OAC7B;;AAED,UAAI,CAAC,QAAQ,CACV,QAAQ,CAAC,IAAI,CAAC,CACd,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAA;;AAE7B,UAAI,CAAC,YAAY,EAAE,CAAA;;AAEnB,UAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,gBAAgB,EAAE,EAAE,aAAa,EAAE,cAAc,EAAE,CAAC,CAAA;;AAEpE,gBAAU,GACR,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;OAChC,GAAG,CAAC,iBAAiB,EAAE,YAAY;AAClC,YAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;OAC1C,CAAC,CACD,oBAAoB,CAAC,KAAK,CAAC,mBAAmB,CAAC,GAClD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;KAC5C,CAAC,CAAA;GACH,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,CAAC,EAAE;AAClC,QAAI,CAAC,EAAE,CAAC,CAAC,cAAc,EAAE,CAAA;;AAEzB,KAAC,GAAG,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,CAAA;;AAE5B,QAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;;AAExB,QAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,kBAAkB,EAAE,EAAE,OAAM;;AAEnD,QAAI,CAAC,OAAO,GAAG,KAAK,CAAA;;AAEpB,QAAI,CAAC,MAAM,EAAE,CAAA;AACb,QAAI,CAAC,MAAM,EAAE,CAAA;;AAEb,KAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAA;;AAEnC,QAAI,CAAC,QAAQ,CACV,WAAW,CAAC,IAAI,CAAC,CACjB,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CACzB,GAAG,CAAC,wBAAwB,CAAC,CAAA;;AAEhC,KAAC,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,GACpD,IAAI,CAAC,QAAQ,CACV,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CACrD,oBAAoB,CAAC,KAAK,CAAC,mBAAmB,CAAC,GAClD,IAAI,CAAC,SAAS,EAAE,CAAA;GACnB,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,YAAY,GAAG,YAAY;AACzC,KAAC,CAAC,QAAQ,CAAC,CACR,GAAG,CAAC,kBAAkB,CAAC;KACvB,EAAE,CAAC,kBAAkB,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;AAC3C,UAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE;AACxE,YAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;OAC/B;KACF,EAAE,IAAI,CAAC,CAAC,CAAA;GACZ,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AACnC,QAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;AACzC,UAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,0BAA0B,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;AAChE,SAAC,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,CAAA;OAC7B,EAAE,IAAI,CAAC,CAAC,CAAA;KACV,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACxB,UAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAA;KAC9C;GACF,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AACnC,QAAI,IAAI,CAAC,OAAO,EAAE;AAChB,OAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAA;KAClE,MAAM;AACL,OAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAA;KACjC;GACF,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY;AACtC,QAAI,IAAI,GAAG,IAAI,CAAA;AACf,QAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;AACpB,QAAI,CAAC,QAAQ,CAAC,YAAY;AACxB,UAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAA;AACpC,UAAI,CAAC,gBAAgB,EAAE,CAAA;AACvB,UAAI,CAAC,cAAc,EAAE,CAAA;AACrB,UAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAA;KACzC,CAAC,CAAA;GACH,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,cAAc,GAAG,YAAY;AAC3C,QAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAA;AACzC,QAAI,CAAC,SAAS,GAAG,IAAI,CAAA;GACtB,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,QAAQ,EAAE;AAC7C,QAAI,IAAI,GAAG,IAAI,CAAA;AACf,QAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,EAAE,CAAA;;AAE1D,QAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;AACzC,UAAI,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,OAAO,CAAA;;AAE/C,UAAI,CAAC,SAAS,GAAG,CAAC,CAAC,8BAA6B,GAAG,OAAO,GAAG,OAAM,CAAC,CACjE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACxB,EAAE,CAAC,wBAAwB,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;AACjD,YAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,aAAa,EAAE,OAAM;AACxC,YAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,QAAQ,GAC7B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAC7C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;OACzB,EAAE,IAAI,CAAC,CAAC,CAAA;;AAEX,UAAI,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAA;;AAE5C,UAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;;AAE7B,UAAI,CAAC,QAAQ,EAAE,OAAM;;AAErB,eAAS,GACP,IAAI,CAAC,SAAS,CACX,GAAG,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAChC,oBAAoB,CAAC,KAAK,CAAC,4BAA4B,CAAC,GAC3D,QAAQ,EAAE,CAAA;KAEb,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;AAC1C,UAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;;AAEhC,UAAI,cAAc,GAAG,YAAY;AAC/B,YAAI,CAAC,cAAc,EAAE,CAAA;AACrB,gBAAQ,IAAI,QAAQ,EAAE,CAAA;OACvB,CAAA;AACD,OAAC,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,GACpD,IAAI,CAAC,SAAS,CACX,GAAG,CAAC,iBAAiB,EAAE,cAAc,CAAC,CACtC,oBAAoB,CAAC,KAAK,CAAC,4BAA4B,CAAC,GAC3D,cAAc,EAAE,CAAA;KAEnB,MAAM,IAAI,QAAQ,EAAE;AACnB,cAAQ,EAAE,CAAA;KACX;GACF,CAAA;;;;AAID,OAAK,CAAC,SAAS,CAAC,YAAY,GAAG,YAAY;AACzC,QAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE,CAAA;AAChD,QAAI,CAAC,YAAY,EAAE,CAAA;GACpB,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,cAAc,GAAG,YAAY;AAC3C,QAAI,CAAC,SAAS,CACX,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAChB,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAA;GAChD,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,YAAY,GAAG,YAAY;AACzC,QAAI,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAA;;AAE9F,QAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;AAChB,iBAAW,EAAG,CAAC,IAAI,CAAC,iBAAiB,IAAI,kBAAkB,GAAG,IAAI,CAAC,cAAc,GAAG,EAAE;AACtF,kBAAY,EAAE,IAAI,CAAC,iBAAiB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,GAAG,EAAE;KACvF,CAAC,CAAA;GACH,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,gBAAgB,GAAG,YAAY;AAC7C,QAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;AAChB,iBAAW,EAAE,EAAE;AACf,kBAAY,EAAE,EAAE;KACjB,CAAC,CAAA;GACH,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,cAAc,GAAG,YAAY;AAC3C,QAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAA;AAC3F,QAAI,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAA;GAC9C,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,YAAY,GAAG,YAAY;AACzC,QAAI,OAAO,GAAG,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,EAAG,EAAE,CAAC,CAAA;AAClE,QAAI,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,EAAE,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,CAAA;GAC3F,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,cAAc,GAAG,YAAY;AAC3C,QAAI,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,EAAE,EAAE,CAAC,CAAA;GACpC,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,gBAAgB,GAAG,YAAY;;AAC7C,QAAI,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;AAC7C,aAAS,CAAC,SAAS,GAAG,yBAAyB,CAAA;AAC/C,QAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;AAC5B,QAAI,cAAc,GAAG,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAA;AAClE,QAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;AACpC,WAAO,cAAc,CAAA;GACtB,CAAA;;;;;;AAMD,WAAS,MAAM,CAAC,MAAM,EAAE,cAAc,EAAE;AACtC,WAAO,IAAI,CAAC,IAAI,CAAC,YAAY;AAC3B,UAAI,KAAK,GAAK,CAAC,CAAC,IAAI,CAAC,CAAA;AACrB,UAAI,IAAI,GAAM,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;AACpC,UAAI,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,OAAO,MAAM,IAAI,QAAQ,IAAI,MAAM,CAAC,CAAA;;AAE7F,UAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,UAAU,EAAG,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAE,CAAA;AACpE,UAAI,OAAO,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,CAAA,KACtD,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;KACjD,CAAC,CAAA;GACH;;AAED,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAA;;AAEpB,GAAC,CAAC,EAAE,CAAC,KAAK,GAAe,MAAM,CAAA;AAC/B,GAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAA;;;;;;AAM9B,GAAC,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,GAAG,YAAY;AAClC,KAAC,CAAC,EAAE,CAAC,KAAK,GAAG,GAAG,CAAA;AAChB,WAAO,IAAI,CAAA;GACZ,CAAA;;;;;;AAMD,GAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,yBAAyB,EAAE,yBAAuB,EAAE,UAAU,CAAC,EAAE;AAC9E,QAAI,KAAK,GAAK,CAAC,CAAC,IAAI,CAAC,CAAA;AACrB,QAAI,IAAI,GAAM,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAChC,QAAI,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,AAAC,CAAC,CAAA;AAC1F,QAAI,MAAM,GAAI,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAA;;AAE/H,QAAI,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,cAAc,EAAE,CAAA;;AAErC,WAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE;AAChD,UAAI,SAAS,CAAC,kBAAkB,EAAE,EAAE,OAAM;AAC1C,aAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,YAAY;AACzC,aAAK,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;OAC/C,CAAC,CAAA;KACH,CAAC,CAAA;AACF,UAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;GACnC,CAAC,CAAA;CAEH,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;AAYV,CAAC,WAAU,CAAC,EAAE;AACZ,cAAY,CAAC;;;;;AAKb,MAAI,OAAO,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE;AACxC,QAAI,CAAC,IAAI,GACT,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,UAAU,GACf,IAAI,CAAC,QAAQ,GAAK,IAAI,CAAA;;AAEtB,QAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;GACvC,CAAA;;AAED,SAAO,CAAC,OAAO,GAAI,OAAO,CAAA;;AAE1B,SAAO,CAAC,mBAAmB,GAAG,GAAG,CAAA;;AAEjC,SAAO,CAAC,QAAQ,GAAG;AACjB,aAAS,EAAE,IAAI;AACf,aAAS,EAAE,KAAK;AAChB,YAAQ,EAAE,KAAK;AACf,YAAQ,EAAE,sHAA8G;AACxH,WAAO,EAAE,aAAa;AACtB,SAAK,EAAE,EAAE;AACT,SAAK,EAAE,CAAC;AACR,QAAI,EAAE,KAAK;AACX,aAAS,EAAE,KAAK;AAChB,YAAQ,EAAE;AACR,cAAQ,EAAE,MAAM;AAChB,aAAO,EAAE,CAAC;KACX;GACF,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;AACzD,QAAI,CAAC,OAAO,GAAK,IAAI,CAAA;AACrB,QAAI,CAAC,IAAI,GAAQ,IAAI,CAAA;AACrB,QAAI,CAAC,QAAQ,GAAI,CAAC,CAAC,OAAO,CAAC,CAAA;AAC3B,QAAI,CAAC,OAAO,GAAK,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;AACzC,QAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;;AAEpG,QAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;;AAE9C,SAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG;AAClC,UAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;;AAEzB,UAAI,OAAO,IAAI,OAAO,EAAE;AACtB,YAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAA;OAC1F,MAAM,IAAI,OAAO,IAAI,QAAQ,EAAE;AAC9B,YAAI,OAAO,GAAI,OAAO,IAAI,OAAO,GAAG,YAAY,GAAG,SAAS,CAAA;AAC5D,YAAI,QAAQ,GAAG,OAAO,IAAI,OAAO,GAAG,YAAY,GAAG,UAAU,CAAA;;AAE7D,YAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,GAAI,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAA;AAC9F,YAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAA;OAC/F;KACF;;AAED,QAAI,CAAC,OAAO,CAAC,QAAQ,GAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,GAChF,IAAI,CAAC,QAAQ,EAAE,CAAA;GAClB,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,WAAW,GAAG,YAAY;AAC1C,WAAO,OAAO,CAAC,QAAQ,CAAA;GACxB,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,OAAO,EAAE;AAChD,WAAO,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAA;;AAEzE,QAAI,OAAO,CAAC,KAAK,IAAI,OAAO,OAAO,CAAC,KAAK,IAAI,QAAQ,EAAE;AACrD,aAAO,CAAC,KAAK,GAAG;AACd,YAAI,EAAE,OAAO,CAAC,KAAK;AACnB,YAAI,EAAE,OAAO,CAAC,KAAK;OACpB,CAAA;KACF;;AAED,WAAO,OAAO,CAAA;GACf,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,kBAAkB,GAAG,YAAY;AACjD,QAAI,OAAO,GAAI,EAAE,CAAA;AACjB,QAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAA;;AAEjC,QAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,KAAK,EAAE;AAC3D,UAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;KACjD,CAAC,CAAA;;AAEF,WAAO,OAAO,CAAA;GACf,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,GAAG,EAAE;AACvC,QAAI,IAAI,GAAG,GAAG,YAAY,IAAI,CAAC,WAAW,GACxC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;;AAEpD,QAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;AACjD,UAAI,CAAC,UAAU,GAAG,IAAI,CAAA;AACtB,aAAM;KACP;;AAED,QAAI,CAAC,IAAI,EAAE;AACT,UAAI,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAA;AACzE,OAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;KACnD;;AAED,gBAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;;AAE1B,QAAI,CAAC,UAAU,GAAG,IAAI,CAAA;;AAEtB,QAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC,IAAI,EAAE,CAAA;;AAEvE,QAAI,CAAC,OAAO,GAAG,UAAU,CAAC,YAAY;AACpC,UAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAA;KACzC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;GAC5B,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,GAAG,EAAE;AACvC,QAAI,IAAI,GAAG,GAAG,YAAY,IAAI,CAAC,WAAW,GACxC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;;AAEpD,QAAI,CAAC,IAAI,EAAE;AACT,UAAI,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAA;AACzE,OAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;KACnD;;AAED,gBAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;;AAE1B,QAAI,CAAC,UAAU,GAAG,KAAK,CAAA;;AAEvB,QAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC,IAAI,EAAE,CAAA;;AAEvE,QAAI,CAAC,OAAO,GAAG,UAAU,CAAC,YAAY;AACpC,UAAI,IAAI,CAAC,UAAU,IAAI,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,CAAA;KAC1C,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;GAC5B,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AACnC,QAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;;AAEvC,QAAI,IAAI,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE;AACrC,UAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;;AAExB,UAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;AACxF,UAAI,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,EAAE,OAAM;AAC5C,UAAI,IAAI,GAAG,IAAI,CAAA;;AAEf,UAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;;AAErB,UAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;;AAElC,UAAI,CAAC,UAAU,EAAE,CAAA;AACjB,UAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;AACtB,UAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAA;;AAE7C,UAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;;AAEjD,UAAI,SAAS,GAAG,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,UAAU,GACzD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAC5D,IAAI,CAAC,OAAO,CAAC,SAAS,CAAA;;AAExB,UAAI,SAAS,GAAG,cAAc,CAAA;AAC9B,UAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;AACzC,UAAI,SAAS,EAAE,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,IAAI,KAAK,CAAA;;AAEpE,UAAI,CACD,MAAM,EAAE,CACR,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAC1C,QAAQ,CAAC,SAAS,CAAC,CACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;;AAEhC,UAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;;AAEhG,UAAI,GAAG,GAAY,IAAI,CAAC,WAAW,EAAE,CAAA;AACrC,UAAI,WAAW,GAAI,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAA;AACtC,UAAI,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAA;;AAEvC,UAAI,SAAS,EAAE;AACb,YAAI,YAAY,GAAG,SAAS,CAAA;AAC5B,YAAI,UAAU,GAAK,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAA;AAC9F,YAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAA;;AAE/C,iBAAS,GAAG,SAAS,IAAI,QAAQ,IAAI,GAAG,CAAC,MAAM,GAAG,YAAY,GAAG,YAAY,CAAC,MAAM,GAAG,KAAK,GAChF,SAAS,IAAI,KAAK,IAAO,GAAG,CAAC,GAAG,GAAM,YAAY,GAAG,YAAY,CAAC,GAAG,GAAM,QAAQ,GACnF,SAAS,IAAI,OAAO,IAAK,GAAG,CAAC,KAAK,GAAI,WAAW,GAAI,YAAY,CAAC,KAAK,GAAI,MAAM,GACjF,SAAS,IAAI,MAAM,IAAM,GAAG,CAAC,IAAI,GAAK,WAAW,GAAI,YAAY,CAAC,IAAI,GAAK,OAAO,GAClF,SAAS,CAAA;;AAErB,YAAI,CACD,WAAW,CAAC,YAAY,CAAC,CACzB,QAAQ,CAAC,SAAS,CAAC,CAAA;OACvB;;AAED,UAAI,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,CAAC,CAAA;;AAE1F,UAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAA;;AAEhD,UAAI,QAAQ,GAAG,YAAY;AACzB,YAAI,cAAc,GAAG,IAAI,CAAC,UAAU,CAAA;AACpC,YAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;AAC9C,YAAI,CAAC,UAAU,GAAG,IAAI,CAAA;;AAEtB,YAAI,cAAc,IAAI,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;OAC9C,CAAA;;AAED,OAAC,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAChD,IAAI,CACD,GAAG,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAChC,oBAAoB,CAAC,OAAO,CAAC,mBAAmB,CAAC,GACpD,QAAQ,EAAE,CAAA;KACb;GACF,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,MAAM,EAAE,SAAS,EAAE;AAC9D,QAAI,IAAI,GAAK,IAAI,CAAC,GAAG,EAAE,CAAA;AACvB,QAAI,KAAK,GAAI,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAA;AAChC,QAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAA;;;AAGjC,QAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAA;AACpD,QAAI,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC,CAAA;;;AAGtD,QAAI,KAAK,CAAC,SAAS,CAAC,EAAG,SAAS,GAAI,CAAC,CAAA;AACrC,QAAI,KAAK,CAAC,UAAU,CAAC,EAAE,UAAU,GAAG,CAAC,CAAA;;AAErC,UAAM,CAAC,GAAG,GAAI,MAAM,CAAC,GAAG,GAAI,SAAS,CAAA;AACrC,UAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,UAAU,CAAA;;;;AAItC,KAAC,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;AACnC,WAAK,EAAE,UAAU,KAAK,EAAE;AACtB,YAAI,CAAC,GAAG,CAAC;AACP,aAAG,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;AAC1B,cAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;SAC7B,CAAC,CAAA;OACH;KACF,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAA;;AAEd,QAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;;;AAGnB,QAAI,WAAW,GAAI,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAA;AACtC,QAAI,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAA;;AAEvC,QAAI,SAAS,IAAI,KAAK,IAAI,YAAY,IAAI,MAAM,EAAE;AAChD,YAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,GAAG,YAAY,CAAA;KAChD;;AAED,QAAI,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,YAAY,CAAC,CAAA;;AAEvF,QAAI,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAA,KACpC,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAA;;AAE5B,QAAI,UAAU,GAAY,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;AACtD,QAAI,UAAU,GAAY,UAAU,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,WAAW,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,YAAY,CAAA;AACnH,QAAI,mBAAmB,GAAG,UAAU,GAAG,aAAa,GAAG,cAAc,CAAA;;AAErE,QAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;AACnB,QAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,EAAE,UAAU,CAAC,CAAA;GACxE,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,KAAK,EAAE,SAAS,EAAE,YAAY,EAAE;AACzE,QAAI,CAAC,KAAK,EAAE,CACT,GAAG,CAAC,YAAY,GAAG,MAAM,GAAG,KAAK,EAAE,EAAE,GAAI,CAAA,CAAC,GAAG,KAAK,GAAG,SAAS,CAAA,AAAC,GAAG,GAAG,CAAC,CACtE,GAAG,CAAC,YAAY,GAAG,KAAK,GAAG,MAAM,EAAE,EAAE,CAAC,CAAA;GAC1C,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;AACzC,QAAI,IAAI,GAAI,IAAI,CAAC,GAAG,EAAE,CAAA;AACtB,QAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAA;;AAE3B,QAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,KAAK,CAAC,CAAA;AACvE,QAAI,CAAC,WAAW,CAAC,+BAA+B,CAAC,CAAA;GAClD,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,QAAQ,EAAE;AAC3C,QAAI,IAAI,GAAG,IAAI,CAAA;AACf,QAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACrB,QAAI,CAAC,GAAM,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;;AAE1C,aAAS,QAAQ,GAAG;AAClB,UAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,CAAA;AAC1C,UAAI,CAAC,QAAQ,CACV,UAAU,CAAC,kBAAkB,CAAC,CAC9B,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;AACpC,cAAQ,IAAI,QAAQ,EAAE,CAAA;KACvB;;AAED,QAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;;AAExB,QAAI,CAAC,CAAC,kBAAkB,EAAE,EAAE,OAAM;;AAElC,QAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;;AAEtB,KAAC,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAChD,IAAI,CACD,GAAG,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAChC,oBAAoB,CAAC,OAAO,CAAC,mBAAmB,CAAC,GACpD,QAAQ,EAAE,CAAA;;AAEZ,QAAI,CAAC,UAAU,GAAG,IAAI,CAAA;;AAEtB,WAAO,IAAI,CAAA;GACZ,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;AACvC,QAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAA;AACtB,QAAI,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,OAAQ,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,AAAC,IAAI,QAAQ,EAAE;AAC3E,QAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;KACzE;GACF,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;AACzC,WAAO,IAAI,CAAC,QAAQ,EAAE,CAAA;GACvB,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,QAAQ,EAAE;AAClD,YAAQ,GAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAA;;AAEtC,QAAI,EAAE,GAAO,QAAQ,CAAC,CAAC,CAAC,CAAA;AACxB,QAAI,MAAM,GAAG,EAAE,CAAC,OAAO,IAAI,MAAM,CAAA;;AAEjC,QAAI,MAAM,GAAM,EAAE,CAAC,qBAAqB,EAAE,CAAA;AAC1C,QAAI,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE;;AAExB,YAAM,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,CAAA;KACzG;AACD,QAAI,QAAQ,GAAI,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAA;AAChE,QAAI,MAAM,GAAM,EAAE,MAAM,EAAE,MAAM,GAAG,QAAQ,CAAC,eAAe,CAAC,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAA;AACzH,QAAI,SAAS,GAAG,MAAM,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,CAAA;;AAExF,WAAO,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAA;GACzD,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,mBAAmB,GAAG,UAAU,SAAS,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE;AAC3F,WAAO,SAAS,IAAI,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,EAAI,IAAI,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,EAAG,GAC1G,SAAS,IAAI,KAAK,GAAM,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,YAAY,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,EAAG,GAC1G,SAAS,IAAI,MAAM,GAAK,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,GAAG,WAAW,EAAE;8BAClF,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,EAAI,CAAA;GAElH,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,wBAAwB,GAAG,UAAU,SAAS,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE;AAChG,QAAI,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAA;AAC/B,QAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,KAAK,CAAA;;AAEjC,QAAI,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,CAAA;AACjF,QAAI,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;;AAEzD,QAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AAChC,UAAI,aAAa,GAAM,GAAG,CAAC,GAAG,GAAG,eAAe,GAAG,kBAAkB,CAAC,MAAM,CAAA;AAC5E,UAAI,gBAAgB,GAAG,GAAG,CAAC,GAAG,GAAG,eAAe,GAAG,kBAAkB,CAAC,MAAM,GAAG,YAAY,CAAA;AAC3F,UAAI,aAAa,GAAG,kBAAkB,CAAC,GAAG,EAAE;;AAC1C,aAAK,CAAC,GAAG,GAAG,kBAAkB,CAAC,GAAG,GAAG,aAAa,CAAA;OACnD,MAAM,IAAI,gBAAgB,GAAG,kBAAkB,CAAC,GAAG,GAAG,kBAAkB,CAAC,MAAM,EAAE;;AAChF,aAAK,CAAC,GAAG,GAAG,kBAAkB,CAAC,GAAG,GAAG,kBAAkB,CAAC,MAAM,GAAG,gBAAgB,CAAA;OAClF;KACF,MAAM;AACL,UAAI,cAAc,GAAI,GAAG,CAAC,IAAI,GAAG,eAAe,CAAA;AAChD,UAAI,eAAe,GAAG,GAAG,CAAC,IAAI,GAAG,eAAe,GAAG,WAAW,CAAA;AAC9D,UAAI,cAAc,GAAG,kBAAkB,CAAC,IAAI,EAAE;;AAC5C,aAAK,CAAC,IAAI,GAAG,kBAAkB,CAAC,IAAI,GAAG,cAAc,CAAA;OACtD,MAAM,IAAI,eAAe,GAAG,kBAAkB,CAAC,KAAK,EAAE;;AACrD,aAAK,CAAC,IAAI,GAAG,kBAAkB,CAAC,IAAI,GAAG,kBAAkB,CAAC,KAAK,GAAG,eAAe,CAAA;OAClF;KACF;;AAED,WAAO,KAAK,CAAA;GACb,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;AACvC,QAAI,KAAK,CAAA;AACT,QAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAA;AACtB,QAAI,CAAC,GAAI,IAAI,CAAC,OAAO,CAAA;;AAErB,SAAK,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAChC,CAAA,OAAO,CAAC,CAAC,KAAK,IAAI,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAI,CAAC,CAAC,KAAK,CAAA,AAAC,CAAA;;AAEpE,WAAO,KAAK,CAAA;GACb,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,MAAM,EAAE;AAC3C,OAAG,MAAM,IAAI,EAAC,CAAE,CAAA,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAA,AAAC,CAAA,QACjC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,EAAC;AACvC,WAAO,MAAM,CAAA;GACd,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY;AAClC,WAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;GAC3D,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;AACpC,WAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;GACxE,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AACrC,QAAI,CAAC,OAAO,GAAG,IAAI,CAAA;GACpB,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;AACtC,QAAI,CAAC,OAAO,GAAG,KAAK,CAAA;GACrB,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,aAAa,GAAG,YAAY;AAC5C,QAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAA;GAC7B,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;AACtC,QAAI,IAAI,GAAG,IAAI,CAAA;AACf,QAAI,CAAC,EAAE;AACL,UAAI,GAAG,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;AACjD,UAAI,CAAC,IAAI,EAAE;AACT,YAAI,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAA;AACvE,SAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;OACjD;KACF;;AAED,QAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;GAChE,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;AACtC,QAAI,IAAI,GAAG,IAAI,CAAA;AACf,gBAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAC1B,QAAI,CAAC,IAAI,CAAC,YAAY;AACpB,UAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;KACjE,CAAC,CAAA;GACH,CAAA;;;;;;AAMD,WAAS,MAAM,CAAC,MAAM,EAAE;AACtB,WAAO,IAAI,CAAC,IAAI,CAAC,YAAY;AAC3B,UAAI,KAAK,GAAM,CAAC,CAAC,IAAI,CAAC,CAAA;AACtB,UAAI,IAAI,GAAO,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;AACvC,UAAI,OAAO,GAAI,OAAO,MAAM,IAAI,QAAQ,IAAI,MAAM,CAAA;AAClD,UAAI,QAAQ,GAAG,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAA;;AAE1C,UAAI,CAAC,IAAI,IAAI,MAAM,IAAI,SAAS,EAAE,OAAM;AACxC,UAAI,QAAQ,EAAE;AACZ,YAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,YAAY,EAAG,IAAI,GAAG,EAAE,CAAE,CAAA;AAChD,YAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;OACjE,MAAM;AACL,YAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,YAAY,EAAG,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAE,CAAA;OACzE;AACD,UAAI,OAAO,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA;KAC9C,CAAC,CAAA;GACH;;AAED,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,CAAA;;AAEtB,GAAC,CAAC,EAAE,CAAC,OAAO,GAAe,MAAM,CAAA;AACjC,GAAC,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAA;;;;;;AAMlC,GAAC,CAAC,EAAE,CAAC,OAAO,CAAC,UAAU,GAAG,YAAY;AACpC,KAAC,CAAC,EAAE,CAAC,OAAO,GAAG,GAAG,CAAA;AAClB,WAAO,IAAI,CAAA;GACZ,CAAA;CAEF,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;AAWV,CAAC,WAAU,CAAC,EAAE;AACZ,cAAY,CAAC;;;;;AAKb,MAAI,OAAO,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE;AACxC,QAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;GACvC,CAAA;;AAED,MAAI,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAA;;AAEjE,SAAO,CAAC,OAAO,GAAI,OAAO,CAAA;;AAE1B,SAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE;AACjE,aAAS,EAAE,OAAO;AAClB,WAAO,EAAE,OAAO;AAChB,WAAO,EAAE,EAAE;AACX,YAAQ,EAAE,iJAAuI;GAClJ,CAAC,CAAA;;;;;;AAMF,SAAO,CAAC,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;;AAEpE,SAAO,CAAC,SAAS,CAAC,WAAW,GAAG,OAAO,CAAA;;AAEvC,SAAO,CAAC,SAAS,CAAC,WAAW,GAAG,YAAY;AAC1C,WAAO,OAAO,CAAC,QAAQ,CAAA;GACxB,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;AACzC,QAAI,IAAI,GAAM,IAAI,CAAC,GAAG,EAAE,CAAA;AACxB,QAAI,KAAK,GAAK,IAAI,CAAC,QAAQ,EAAE,CAAA;AAC7B,QAAI,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAA;;AAE/B,QAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,KAAK,CAAC,CAAA;AACvE,QAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;AACrD,QAAI,CAAC,OAAO,CAAC,IAAI,GAAI,OAAO,OAAO,IAAI,QAAQ,GAAG,MAAM,GAAG,QAAQ,GAAI,MAAM,CAC9E,CAAC,OAAO,CAAC,CAAA;;AAEV,QAAI,CAAC,WAAW,CAAC,+BAA+B,CAAC,CAAA;;;;AAIjD,QAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,CAAA;GAC5E,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;AACzC,WAAO,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE,CAAA;GAC5C,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;AACzC,QAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAA;AACtB,QAAI,CAAC,GAAI,IAAI,CAAC,OAAO,CAAA;;AAErB,WAAO,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IACxB,CAAA,OAAO,CAAC,CAAC,OAAO,IAAI,UAAU,GAC5B,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GACrB,CAAC,CAAC,OAAO,CAAA,AAAC,CAAA;GACnB,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;AACpC,WAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GAChE,CAAA;;AAED,SAAO,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY;AAClC,QAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;AACpD,WAAO,IAAI,CAAC,IAAI,CAAA;GACjB,CAAA;;;;;;AAMD,WAAS,MAAM,CAAC,MAAM,EAAE;AACtB,WAAO,IAAI,CAAC,IAAI,CAAC,YAAY;AAC3B,UAAI,KAAK,GAAM,CAAC,CAAC,IAAI,CAAC,CAAA;AACtB,UAAI,IAAI,GAAO,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;AACvC,UAAI,OAAO,GAAI,OAAO,MAAM,IAAI,QAAQ,IAAI,MAAM,CAAA;AAClD,UAAI,QAAQ,GAAG,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAA;;AAE1C,UAAI,CAAC,IAAI,IAAI,MAAM,IAAI,SAAS,EAAE,OAAM;AACxC,UAAI,QAAQ,EAAE;AACZ,YAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,YAAY,EAAG,IAAI,GAAG,EAAE,CAAE,CAAA;AAChD,YAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;OACjE,MAAM;AACL,YAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,YAAY,EAAG,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAE,CAAA;OACzE;AACD,UAAI,OAAO,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA;KAC9C,CAAC,CAAA;GACH;;AAED,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,CAAA;;AAEtB,GAAC,CAAC,EAAE,CAAC,OAAO,GAAe,MAAM,CAAA;AACjC,GAAC,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAA;;;;;;AAMlC,GAAC,CAAC,EAAE,CAAC,OAAO,CAAC,UAAU,GAAG,YAAY;AACpC,KAAC,CAAC,EAAE,CAAC,OAAO,GAAG,GAAG,CAAA;AAClB,WAAO,IAAI,CAAA;GACZ,CAAA;CAEF,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;AAWV,CAAC,WAAU,CAAC,EAAE;AACZ,cAAY,CAAC;;;;;AAKb,WAAS,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE;AACnC,QAAI,OAAO,GAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;;AAE1C,QAAI,CAAC,KAAK,GAAY,CAAC,CAAC,MAAM,CAAC,CAAA;AAC/B,QAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAA;AACpE,QAAI,CAAC,OAAO,GAAU,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;AAC/D,QAAI,CAAC,QAAQ,GAAS,AAAC,CAAA,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,CAAA,GAAI,cAAc,CAAA;AAClE,QAAI,CAAC,OAAO,GAAU,EAAE,CAAA;AACxB,QAAI,CAAC,OAAO,GAAU,EAAE,CAAA;AACxB,QAAI,CAAC,YAAY,GAAK,IAAI,CAAA;AAC1B,QAAI,CAAC,YAAY,GAAK,CAAC,CAAA;;AAEvB,QAAI,CAAC,cAAc,CAAC,EAAE,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAA;AACtD,QAAI,CAAC,OAAO,EAAE,CAAA;AACd,QAAI,CAAC,OAAO,EAAE,CAAA;GACf;;AAED,WAAS,CAAC,OAAO,GAAI,OAAO,CAAA;;AAE5B,WAAS,CAAC,QAAQ,GAAG;AACnB,UAAM,EAAE,EAAE;GACX,CAAA;;AAED,WAAS,CAAC,SAAS,CAAC,eAAe,GAAG,YAAY;AAChD,WAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,CAAA;GAC1H,CAAA;;AAED,WAAS,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;AACxC,QAAI,YAAY,GAAG,QAAQ,CAAA;AAC3B,QAAI,UAAU,GAAK,CAAC,CAAA;;AAEpB,QAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE;AACvC,kBAAY,GAAG,UAAU,CAAA;AACzB,gBAAU,GAAK,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAA;KAC/C;;AAED,QAAI,CAAC,OAAO,GAAG,EAAE,CAAA;AACjB,QAAI,CAAC,OAAO,GAAG,EAAE,CAAA;AACjB,QAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAA;;AAE1C,QAAI,IAAI,GAAO,IAAI,CAAA;;AAEnB,QAAI,CAAC,KAAK,CACP,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CACnB,GAAG,CAAC,YAAY;AACf,UAAI,GAAG,GAAK,CAAC,CAAC,IAAI,CAAC,CAAA;AACnB,UAAI,IAAI,GAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAClD,UAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAA;;AAEvC,aAAO,AAAC,KAAK,IACR,KAAK,CAAC,MAAM,IACZ,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,IACpB,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC,IAAK,IAAI,CAAA;KAC/D,CAAC,CACD,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AAAE,aAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KAAE,CAAC,CAC5C,IAAI,CAAC,YAAY;AAChB,UAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;AAC1B,UAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;KAC3B,CAAC,CAAA;GACL,CAAA;;AAED,WAAS,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;AACxC,QAAI,SAAS,GAAM,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAA;AACxE,QAAI,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAA;AACzC,QAAI,SAAS,GAAM,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAA;AACpF,QAAI,OAAO,GAAQ,IAAI,CAAC,OAAO,CAAA;AAC/B,QAAI,OAAO,GAAQ,IAAI,CAAC,OAAO,CAAA;AAC/B,QAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;AACpC,QAAI,CAAC,CAAA;;AAEL,QAAI,IAAI,CAAC,YAAY,IAAI,YAAY,EAAE;AACrC,UAAI,CAAC,OAAO,EAAE,CAAA;KACf;;AAED,QAAI,SAAS,IAAI,SAAS,EAAE;AAC1B,aAAO,YAAY,IAAK,CAAA,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,AAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;KAC7E;;AAED,QAAI,YAAY,IAAI,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE;AAC1C,UAAI,CAAC,YAAY,GAAG,IAAI,CAAA;AACxB,aAAO,IAAI,CAAC,KAAK,EAAE,CAAA;KACpB;;AAED,SAAK,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG;AAC7B,kBAAY,IAAI,OAAO,CAAC,CAAC,CAAC,IACrB,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,IACtB,CAAA,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,AAAC,IAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;KAC/B;GACF,CAAA;;AAED,WAAS,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,MAAM,EAAE;AAC/C,QAAI,CAAC,YAAY,GAAG,MAAM,CAAA;;AAE1B,QAAI,CAAC,KAAK,EAAE,CAAA;;AAEZ,QAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,GACxB,iBAAgB,GAAG,MAAM,GAAG,MAAK,GACjC,IAAI,CAAC,QAAQ,GAAG,UAAS,GAAG,MAAM,GAAG,KAAI,CAAA;;AAE7C,QAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CACrB,OAAO,CAAC,IAAI,CAAC,CACb,QAAQ,CAAC,QAAQ,CAAC,CAAA;;AAErB,QAAI,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE;AAC1C,YAAM,GAAG,MAAM,CACZ,OAAO,CAAC,aAAa,CAAC,CACtB,QAAQ,CAAC,QAAQ,CAAC,CAAA;KACtB;;AAED,UAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAA;GACxC,CAAA;;AAED,WAAS,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;AACtC,KAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CACb,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,CAC5C,WAAW,CAAC,QAAQ,CAAC,CAAA;GACzB,CAAA;;;;;;AAMD,WAAS,MAAM,CAAC,MAAM,EAAE;AACtB,WAAO,IAAI,CAAC,IAAI,CAAC,YAAY;AAC3B,UAAI,KAAK,GAAK,CAAC,CAAC,IAAI,CAAC,CAAA;AACrB,UAAI,IAAI,GAAM,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;AACxC,UAAI,OAAO,GAAG,OAAO,MAAM,IAAI,QAAQ,IAAI,MAAM,CAAA;;AAEjD,UAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,cAAc,EAAG,IAAI,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAE,CAAA;AAC5E,UAAI,OAAO,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA;KAC9C,CAAC,CAAA;GACH;;AAED,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,SAAS,CAAA;;AAExB,GAAC,CAAC,EAAE,CAAC,SAAS,GAAe,MAAM,CAAA;AACnC,GAAC,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAA;;;;;;AAMtC,GAAC,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;AACtC,KAAC,CAAC,EAAE,CAAC,SAAS,GAAG,GAAG,CAAA;AACpB,WAAO,IAAI,CAAA;GACZ,CAAA;;;;;;AAMD,GAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,4BAA4B,EAAE,YAAY;AACrD,KAAC,CAAC,uBAAqB,CAAC,CAAC,IAAI,CAAC,YAAY;AACxC,UAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA;AAClB,YAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;KAC/B,CAAC,CAAA;GACH,CAAC,CAAA;CAEH,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;AAWV,CAAC,WAAU,CAAC,EAAE;AACZ,cAAY,CAAC;;;;;AAKb,MAAI,GAAG,GAAG,UAAU,OAAO,EAAE;AAC3B,QAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAA;GAC1B,CAAA;;AAED,KAAG,CAAC,OAAO,GAAG,OAAO,CAAA;;AAErB,KAAG,CAAC,mBAAmB,GAAG,GAAG,CAAA;;AAE7B,KAAG,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AAC/B,QAAI,KAAK,GAAM,IAAI,CAAC,OAAO,CAAA;AAC3B,QAAI,GAAG,GAAQ,KAAK,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAA;AACtD,QAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;;AAEnC,QAAI,CAAC,QAAQ,EAAE;AACb,cAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAC7B,cAAQ,GAAG,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC;AAAA,OAAA;KAC9D;;AAED,QAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,OAAM;;AAEjD,QAAI,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA;AAC1C,QAAI,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,aAAa,EAAE;AACrC,mBAAa,EAAE,KAAK,CAAC,CAAC,CAAC;KACxB,CAAC,CAAA;AACF,QAAI,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,aAAa,EAAE;AACrC,mBAAa,EAAE,SAAS,CAAC,CAAC,CAAC;KAC5B,CAAC,CAAA;;AAEF,aAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;AAC5B,SAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;;AAExB,QAAI,SAAS,CAAC,kBAAkB,EAAE,IAAI,SAAS,CAAC,kBAAkB,EAAE,EAAE,OAAM;;AAE5E,QAAI,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAA;;AAEzB,QAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAA;AACvC,QAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,YAAY;AACnD,eAAS,CAAC,OAAO,CAAC;AAChB,YAAI,EAAE,eAAe;AACrB,qBAAa,EAAE,KAAK,CAAC,CAAC,CAAC;OACxB,CAAC,CAAA;AACF,WAAK,CAAC,OAAO,CAAC;AACZ,YAAI,EAAE,cAAc;AACpB,qBAAa,EAAE,SAAS,CAAC,CAAC,CAAC;OAC5B,CAAC,CAAA;KACH,CAAC,CAAA;GACH,CAAA;;AAED,KAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE;AAC/D,QAAI,OAAO,GAAM,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;AAC5C,QAAI,UAAU,GAAG,QAAQ,IACpB,CAAC,CAAC,OAAO,CAAC,UAAU,IACnB,CAAC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAA,AAAC,CAAA;;AAEzF,aAAS,IAAI,GAAG;AACd,aAAO,CACJ,WAAW,CAAC,QAAQ,CAAC,CACrB,IAAI,CAAC,4BAA4B,CAAC,CAChC,WAAW,CAAC,QAAQ,CAAC,CACvB,GAAG,EAAE,CACL,IAAI,CAAC,uBAAqB,CAAC,CACzB,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAA;;AAEjC,aAAO,CACJ,QAAQ,CAAC,QAAQ,CAAC,CAClB,IAAI,CAAC,uBAAqB,CAAC,CACzB,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAA;;AAEhC,UAAI,UAAU,EAAE;AACd,eAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAA;AACtB,eAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;OACvB,MAAM;AACL,eAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;OAC5B;;AAED,UAAI,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE;AACpC,eAAO,CACJ,OAAO,CAAC,aAAa,CAAC,CACpB,QAAQ,CAAC,QAAQ,CAAC,CACpB,GAAG,EAAE,CACL,IAAI,CAAC,uBAAqB,CAAC,CACzB,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAA;OACjC;;AAED,cAAQ,IAAI,QAAQ,EAAE,CAAA;KACvB;;AAED,WAAO,CAAC,MAAM,IAAI,UAAU,GAC1B,OAAO,CACJ,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAC5B,oBAAoB,CAAC,GAAG,CAAC,mBAAmB,CAAC,GAChD,IAAI,EAAE,CAAA;;AAER,WAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;GAC1B,CAAA;;;;;;AAMD,WAAS,MAAM,CAAC,MAAM,EAAE;AACtB,WAAO,IAAI,CAAC,IAAI,CAAC,YAAY;AAC3B,UAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA;AACnB,UAAI,IAAI,GAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;;AAEhC,UAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAG,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAE,CAAA;AACvD,UAAI,OAAO,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA;KAC9C,CAAC,CAAA;GACH;;AAED,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAA;;AAElB,GAAC,CAAC,EAAE,CAAC,GAAG,GAAe,MAAM,CAAA;AAC7B,GAAC,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAA;;;;;;AAM1B,GAAC,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,GAAG,YAAY;AAChC,KAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,CAAA;AACd,WAAO,IAAI,CAAA;GACZ,CAAA;;;;;;AAMD,MAAI,YAAY,GAAG,UAAU,CAAC,EAAE;AAC9B,KAAC,CAAC,cAAc,EAAE,CAAA;AAClB,UAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAA;GAC7B,CAAA;;AAED,GAAC,CAAC,QAAQ,CAAC,CACR,EAAE,CAAC,uBAAuB,EAAE,uBAAqB,EAAE,YAAY,CAAC,CAChE,EAAE,CAAC,uBAAuB,EAAE,wBAAsB,EAAE,YAAY,CAAC,CAAA;CAErE,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;AAWV,CAAC,WAAU,CAAC,EAAE;AACZ,cAAY,CAAC;;;;;AAKb,MAAI,KAAK,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE;AACtC,QAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;;AAEpD,QAAI,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAClC,EAAE,CAAC,0BAA0B,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CACjE,EAAE,CAAC,yBAAyB,EAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC,CAAA;;AAEjF,QAAI,CAAC,QAAQ,GAAO,CAAC,CAAC,OAAO,CAAC,CAAA;AAC9B,QAAI,CAAC,OAAO,GACZ,IAAI,CAAC,KAAK,GACV,IAAI,CAAC,YAAY,GAAG,IAAI,CAAA;;AAExB,QAAI,CAAC,aAAa,EAAE,CAAA;GACrB,CAAA;;AAED,OAAK,CAAC,OAAO,GAAI,OAAO,CAAA;;AAExB,OAAK,CAAC,KAAK,GAAM,8BAA8B,CAAA;;AAE/C,OAAK,CAAC,QAAQ,GAAG;AACf,UAAM,EAAE,CAAC;AACT,UAAM,EAAE,MAAM;GACf,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,YAAY,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE;AAClF,QAAI,SAAS,GAAM,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAA;AAC3C,QAAI,QAAQ,GAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAA;AACzC,QAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAA;;AAExC,QAAI,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE,OAAO,SAAS,GAAG,SAAS,GAAG,KAAK,GAAG,KAAK,CAAA;;AAE5F,QAAI,IAAI,CAAC,OAAO,IAAI,QAAQ,EAAE;AAC5B,UAAI,SAAS,IAAI,IAAI,EAAE,OAAO,AAAC,SAAS,GAAG,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,GAAG,GAAI,KAAK,GAAG,QAAQ,CAAA;AACzF,aAAO,AAAC,SAAS,GAAG,YAAY,IAAI,YAAY,GAAG,YAAY,GAAI,KAAK,GAAG,QAAQ,CAAA;KACpF;;AAED,QAAI,YAAY,GAAK,IAAI,CAAC,OAAO,IAAI,IAAI,CAAA;AACzC,QAAI,WAAW,GAAM,YAAY,GAAG,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAA;AAC5D,QAAI,cAAc,GAAG,YAAY,GAAG,YAAY,GAAG,MAAM,CAAA;;AAEzD,QAAI,SAAS,IAAI,IAAI,IAAI,WAAW,IAAI,SAAS,EAAE,OAAO,KAAK,CAAA;AAC/D,QAAI,YAAY,IAAI,IAAI,IAAK,WAAW,GAAG,cAAc,IAAI,YAAY,GAAG,YAAY,AAAC,EAAE,OAAO,QAAQ,CAAA;;AAE1G,WAAO,KAAK,CAAA;GACb,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,eAAe,GAAG,YAAY;AAC5C,QAAI,IAAI,CAAC,YAAY,EAAE,OAAO,IAAI,CAAC,YAAY,CAAA;AAC/C,QAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;AACxD,QAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAA;AACxC,QAAI,QAAQ,GAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAA;AACtC,WAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,GAAG,GAAG,SAAS,CAAC;GACtD,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,0BAA0B,GAAG,YAAY;AACvD,cAAU,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;GACjD,CAAA;;AAED,OAAK,CAAC,SAAS,CAAC,aAAa,GAAG,YAAY;AAC1C,QAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,OAAM;;AAEzC,QAAI,MAAM,GAAS,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAA;AACzC,QAAI,MAAM,GAAS,IAAI,CAAC,OAAO,CAAC,MAAM,CAAA;AACtC,QAAI,SAAS,GAAM,MAAM,CAAC,GAAG,CAAA;AAC7B,QAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAA;AAChC,QAAI,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAA;;AAErC,QAAI,OAAO,MAAM,IAAI,QAAQ,EAAU,YAAY,GAAG,SAAS,GAAG,MAAM,CAAA;AACxE,QAAI,OAAO,SAAS,IAAI,UAAU,EAAK,SAAS,GAAM,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;AAC/E,QAAI,OAAO,YAAY,IAAI,UAAU,EAAE,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;;AAElF,QAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,CAAC,CAAA;;AAExE,QAAI,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE;AACzB,UAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;;AAEpD,UAAI,SAAS,GAAG,OAAO,GAAI,CAAA,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,EAAE,CAAA,AAAC,CAAA;AACpD,UAAI,CAAC,GAAW,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,WAAW,CAAC,CAAA;;AAEhD,UAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;;AAExB,UAAI,CAAC,CAAC,kBAAkB,EAAE,EAAE,OAAM;;AAElC,UAAI,CAAC,OAAO,GAAG,KAAK,CAAA;AACpB,UAAI,CAAC,KAAK,GAAG,KAAK,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAA;;AAE9D,UAAI,CAAC,QAAQ,CACV,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CACxB,QAAQ,CAAC,SAAS,CAAC,CACnB,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,WAAW,CAAC,CAAA;KAChE;;AAED,QAAI,KAAK,IAAI,QAAQ,EAAE;AACrB,UAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;AACnB,WAAG,EAAE,YAAY,GAAG,MAAM,GAAG,YAAY;OAC1C,CAAC,CAAA;KACH;GACF,CAAA;;;;;;AAMD,WAAS,MAAM,CAAC,MAAM,EAAE;AACtB,WAAO,IAAI,CAAC,IAAI,CAAC,YAAY;AAC3B,UAAI,KAAK,GAAK,CAAC,CAAC,IAAI,CAAC,CAAA;AACrB,UAAI,IAAI,GAAM,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;AACpC,UAAI,OAAO,GAAG,OAAO,MAAM,IAAI,QAAQ,IAAI,MAAM,CAAA;;AAEjD,UAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,UAAU,EAAG,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAE,CAAA;AACpE,UAAI,OAAO,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA;KAC9C,CAAC,CAAA;GACH;;AAED,MAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAA;;AAEpB,GAAC,CAAC,EAAE,CAAC,KAAK,GAAe,MAAM,CAAA;AAC/B,GAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAA;;;;;;AAM9B,GAAC,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,GAAG,YAAY;AAClC,KAAC,CAAC,EAAE,CAAC,KAAK,GAAG,GAAG,CAAA;AAChB,WAAO,IAAI,CAAA;GACZ,CAAA;;;;;;AAMD,GAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,YAAY;AAC/B,KAAC,CAAC,sBAAoB,CAAC,CAAC,IAAI,CAAC,YAAY;AACvC,UAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA;AAClB,UAAI,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;;AAEtB,UAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAA;;AAE/B,UAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAA;AACrE,UAAI,IAAI,CAAC,SAAS,IAAO,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,GAAM,IAAI,CAAC,SAAS,CAAA;;AAElE,YAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;KACxB,CAAC,CAAA;GACH,CAAC,CAAA;CAEH,CAAA,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;AC/wxpypFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjvhOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtFA;AACA;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACztllYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1GA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7NA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1krjoNQ,IAAI,WAAO,UAAU,EAArB,IAAI;IACL,CAAC,2BAAM,QAAQ;;IAED,MAAM,YAAN,MAAM;MAAS,IAAI;AAAJ,QAAI;;;;UAAnB,MAAM,EAAS,IAAI;;AAAnB,MAAM,WACzB,MAAM,GAAA,YAAG;AACP,MAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAChC,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AACrC,MAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;AACxC,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;;AAE3C,MAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;AAC3C,MAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;AACtC,MAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AACX,cAAU,EAAE,qDAAmD;AAC/D,cAAU,EAAE,SAAS;GACtB,CAAC,CAAC;;AAEH,MAAI,CAAC,OAAO,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAC5C,MAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AAClC,MAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;AAE3B,SAAO,IAAI,CAAC;CACb;;AAnBkB,MAAM,WAqBzB,WAAW,GAAA,YAAG;AACZ,MAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAC9B,MAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;AAC1C,MAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;CAC3C;;AAzBkB,MAAM,WA2BzB,SAAS,GAAA,YAAG;AACV,SAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;CAC7D;;iBA7BkB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ICHnB,IAAI,WAAO,UAAU,EAArB,IAAI;IACL,CAAC,2BAAM,QAAQ;;IAED,SAAS,YAAT,SAAS;MAAS,IAAI;AAAJ,QAAI;;;;UAAtB,SAAS,EAAS,IAAI;;AAAtB,SAAS,WAK5B,MAAM,GAAA,YAAG;AACP,MAAI,CAAC,GAAG,CAAC,SAAS,CAAC;AACjB,UAAM,EAAE,UAAU;AAClB,UAAM,EAAE,EAAE;GACX,CAAC,CAAC;;AAEH,SAAO,IAAI,CAAC;CACb;;qBAZkB,SAAS;AACxB,IAAE;SAAA,YAAG;AACP,aAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;KACxB;;;;;iBAHkB,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;ICHtB,IAAI,WAAO,UAAU,EAArB,IAAI;IACL,CAAC,2BAAM,QAAQ;;IACf,CAAC,2BAAM,QAAQ;;IAED,OAAO,YAAP,OAAO;MAAS,IAAI;AAAJ,QAAI;;;;UAApB,OAAO,EAAS,IAAI;;AAApB,OAAO,WAK1B,MAAM,GAAA,YAAG;AACP,MAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AACtC,MAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;;AAE7C,MAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAE9B,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC;AACb,UAAM,EAAE;AACN,SAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAC/C,YAAM,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;KACtD;GACF,CAAC,CAAC;;AAEH,SAAO,IAAI,CAAC;CACb;;AAnBkB,OAAO,WAqB1B,eAAe,GAAA,YAAG;AAChB,MAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,MAAI,OAAO,CAAC;AACZ,GAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAS,KAAK,EAAE,OAAO,EAAE;AACxC,QAAI,KAAK,GAAG;AACV,QAAE,EAAE,OAAO,CAAC,EAAE;AACd,UAAI,EAAE,OAAO,CAAC,WAAW;AACzB,cAAQ,EAAE,EAAE;KACb,CAAC;;AAEF,QAAI,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;AAC1C,cAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrB,aAAO,GAAG,KAAK,CAAC;KACjB,MAAM;AACL,aAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;GACF,CAAC,CAAC;AACH,SAAO,QAAQ,CAAC;CACjB;;AAvCkB,OAAO,WAyC1B,cAAc,GAAA,UAAC,QAAQ,EAAE;AACvB,MAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,GAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAS,OAAO,EAAE;AACjC,YAAQ,wBAAqB,OAAO,CAAC,EAAE,WAAK,OAAO,CAAC,IAAI,SAAM,CAAC;AAC/D,QAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE;AAC3B,cAAQ,2BAAuB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAO,CAAC;KAC7E;AACD,YAAQ,IAAI,OAAO,CAAC;GACrB,EAAE,IAAI,CAAC,CAAC;AACT,SAAO,QAAQ,CAAC;CACjB;;AAnDkB,OAAO,WAqD1B,YAAY,GAAA,YAAG;AACb,MAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC;AACtC,MAAI,iBAAiB,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;AAC9C,MAAI,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC;;AAEzE,SAAO,SAAS,GAAG,iBAAiB,GAAG,aAAa,CAAC;CACtD;;AA3DkB,OAAO,WA6D1B,eAAe,GAAA,YAAG;AAChB,SAAO,CAAC,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;CACvC;;qBA/DkB,OAAO;AACtB,IAAE;SAAA,YAAG;AACP,aAAO,CAAC,CAAC,UAAU,CAAC,CAAC;KACtB;;;;;iBAHkB,OAAO;;;;;;;;;;;;;;;;;;;;;;ICJpB,IAAI,WAAc,UAAU,EAA5B,IAAI;IAAE,KAAK,WAAO,UAAU,EAAtB,KAAK;IAEE,OAAO,YAAP,OAAO;MAAS,IAAI;AAAJ,QAAI;;;;UAApB,OAAO,EAAS,IAAI;;AAApB,OAAO,WAC1B,UAAU,GAAA,UAAC,OAAO,EAAO;MAAd,OAAO,gBAAP,OAAO,GAAG,EAAE;AACrB,MAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,IAAI;AAC5C,gBAAY,EAAG,MAAM;AACrB,cAAU,EAAK,MAAM;GACtB,CAAC,CAAC;CACJ;;AANkB,OAAO,WAQ1B,MAAM,GAAA,YAAG;AACP,MAAI,CAAC,EAAE,GAAG;AACR,gBAAY,EAAG,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC;AACtC,cAAU,EAAK,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC;GACrC,CAAC;AACF,MAAI,CAAC,WAAW,EAAE,CAAC;AACnB,SAAO,IAAI,CAAC;CACb;;AAfkB,OAAO,WAuB1B,WAAW,GAAA,YAAG;AACZ,MAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,KAAK,MAAM,CAAC,CAAC;AACnF,MAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,MAAM,CAAC,CAAC;CAChF;;AA1BkB,OAAO,WA4B1B,SAAS,GAAA,YAAG;AACV,MAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AACnF,MAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;CAChF;;qBA/BkB,OAAO;AAiBtB,QAAM;SAAA,YAAG;AACX,aAAO;AACL,sBAAc,EAAE,WAAW;OAC5B,CAAC;KACH;;;;;iBArBkB,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;ICFpB,IAAI,WAAO,UAAU,EAArB,IAAI;IACL,CAAC,2BAAM,QAAQ;;IACf,SAAS,2BAAM,yBAAyB;;IACxC,OAAO,2BAAM,uBAAuB;;IAEtB,IAAI,YAAJ,IAAI;MAAS,IAAI;AAAJ,QAAI;;;;UAAjB,IAAI,EAAS,IAAI;;AAAjB,IAAI,WAKvB,MAAM,GAAA,YAAG;AACP,MAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AAChE,MAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AAC1D,SAAO,IAAI,CAAC;CACb;;qBATkB,IAAI;AACnB,IAAE;SAAA,YAAG;AACP,aAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KACzB;;;;;iBAHkB,IAAI;;;ACLzB;AACA;;ACDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ICDQ,IAAI,WAAgB,UAAU,EAA9B,IAAI;IAAE,OAAO,WAAO,UAAU,EAAxB,OAAO;IACd,CAAC,2BAAM,QAAQ;;IACf,CAAC,2BAAM,QAAQ;;IACf,GAAG,2BAAM,uBAAuB;;QAChC,uBAAuB;;IACvB,MAAM,2BAAM,sBAAsB;;IAClC,OAAO,2BAAM,uBAAuB;;IAEtB,IAAI,YAAJ,IAAI;MAAS,IAAI;AAAJ,QAAI;;;;UAAjB,IAAI,EAAS,IAAI;;AAAjB,IAAI,WAKvB,MAAM,GAAA,YAAG;AACP,MAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC;AACzB,MAAE,EAAE,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC;AAC3B,YAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE;GAC1B,CAAC,CAAC,MAAM,EAAE,CAAC;;AAEZ,MAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAW;AACxD,QAAI,CAAC,WAAW,EAAE,CAAC;GACpB,CAAC,CAAC;;AAEH,MAAI,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC;AACtB,MAAE,EAAE,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC;GAClC,CAAC,CAAC,MAAM,EAAE,CAAC;;AAEZ,MAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC;AACvB,MAAE,EAAE,IAAI,CAAC,CAAC,CAAC,sBAAsB,CAAC;GACnC,CAAC,CAAC,MAAM,EAAE,CAAC;;AAEZ,MAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;;AAE1B,MAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,CAAC;AACjF,MAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAC;;AAEjF,MAAI,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;;AAE1C,SAAO,IAAI,CAAC;CACb;;AA/BkB,IAAI,WAiCvB,kBAAkB,GAAA,UAAC,SAAS,EAAE;AAC5B,MAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;CACxD;;AAnCkB,IAAI,WAqCvB,mBAAmB,GAAA,UAAC,SAAS,EAAE;AAC7B,MAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;CACxD;;AAvCkB,IAAI,WAyCvB,aAAa,GAAA,UAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE;AACjC,MAAI,IAAI,CAAC,WAAW,EAAE,OAAO;AAC7B,MAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACxB,MAAI,QAAQ,GAAG,AAAC,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,GAAI,EAAE,CAAC,SAAS,EAAE,CAAC;AAC/D,IAAE,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AAClC,MAAI,CAAC,WAAW,GAAG,KAAK,CAAC;CAC1B;;AA/CkB,IAAI,WAiDvB,QAAQ,GAAA,YAAG;AACT,MAAI,IAAI,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3D,SAAO,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,UAAS,WAAW,EAAE,IAAI,EAAE;AACnD,QAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC5B,eAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;GACtD,EAAE,EAAE,CAAC,CAAC;CACR;;AAvDkB,IAAI,WAyDvB,WAAW,GAAA,YAAG;AACZ,MAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAS,KAAK,EAAE,IAAI,EAAE;AACxE,gBAAU,IAAI,SAAI,KAAK,CAAG;GAC3B,CAAC,CAAC;AACH,OAAK,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AACvE,SAAO,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;CACpE;;AA/DkB,IAAI,WAiEvB,WAAW,GAAA,YAAG,EAEb;;qBAnEkB,IAAI;AACnB,IAAE;SAAA,YAAG;AACP,aAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KACzB;;;;;iBAHkB,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;ICRjB,MAAM,WAAO,UAAU,EAAvB,MAAM;IACP,SAAS,2BAAM,eAAe;;IAC9B,WAAW,2BAAM,iBAAiB;;IAClC,QAAQ,2BAAM,cAAc;;IAC5B,QAAQ,2BAAM,cAAc;;IAEd,UAAU,YAAV,UAAU;MAAS,MAAM;AAAN,UAAM;;;;UAAzB,UAAU,EAAS,MAAM;;AAAzB,UAAU,WAc7B,KAAK,GAAA,YAAG;AACN,MAAI,SAAS,EAAE,CAAC,MAAM,EAAE,CAAC;CAC1B;;AAhBkB,UAAU,WAkB7B,OAAO,GAAA,YAAG;AACR,MAAI,WAAW,EAAE,CAAC,MAAM,EAAE,CAAC;CAC5B;;AApBkB,UAAU,WAsB7B,IAAI,GAAA,YAAG;AACL,MAAI,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;CACzB;;AAxBkB,UAAU,WA0B7B,IAAI,GAAA,YAAG;AACL,MAAI,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;CACzB;;qBA5BkB,UAAU;AACzB,QAAM;SAAA,YAAG;AACX,aAAO;AACL,wCAAgC,EAAQ,OAAO;AAC/C,0CAAkC,EAAM,SAAS;AACjD,uCAA+B,EAAS,MAAM;AAC9C,uCAA+B,EAAS,MAAM;AAC9C,wCAAgC,EAAQ,MAAM;AAC9C,0CAAkC,EAAM,MAAM;AAC9C,0CAAkC,EAAM,MAAM;AAC9C,6CAAqC,EAAG,MAAM;OAC/C,CAAC;KACH;;;;;iBAZkB,UAAU","file":"scripts.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Backbone from 'backbone';\nimport $ from 'jquery';\n\nBackbone.$ = $;\n\nimport 'bootstrap';\n\nimport Router from './router';\nvar router = new Router();\n$(() => Backbone.history.start({ pushState: true }));\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){require(\"core-js/shim\");require(\"regenerator/runtime\")},{\"core-js/shim\":2,\"regenerator/runtime\":3}],2:[function(require,module,exports){!function(returnThis,framework,undefined){\"use strict\";var global=returnThis(),OBJECT=\"Object\",FUNCTION=\"Function\",ARRAY=\"Array\",STRING=\"String\",NUMBER=\"Number\",REGEXP=\"RegExp\",DATE=\"Date\",MAP=\"Map\",SET=\"Set\",WEAKMAP=\"WeakMap\",WEAKSET=\"WeakSet\",SYMBOL=\"Symbol\",PROMISE=\"Promise\",MATH=\"Math\",ARGUMENTS=\"Arguments\",PROTOTYPE=\"prototype\",CONSTRUCTOR=\"constructor\",TO_STRING=\"toString\",TO_LOCALE=\"toLocaleString\",HAS_OWN=\"hasOwnProperty\",FOR_EACH=\"forEach\",PROCESS=\"process\",CREATE_ELEMENT=\"createElement\",Function=global[FUNCTION],Object=global[OBJECT],Array=global[ARRAY],String=global[STRING],Number=global[NUMBER],RegExp=global[REGEXP],Date=global[DATE],Map=global[MAP],Set=global[SET],WeakMap=global[WEAKMAP],WeakSet=global[WEAKSET],Symbol=global[SYMBOL],Math=global[MATH],TypeError=global.TypeError,setTimeout=global.setTimeout,clearTimeout=global.clearTimeout,setImmediate=global.setImmediate,clearImmediate=global.clearImmediate,process=global[PROCESS],nextTick=process&&process.nextTick,document=global.document,navigator=global.navigator,define=global.define,ArrayProto=Array[PROTOTYPE],ObjectProto=Object[PROTOTYPE],FunctionProto=Function[PROTOTYPE],Infinity=1/0,DOT=\".\";function isObject(it){return it!=null&&(typeof it==\"object\"||typeof it==\"function\")}function isFunction(it){return typeof it==\"function\"}var isNative=ctx(/./.test,/\\[native code\\]\\s*\\}\\s*$/,1);var toString=ObjectProto[TO_STRING];var buildIn={Undefined:1,Null:1,Array:1,String:1,Arguments:1,Function:1,Error:1,Boolean:1,Number:1,Date:1,RegExp:1},TO_STRING_TAG=TO_STRING+\"Tag\";function setToStringTag(it,tag,stat){if(it)has(it=stat?it:it[PROTOTYPE],SYMBOL_TAG)||hidden(it,SYMBOL_TAG,tag)}function cof(it){return it==undefined?it===undefined?\"Undefined\":\"Null\":toString.call(it).slice(8,-1)}function classof(it){var klass=cof(it),tag;return klass==OBJECT&&(tag=it[SYMBOL_TAG])?has(buildIn,tag)?\"~\"+tag:tag:klass}var call=FunctionProto.call,REFERENCE_GET;function part(){var length=arguments.length,args=Array(length),i=0,_=path._,holder=false;while(length>i)if((args[i]=arguments[i++])===_)holder=true;return partial(this,args,length,holder,_,false)}function partial(fn,argsPart,lengthPart,holder,_,bind,context){assertFunction(fn);return function(){var that=bind?context:this,length=arguments.length,i=0,j=0,args;if(!holder&&!length)return invoke(fn,argsPart,that);args=argsPart.slice();if(holder)for(;lengthPart>i;i++)if(args[i]===_)args[i]=arguments[j++];while(length>j)args.push(arguments[j++]);return invoke(fn,args,that)}}function ctx(fn,that,length){assertFunction(fn);if(~length&&that===undefined)return fn;switch(length){case 1:return function(a){return fn.call(that,a)};case 2:return function(a,b){return fn.call(that,a,b)};case 3:return function(a,b,c){return fn.call(that,a,b,c)}}return function(){return fn.apply(that,arguments)}}function invoke(fn,args,that){var un=that===undefined;switch(args.length|0){case 0:return un?fn():fn.call(that);case 1:return un?fn(args[0]):fn.call(that,args[0]);case 2:return un?fn(args[0],args[1]):fn.call(that,args[0],args[1]);case 3:return un?fn(args[0],args[1],args[2]):fn.call(that,args[0],args[1],args[2]);case 4:return un?fn(args[0],args[1],args[2],args[3]):fn.call(that,args[0],args[1],args[2],args[3]);case 5:return un?fn(args[0],args[1],args[2],args[3],args[4]):fn.call(that,args[0],args[1],args[2],args[3],args[4])}return fn.apply(that,args)}var create=Object.create,getPrototypeOf=Object.getPrototypeOf,defineProperty=Object.defineProperty,defineProperties=Object.defineProperties,getOwnDescriptor=Object.getOwnPropertyDescriptor,getKeys=Object.keys,getNames=Object.getOwnPropertyNames,getSymbols=Object.getOwnPropertySymbols,ownKeys=function(it){return getSymbols?getNames(it).concat(getSymbols(it)):getNames(it)},has=ctx(call,ObjectProto[HAS_OWN],2),ES5Object=Object;function get(object,key){if(has(object,key))return object[key]}var assign=Object.assign||function(target,source){var T=Object(assertDefined(target)),l=arguments.length,i=1;while(l>i){var S=ES5Object(arguments[i++]),keys=getKeys(S),length=keys.length,j=0,key;while(length>j)T[key=keys[j++]]=S[key]}return T};function keyOf(object,el){var O=ES5Object(object),keys=getKeys(O),length=keys.length,index=0,key;while(length>index)if(O[key=keys[index++]]===el)return key}function array(it){return String(it).split(\",\")}var push=ArrayProto.push,unshift=ArrayProto.unshift,slice=ArrayProto.slice,splice=ArrayProto.splice,indexOf=ArrayProto.indexOf,forEach=ArrayProto[FOR_EACH];function createArrayMethod(type){var isMap=type==1,isFilter=type==2,isSome=type==3,isEvery=type==4,isFindIndex=type==6,noholes=type==5||isFindIndex;return function(callbackfn,that){var O=Object(assertDefined(this)),self=ES5Object(O),f=ctx(callbackfn,that,3),length=toLength(self.length),index=0,result=isMap?Array(length):isFilter?[]:undefined,val,res;for(;length>index;index++)if(noholes||index in self){val=self[index];res=f(val,index,O);if(type){if(isMap)result[index]=res;else if(res)switch(type){case 3:return true;case 5:return val;case 6:return index;case 2:result.push(val)}else if(isEvery)return false}}return isFindIndex?-1:isSome||isEvery?isEvery:result}}function createArrayContains(isContains){return function(el,fromIndex){var O=ES5Object(assertDefined(this)),length=toLength(O.length),index=toIndex(fromIndex,length);if(isContains&&el!=el){for(;length>index;index++)if(sameNaN(O[index]))return isContains||index}else for(;length>index;index++)if(isContains||index in O){if(O[index]===el)return isContains||index}return!isContains&&-1}}function turn(mapfn,target){assertFunction(mapfn);var memo=target==undefined?[]:Object(target),O=ES5Object(this),length=toLength(O.length),index=0;for(;length>index;index++){if(mapfn(memo,O[index],index,this)===false)break}return memo}function generic(A,B){return typeof A==\"function\"?A:B}var MAX_SAFE_INTEGER=9007199254740991,ceil=Math.ceil,floor=Math.floor,max=Math.max,min=Math.min,random=Math.random,trunc=Math.trunc||function(it){return(it>0?floor:ceil)(it)};function sameNaN(number){return number!=number}function toInteger(it){return isNaN(it)?0:trunc(it)}function toLength(it){return it>0?min(toInteger(it),MAX_SAFE_INTEGER):0}function toIndex(index,length){var index=toInteger(index);return index<0?max(index+length,0):min(index,length)}function createReplacer(regExp,replace,isStatic){var replacer=isObject(replace)?function(part){return replace[part]}:replace;return function(it){return String(isStatic?it:this).replace(regExp,replacer)}}function createPointAt(toString){return function(pos){var s=String(assertDefined(this)),i=toInteger(pos),l=s.length,a,b;if(i<0||i>=l)return toString?\"\":undefined;a=s.charCodeAt(i);return a<55296||a>56319||i+1===l||(b=s.charCodeAt(i+1))<56320||b>57343?toString?s.charAt(i):a:toString?s.slice(i,i+2):(a-55296<<10)+(b-56320)+65536}}var REDUCE_ERROR=\"Reduce of empty object with no initial value\";function assert(condition,msg1,msg2){if(!condition)throw TypeError(msg2?msg1+msg2:msg1)}function assertDefined(it){if(it==undefined)throw TypeError(\"Function called on null or undefined\");return it}function assertFunction(it){assert(isFunction(it),it,\" is not a function!\");return it}function assertObject(it){assert(isObject(it),it,\" is not an object!\");return it}function assertInstance(it,Constructor,name){assert(it instanceof Constructor,name,\": use the 'new' operator!\")}function descriptor(bitmap,value){return{enumerable:!(bitmap&1),configurable:!(bitmap&2),writable:!(bitmap&4),value:value}}function simpleSet(object,key,value){object[key]=value;return object}function createDefiner(bitmap){return DESC?function(object,key,value){return defineProperty(object,key,descriptor(bitmap,value))}:simpleSet}function uid(key){return SYMBOL+\"(\"+key+\")_\"+(++sid+random())[TO_STRING](36)}function getWellKnownSymbol(name,setter){return Symbol&&Symbol[name]||(setter?Symbol:safeSymbol)(SYMBOL+DOT+name)}var DESC=!!function(){try{return defineProperty({},0,ObjectProto)}catch(e){}}(),sid=0,hidden=createDefiner(1),set=Symbol?simpleSet:hidden,safeSymbol=Symbol||uid;var ITERATOR=\"iterator\",SYMBOL_ITERATOR=getWellKnownSymbol(ITERATOR),SYMBOL_TAG=getWellKnownSymbol(TO_STRING_TAG),FF_ITERATOR=\"@@\"+ITERATOR,SUPPORT_FF_ITER=FF_ITERATOR in ArrayProto,ITER=safeSymbol(\"iter\"),KEY=1,VALUE=2,Iterators={},IteratorPrototype={},NATIVE_ITERATORS=SYMBOL_ITERATOR in ArrayProto,BUGGY_ITERATORS=\"keys\"in ArrayProto&&!(\"next\"in[].keys());setIterator(IteratorPrototype,returnThis);function setIterator(O,value){hidden(O,SYMBOL_ITERATOR,value);SUPPORT_FF_ITER&&hidden(O,FF_ITERATOR,value)}function createIterator(Constructor,NAME,next,proto){Constructor[PROTOTYPE]=create(proto||IteratorPrototype,{next:descriptor(1,next)});setToStringTag(Constructor,NAME+\" Iterator\")}function defineIterator(Constructor,NAME,value,DEFAULT){var proto=Constructor[PROTOTYPE],iter=get(proto,SYMBOL_ITERATOR)||get(proto,FF_ITERATOR)||DEFAULT&&get(proto,DEFAULT)||value;if(framework){setIterator(proto,iter);if(iter!==value){var iterProto=getPrototypeOf(iter.call(new Constructor));setToStringTag(iterProto,NAME+\" Iterator\",true);has(proto,FF_ITERATOR)&&setIterator(iterProto,returnThis)}}Iterators[NAME]=iter;Iterators[NAME+\" Iterator\"]=returnThis}function defineStdIterators(Base,NAME,Constructor,next,DEFAULT){function createIter(kind){return function(){return new Constructor(this,kind)}}createIterator(Constructor,NAME,next);defineIterator(Base,NAME,createIter(DEFAULT),DEFAULT==VALUE?\"values\":\"entries\");DEFAULT&&$define(PROTO+FORCED*BUGGY_ITERATORS,NAME,{entries:createIter(KEY+VALUE),keys:createIter(KEY),values:createIter(VALUE)})}function iterResult(done,value){return{value:value,done:!!done}}function isIterable(it){var O=Object(it);return SYMBOL_ITERATOR in O||has(Iterators,classof(O))}function getIterator(it){return assertObject((it[SYMBOL_ITERATOR]||Iterators[classof(it)]).call(it))}function stepCall(fn,value,entries){return entries?invoke(fn,value):fn(value)}function forOf(iterable,entries,fn,that){var iterator=getIterator(iterable),f=ctx(fn,that,entries?2:1),step;while(!(step=iterator.next()).done)if(stepCall(f,step.value,entries)===false)return}var html=document&&document.documentElement;var NODE=cof(process)==PROCESS,core={},path=framework?global:core,old=global.core,FORCED=1,GLOBAL=2,STATIC=4,PROTO=8,BIND=16,WRAP=32;function assignHidden(target,src){for(var key in src)hidden(target,key,src[key]);return target}function $define(type,name,source){var key,own,out,exp,isGlobal=type&GLOBAL,target=isGlobal?global:type&STATIC?global[name]:(global[name]||ObjectProto)[PROTOTYPE],exports=isGlobal?core:core[name]||(core[name]={});if(isGlobal)source=name;for(key in source){own=!(type&FORCED)&&target&&key in target&&(!isFunction(target[key])||isNative(target[key]));out=(own?target:source)[key];if(type&BIND&&own)exp=ctx(out,global);else if(type&WRAP&&!framework&&target[key]==out){exp=function(param){return this instanceof out?new out(param):out(param)};exp[PROTOTYPE]=out[PROTOTYPE]}else exp=type&PROTO&&isFunction(out)?ctx(call,out):out;if(exports[key]!=out)hidden(exports,key,exp);if(framework&&target&&!own){if(isGlobal)target[key]=out;else delete target[key]&&hidden(target,key,out)}}}if(NODE)module.exports=core;if(isFunction(define)&&define.amd)define(function(){return core});if(!NODE||framework){core.noConflict=function(){global.core=old;return core};global.core=core}$define(GLOBAL+FORCED,{global:global});!function(TAG,SymbolRegistry,setter){if(!isNative(Symbol)){Symbol=function(description){assert(!(this instanceof Symbol),SYMBOL+\" is not a \"+CONSTRUCTOR);var tag=uid(description);setter&&defineProperty(ObjectProto,tag,{configurable:true,set:function(value){hidden(this,tag,value)}});return set(create(Symbol[PROTOTYPE]),TAG,tag)};hidden(Symbol[PROTOTYPE],TO_STRING,function(){return this[TAG]})}$define(GLOBAL+WRAP,{Symbol:Symbol});var symbolStatics={\"for\":function(key){return has(SymbolRegistry,key+=\"\")?SymbolRegistry[key]:SymbolRegistry[key]=Symbol(key)},iterator:SYMBOL_ITERATOR,keyFor:part.call(keyOf,SymbolRegistry),toStringTag:SYMBOL_TAG=getWellKnownSymbol(TO_STRING_TAG,true),pure:safeSymbol,set:set,useSetter:function(){setter=true},useSimple:function(){setter=false}};forEach.call(array(\"hasInstance,isConcatSpreadable,match,replace,search,\"+\"species,split,toPrimitive,unscopables\"),function(it){symbolStatics[it]=getWellKnownSymbol(it)});$define(STATIC,SYMBOL,symbolStatics);setToStringTag(Symbol,SYMBOL);$define(GLOBAL,{Reflect:{ownKeys:ownKeys}})}(safeSymbol(\"tag\"),{},true);!function(isFinite,tmp){var RangeError=global.RangeError,isInteger=Number.isInteger||function(it){return!isObject(it)&&isFinite(it)&&floor(it)===it},sign=Math.sign||function sign(it){return(it=+it)==0||it!=it?it:it<0?-1:1},pow=Math.pow,abs=Math.abs,exp=Math.exp,log=Math.log,sqrt=Math.sqrt,fcc=String.fromCharCode,at=createPointAt(true);var objectStatic={assign:assign,is:function(x,y){return x===y?x!==0||1/x===1/y:x!=x&&y!=y}};\"__proto__\"in ObjectProto&&function(buggy,set){try{set=ctx(call,getOwnDescriptor(ObjectProto,\"__proto__\").set,2);set({},ArrayProto)}catch(e){buggy=true}objectStatic.setPrototypeOf=function(O,proto){assertObject(O);assert(proto===null||isObject(proto),proto,\": can't set as prototype!\");if(buggy)O.__proto__=proto;else set(O,proto);return O}}();$define(STATIC,OBJECT,objectStatic);function asinh(x){return!isFinite(x=+x)||x==0?x:x<0?-asinh(-x):log(x+sqrt(x*x+1))}$define(STATIC,NUMBER,{EPSILON:pow(2,-52),isFinite:function(it){return typeof it==\"number\"&&isFinite(it)},isInteger:isInteger,isNaN:sameNaN,isSafeInteger:function(number){return isInteger(number)&&abs(number)<=MAX_SAFE_INTEGER},MAX_SAFE_INTEGER:MAX_SAFE_INTEGER,MIN_SAFE_INTEGER:-MAX_SAFE_INTEGER,parseFloat:parseFloat,parseInt:parseInt});$define(STATIC,MATH,{acosh:function(x){return x<1?NaN:log(x+sqrt(x*x-1))},asinh:asinh,atanh:function(x){return x==0?+x:log((1+ +x)/(1-x))/2},cbrt:function(x){return sign(x)*pow(abs(x),1/3)},clz32:function(x){return(x>>>=0)?32-x[TO_STRING](2).length:32},cosh:function(x){return(exp(x)+exp(-x))/2},expm1:function(x){return x==0?+x:x>-1e-6&&x<1e-6?+x+x*x/2:exp(x)-1},fround:function(x){return new Float32Array([x])[0]},hypot:function(value1,value2){var sum=0,length=arguments.length,value;while(length--){value=+arguments[length];if(value==Infinity||value==-Infinity)return Infinity;sum+=value*value}return sqrt(sum)},imul:function(x,y){var UInt16=65535,xl=UInt16&x,yl=UInt16&y;return 0|xl*yl+((UInt16&x>>>16)*yl+xl*(UInt16&y>>>16)<<16>>>0)},log1p:function(x){return x>-1e-8&&x<1e-8?x-x*x/2:log(1+ +x)},log10:function(x){return log(x)/Math.LN10},log2:function(x){return log(x)/Math.LN2},sign:sign,sinh:function(x){return x==0?+x:(exp(x)-exp(-x))/2},tanh:function(x){return isFinite(x)?x==0?+x:(exp(x)-exp(-x))/(exp(x)+exp(-x)):sign(x)},trunc:trunc});setToStringTag(Math,MATH,true);function assertNotRegExp(it){if(isObject(it)&&it instanceof RegExp)throw TypeError()}$define(STATIC,STRING,{fromCodePoint:function(){var res=[],len=arguments.length,i=0,code;while(len>i){code=+arguments[i++];if(toIndex(code,1114111)!==code)throw RangeError(code+\" is not a valid code point\");res.push(code<65536?fcc(code):fcc(((code-=65536)>>10)+55296,code%1024+56320))}return res.join(\"\")},raw:function(callSite){var raw=ES5Object(assertDefined(callSite.raw)),len=toLength(raw.length),sln=arguments.length,res=[],i=0;while(len>i){res.push(String(raw[i++]));if(i<sln)res.push(String(arguments[i]))}return res.join(\"\")}});$define(PROTO,STRING,{codePointAt:createPointAt(false),endsWith:function(searchString,endPosition){assertNotRegExp(searchString);var len=this.length,end=endPosition===undefined?len:min(toLength(endPosition),len);searchString+=\"\";return String(this).slice(end-searchString.length,end)===searchString},includes:function(searchString,position){return!!~String(assertDefined(this)).indexOf(searchString,position)},repeat:function(count){var str=String(assertDefined(this)),res=\"\",n=toInteger(count);if(0>n||n==Infinity)throw RangeError(\"Count can't be negative\");for(;n>0;(n>>>=1)&&(str+=str))if(n&1)res+=str;return res},startsWith:function(searchString,position){assertNotRegExp(searchString);var index=toLength(min(position,this.length));searchString+=\"\";return String(this).slice(index,index+searchString.length)===searchString}});defineStdIterators(String,STRING,function(iterated){set(this,ITER,{o:String(iterated),i:0})},function(){var iter=this[ITER],O=iter.o,index=iter.i,point;if(index>=O.length)return iterResult(1);point=at.call(O,index);iter.i+=point.length;return iterResult(0,point)});$define(STATIC,ARRAY,{from:function(arrayLike,mapfn,that){var O=Object(assertDefined(arrayLike)),result=new(generic(this,Array)),mapping=mapfn!==undefined,f=mapping?ctx(mapfn,that,2):undefined,index=0,length;if(isIterable(O))for(var iter=getIterator(O),step;!(step=iter.next()).done;index++){result[index]=mapping?f(step.value,index):step.value}else for(length=toLength(O.length);length>index;index++){result[index]=mapping?f(O[index],index):O[index]}result.length=index;return result},of:function(){var index=0,length=arguments.length,result=new(generic(this,Array))(length);while(length>index)result[index]=arguments[index++];result.length=length;return result}});$define(PROTO,ARRAY,{copyWithin:function(target,start,end){var O=Object(assertDefined(this)),len=toLength(O.length),to=toIndex(target,len),from=toIndex(start,len),fin=end===undefined?len:toIndex(end,len),count=min(fin-from,len-to),inc=1;if(from<to&&to<from+count){inc=-1;from=from+count-1;to=to+count-1}while(count-->0){if(from in O)O[to]=O[from];else delete O[to];to+=inc;from+=inc}return O},fill:function(value,start,end){var O=Object(assertDefined(this)),length=toLength(O.length),index=toIndex(start,length),endPos=end===undefined?length:toIndex(end,length);while(endPos>index)O[index++]=value;return O},find:createArrayMethod(5),findIndex:createArrayMethod(6)});defineStdIterators(Array,ARRAY,function(iterated,kind){set(this,ITER,{o:ES5Object(iterated),i:0,k:kind})},function(){var iter=this[ITER],O=iter.o,index=iter.i++;if(!O||index>=O.length)return iter.o=undefined,iterResult(1);switch(iter.k){case KEY:return iterResult(0,index);case VALUE:return iterResult(0,O[index])}return iterResult(0,[index,O[index]])},VALUE);Iterators[ARGUMENTS]=Iterators[ARRAY];setToStringTag(global.JSON,\"JSON\",true);if(framework){tmp[SYMBOL_TAG]=DOT;if(cof(tmp)!=DOT)hidden(ObjectProto,TO_STRING,function(){return\"[object \"+classof(this)+\"]\"});if(/./g.flags!=\"g\")defineProperty(RegExp[PROTOTYPE],\"flags\",{configurable:true,get:createReplacer(/^.*\\/(\\w*)$/,\"$1\")})}}(isFinite,{});isFunction(setImmediate)&&isFunction(clearImmediate)||function(ONREADYSTATECHANGE){var postMessage=global.postMessage,addEventListener=global.addEventListener,MessageChannel=global.MessageChannel,counter=0,queue={},defer,channel,port;setImmediate=function(fn){var args=[],i=1;while(arguments.length>i)args.push(arguments[i++]);queue[++counter]=function(){invoke(isFunction(fn)?fn:Function(fn),args)};defer(counter);return counter};clearImmediate=function(id){delete queue[id]};function run(id){if(has(queue,id)){var fn=queue[id];delete queue[id];fn()}}function listner(event){run(event.data)}if(NODE){defer=function(id){nextTick(part.call(run,id))}}else if(addEventListener&&isFunction(postMessage)&&!global.importScripts){defer=function(id){postMessage(id,\"*\")};addEventListener(\"message\",listner,false)}else if(isFunction(MessageChannel)){channel=new MessageChannel;port=channel.port2;channel.port1.onmessage=listner;defer=ctx(port.postMessage,port,1)}else if(document&&ONREADYSTATECHANGE in document[CREATE_ELEMENT](\"script\")){defer=function(id){html.appendChild(document[CREATE_ELEMENT](\"script\"))[ONREADYSTATECHANGE]=function(){html.removeChild(this);run(id)}}}else{defer=function(id){setTimeout(part.call(run,id),0)}}}(\"onreadystatechange\");$define(GLOBAL+BIND,{setImmediate:setImmediate,clearImmediate:clearImmediate});!function(Promise,test){isFunction(Promise)&&isFunction(Promise.resolve)&&Promise.resolve(test=new Promise(Function()))==test||function(asap,DEF){function isThenable(o){var then;if(isObject(o))then=o.then;return isFunction(then)?then:false}function notify(def){var chain=def.chain;chain.length&&asap(function(){var msg=def.msg,ok=def.state==1,i=0;while(chain.length>i)!function(react){var cb=ok?react.ok:react.fail,ret,then;try{if(cb){ret=cb===true?msg:cb(msg);if(ret===react.P){react.rej(TypeError(PROMISE+\"-chain cycle\"))}else if(then=isThenable(ret)){then.call(ret,react.res,react.rej)}else react.res(ret)}else react.rej(msg)}catch(err){react.rej(err)}}(chain[i++]);chain.length=0})}function resolve(msg){var def=this,then,wrapper;if(def.done)return;def.done=true;def=def.def||def;try{if(then=isThenable(msg)){wrapper={def:def,done:false};then.call(msg,ctx(resolve,wrapper,1),ctx(reject,wrapper,1))}else{def.msg=msg;def.state=1;notify(def)}}catch(err){reject.call(wrapper||{def:def,done:false},err)}}function reject(msg){var def=this;if(def.done)return;def.done=true;def=def.def||def;def.msg=msg;def.state=2;notify(def)}Promise=function(executor){assertFunction(executor);assertInstance(this,Promise,PROMISE);var def={chain:[],state:0,done:false,msg:undefined};hidden(this,DEF,def);try{executor(ctx(resolve,def,1),ctx(reject,def,1))}catch(err){reject.call(def,err)}};assignHidden(Promise[PROTOTYPE],{then:function(onFulfilled,onRejected){var react={ok:isFunction(onFulfilled)?onFulfilled:true,fail:isFunction(onRejected)?onRejected:false},P=react.P=new this[CONSTRUCTOR](function(resolve,reject){react.res=assertFunction(resolve);react.rej=assertFunction(reject)}),def=this[DEF];def.chain.push(react);def.state&&notify(def);return P},\"catch\":function(onRejected){return this.then(undefined,onRejected)}});assignHidden(Promise,{all:function(iterable){var Promise=this,values=[];return new Promise(function(resolve,reject){forOf(iterable,false,push,values);var remaining=values.length,results=Array(remaining);if(remaining)forEach.call(values,function(promise,index){Promise.resolve(promise).then(function(value){results[index]=value;--remaining||resolve(results)},reject)});else resolve(results)})},race:function(iterable){var Promise=this;return new Promise(function(resolve,reject){forOf(iterable,false,function(promise){Promise.resolve(promise).then(resolve,reject)})})},reject:function(r){return new this(function(resolve,reject){reject(r)})},resolve:function(x){return isObject(x)&&getPrototypeOf(x)===this[PROTOTYPE]?x:new this(function(resolve,reject){resolve(x)})}})}(nextTick||setImmediate,safeSymbol(\"def\"));setToStringTag(Promise,PROMISE);$define(GLOBAL+FORCED*!isNative(Promise),{Promise:Promise})}(global[PROMISE]);!function(){var DATA=safeSymbol(\"data\"),UID=safeSymbol(\"uid\"),LAST=safeSymbol(\"last\"),FIRST=safeSymbol(\"first\"),WEAKDATA=safeSymbol(\"weakData\"),WEAKID=safeSymbol(\"weakId\"),SIZE=DESC?safeSymbol(\"size\"):\"size\",uid=0,wid=0;function getCollection(C,NAME,methods,commonMethods,isMap,isWeak){var ADDER=isMap?\"set\":\"add\",proto=C&&C[PROTOTYPE],O={};function initFromIterable(that,iterable){if(iterable!=undefined)forOf(iterable,isMap,that[ADDER],that);return that}function fixSVZ(key,chain){var method=proto[key];framework&&hidden(proto,key,function(a,b){var result=method.call(this,a===0?0:a,b);return chain?this:result})}if(BUGGY_ITERATORS||!(isNative(C)&&(isWeak||has(proto,FOR_EACH)&&has(proto,\"entries\")))){C=isWeak?function(iterable){assertInstance(this,C,NAME);set(this,WEAKID,wid++);initFromIterable(this,iterable)}:function(iterable){var that=this;assertInstance(that,C,NAME);set(that,DATA,create(null));set(that,SIZE,0);set(that,LAST,undefined);set(that,FIRST,undefined);initFromIterable(that,iterable)};assignHidden(assignHidden(C[PROTOTYPE],methods),commonMethods);isWeak||defineProperty(C[PROTOTYPE],\"size\",{get:function(){return assertDefined(this[SIZE])}})}else{var Native=C,inst=new C,chain=inst[ADDER](isWeak?{}:-0,1),buggyZero;if(!NATIVE_ITERATORS||!C.length){C=function(iterable){assertInstance(this,C,NAME);return initFromIterable(new Native,iterable)};C[PROTOTYPE]=proto}isWeak||inst[FOR_EACH](function(val,key){buggyZero=1/key===-Infinity});if(buggyZero){fixSVZ(\"delete\");fixSVZ(\"has\");isMap&&fixSVZ(\"get\")}if(buggyZero||chain!==inst)fixSVZ(ADDER,true)}setToStringTag(C,NAME);O[NAME]=C;$define(GLOBAL+WRAP+FORCED*!isNative(C),O);return C}function fastKey(it,create){if(!isObject(it))return(typeof it==\"string\"?\"S\":\"P\")+it;if(!has(it,UID)){if(create)hidden(it,UID,++uid);else return\"\"}return\"O\"+it[UID]}function def(that,key,value){var index=fastKey(key,true),data=that[DATA],last=that[LAST],entry;if(index in data)data[index].v=value;else{entry=data[index]={k:key,v:value,p:last};if(!that[FIRST])that[FIRST]=entry;if(last)last.n=entry;that[LAST]=entry;that[SIZE]++}return that}function del(that,index){var data=that[DATA],entry=data[index],next=entry.n,prev=entry.p;delete data[index];entry.r=true;if(prev)prev.n=next;if(next)next.p=prev;if(that[FIRST]==entry)that[FIRST]=next;if(that[LAST]==entry)that[LAST]=prev;that[SIZE]--}var collectionMethods={clear:function(){for(var index in this[DATA])del(this,index)},\"delete\":function(key){var index=fastKey(key),contains=index in this[DATA];if(contains)del(this,index);return contains},forEach:function(callbackfn,that){var f=ctx(callbackfn,that,3),entry;while(entry=entry?entry.n:this[FIRST]){f(entry.v,entry.k,this);while(entry&&entry.r)entry=entry.p}},has:function(key){return fastKey(key)in this[DATA]}};Map=getCollection(Map,MAP,{get:function(key){var entry=this[DATA][fastKey(key)];return entry&&entry.v},set:function(key,value){return def(this,key===0?0:key,value)}},collectionMethods,true);Set=getCollection(Set,SET,{add:function(value){return def(this,value=value===0?0:value,value)}},collectionMethods);function getWeakData(it){has(it,WEAKDATA)||hidden(it,WEAKDATA,{});return it[WEAKDATA]}function weakCollectionHas(key){return isObject(key)&&has(key,WEAKDATA)&&has(key[WEAKDATA],this[WEAKID])}var weakCollectionMethods={\"delete\":function(key){return weakCollectionHas.call(this,key)&&delete key[WEAKDATA][this[WEAKID]]},has:weakCollectionHas};WeakMap=getCollection(WeakMap,WEAKMAP,{get:function(key){if(isObject(key)&&has(key,WEAKDATA))return key[WEAKDATA][this[WEAKID]]},set:function(key,value){getWeakData(assertObject(key))[this[WEAKID]]=value;return this}},weakCollectionMethods,true,true);WeakSet=getCollection(WeakSet,WEAKSET,{add:function(value){getWeakData(assertObject(value))[this[WEAKID]]=true;return this}},weakCollectionMethods,false,true);function defineCollectionIterators(C,NAME,DEFAULT){defineStdIterators(C,NAME,function(iterated,kind){set(this,ITER,{o:iterated,k:kind})},function(){var iter=this[ITER],O=iter.o,entry=iter.l;while(entry&&entry.r)entry=entry.p;if(!O||!(iter.l=entry=entry?entry.n:O[FIRST]))return iter.o=undefined,iterResult(1);switch(iter.k){case KEY:return iterResult(0,entry.k);case VALUE:return iterResult(0,entry.v)}return iterResult(0,[entry.k,entry.v])},DEFAULT)}defineCollectionIterators(Map,MAP,KEY+VALUE);defineCollectionIterators(Set,SET,VALUE)}();!function(){$define(PROTO,ARRAY,{includes:createArrayContains(true)});$define(PROTO,STRING,{at:createPointAt(true)});function createObjectToArray(isEntries){return function(object){var O=ES5Object(object),keys=getKeys(object),length=keys.length,i=0,result=Array(length),key;if(isEntries)while(length>i)result[i]=[key=keys[i++],O[key]];else while(length>i)result[i]=O[keys[i++]];return result}}$define(STATIC,OBJECT,{values:createObjectToArray(false),entries:createObjectToArray(true)});$define(STATIC,REGEXP,{escape:createReplacer(/([\\\\\\-[\\]{}()*+?.,^$|])/g,\"\\\\$1\",true)})}();!function(REFERENCE){REFERENCE_GET=getWellKnownSymbol(REFERENCE+\"Get\",true);var REFERENCE_SET=getWellKnownSymbol(REFERENCE+SET,true),REFERENCE_DELETE=getWellKnownSymbol(REFERENCE+\"Delete\",true);$define(STATIC,SYMBOL,{referenceGet:REFERENCE_GET,referenceSet:REFERENCE_SET,referenceDelete:REFERENCE_DELETE});hidden(FunctionProto,REFERENCE_GET,returnThis);function setMapMethods(Constructor){if(Constructor){var MapProto=Constructor[PROTOTYPE];hidden(MapProto,REFERENCE_GET,MapProto.get);hidden(MapProto,REFERENCE_SET,MapProto.set);hidden(MapProto,REFERENCE_DELETE,MapProto[\"delete\"])}}setMapMethods(Map);setMapMethods(WeakMap)}(\"reference\");!function(){function setArrayStatics(keys,length){$define(STATIC,ARRAY,turn.call(array(keys),function(memo,key){if(key in ArrayProto)memo[key]=ctx(call,ArrayProto[key],length)},{}))}setArrayStatics(\"pop,reverse,shift,keys,values,entries\",1);setArrayStatics(\"indexOf,every,some,forEach,map,filter,find,findIndex,includes\",3);setArrayStatics(\"join,slice,concat,push,splice,unshift,sort,lastIndexOf,\"+\"reduce,reduceRight,copyWithin,fill,turn\")}();!function(console,apply,enabled){try{delete global.console}catch(e){}$define(GLOBAL+FORCED,{console:turn.call(array(\"assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,\"+\"groupEnd,info,isIndependentlyComposed,log,markTimeline,profile,profileEnd,\"+\"table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn\"),function(memo,key){var fn=console[key];memo[key]=function(){if(enabled&&fn)return apply.call(fn,console,arguments)}},{enable:function(){enabled=true},disable:function(){enabled=false}})})}(global.console||{},FunctionProto.apply,true)}(Function(\"return this\"),true)},{}],3:[function(require,module,exports){!function(){var hasOwn=Object.prototype.hasOwnProperty;var undefined;var iteratorSymbol=typeof Symbol===\"function\"&&Symbol.iterator||\"@@iterator\";if(typeof regeneratorRuntime===\"object\"){return}var runtime=regeneratorRuntime=typeof exports===\"undefined\"?{}:exports;function wrap(innerFn,outerFn,self,tryList){return new Generator(innerFn,outerFn,self||null,tryList||[])}runtime.wrap=wrap;var GenStateSuspendedStart=\"suspendedStart\";var GenStateSuspendedYield=\"suspendedYield\";var GenStateExecuting=\"executing\";var GenStateCompleted=\"completed\";var ContinueSentinel={};function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype;GeneratorFunction.prototype=Gp.constructor=GeneratorFunctionPrototype;GeneratorFunctionPrototype.constructor=GeneratorFunction;GeneratorFunction.displayName=\"GeneratorFunction\";runtime.isGeneratorFunction=function(genFun){var ctor=typeof genFun===\"function\"&&genFun.constructor;return ctor?ctor===GeneratorFunction||(ctor.displayName||ctor.name)===\"GeneratorFunction\":false};runtime.mark=function(genFun){genFun.__proto__=GeneratorFunctionPrototype;genFun.prototype=Object.create(Gp);return genFun};runtime.async=function(innerFn,outerFn,self,tryList){return new Promise(function(resolve,reject){var generator=wrap(innerFn,outerFn,self,tryList);var callNext=step.bind(generator.next);var callThrow=step.bind(generator[\"throw\"]);function step(arg){try{var info=this(arg);var value=info.value}catch(error){return reject(error)}if(info.done){resolve(value)}else{Promise.resolve(value).then(callNext,callThrow)}}callNext()})};function Generator(innerFn,outerFn,self,tryList){var generator=outerFn?Object.create(outerFn.prototype):this;var context=new Context(tryList);var state=GenStateSuspendedStart;function invoke(method,arg){if(state===GenStateExecuting){throw new Error(\"Generator is already running\")}if(state===GenStateCompleted){return doneResult()}while(true){var delegate=context.delegate;if(delegate){try{var info=delegate.iterator[method](arg);method=\"next\";arg=undefined}catch(uncaught){context.delegate=null;method=\"throw\";arg=uncaught;continue}if(info.done){context[delegate.resultName]=info.value;\ncontext.next=delegate.nextLoc}else{state=GenStateSuspendedYield;return info}context.delegate=null}if(method===\"next\"){if(state===GenStateSuspendedStart&&typeof arg!==\"undefined\"){throw new TypeError(\"attempt to send \"+JSON.stringify(arg)+\" to newborn generator\")}if(state===GenStateSuspendedYield){context.sent=arg}else{delete context.sent}}else if(method===\"throw\"){if(state===GenStateSuspendedStart){state=GenStateCompleted;throw arg}if(context.dispatchException(arg)){method=\"next\";arg=undefined}}else if(method===\"return\"){context.abrupt(\"return\",arg)}state=GenStateExecuting;try{var value=innerFn.call(self,context);state=context.done?GenStateCompleted:GenStateSuspendedYield;var info={value:value,done:context.done};if(value===ContinueSentinel){if(context.delegate&&method===\"next\"){arg=undefined}}else{return info}}catch(thrown){state=GenStateCompleted;if(method===\"next\"){context.dispatchException(thrown)}else{arg=thrown}}}}generator.next=invoke.bind(generator,\"next\");generator[\"throw\"]=invoke.bind(generator,\"throw\");generator[\"return\"]=invoke.bind(generator,\"return\");return generator}Gp[iteratorSymbol]=function(){return this};Gp.toString=function(){return\"[object Generator]\"};function pushTryEntry(triple){var entry={tryLoc:triple[0]};if(1 in triple){entry.catchLoc=triple[1]}if(2 in triple){entry.finallyLoc=triple[2]}this.tryEntries.push(entry)}function resetTryEntry(entry,i){var record=entry.completion||{};record.type=i===0?\"normal\":\"return\";delete record.arg;entry.completion=record}function Context(tryList){this.tryEntries=[{tryLoc:\"root\"}];tryList.forEach(pushTryEntry,this);this.reset()}runtime.keys=function(object){var keys=[];for(var key in object){keys.push(key)}keys.reverse();return function next(){while(keys.length){var key=keys.pop();if(key in object){next.value=key;next.done=false;return next}}next.done=true;return next}};function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod){return iteratorMethod.call(iterable)}if(typeof iterable.next===\"function\"){return iterable}if(!isNaN(iterable.length)){var i=-1;function next(){while(++i<iterable.length){if(hasOwn.call(iterable,i)){next.value=iterable[i];next.done=false;return next}}next.value=undefined;next.done=true;return next}return next.next=next}}return{next:doneResult}}runtime.values=values;function doneResult(){return{value:undefined,done:true}}Context.prototype={constructor:Context,reset:function(){this.prev=0;this.next=0;this.sent=undefined;this.done=false;this.delegate=null;this.tryEntries.forEach(resetTryEntry);for(var tempIndex=0,tempName;hasOwn.call(this,tempName=\"t\"+tempIndex)||tempIndex<20;++tempIndex){this[tempName]=null}},stop:function(){this.done=true;var rootEntry=this.tryEntries[0];var rootRecord=rootEntry.completion;if(rootRecord.type===\"throw\"){throw rootRecord.arg}return this.rval},dispatchException:function(exception){if(this.done){throw exception}var context=this;function handle(loc,caught){record.type=\"throw\";record.arg=exception;context.next=loc;return!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];var record=entry.completion;if(entry.tryLoc===\"root\"){return handle(\"end\")}if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,\"catchLoc\");var hasFinally=hasOwn.call(entry,\"finallyLoc\");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc){return handle(entry.catchLoc,true)}else if(this.prev<entry.finallyLoc){return handle(entry.finallyLoc)}}else if(hasCatch){if(this.prev<entry.catchLoc){return handle(entry.catchLoc,true)}}else if(hasFinally){if(this.prev<entry.finallyLoc){return handle(entry.finallyLoc)}}else{throw new Error(\"try statement without catch or finally\")}}}},_findFinallyEntry:function(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,\"finallyLoc\")&&(entry.finallyLoc===finallyLoc||this.prev<entry.finallyLoc)){return entry}}},abrupt:function(type,arg){var entry=this._findFinallyEntry();var record=entry?entry.completion:{};record.type=type;record.arg=arg;if(entry){this.next=entry.finallyLoc}else{this.complete(record)}return ContinueSentinel},complete:function(record){if(record.type===\"throw\"){throw record.arg}if(record.type===\"break\"||record.type===\"continue\"){this.next=record.arg}else if(record.type===\"return\"){this.rval=record.arg;this.next=\"end\"}return ContinueSentinel},finish:function(finallyLoc){var entry=this._findFinallyEntry(finallyLoc);return this.complete(entry.completion)},\"catch\":function(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if(record.type===\"throw\"){var thrown=record.arg;resetTryEntry(entry,i)}return thrown}}throw new Error(\"illegal catch attempt\")},delegateYield:function(iterable,resultName,nextLoc){this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc};return ContinueSentinel}}}()},{}]},{},[1]);","var transform = module.exports = require(\"./transformation/transform\");\n\ntransform.transform = transform;\n\ntransform.run = function (code, opts) {\n  opts = opts || {};\n  opts.sourceMap = \"inline\";\n  return new Function(transform(code, opts).code)();\n};\n\ntransform.load = function (url, callback, opts, hold) {\n  opts = opts || {};\n  opts.filename = opts.filename || url;\n\n  var xhr = global.ActiveXObject ? new global.ActiveXObject(\"Microsoft.XMLHTTP\") : new global.XMLHttpRequest();\n  xhr.open(\"GET\", url, true);\n  if (\"overrideMimeType\" in xhr) xhr.overrideMimeType(\"text/plain\");\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState !== 4) return;\n\n    var status = xhr.status;\n    if (status === 0 || status === 200) {\n      var param = [xhr.responseText, opts];\n      if (!hold) transform.run.apply(transform, param);\n      if (callback) callback(param);\n    } else {\n      throw new Error(\"Could not load \" + url);\n    }\n  };\n\n  xhr.send(null);\n};\n\nvar runScripts = function () {\n  var scripts = [];\n  var types   = [\"text/ecmascript-6\", \"text/6to5\"];\n  var index   = 0;\n\n  var exec = function () {\n    var param = scripts[index];\n    if (param instanceof Array) {\n      transform.run.apply(transform, param);\n      index++;\n      exec();\n    }\n  };\n\n  var run = function (script, i) {\n    var opts = {};\n\n    if (script.src) {\n      transform.load(script.src, function (param) {\n        scripts[i] = param;\n        exec();\n      }, opts, true);\n    } else {\n      opts.filename = \"embedded\";\n      scripts[i] = [script.innerHTML, opts];\n    }\n  };\n\n  var _scripts = global.document.getElementsByTagName(\"script\");\n  for (var i in _scripts) {\n    var _script = _scripts[i];\n    if (types.indexOf(_script.type) >= 0) scripts.push(_script);\n  }\n\n  for (i in scripts) {\n    run(scripts[i], i);\n  }\n\n  exec();\n};\n\nif (global.addEventListener) {\n  global.addEventListener(\"DOMContentLoaded\", runScripts, false);\n} else if (global.attachEvent) {\n  global.attachEvent(\"onload\", runScripts);\n}\n","module.exports = File;\n\nvar SHEBANG_REGEX = /^\\#\\!.*/;\n\nvar transform = require(\"./transformation/transform\");\nvar generate  = require(\"./generation/generator\");\nvar Scope     = require(\"./traverse/scope\");\nvar util      = require(\"./util\");\nvar t         = require(\"./types\");\nvar _         = require(\"lodash\");\n\nfunction File(opts) {\n  this.opts = File.normaliseOptions(opts);\n  this.uids = {};\n  this.ast  = {};\n}\n\nFile.declarations = [\n  \"inherits\",\n  \"prototype-properties\",\n  \"apply-constructor\",\n  \"tagged-template-literal\",\n  \"interop-require\",\n  \"to-array\",\n  \"sliced-to-array\",\n  \"object-without-properties\",\n  \"has-own\",\n  \"slice\"\n];\n\nFile.normaliseOptions = function (opts) {\n  opts = _.cloneDeep(opts || {});\n\n  _.defaults(opts, {\n    experimental: false,\n    playground:   false,\n    whitespace:   true,\n    moduleIds:    opts.amdModuleIds || false,\n    blacklist:    [],\n    whitelist:    [],\n    sourceMap:    false,\n    comments:     true,\n    filename:     \"unknown\",\n    modules:      \"common\",\n    runtime:      false,\n    code:         true,\n    ast:          true\n  });\n\n  // normalise windows path separators to unix\n  opts.filename = opts.filename.replace(/\\\\/g, \"/\");\n\n  opts.blacklist = util.arrayify(opts.blacklist);\n  opts.whitelist = util.arrayify(opts.whitelist);\n\n  _.defaults(opts, {\n    moduleRoot: opts.sourceRoot\n  });\n\n  _.defaults(opts, {\n    sourceRoot: opts.moduleRoot\n  });\n\n  _.defaults(opts, {\n    filenameRelative: opts.filename\n  });\n\n  _.defaults(opts, {\n    sourceFileName: opts.filenameRelative,\n    sourceMapName:  opts.filenameRelative\n  });\n\n  if (opts.runtime === true) {\n    opts.runtime = \"to5Runtime\";\n  }\n\n  if (opts.playground) {\n    opts.experimental = true;\n  }\n\n  transform._ensureTransformerNames(\"blacklist\", opts.blacklist);\n  transform._ensureTransformerNames(\"whitelist\", opts.whitelist);\n\n  return opts;\n};\n\nFile.prototype.toArray = function (node, i) {\n  if (t.isArrayExpression(node)) {\n    return node;\n  } else if (t.isIdentifier(node) && node.name === \"arguments\") {\n    return t.callExpression(t.memberExpression(this.addDeclaration(\"slice\"), t.identifier(\"call\")), [node]);\n  } else {\n    var declarationName = \"to-array\";\n    var args = [node];\n    if (i) {\n      args.push(t.literal(i));\n      declarationName = \"sliced-to-array\";\n    }\n    return t.callExpression(this.addDeclaration(declarationName), args);\n  }\n};\n\nFile.prototype.getModuleFormatter = function (type) {\n  var ModuleFormatter = _.isFunction(type) ? type : transform.moduleFormatters[type];\n\n  if (!ModuleFormatter) {\n    var loc = util.resolve(type);\n    if (loc) ModuleFormatter = require(loc);\n  }\n\n  if (!ModuleFormatter) {\n    throw new ReferenceError(\"Unknown module formatter type \" + JSON.stringify(type));\n  }\n\n  return new ModuleFormatter(this);\n};\n\nFile.prototype.parseShebang = function (code) {\n  var shebangMatch = code.match(SHEBANG_REGEX);\n  if (shebangMatch) {\n    this.shebang = shebangMatch[0];\n\n    // remove shebang\n    code = code.replace(SHEBANG_REGEX, \"\");\n  }\n\n  return code;\n};\n\nFile.prototype.addDeclaration = function (name) {\n  if (!_.contains(File.declarations, name)) {\n    throw new ReferenceError(\"unknown declaration \" + name);\n  }\n\n  var program = this.ast.program;\n\n  var declar = program._declarations && program._declarations[name];\n  if (declar) return declar.id;\n\n  var ref;\n  var runtimeNamespace = this.opts.runtime;\n  if (runtimeNamespace) {\n    name = t.identifier(t.toIdentifier(name));\n    return t.memberExpression(t.identifier(runtimeNamespace), name);\n  } else {\n    ref = util.template(name);\n  }\n\n  var uid = this.generateUidIdentifier(name);\n  this.scope.push({\n    key: name,\n    id: uid,\n    init: ref\n  });\n  return uid;\n};\n\nFile.prototype.errorWithNode = function (node, msg, Error) {\n  Error = Error || SyntaxError;\n\n  var loc = node.loc.start;\n  var err = new Error(\"Line \" + loc.line + \": \" + msg);\n  err.loc = loc;\n  return err;\n};\n\nFile.prototype.addCode = function (code) {\n  code = (code || \"\") + \"\";\n  this.code = code;\n  return this.parseShebang(code);\n};\n\nFile.prototype.parse = function (code) {\n  var self = this;\n\n  code = this.addCode(code);\n\n  return util.parse(this.opts, code, function (tree) {\n    self.transform(tree);\n    return self.generate();\n  });\n};\n\nFile.prototype.transform = function (ast) {\n  this.ast = ast;\n  this.scope = new Scope(ast.program);\n  this.moduleFormatter = this.getModuleFormatter(this.opts.modules);\n\n  var self = this;\n\n  _.each(transform.transformers, function (transformer) {\n    transformer.transform(self);\n  });\n};\n\nFile.prototype.generate = function () {\n  var opts = this.opts;\n  var ast  = this.ast;\n\n  var result = {\n    code: \"\",\n    map: null,\n    ast: null\n  };\n\n  if (opts.ast) result.ast = ast;\n  if (!opts.code) return result;\n\n  var _result = generate(ast, opts, this.code);\n  result.code = _result.code;\n  result.map  = _result.map;\n\n  if (this.shebang) {\n    // add back shebang\n    result.code = this.shebang + \"\\n\" + result.code;\n  }\n\n  if (opts.sourceMap === \"inline\") {\n    result.code += \"\\n\" + util.sourceMapToComment(result.map);\n  }\n\n  return result;\n};\n\nFile.prototype.generateUid = function (name, scope) {\n  name = t.toIdentifier(name);\n\n  scope = scope || this.scope;\n\n  var uid;\n  do {\n    uid = this._generateUid(name);\n  } while (scope.has(uid));\n  return uid;\n};\n\nFile.prototype.generateUidIdentifier = function (name, scope) {\n  return t.identifier(this.generateUid(name, scope));\n};\n\nFile.prototype._generateUid = function (name) {\n  var uids = this.uids;\n  var i = uids[name] || 1;\n\n  var id = name;\n  if (i > 1) id += i;\n  uids[name] = i + 1;\n  return \"_\" + id;\n};\n","module.exports = Buffer;\n\nvar util = require(\"../util\");\nvar _    = require(\"lodash\");\n\nfunction Buffer(position, format) {\n  this.position = position;\n  this._indent  = format.indent.base;\n  this.format   = format;\n  this.buf      = \"\";\n}\n\nBuffer.prototype.get = function () {\n  return util.trimRight(this.buf);\n};\n\nBuffer.prototype.getIndent = function () {\n  if (this.format.compact) {\n    return \"\";\n  } else {\n    return util.repeat(this._indent, this.format.indent.style);\n  }\n};\n\nBuffer.prototype.indentSize = function () {\n  return this.getIndent().length;\n};\n\nBuffer.prototype.indent = function () {\n  this._indent++;\n};\n\nBuffer.prototype.dedent = function () {\n  this._indent--;\n};\n\nBuffer.prototype.semicolon = function () {\n  this.push(\";\");\n};\n\nBuffer.prototype.ensureSemicolon = function () {\n  if (!this.isLast(\";\")) this.semicolon();\n};\n\nBuffer.prototype.rightBrace = function () {\n  this.newline(true);\n  this.push(\"}\");\n};\n\nBuffer.prototype.keyword = function (name) {\n  this.push(name);\n  this.push(\" \");\n};\n\nBuffer.prototype.space = function () {\n  if (this.buf && !this.isLast([\" \", \"\\n\"])) {\n    this.push(\" \");\n  }\n};\n\nBuffer.prototype.removeLast = function (cha) {\n  if (!this.isLast(cha)) return;\n\n  this.buf = this.buf.slice(0, -1);\n  this.position.unshift(cha);\n};\n\nBuffer.prototype.newline = function (i, removeLast) {\n  if (this.format.compact) return;\n\n  if (_.isBoolean(i)) {\n    removeLast = i;\n    i = null;\n  }\n\n  if (_.isNumber(i)) {\n    if (this.endsWith(\"{\\n\")) i--;\n    if (this.endsWith(util.repeat(i, \"\\n\"))) return;\n\n    var self = this;\n    _.times(i, function () {\n      self.newline(null, removeLast);\n    });\n    return;\n  }\n\n  if (removeLast && this.isLast(\"\\n\")) this.removeLast(\"\\n\");\n\n  this.removeLast(\" \");\n\n  // remove whitespace if last character was a newline\n  this.buf = this.buf.replace(/\\n +$/, \"\\n\");\n\n  this._push(\"\\n\");\n};\n\nBuffer.prototype.push = function (str, noIndent) {\n  if (this._indent && !noIndent && str !== \"\\n\") {\n    // we have an indent level and we aren't pushing a newline\n    var indent = this.getIndent();\n\n    // replace all newlines with newlines with the indentation\n    str = str.replace(/\\n/g, \"\\n\" + indent);\n\n    // we've got a newline before us so prepend on the indentation\n    if (this.isLast(\"\\n\")) str = indent + str;\n  }\n\n  this._push(str);\n};\n\nBuffer.prototype._push = function (str) {\n  this.position.push(str);\n  this.buf += str;\n};\n\nBuffer.prototype.endsWith = function (str) {\n  return this.buf.slice(-str.length) === str;\n};\n\nBuffer.prototype.isLast = function (cha, trimRight) {\n  var buf = this.buf;\n  if (trimRight) buf = util.trimRight(buf);\n\n  var chars = [].concat(cha);\n  return _.contains(chars, _.last(buf));\n};\n","module.exports = function (ast, opts, code) {\n  var gen = new CodeGenerator(ast, opts, code);\n  return gen.generate();\n};\n\nmodule.exports.CodeGenerator = CodeGenerator;\n\nvar Whitespace = require(\"./whitespace\");\nvar SourceMap  = require(\"./source-map\");\nvar Position   = require(\"./position\");\nvar Buffer     = require(\"./buffer\");\nvar util       = require(\"../util\");\nvar n          = require(\"./node\");\nvar t          = require(\"../types\");\nvar _          = require(\"lodash\");\n\nfunction CodeGenerator(ast, opts, code) {\n  opts = opts || {};\n\n  this.comments = ast.comments || [];\n  this.tokens   = ast.tokens || [];\n  this.format   = CodeGenerator.normaliseOptions(opts);\n  this.ast      = ast;\n\n  this.whitespace = new Whitespace(this.tokens, this.comments);\n  this.position   = new Position;\n  this.map        = new SourceMap(this.position, opts, code);\n  this.buffer     = new Buffer(this.position, this.format);\n}\n\n_.each(Buffer.prototype, function (fn, key) {\n  CodeGenerator.prototype[key] = function () {\n    return fn.apply(this.buffer, arguments);\n  };\n});\n\nCodeGenerator.normaliseOptions = function (opts) {\n  return _.merge({\n    parentheses: true,\n    comments: opts.comments == null || opts.comments,\n    compact: false,\n    indent: {\n      adjustMultilineComment: true,\n      style: \"  \",\n      base: 0\n    }\n  }, opts.format || {});\n};\n\nCodeGenerator.generators = {\n  templateLiterals: require(\"./generators/template-literals\"),\n  comprehensions:   require(\"./generators/comprehensions\"),\n  expressions:      require(\"./generators/expressions\"),\n  statements:       require(\"./generators/statements\"),\n  playground:       require(\"./generators/playground\"),\n  classes:          require(\"./generators/classes\"),\n  methods:          require(\"./generators/methods\"),\n  modules:          require(\"./generators/modules\"),\n  types:            require(\"./generators/types\"),\n  flow:             require(\"./generators/flow\"),\n  base:             require(\"./generators/base\"),\n  jsx:              require(\"./generators/jsx\")\n};\n\n_.each(CodeGenerator.generators, function (generator) {\n  _.extend(CodeGenerator.prototype, generator);\n});\n\nCodeGenerator.prototype.generate = function () {\n  var ast = this.ast;\n\n  this.print(ast);\n\n  var comments = [];\n  _.each(ast.comments, function (comment) {\n    if (!comment._displayed) comments.push(comment);\n  });\n  this._printComments(comments);\n\n  return {\n    map:  this.map.get(),\n    code: this.buffer.get()\n  };\n};\n\nCodeGenerator.prototype.buildPrint = function (parent) {\n  var self = this;\n\n  var print = function (node, opts) {\n    return self.print(node, parent, opts);\n  };\n\n  print.sequence = function (nodes, opts) {\n    opts = opts || {};\n    opts.statement = true;\n    return self.printJoin(print, nodes, opts);\n  };\n\n  print.join = function (nodes, opts) {\n    return self.printJoin(print, nodes, opts);\n  };\n\n  print.block = function (node) {\n    return self.printBlock(print, node);\n  };\n\n  print.indentOnComments = function (node) {\n    return self.printAndIndentOnComments(print, node);\n  };\n\n  return print;\n};\n\nCodeGenerator.prototype.print = function (node, parent, opts) {\n  if (!node) return \"\";\n\n  var self = this;\n  opts = opts || {};\n\n  var newline = function (leading) {\n    if (!opts.statement && !n.isUserWhitespacable(node, parent)) {\n      return;\n    }\n\n    var lines = 0;\n\n    if (node.start != null) {\n      // user node\n      if (leading) {\n        lines = self.whitespace.getNewlinesBefore(node);\n      } else {\n        lines = self.whitespace.getNewlinesAfter(node);\n      }\n    } else {\n      // generated node\n      if (!leading) lines++; // always include at least a single line after\n\n      var needs = n.needsWhitespaceAfter;\n      if (leading) needs = n.needsWhitespaceBefore;\n      lines += needs(node, parent);\n\n      // generated nodes can't add starting file whitespace\n      if (!self.buffer.get()) lines = 0;\n    }\n\n    self.newline(lines);\n  };\n\n  if (this[node.type]) {\n    this.printLeadingComments(node, parent);\n\n    newline(true);\n\n    if (opts.before) opts.before();\n    this.map.mark(node, \"start\");\n\n    // only compute if this node needs parens if our parent has been changed\n    // since acorn would've wrapped us in a ParanthesizedExpression\n    var needsParens = n.needsParens(node, parent);\n    if (needsParens) this.push(\"(\");\n\n    this[node.type](node, this.buildPrint(node), parent);\n\n    if (needsParens) this.push(\")\");\n\n    this.map.mark(node, \"end\");\n    if (opts.after) opts.after();\n\n    newline(false);\n\n    this.printTrailingComments(node, parent);\n  } else {\n    throw new ReferenceError(\"unknown node \" + node.type);\n  }\n};\n\nCodeGenerator.prototype.printJoin = function (print, nodes, opts) {\n  if (!nodes || !nodes.length) return;\n\n  opts = opts || {};\n\n  var self = this;\n  var len  = nodes.length;\n\n  if (opts.indent) self.indent();\n\n  _.each(nodes, function (node, i) {\n    print(node, {\n      statement: opts.statement,\n      after: function () {\n        if (opts.iterator) {\n          opts.iterator(node, i);\n        }\n\n        if (opts.separator && i < len - 1) {\n          self.push(opts.separator);\n        }\n      }\n    });\n  });\n\n  if (opts.indent) self.dedent();\n};\n\nCodeGenerator.prototype.printAndIndentOnComments = function (print, node) {\n  var indent = !!node.leadingComments;\n  if (indent) this.indent();\n  print(node);\n  if (indent) this.dedent();\n};\n\nCodeGenerator.prototype.printBlock = function (print, node) {\n  if (t.isEmptyStatement(node)) {\n    this.semicolon();\n  } else {\n    this.push(\" \");\n    print(node);\n  }\n};\n\nCodeGenerator.prototype.generateComment = function (comment) {\n  var val = comment.value;\n  if (comment.type === \"Line\") {\n    val = \"//\" + val;\n  } else {\n    val = \"/*\" + val + \"*/\";\n  }\n  return val;\n};\n\nCodeGenerator.prototype.printTrailingComments = function (node, parent) {\n  this._printComments(this.getComments(\"trailingComments\", node, parent));\n};\n\nCodeGenerator.prototype.printLeadingComments = function (node, parent) {\n  this._printComments(this.getComments(\"leadingComments\", node, parent));\n};\n\nCodeGenerator.prototype.getComments = function (key, node, parent) {\n  if (t.isExpressionStatement(parent)) {\n    return [];\n  }\n\n  var comments = [];\n  var nodes    = [node];\n  var self     = this;\n\n  if (t.isExpressionStatement(node)) {\n    nodes.push(node.argument);\n  }\n\n  _.each(nodes, function (node) {\n    comments = comments.concat(self._getComments(key, node));\n  });\n\n  return comments;\n};\n\nCodeGenerator.prototype._getComments = function (key, node) {\n  return (node && node[key]) || [];\n};\n\nCodeGenerator.prototype._printComments = function (comments) {\n  if (this.format.compact) return;\n  if (!this.format.comments) return;\n  if (!comments || !comments.length) return;\n\n  var self = this;\n\n  _.each(comments, function (comment) {\n    // find the original comment in the ast and set it as displayed\n    _.each(self.ast.comments, function (origComment) {\n      if (origComment.start === comment.start) {\n        origComment._displayed = true;\n        return false;\n      }\n    });\n\n    // whitespace before\n    self.newline(self.whitespace.getNewlinesBefore(comment));\n\n    var column = self.position.column;\n    var val    = self.generateComment(comment);\n\n    if (column && !self.isLast([\"\\n\", \" \", \"[\", \"{\"])) {\n      self._push(\" \");\n      column++;\n    }\n\n    //\n\n    if (comment.type === \"Block\" && self.format.indent.adjustMultilineComment) {\n      var offset = comment.loc.start.column;\n      if (offset) {\n        var newlineRegex = new RegExp(\"\\\\n\\\\s{1,\" + offset + \"}\", \"g\");\n        val = val.replace(newlineRegex, \"\\n\");\n      }\n\n      var indent = Math.max(self.indentSize(), column);\n      val = val.replace(/\\n/g, \"\\n\" + util.repeat(indent));\n    }\n\n    if (column === 0) {\n      val = self.getIndent() + val;\n    }\n\n    //\n\n    self._push(val);\n\n    // whitespace after\n    self.newline(self.whitespace.getNewlinesAfter(comment));\n  });\n};\n","exports.File = function (node, print) {\n  print(node.program);\n};\n\nexports.Program = function (node, print) {\n  print.sequence(node.body);\n};\n\nexports.BlockStatement = function (node, print) {\n  if (node.body.length === 0) {\n    this.push(\"{}\");\n  } else {\n    this.push(\"{\");\n    this.newline();\n    print.sequence(node.body, { indent: true });\n    this.removeLast(\"\\n\");\n    this.rightBrace();\n  }\n};\n","exports.ClassExpression =\nexports.ClassDeclaration = function (node, print) {\n  this.push(\"class\");\n\n  if (node.id) {\n    this.space();\n    print(node.id);\n  }\n\n  if (node.superClass) {\n    this.push(\" extends \");\n    print(node.superClass);\n  }\n\n  this.space();\n  print(node.body);\n};\n\nexports.ClassBody = function (node, print) {\n  if (node.body.length === 0) {\n    this.push(\"{}\");\n  } else {\n    this.push(\"{\");\n    this.newline();\n\n    this.indent();\n    print.sequence(node.body);\n    this.dedent();\n\n    this.rightBrace();\n  }\n};\n\nexports.MethodDefinition = function (node, print) {\n  if (node.static) {\n    this.push(\"static \");\n  }\n\n  this._method(node, print);\n};\n","exports.ComprehensionBlock = function (node, print) {\n  this.keyword(\"for\");\n  this.push(\"(\");\n  print(node.left);\n  this.push(\" of \");\n  print(node.right);\n  this.push(\")\");\n};\n\nexports.ComprehensionExpression = function (node, print) {\n  this.push(node.generator ? \"(\" : \"[\");\n\n  print.join(node.blocks, { separator: \" \" });\n  this.space();\n\n  if (node.filter) {\n    this.keyword(\"if\");\n    this.push(\"(\");\n    print(node.filter);\n    this.push(\")\");\n    this.space();\n  }\n\n  print(node.body);\n\n  this.push(node.generator ? \")\" : \"]\");\n};\n","var util = require(\"../../util\");\nvar t    = require(\"../../types\");\n\nexports.UnaryExpression = function (node, print) {\n  var hasSpace = /[a-z]$/.test(node.operator);\n  var arg = node.argument;\n\n  if (t.isUpdateExpression(arg) || t.isUnaryExpression(arg)) {\n    hasSpace = true;\n  }\n\n  if (t.isUnaryExpression(arg) && arg.operator === \"!\") {\n    hasSpace = false;\n  }\n\n  this.push(node.operator);\n  if (hasSpace) this.space();\n  print(node.argument);\n};\n\nexports.UpdateExpression = function (node, print) {\n  if (node.prefix) {\n    this.push(node.operator);\n    print(node.argument);\n  } else {\n    print(node.argument);\n    this.push(node.operator);\n  }\n};\n\nexports.ConditionalExpression = function (node, print) {\n  print(node.test);\n  this.push(\" ? \");\n  print(node.consequent);\n  this.push(\" : \");\n  print(node.alternate);\n};\n\nexports.NewExpression = function (node, print) {\n  this.push(\"new \");\n  print(node.callee);\n  if (node.arguments.length || this.format.parentheses) {\n    this.push(\"(\");\n    print.join(node.arguments, { separator: \", \" });\n    this.push(\")\");\n  }\n};\n\nexports.SequenceExpression = function (node, print) {\n  print.join(node.expressions, { separator: \", \" });\n};\n\nexports.ThisExpression = function () {\n  this.push(\"this\");\n};\n\nexports.CallExpression = function (node, print) {\n  print(node.callee);\n  this.push(\"(\");\n  print.join(node.arguments, { separator: \", \" });\n  this.push(\")\");\n};\n\nvar buildYieldAwait = function (keyword) {\n  return function (node, print) {\n    this.push(keyword);\n    if (node.delegate) this.push(\"*\");\n    if (node.argument) {\n      this.space();\n      print(node.argument);\n    }\n  };\n};\n\nexports.YieldExpression = buildYieldAwait(\"yield\");\nexports.AwaitExpression = buildYieldAwait(\"await\");\n\nexports.EmptyStatement = function () {\n  this.semicolon();\n};\n\nexports.ExpressionStatement = function (node, print) {\n  print(node.expression);\n  this.semicolon();\n};\n\nexports.BinaryExpression =\nexports.LogicalExpression =\nexports.AssignmentExpression = function (node, print) {\n  print(node.left);\n  this.push(\" \" + node.operator + \" \");\n  print(node.right);\n};\n\nvar SCIENTIFIC_NOTATION = /e/i;\n\nexports.MemberExpression = function (node, print) {\n  var obj = node.object;\n  print(obj);\n\n  if (node.computed) {\n    this.push(\"[\");\n    print(node.property);\n    this.push(\"]\");\n  } else {\n    // 5..toFixed(2);\n    if (t.isLiteral(obj) && util.isInteger(obj.value) && !SCIENTIFIC_NOTATION.test(obj.value.toString())) {\n      this.push(\".\");\n    }\n\n    this.push(\".\");\n    print(node.property);\n  }\n};\n","exports.ClassProperty = function () {\n  throw new Error(\"not implemented\");\n};\n","var t = require(\"../../types\");\nvar _ = require(\"lodash\");\n\nexports.XJSAttribute = function (node, print) {\n  print(node.name);\n  if (node.value) {\n    this.push(\"=\");\n    print(node.value);\n  }\n};\n\nexports.XJSIdentifier = function (node) {\n  this.push(node.name);\n};\n\nexports.XJSNamespacedName = function (node, print) {\n  print(node.namespace);\n  this.push(\":\");\n  print(node.name);\n};\n\nexports.XJSMemberExpression = function (node, print) {\n  print(node.object);\n  this.push(\".\");\n  print(node.property);\n};\n\nexports.XJSSpreadAttribute = function (node, print) {\n  this.push(\"{...\");\n  print(node.argument);\n  this.push(\"}\");\n};\n\nexports.XJSExpressionContainer = function (node, print) {\n  this.push(\"{\");\n  print(node.expression);\n  this.push(\"}\");\n};\n\nexports.XJSElement = function (node, print) {\n  var self = this;\n\n  var open = node.openingElement;\n  print(open);\n  if (open.selfClosing) return;\n\n  this.indent();\n  _.each(node.children, function (child) {\n    if (t.isLiteral(child)) {\n      self.push(child.value);\n    } else {\n      print(child);\n    }\n  });\n  this.dedent();\n\n  print(node.closingElement);\n};\n\nexports.XJSOpeningElement = function (node, print) {\n  this.push(\"<\");\n  print(node.name);\n  if (node.attributes.length > 0) {\n    this.space();\n    print.join(node.attributes, { separator: \" \" });\n  }\n  this.push(node.selfClosing ? \" />\" : \">\");\n};\n\nexports.XJSClosingElement = function (node, print) {\n  this.push(\"</\");\n  print(node.name);\n  this.push(\">\");\n};\n\nexports.XJSEmptyExpression = function () {\n\n};\n","var t = require(\"../../types\");\n\nexports._params = function (node, print) {\n  var self = this;\n\n  this.push(\"(\");\n\n  print.join(node.params, {\n    separator: \", \",\n    iterator: function (param, i) {\n      var def = node.defaults && node.defaults[i];\n      if (def) {\n        self.push(\" = \");\n        print(def);\n      }\n    }\n  });\n\n  if (node.rest) {\n    if (node.params.length) {\n      this.push(\", \");\n    }\n\n    this.push(\"...\");\n    print(node.rest);\n  }\n\n  this.push(\")\");\n};\n\nexports._method = function (node, print) {\n  var value = node.value;\n  var kind  = node.kind;\n  var key   = node.key;\n\n  if (!kind || kind === \"init\") {\n    if (value.generator) {\n      this.push(\"*\");\n    }\n  } else {\n    this.push(kind + \" \");\n  }\n\n  if (value.async) this.push(\"async \");\n\n  if (node.computed) {\n    this.push(\"[\");\n    print(key);\n    this.push(\"]\");\n  } else {\n    print(key);\n  }\n\n  this._params(value, print);\n  this.space();\n  print(value.body);\n};\n\nexports.FunctionDeclaration =\nexports.FunctionExpression = function (node, print) {\n  if (node.async) this.push(\"async \");\n  this.push(\"function\");\n  if (node.generator) this.push(\"*\");\n  this.space();\n  if (node.id) print(node.id);\n  this._params(node, print);\n  this.space();\n  print(node.body);\n};\n\nexports.ArrowFunctionExpression = function (node, print) {\n  if (node.async) this.push(\"async \");\n\n  if (node.params.length === 1 && !node.defaults.length && !node.rest && t.isIdentifier(node.params[0])) {\n    print(node.params[0]);\n  } else {\n    this._params(node, print);\n  }\n\n  this.push(\" => \");\n  print(node.body);\n};\n","var t = require(\"../../types\");\nvar _ = require(\"lodash\");\n\nexports.ImportSpecifier = function (node, print) {\n  if (node.id && node.id.name === \"default\") {\n    print(node.name);\n  } else {\n    return exports.ExportSpecifier.apply(this, arguments);\n  }\n};\n\nexports.ExportSpecifier = function (node, print) {\n  print(node.id);\n  if (node.name) {\n    this.push(\" as \");\n    print(node.name);\n  }\n};\n\nexports.ExportBatchSpecifier = function () {\n  this.push(\"*\");\n};\n\nexports.ExportDeclaration = function (node, print) {\n  this.push(\"export \");\n\n  var specifiers = node.specifiers;\n\n  if (node.default) {\n    this.push(\"default \");\n  }\n\n  if (node.declaration) {\n    print(node.declaration);\n    if (t.isStatement(node.declaration)) return;\n  } else {\n    if (specifiers.length === 1 && t.isExportBatchSpecifier(specifiers[0])) {\n      print(specifiers[0]);\n    } else {\n      this.push(\"{\");\n      if (specifiers.length) {\n        this.space();\n        print.join(specifiers, { separator: \", \" });\n        this.space();\n      }\n      this.push(\"}\");\n    }\n\n    if (node.source) {\n      this.push(\" from \");\n      print(node.source);\n    }\n  }\n\n  this.ensureSemicolon();\n};\n\nexports.ImportDeclaration = function (node, print) {\n  var self = this;\n\n  this.push(\"import \");\n\n  var specfiers = node.specifiers;\n  if (specfiers && specfiers.length) {\n    var foundImportSpecifier = false;\n\n    _.each(node.specifiers, function (spec, i) {\n      if (+i > 0) {\n        self.push(\", \");\n      }\n\n      var isDefault = spec.id && spec.id.name === \"default\";\n\n      if (!isDefault && spec.type !== \"ImportBatchSpecifier\" && !foundImportSpecifier) {\n        foundImportSpecifier = true;\n        self.push(\"{ \");\n      }\n\n      print(spec);\n    });\n\n    if (foundImportSpecifier) {\n      this.push(\" }\");\n    }\n\n    this.push(\" from \");\n  }\n\n  print(node.source);\n  this.semicolon();\n};\n\nexports.ImportBatchSpecifier = function (node, print) {\n  this.push(\"* as \");\n  print(node.name);\n};\n","var _ = require(\"lodash\");\n\n_.each([\"BindMemberExpression\", \"BindFunctionExpression\"], function (type) {\n  exports[type] = function () {\n    throw new ReferenceError(\"Trying to render non-standard playground node \" + JSON.stringify(type));\n  };\n});\n","var t = require(\"../../types\");\n\nexports.WithStatement = function (node, print) {\n  this.keyword(\"with\");\n  this.push(\"(\");\n  print(node.object);\n  this.push(\")\");\n  print.block(node.body);\n};\n\nexports.IfStatement = function (node, print) {\n  this.keyword(\"if\");\n  this.push(\"(\");\n  print(node.test);\n  this.push(\") \");\n\n  print.indentOnComments(node.consequent);\n\n  if (node.alternate) {\n    if (this.isLast(\"}\")) this.space();\n    this.keyword(\"else\");\n    print.indentOnComments(node.alternate);\n  }\n};\n\nexports.ForStatement = function (node, print) {\n  this.keyword(\"for\");\n  this.push(\"(\");\n\n  print(node.init);\n  this.push(\";\");\n\n  if (node.test) {\n    this.space();\n    print(node.test);\n  }\n  this.push(\";\");\n\n  if (node.update) {\n    this.space();\n    print(node.update);\n  }\n\n  this.push(\")\");\n  print.block(node.body);\n};\n\nexports.WhileStatement = function (node, print) {\n  this.keyword(\"while\");\n  this.push(\"(\");\n  print(node.test);\n  this.push(\")\");\n  print.block(node.body);\n};\n\nvar buildForXStatement = function (op) {\n  return function (node, print) {\n    this.keyword(\"for\");\n    this.push(\"(\");\n    print(node.left);\n    this.push(\" \" + op + \" \");\n    print(node.right);\n    this.push(\")\");\n    print.block(node.body);\n  };\n};\n\nexports.ForInStatement = buildForXStatement(\"in\");\nexports.ForOfStatement = buildForXStatement(\"of\");\n\nexports.DoWhileStatement = function (node, print) {\n  this.keyword(\"do\");\n  print(node.body);\n  this.space();\n  this.keyword(\"while\");\n  this.push(\"(\");\n  print(node.test);\n  this.push(\");\");\n};\n\nvar buildLabelStatement = function (prefix, key) {\n  return function (node, print) {\n    this.push(prefix);\n\n    var label = node[key || \"label\"];\n    if (label) {\n      this.space();\n      print(label);\n    }\n\n    this.semicolon();\n  };\n};\n\nexports.ContinueStatement = buildLabelStatement(\"continue\");\nexports.ReturnStatement   = buildLabelStatement(\"return\", \"argument\");\nexports.BreakStatement    = buildLabelStatement(\"break\");\n\nexports.LabeledStatement = function (node, print) {\n  print(node.label);\n  this.push(\": \");\n  print(node.body);\n};\n\nexports.TryStatement = function (node, print) {\n  this.keyword(\"try\");\n  print(node.block);\n  this.space();\n  print(node.handler);\n  if (node.finalizer) {\n    this.space();\n    this.push(\"finally \");\n    print(node.finalizer);\n  }\n};\n\nexports.CatchClause = function (node, print) {\n  this.keyword(\"catch\");\n  this.push(\"(\");\n  print(node.param);\n  this.push(\") \");\n  print(node.body);\n};\n\nexports.ThrowStatement = function (node, print) {\n  this.push(\"throw \");\n  print(node.argument);\n  this.semicolon();\n};\n\nexports.SwitchStatement = function (node, print) {\n  this.keyword(\"switch\");\n  this.push(\"(\");\n  print(node.discriminant);\n  this.push(\") {\");\n  print.sequence(node.cases, { indent: true });\n  this.push(\"}\");\n};\n\nexports.SwitchCase = function (node, print) {\n  if (node.test) {\n    this.push(\"case \");\n    print(node.test);\n    this.push(\":\");\n  } else {\n    this.push(\"default:\");\n  }\n\n  this.newline();\n  print.sequence(node.consequent, { indent: true });\n};\n\nexports.DebuggerStatement = function () {\n  this.push(\"debugger;\");\n};\n\nexports.VariableDeclaration = function (node, print, parent) {\n  this.push(node.kind + \" \");\n\n  print.join(node.declarations, { separator: \", \" });\n\n  if (!t.isFor(parent)) {\n    this.semicolon();\n  }\n};\n\nexports.PrivateDeclaration = function (node, print) {\n  this.push(\"private \");\n  print.join(node.declarations, { separator: \", \" });\n  this.semicolon();\n};\n\nexports.VariableDeclarator = function (node, print) {\n  if (node.init) {\n    print(node.id);\n    this.push(\" = \");\n    print(node.init);\n  } else {\n    print(node.id);\n  }\n};\n","var _ = require(\"lodash\");\n\nexports.TaggedTemplateExpression = function (node, print) {\n  print(node.tag);\n  print(node.quasi);\n};\n\nexports.TemplateElement = function (node) {\n  this._push(node.value.raw);\n};\n\nexports.TemplateLiteral = function (node, print) {\n  this.push(\"`\");\n\n  var quasis = node.quasis;\n  var self   = this;\n  var len    = quasis.length;\n\n  _.each(quasis, function (quasi, i) {\n    print(quasi);\n\n    if (i + 1 < len) {\n      self.push(\"${ \");\n      print(node.expressions[i]);\n      self.push(\" }\");\n    }\n  });\n\n  this._push(\"`\");\n};\n","var _ = require(\"lodash\");\n\nexports.Identifier = function (node) {\n  this.push(node.name);\n};\n\nexports.SpreadElement =\nexports.SpreadProperty = function (node, print) {\n  this.push(\"...\");\n  print(node.argument);\n};\n\nexports.VirtualPropertyExpression = function (node, print) {\n  print(node.object);\n  this.push(\"::\");\n  print(node.property);\n};\n\nexports.ObjectExpression =\nexports.ObjectPattern = function (node, print) {\n  var props = node.properties;\n\n  if (props.length) {\n    this.push(\"{\");\n    this.space();\n\n    print.join(props, { separator: \", \", indent: true });\n\n    this.space();\n    this.push(\"}\");\n  } else {\n    this.push(\"{}\");\n  }\n};\n\nexports.Property = function (node, print) {\n  if (node.method || node.kind === \"get\" || node.kind === \"set\") {\n    this._method(node, print);\n  } else {\n    if (node.computed) {\n      this.push(\"[\");\n      print(node.key);\n      this.push(\"]\");\n    } else {\n      print(node.key);\n      if (node.shorthand) return;\n    }\n\n    this.push(\": \");\n    print(node.value);\n  }\n};\n\nexports.ArrayExpression =\nexports.ArrayPattern = function (node, print) {\n  var elems = node.elements;\n  var self  = this;\n  var len   = elems.length;\n\n  this.push(\"[\");\n\n  _.each(elems, function (elem, i) {\n    if (!elem) {\n      // If the array expression ends with a hole, that hole\n      // will be ignored by the interpreter, but if it ends with\n      // two (or more) holes, we need to write out two (or more)\n      // commas so that the resulting code is interpreted with\n      // both (all) of the holes.\n      self.push(\",\");\n    } else {\n      if (i > 0) self.push(\" \");\n      print(elem);\n      if (i < len - 1) self.push(\",\");\n    }\n  });\n\n  this.push(\"]\");\n};\n\nexports.Literal = function (node) {\n  var val  = node.value;\n  var type = typeof val;\n\n  if (type === \"string\") {\n    val = JSON.stringify(val);\n\n    // escape illegal js but valid json unicode characters\n    val = val.replace(/[\\u000A\\u000D\\u2028\\u2029]/g, function (c) {\n      return \"\\\\u\" + (\"0000\" + c.charCodeAt(0).toString(16)).slice(-4);\n    });\n\n    this.push(val);\n  } else if (type === \"boolean\" || type === \"number\") {\n    this.push(JSON.stringify(val));\n  } else if (node.regex) {\n    this.push(\"/\" + node.regex.pattern + \"/\" + node.regex.flags);\n  } else if (val === null) {\n    this.push(\"null\");\n  }\n};\n","module.exports = Node;\n\nvar whitespace = require(\"./whitespace\");\nvar parens     = require(\"./parentheses\");\nvar t          = require(\"../../types\");\nvar _          = require(\"lodash\");\n\nvar find = function (obj, node, parent) {\n  var result;\n\n  _.each(obj, function (fn, type) {\n    if (t[\"is\" + type](node)) {\n      result = fn(node, parent);\n      if (result != null) return false;\n    }\n  });\n\n  return result;\n};\n\nfunction Node(node, parent) {\n  this.parent = parent;\n  this.node   = node;\n}\n\nNode.prototype.isUserWhitespacable = function () {\n  return t.isUserWhitespacable(this.node);\n};\n\nNode.prototype.needsWhitespace = function (type) {\n  var parent = this.parent;\n  var node   = this.node;\n  if (!node) return 0;\n\n  if (t.isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  var lines = find(whitespace[type].nodes, node, parent);\n  if (lines) return lines;\n\n  _.each(find(whitespace[type].list, node, parent), function (expr) {\n    lines = Node.needsWhitespace(expr, node, type);\n    if (lines) return false;\n  });\n  return lines || 0;\n};\n\nNode.prototype.needsWhitespaceBefore = function () {\n  return this.needsWhitespace(\"before\");\n};\n\nNode.prototype.needsWhitespaceAfter = function () {\n  return this.needsWhitespace(\"after\");\n};\n\nNode.prototype.needsParens = function () {\n  var parent = this.parent;\n  var node   = this.node;\n\n  if (!parent) return false;\n\n  if (t.isNewExpression(parent) && parent.callee === node) {\n    return t.isCallExpression(node) || _.some(node, function (val) {\n      return t.isCallExpression(val);\n    });\n  }\n\n  return find(parens, node, parent);\n};\n\n_.each(Node.prototype, function (fn, key) {\n  Node[key] = function (node, parent) {\n    var n = new Node(node, parent);\n\n    var args = _.toArray(arguments).slice(2);\n    return n[key].apply(n, args);\n  };\n});\n","var t = require(\"../../types\");\nvar _ = require(\"lodash\");\n\nvar PRECEDENCE = {};\n\n_.each([\n  [\"||\"],\n  [\"&&\"],\n  [\"|\"],\n  [\"^\"],\n  [\"&\"],\n  [\"==\", \"===\", \"!=\", \"!==\"],\n  [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n  [\">>\", \"<<\", \">>>\"],\n  [\"+\", \"-\"],\n  [\"*\", \"/\", \"%\"]\n], function (tier, i) {\n  _.each(tier, function (op) {\n    PRECEDENCE[op] = i;\n  });\n});\n\nexports.Binary = function (node, parent) {\n  if (t.isCallExpression(parent) && parent.callee === node) {\n    return true;\n  }\n\n  if (t.isUnaryLike(parent)) {\n    return true;\n  }\n\n  if (t.isMemberExpression(parent) && parent.object === node) {\n    return true;\n  }\n\n  if (t.isBinary(parent)) {\n    var parentOp  = parent.operator;\n    var parentPos = PRECEDENCE[parentOp];\n\n    var nodeOp = node.operator;\n    var nodePos = PRECEDENCE[nodeOp];\n\n    if (parentPos > nodePos) {\n      return true;\n    }\n\n    if (parentPos === nodePos && parent.right === node) {\n      return true;\n    }\n  }\n};\n\nexports.BinaryExpression = function (node, parent) {\n  if (node.operator === \"in\") {\n    // var i = (1 in []);\n    if (t.isVariableDeclarator(parent)) {\n      return true;\n    }\n\n    // for ((1 in []);;);\n    if (t.isFor(parent)) {\n      return true;\n    }\n  }\n};\n\nexports.SequenceExpression = function (node, parent) {\n  if (t.isForStatement(parent)) {\n    // Although parentheses wouldn't hurt around sequence\n    // expressions in the head of for loops, traditional style\n    // dictates that e.g. i++, j++ should not be wrapped with\n    // parentheses.\n    return false;\n  }\n\n  if (t.isExpressionStatement(parent) && parent.expression === node) {\n    return false;\n  }\n\n  // Otherwise err on the side of overparenthesization, adding\n  // explicit exceptions above if this proves overzealous.\n  return true;\n};\n\nexports.YieldExpression = function (node, parent) {\n  return t.isBinary(parent) ||\n         t.isUnaryLike(parent) ||\n         t.isCallExpression(parent) ||\n         t.isMemberExpression(parent) ||\n         t.isNewExpression(parent) ||\n         t.isConditionalExpression(parent) ||\n         t.isYieldExpression(parent);\n};\n\nexports.ClassExpression = function (node, parent) {\n  return t.isExpressionStatement(parent);\n};\n\nexports.UnaryLike = function (node, parent) {\n  return t.isMemberExpression(parent) && parent.object === node;\n};\n\nexports.FunctionExpression = function (node, parent) {\n  // function () {};\n  if (t.isExpressionStatement(parent)) {\n    return true;\n  }\n\n  // (function test() {}).name;\n  if (t.isMemberExpression(parent) && parent.object === node) {\n    return true;\n  }\n\n  // (function () {})();\n  if (t.isCallExpression(parent) && parent.callee === node) {\n    return true;\n  }\n};\n\nexports.AssignmentExpression =\nexports.ConditionalExpression = function (node, parent) {\n  if (t.isUnaryLike(parent)) {\n    return true;\n  }\n\n  if (t.isBinary(parent)) {\n    return true;\n  }\n\n  if (t.isCallExpression(parent) && parent.callee === node) {\n    return true;\n  }\n\n  if (t.isConditionalExpression(parent) && parent.test === node) {\n    return true;\n  }\n\n  if (t.isMemberExpression(parent) && parent.object === node) {\n    return true;\n  }\n\n  return false;\n};\n","var _ = require(\"lodash\");\nvar t = require(\"../../types\");\n\nexports.before = {\n  nodes: {\n    Property: function (node, parent) {\n      if (parent.properties[0] === node) {\n        return 1;\n      }\n    },\n\n    SpreadProperty: function (node, parent) {\n      return exports.before.nodes.Property(node, parent);\n    },\n\n    SwitchCase: function (node, parent) {\n      if (parent.cases[0] === node) {\n        return 1;\n      }\n    },\n\n    CallExpression: function (node) {\n      if (t.isFunction(node.callee)) {\n        return 1;\n      }\n    }\n  }\n};\n\nexports.after = {\n  nodes: {\n    AssignmentExpression: function (node) {\n      if (t.isFunction(node.right)) {\n        return 1;\n      }\n    }\n  },\n\n  list: {\n    VariableDeclaration: function (node) {\n      return _.map(node.declarations, \"init\");\n    },\n\n    ArrayExpression: function (node) {\n      return node.elements;\n    },\n\n    ObjectExpression: function (node) {\n      return node.properties;\n    }\n  }\n};\n\n_.each({\n  Function: 1,\n  Class: 1,\n  For: 1,\n  SwitchStatement: 1,\n  IfStatement: { before: 1 },\n  CallExpression: { after: 1 },\n  Literal: { after: 1 }\n}, function (amounts, type) {\n  if (_.isNumber(amounts)) amounts = { after: amounts, before: amounts };\n\n  _.each(amounts, function (amount, key) {\n    exports[key].nodes[type] = function () {\n      return amount;\n    };\n  });\n});\n","module.exports = Position;\n\nvar _ = require(\"lodash\");\n\nfunction Position() {\n  this.line = 1;\n  this.column = 0;\n}\n\nPosition.prototype.push = function (str) {\n  var self = this;\n\n  _.each(str, function (cha) {\n    if (cha === \"\\n\") {\n      self.line++;\n      self.column = 0;\n    } else {\n      self.column++;\n    }\n  });\n};\n\nPosition.prototype.unshift = function (str) {\n  var self = this;\n\n  _.each(str, function (cha) {\n    if (cha === \"\\n\") {\n      self.line--;\n    } else {\n      self.column--;\n    }\n  });\n};\n","module.exports = SourceMap;\n\nvar sourceMap = require(\"source-map\");\nvar t         = require(\"../types\");\n\nfunction SourceMap(position, opts, code) {\n  this.position = position;\n  this.opts     = opts;\n\n  if (opts.sourceMap) {\n    this.map = new sourceMap.SourceMapGenerator({\n      file: opts.sourceMapName,\n      sourceRoot: opts.sourceRoot\n    });\n\n    this.map.setSourceContent(opts.sourceFileName, code);\n  } else {\n    this.map = null;\n  }\n}\n\nSourceMap.prototype.get = function () {\n  var map = this.map;\n  if (map) {\n    return map.toJSON();\n  } else {\n    return map;\n  }\n};\n\nSourceMap.prototype.mark = function (node, type) {\n  var loc = node.loc;\n  if (!loc) return; // no location info\n\n  var map = this.map;\n  if (!map) return; // no source map\n\n  if (t.isProgram(node) || t.isFile(node)) return; // illegal mapping nodes\n\n  var position = this.position;\n\n  var generated = {\n    line: position.line,\n    column: position.column\n  };\n\n  var original = loc[type];\n\n  if (generated.line === original.line && generated.column === original.column) return; // nothing to map\n\n  map.addMapping({\n    source: this.opts.sourceFileName,\n    generated: generated,\n    original: original\n  });\n};\n","module.exports = Whitespace;\n\nvar _ = require(\"lodash\");\n\nfunction Whitespace(tokens, comments) {\n  this.tokens = _.sortBy(tokens.concat(comments), \"start\");\n  this.used   = [];\n}\n\nWhitespace.prototype.getNewlinesBefore = function (node) {\n  var startToken;\n  var endToken;\n  var tokens = this.tokens;\n\n  _.each(tokens, function (token, i) {\n    // this is the token this node starts with\n    if (node.start === token.start) {\n      startToken = tokens[i - 1];\n      endToken = token;\n      return false;\n    }\n  });\n\n  return this.getNewlinesBetween(startToken, endToken);\n};\n\nWhitespace.prototype.getNewlinesAfter = function (node) {\n  var startToken;\n  var endToken;\n  var tokens = this.tokens;\n\n  _.each(tokens, function (token, i) {\n    // this is the token this node ends with\n    if (node.end === token.end) {\n      startToken = token;\n      endToken = tokens[i + 1];\n      return false;\n    }\n  });\n\n  if (endToken.type.type === \"eof\") {\n    return 1;\n  } else {\n    return this.getNewlinesBetween(startToken, endToken);\n  }\n};\n\nWhitespace.prototype.getNewlinesBetween = function (startToken, endToken) {\n  var start = startToken ? startToken.loc.end.line : 1;\n  var end   = endToken.loc.start.line;\n\n  var lines = 0;\n\n  for (var line = start; line < end; line++) {\n    if (!_.contains(this.used, line)) {\n      this.used.push(line);\n      lines++;\n    }\n  }\n\n  return lines;\n};\n","var t = require(\"./types\");\nvar _ = require(\"lodash\");\n\n// estraverse\n\nvar estraverse = require(\"estraverse\");\n_.extend(estraverse.VisitorKeys, t.VISITOR_KEYS);\n\n// regenerator/recast/ast-types\n\nvar types = require(\"ast-types\");\nvar def   = types.Type.def;\nvar or    = types.Type.or;\n\n// Acorn - Same as ImportNamespaceSpecifier but `id` is `name`\ndef(\"ImportBatchSpecifier\")\n  .bases(\"Specifier\")\n  .build(\"name\")\n  .field(\"name\", def(\"Identifier\"));\n\n// Abstract references\ndef(\"VirtualPropertyExpression\")\n  .bases(\"Expression\")\n  .build(\"object\", \"property\")\n  .field(\"object\", def(\"Expression\"))\n  .field(\"property\", or(def(\"Identifier\"), def(\"Expression\")));\n\ndef(\"PrivateDeclaration\")\n  .bases(\"Declaration\")\n  .build(\"declarations\")\n  .field(\"declarations\", [def(\"Identifier\")]);\n\n// Playground\ndef(\"BindMemberExpression\")\n  .bases(\"Expression\")\n  .build(\"object\", \"property\", \"arguments\")\n  .field(\"object\", def(\"Expression\"))\n  .field(\"property\", or(def(\"Identifier\"), def(\"Expression\")))\n  .field(\"arguments\", [def(\"Expression\")]);\n\ndef(\"BindFunctionExpression\")\n  .bases(\"Expression\")\n  .build(\"callee\", \"arguments\")\n  .field(\"callee\", def(\"Expression\"))\n  .field(\"arguments\", [def(\"Expression\")]);\n\ntypes.finalize();\n","module.exports = DefaultFormatter;\n\nvar traverse = require(\"../../traverse\");\nvar util     = require(\"../../util\");\nvar t        = require(\"../../types\");\nvar _        = require(\"lodash\");\n\nfunction DefaultFormatter(file) {\n  this.file = file;\n\n  this.localExports = this.getLocalExports();\n  this.remapAssignments();\n}\n\nDefaultFormatter.prototype.getLocalExports = function () {\n  var localExports = {};\n\n  traverse(this.file.ast, {\n    enter: function (node) {\n      var declar = node && node.declaration;\n      if (t.isExportDeclaration(node) && declar && t.isStatement(declar)) {\n        _.extend(localExports, t.getIds(declar, true));\n      }\n    }\n  });\n\n  return localExports;\n};\n\nDefaultFormatter.prototype.remapExportAssignment = function (node) {\n  return t.assignmentExpression(\n    \"=\",\n    node.left,\n    t.assignmentExpression(\n      node.operator,\n      t.memberExpression(t.identifier(\"exports\"), node.left),\n      node.right\n    )\n  );\n};\n\nDefaultFormatter.prototype.remapAssignments = function () {\n  var localExports = this.localExports;\n  var self = this;\n\n  var isLocalReference = function (node, scope) {\n    var name = node.name;\n    return t.isIdentifier(node) && localExports[name] && localExports[name] === scope.get(name, true);\n  };\n\n  traverse(this.file.ast, {\n    enter: function (node, parent, scope) {\n      if (t.isUpdateExpression(node) && isLocalReference(node.argument, scope)) {\n        this.stop();\n\n        // expand to long file assignment expression\n        var assign = t.assignmentExpression(node.operator[0] + \"=\", node.argument, t.literal(1));\n\n        // remap this assignment expression\n        var remapped = self.remapExportAssignment(assign);\n\n        // we don't need to change the result\n        if (t.isExpressionStatement(parent) || node.prefix) {\n          return remapped;\n        }\n\n        var nodes = [];\n        nodes.push(remapped);\n\n        var operator;\n        if (node.operator === \"--\") {\n          operator = \"+\";\n        } else { // \"++\"\n          operator = \"-\";\n        }\n        nodes.push(t.binaryExpression(operator, node.argument, t.literal(1)));\n\n        return t.sequenceExpression(nodes);\n      }\n\n      if (t.isAssignmentExpression(node) && isLocalReference(node.left, scope)) {\n        this.stop();\n        return self.remapExportAssignment(node);\n      }\n    }\n  });\n};\n\nDefaultFormatter.prototype.getModuleName = function () {\n  var opts = this.file.opts;\n  var filenameRelative = opts.filenameRelative;\n  var moduleName = \"\";\n\n  if (opts.moduleRoot) {\n    moduleName = opts.moduleRoot + \"/\";\n  }\n\n  if (!opts.filenameRelative) {\n    return moduleName + opts.filename.replace(/^\\//, \"\");\n  }\n\n  if (opts.sourceRoot) {\n    // remove sourceRoot from filename\n    var sourceRootRegEx = new RegExp(\"^\" + opts.sourceRoot + \"\\/?\");\n    filenameRelative = filenameRelative.replace(sourceRootRegEx, \"\");\n  }\n\n  // remove extension\n  filenameRelative = filenameRelative.replace(/\\.(.*?)$/, \"\");\n\n  moduleName += filenameRelative;\n\n  return moduleName;\n};\n\nDefaultFormatter.prototype._pushStatement = function (ref, nodes) {\n  if (t.isClass(ref) || t.isFunction(ref)) {\n    if (ref.id) {\n      nodes.push(t.toStatement(ref));\n      ref = ref.id;\n    }\n  }\n\n  return ref;\n};\n\nDefaultFormatter.prototype._hoistExport = function (declar, assign) {\n  if (t.isFunctionDeclaration(declar)) {\n    assign._blockHoist = true;\n  }\n\n  return assign;\n};\n\nDefaultFormatter.prototype._exportSpecifier = function (getRef, specifier, node, nodes) {\n  var inherits = false;\n  if (node.specifiers.length === 1) inherits = node;\n\n  if (node.source) {\n    if (t.isExportBatchSpecifier(specifier)) {\n      // export * from \"foo\";\n      nodes.push(this._exportsWildcard(getRef()));\n    } else {\n      // export { foo } from \"test\";\n      nodes.push(this._exportsAssign(\n        t.getSpecifierName(specifier),\n        t.memberExpression(getRef(), specifier.id)\n      ));\n    }\n  } else {\n    // export { foo };\n    nodes.push(this._exportsAssign(t.getSpecifierName(specifier), specifier.id));\n  }\n};\n\nDefaultFormatter.prototype._exportsWildcard = function (objectIdentifier) {\n  return util.template(\"exports-wildcard\", {\n    OBJECT: objectIdentifier\n  }, true);\n};\n\nDefaultFormatter.prototype._exportsAssign = function (id, init) {\n  return util.template(\"exports-assign\", {\n    VALUE: init,\n    KEY:   id\n  }, true);\n};\n\nDefaultFormatter.prototype.exportDeclaration = function (node, nodes) {\n  var declar = node.declaration;\n\n  var id = declar.id;\n\n  if (node.default) {\n    id = t.identifier(\"default\");\n  }\n\n  var assign;\n\n  if (t.isVariableDeclaration(declar)) {\n    for (var i in declar.declarations) {\n      var decl = declar.declarations[i];\n\n      decl.init = this._exportsAssign(decl.id, decl.init).expression;\n\n      var newDeclar = t.variableDeclaration(declar.kind, [decl]);\n      if (i === \"0\") t.inherits(newDeclar, declar);\n      nodes.push(newDeclar);\n    }\n  } else {\n    var ref = declar;\n\n    if (t.isFunctionDeclaration(declar) || t.isClassDeclaration(declar)) {\n      ref = declar.id;\n      nodes.push(declar);\n    }\n\n    assign = this._exportsAssign(id, ref);\n\n    nodes.push(assign);\n\n    this._hoistExport(declar, assign);\n  }\n};\n","module.exports = AMDFormatter;\n\nvar DefaultFormatter = require(\"./_default\");\nvar util             = require(\"../../util\");\nvar t                = require(\"../../types\");\nvar _                = require(\"lodash\");\n\nfunction AMDFormatter() {\n  DefaultFormatter.apply(this, arguments);\n  this.ids  = {};\n}\n\nutil.inherits(AMDFormatter, DefaultFormatter);\n\nAMDFormatter.prototype.buildDependencyLiterals = function () {\n  var names = [];\n  for (var name in this.ids) {\n    names.push(t.literal(name));\n  }\n  return names;\n};\n\n/**\n * Wrap the entire body in a `define` wrapper.\n */\n\nAMDFormatter.prototype.transform = function (ast) {\n  var program = ast.program;\n  var body    = program.body;\n\n  // build an array of module names\n\n  var names = [t.literal(\"exports\")].concat(this.buildDependencyLiterals());\n  names = t.arrayExpression(names);\n\n  // build up define container\n\n  var params = _.values(this.ids);\n  params.unshift(t.identifier(\"exports\"));\n\n  var container = t.functionExpression(null, params, t.blockStatement(body));\n\n  var defineArgs = [names, container];\n  var moduleName = this.getModuleName();\n  if (moduleName) defineArgs.unshift(t.literal(moduleName));\n\n  var call = t.callExpression(t.identifier(\"define\"), defineArgs);\n\n  program.body = [t.expressionStatement(call)];\n};\n\n/**\n * Get the AMD module name that we'll prepend to the wrapper\n * to define this module\n */\n\nAMDFormatter.prototype.getModuleName = function () {\n  if (this.file.opts.moduleIds) {\n    return DefaultFormatter.prototype.getModuleName.apply(this, arguments);\n  } else {\n    return null;\n  }\n};\n\nAMDFormatter.prototype._push = function (node) {\n  var id  = node.source.value;\n  var ids = this.ids;\n\n  if (ids[id]) {\n    return ids[id];\n  } else {\n    return this.ids[id] = this.file.generateUidIdentifier(id);\n  }\n};\n\nAMDFormatter.prototype.importDeclaration = function (node) {\n  this._push(node);\n};\n\nAMDFormatter.prototype.importSpecifier = function (specifier, node, nodes) {\n  var key = t.getSpecifierName(specifier);\n  var ref = this._push(node);\n\n  if (t.isImportBatchSpecifier(specifier)) {\n    // import * as bar from \"foo\";\n  } else if (t.isSpecifierDefault(specifier) && !this.noInteropRequire) {\n    // import foo from \"foo\";\n    ref = t.callExpression(this.file.addDeclaration(\"interop-require\"), [ref]);\n  } else {\n    // import {foo} from \"foo\";\n    ref = t.memberExpression(ref, specifier.id, false);\n  }\n\n  nodes.push(t.variableDeclaration(\"var\", [\n    t.variableDeclarator(key, ref)\n  ]));\n};\n\nAMDFormatter.prototype.exportSpecifier = function (specifier, node, nodes) {\n  var self = this;\n  return this._exportSpecifier(function () {\n    return self._push(node);\n  }, specifier, node, nodes);\n};\n","module.exports = CommonJSFormatter;\n\nvar DefaultFormatter = require(\"./_default\");\nvar traverse         = require(\"../../traverse\");\nvar util             = require(\"../../util\");\nvar t                = require(\"../../types\");\n\nfunction CommonJSFormatter(file) {\n  DefaultFormatter.apply(this, arguments);\n\n  var hasNonDefaultExports = false;\n  traverse(file.ast, {\n    enter: function (node) {\n      if (t.isExportDeclaration(node) && !node.default) hasNonDefaultExports = true;\n    }\n  });\n  this.hasNonDefaultExports = hasNonDefaultExports;\n}\n\nutil.inherits(CommonJSFormatter, DefaultFormatter);\n\nCommonJSFormatter.prototype.importSpecifier = function (specifier, node, nodes) {\n  var variableName = t.getSpecifierName(specifier);\n\n  // import foo from \"foo\";\n  if (t.isSpecifierDefault(specifier)) {\n    nodes.push(t.variableDeclaration(\"var\", [\n      t.variableDeclarator(variableName,\n        t.callExpression(this.file.addDeclaration(\"interop-require\"), [util.template(\"require\", {\n          MODULE_NAME: node.source\n        })])\n      )\n    ]));\n  } else {\n    // import foo from \"foo\";\n\n    var templateName = \"require-assign\";\n\n    // import * as bar from \"foo\";\n    if (specifier.type !== \"ImportBatchSpecifier\") templateName += \"-key\";\n\n    nodes.push(util.template(templateName, {\n      VARIABLE_NAME: variableName,\n      MODULE_NAME:   node.source,\n      KEY:           specifier.id\n    }));\n  }\n};\n\nCommonJSFormatter.prototype.importDeclaration = function (node, nodes) {\n  // import \"foo\";\n  nodes.push(util.template(\"require\", {\n    MODULE_NAME: node.source\n  }, true));\n};\n\nCommonJSFormatter.prototype.exportDeclaration = function (node, nodes) {\n  if (node.default) {\n    var declar = node.declaration;\n\n    // module.exports = VALUE;\n    var templateName = \"exports-default-module\";\n\n    // exports = module.exports = VALUE;\n    if (this.hasNonDefaultExports) templateName = \"exports-default-module-override\";\n\n    var assign = util.template(templateName, {\n      VALUE: this._pushStatement(declar, nodes)\n    }, true);\n\n    // hoist to the top if this default is a function\n    nodes.push(this._hoistExport(declar, assign));\n  } else {\n    DefaultFormatter.prototype.exportDeclaration.apply(this, arguments);\n  }\n};\n\nCommonJSFormatter.prototype.exportSpecifier = function (specifier, node, nodes) {\n  this._exportSpecifier(function () {\n    return t.callExpression(t.identifier(\"require\"), [node.source]);\n  }, specifier, node, nodes);\n};\n","module.exports = IgnoreFormatter;\n\nvar t = require(\"../../types\");\n\nfunction IgnoreFormatter() {\n\n}\n\nIgnoreFormatter.prototype.exportDeclaration = function (node, nodes) {\n  var declar = t.toStatement(node.declaration, true);\n  if (declar) nodes.push(t.inherits(declar, node));\n};\n\nIgnoreFormatter.prototype.importDeclaration =\nIgnoreFormatter.prototype.importSpecifier =\nIgnoreFormatter.prototype.exportSpecifier = function () {\n\n};\n","module.exports = SystemFormatter;\n\nvar AMDFormatter = require(\"./amd\");\nvar traverse     = require(\"../../traverse\");\nvar util         = require(\"../../util\");\nvar t            = require(\"../../types\");\nvar _            = require(\"lodash\");\n\nfunction SystemFormatter(file) {\n  this.exportIdentifier  = file.generateUidIdentifier(\"export\");\n  this.noInteropRequire = true;\n\n  AMDFormatter.apply(this, arguments);\n}\n\nutil.inherits(SystemFormatter, AMDFormatter);\n\nSystemFormatter.prototype._exportsWildcard = function (objectIdentifier) {\n  var leftIdentifier = t.identifier(\"i\");\n  var valIdentifier  = t.memberExpression(objectIdentifier, leftIdentifier, true);\n\n  var left = t.variableDeclaration(\"var\", [\n    t.variableDeclarator(leftIdentifier)\n  ]);\n\n  var right = objectIdentifier;\n\n  var block = t.blockStatement([\n    this.buildExportCall(leftIdentifier, valIdentifier)\n  ]);\n\n  return t.forInStatement(left, right, block);\n};\n\nSystemFormatter.prototype._exportsAssign = function (id, init) {\n  return this.buildExportCall(t.literal(id.name), init, true);\n};\n\nSystemFormatter.prototype.remapExportAssignment = function (node) {\n  return this.buildExportCall(t.literal(node.left.name), node);\n};\n\nSystemFormatter.prototype.buildExportCall = function (id, init, isStatement) {\n  var call = t.callExpression(this.exportIdentifier, [id, init]);\n  if (isStatement) {\n    return t.expressionStatement(call);\n  } else {\n    return call;\n  }\n};\n\nSystemFormatter.prototype.buildRunnerSetters = function () {\n  return t.arrayExpression(_.map(this.ids, function (uid) {\n    var moduleIdentifier = t.identifier(\"m\");\n\n    return t.functionExpression(null, [moduleIdentifier], t.blockStatement([\n      t.assignmentExpression(\"=\", uid, moduleIdentifier)\n    ]));\n  }));\n};\n\nSystemFormatter.prototype.transform = function (ast) {\n  var program = ast.program;\n\n  var moduleName = this.getModuleName();\n  var moduleNameLiteral = t.literal(moduleName);\n\n  var runner = util.template(\"system\", {\n    MODULE_NAME: moduleNameLiteral,\n    MODULE_DEPENDENCIES: t.arrayExpression(this.buildDependencyLiterals()),\n    EXPORT_IDENTIFIER: this.exportIdentifier,\n    SETTERS: this.buildRunnerSetters(),\n    EXECUTE: t.functionExpression(null, [], t.blockStatement(program.body))\n  }, true);\n\n  var handlerBody = runner.expression.arguments[2].body.body;\n  if (!moduleName) runner.expression.arguments.shift();\n\n  var returnStatement = handlerBody.pop();\n\n  // hoist up function declarations for circular references\n  traverse(program, {\n    enter: function (node) {\n      if (t.isFunction(node)) this.stop();\n\n      if (t.isFunctionDeclaration(node) || node._blockHoist) {\n        handlerBody.push(node);\n        this.remove();\n      }\n    }\n  });\n\n  if (!_.isEmpty(this.ids)) {\n    handlerBody.push(t.variableDeclaration(\"var\", _.map(this.ids, function (uid) {\n      return t.variableDeclarator(uid);\n    })));\n  }\n\n  handlerBody.push(returnStatement);\n\n  program.body = [runner];\n};\n","module.exports = UMDFormatter;\n\nvar AMDFormatter = require(\"./amd\");\nvar util         = require(\"../../util\");\nvar t            = require(\"../../types\");\nvar _            = require(\"lodash\");\n\nfunction UMDFormatter() {\n  AMDFormatter.apply(this, arguments);\n}\n\nutil.inherits(UMDFormatter, AMDFormatter);\n\nUMDFormatter.prototype.transform = function (ast) {\n  var program = ast.program;\n  var body    = program.body;\n\n  // build an array of module names\n\n  var names = [];\n  for (var name in this.ids) {\n    names.push(t.literal(name));\n  }\n\n  // factory\n\n  var ids  = _.values(this.ids);\n  var args = [t.identifier(\"exports\")].concat(ids);\n\n  var factory = t.functionExpression(null, args, t.blockStatement(body));\n\n  // runner\n\n  var defineArgs = [t.arrayExpression([t.literal(\"exports\")].concat(names))];\n  var moduleName = this.getModuleName();\n  if (moduleName) defineArgs.unshift(t.literal(moduleName));\n\n  var runner = util.template(\"umd-runner-body\", {\n    AMD_ARGUMENTS: defineArgs,\n\n    COMMON_ARGUMENTS: names.map(function (name) {\n      return t.callExpression(t.identifier(\"require\"), [name]);\n    })\n  });\n\n  //\n\n  var call = t.callExpression(runner, [factory]);\n  program.body = [t.expressionStatement(call)];\n};\n","module.exports = transform;\n\nvar Transformer = require(\"./transformer\");\nvar File        = require(\"../file\");\nvar util        = require(\"../util\");\nvar _           = require(\"lodash\");\n\nfunction transform(code, opts) {\n  var file = new File(opts);\n  return file.parse(code);\n}\n\ntransform.fromAst = function (ast, code, opts) {\n  ast = util.normaliseAst(ast);\n\n  var file = new File(opts);\n  file.addCode(code);\n  file.transform(ast);\n  return file.generate();\n};\n\ntransform._ensureTransformerNames = function (type, keys) {\n  for (var i in keys) {\n    var key = keys[i];\n    if (!_.has(transform.transformers, key)) {\n      throw new ReferenceError(\"unknown transformer \" + key + \" specified in \" + type);\n    }\n  }\n};\n\ntransform.transformers = {};\n\ntransform.moduleFormatters = {\n  common: require(\"./modules/common\"),\n  system: require(\"./modules/system\"),\n  ignore: require(\"./modules/ignore\"),\n  amd:    require(\"./modules/amd\"),\n  umd:    require(\"./modules/umd\")\n};\n\n_.each({\n  // spec\n  specBlockHoistFunctions:   require(\"./transformers/spec-block-hoist-functions\"),\n  specNoForInOfAssignment:   require(\"./transformers/spec-no-for-in-of-assignment\"),\n  specNoDuplicateProperties: require(\"./transformers/spec-no-duplicate-properties\"),\n\n  // playground\n  methodBinding:             require(\"./transformers/playground-method-binding\"),\n  memoizationOperator:       require(\"./transformers/playground-memoization-operator\"),\n  objectGetterMemoization:   require(\"./transformers/playground-object-getter-memoization\"),\n\n  react:                     require(\"./transformers/react\"),\n  modules:                   require(\"./transformers/es6-modules\"),\n  propertyNameShorthand:     require(\"./transformers/es6-property-name-shorthand\"),\n  arrayComprehension:        require(\"./transformers/es7-array-comprehension\"),\n  generatorComprehension:    require(\"./transformers/es7-generator-comprehension\"),\n  arrowFunctions:            require(\"./transformers/es6-arrow-functions\"),\n  classes:                   require(\"./transformers/es6-classes\"),\n\n  computedPropertyNames:     require(\"./transformers/es6-computed-property-names\"),\n\n  objectSpread:              require(\"./transformers/es7-object-spread\"),\n  exponentiationOperator:    require(\"./transformers/es7-exponentiation-operator\"),\n  spread:                    require(\"./transformers/es6-spread\"),\n  templateLiterals:          require(\"./transformers/es6-template-literals\"),\n  propertyMethodAssignment:  require(\"./transformers/es5-property-method-assignment\"),\n  destructuring:             require(\"./transformers/es6-destructuring\"),\n  defaultParameters:         require(\"./transformers/es6-default-parameters\"),\n  forOf:                     require(\"./transformers/es6-for-of\"),\n  unicodeRegex:              require(\"./transformers/es6-unicode-regex\"),\n  abstractReferences:        require(\"./transformers/es7-abstract-references\"),\n\n  constants:                 require(\"./transformers/es6-constants\"),\n  letScoping:                require(\"./transformers/es6-let-scoping\"),\n\n  _blockHoist:               require(\"./transformers/_block-hoist\"),\n\n  generators:                require(\"./transformers/es6-generators\"),\n  restParameters:            require(\"./transformers/es6-rest-parameters\"),\n\n  _declarations:             require(\"./transformers/_declarations\"),\n\n  // wrap up\n  _aliasFunctions:           require(\"./transformers/_alias-functions\"),\n  useStrict:                 require(\"./transformers/use-strict\"),\n  _moduleFormatter:          require(\"./transformers/_module-formatter\"),\n\n  // spec\n  specPropertyLiterals:         require(\"./transformers/spec-property-literals\"),\n  specMemberExpressionLiterals: require(\"./transformers/spec-member-expression-literals\")\n}, function (transformer, key) {\n  transform.transformers[key] = new Transformer(key, transformer);\n});\n","module.exports = Transformer;\n\nvar traverse = require(\"../traverse\");\nvar t        = require(\"../types\");\nvar _        = require(\"lodash\");\n\nfunction Transformer(key, transformer, opts) {\n  this.transformer = Transformer.normalise(transformer);\n  this.opts        = opts || {};\n  this.key         = key;\n}\n\nTransformer.normalise = function (transformer) {\n  if (_.isFunction(transformer)) {\n    transformer = { ast: transformer };\n  }\n\n  _.each(transformer, function (fns, type) {\n    if (type[0] === \"_\") return;\n    if (_.isFunction(fns)) fns = { enter: fns };\n    transformer[type] = fns;\n\n    var aliases = t.FLIPPED_ALIAS_KEYS[type];\n    if (aliases) {\n      _.each(aliases, function (alias) {\n        transformer[alias] = fns;\n      });\n    }\n  });\n\n  return transformer;\n};\n\nTransformer.prototype.astRun = function (file, key) {\n  var transformer = this.transformer;\n  var ast         = file.ast;\n\n  if (transformer.ast && transformer.ast[key]) {\n    transformer.ast[key](ast, file);\n  }\n};\n\nTransformer.prototype.transform = function (file) {\n  if (!this.canRun(file)) return;\n\n  var transformer = this.transformer;\n  var ast         = file.ast;\n\n  this.astRun(file, \"enter\");\n\n  var build = function (exit) {\n    return function (node, parent, scope) {\n      var fns = transformer[node.type];\n      if (!fns) return;\n\n      var fn = fns.enter;\n      if (exit) fn = fns.exit;\n      if (!fn) return;\n\n      return fn(node, parent, file, scope);\n    };\n  };\n\n  traverse(ast, {\n    enter: build(),\n    exit:  build(true)\n  });\n\n  this.astRun(file, \"exit\");\n};\n\nTransformer.prototype.canRun = function (file) {\n  var opts = file.opts;\n  var key  = this.key;\n  if (key[0] === \"_\") return true;\n\n  var blacklist = opts.blacklist;\n  if (blacklist.length && _.contains(blacklist, key)) return false;\n\n  var whitelist = opts.whitelist;\n  if (whitelist.length && !_.contains(whitelist, key)) return false;\n\n  return true;\n};\n","var traverse = require(\"../../traverse\");\nvar t        = require(\"../../types\");\n\nvar go = function (getBody, node, file, scope) {\n  var argumentsId;\n  var thisId;\n\n  var getArgumentsId = function () {\n    return argumentsId = argumentsId || file.generateUidIdentifier(\"arguments\", scope);\n  };\n\n  var getThisId = function () {\n    return thisId = thisId || file.generateUidIdentifier(\"this\", scope);\n  };\n\n  // traverse the function and find all alias functions so we can alias\n  // `arguments` and `this` if necessary\n  traverse(node, {\n    enter: function (node) {\n      if (!node._aliasFunction) {\n        if (t.isFunction(node)) {\n          // stop traversal of this node as it'll be hit again by this transformer\n          return false;\n        } else {\n          return;\n        }\n      }\n\n      // traverse all child nodes of this function and find `arguments` and `this`\n      traverse(node, {\n        enter: function (node, parent) {\n          if (t.isFunction(node) && !node._aliasFunction) {\n            return false;\n          }\n\n          if (node._ignoreAliasFunctions) return false;\n\n          var getId;\n\n          if (t.isIdentifier(node) && node.name === \"arguments\") {\n            getId = getArgumentsId;\n          } else if (t.isThisExpression(node)) {\n            getId = getThisId;\n          } else {\n            return;\n          }\n\n          if (t.isReferenced(node, parent)) return getId();\n        }\n      });\n\n      return false;\n    }\n  });\n\n  var body;\n\n  var pushDeclaration = function (id, init) {\n    body = body || getBody();\n    body.unshift(t.variableDeclaration(\"var\", [\n      t.variableDeclarator(id, init)\n    ]));\n  };\n\n  if (argumentsId) {\n    pushDeclaration(argumentsId, t.identifier(\"arguments\"));\n  }\n\n  if (thisId) {\n    pushDeclaration(thisId, t.identifier(\"this\"));\n  }\n};\n\nexports.Program = function (node, parent, file, scope) {\n  go(function () {\n    return node.body;\n  }, node, file, scope);\n};\n\nexports.FunctionDeclaration =\nexports.FunctionExpression = function (node, parent, file, scope) {\n  go(function () {\n    t.ensureBlock(node);\n    return node.body.body;\n  }, node, file, scope);\n};\n","exports.BlockStatement =\nexports.Program = {\n  exit: function (node) {\n    var unshift = [];\n\n    node.body = node.body.filter(function (bodyNode) {\n      if (bodyNode._blockHoist) {\n        unshift.push(bodyNode);\n        return false;\n      } else {\n        return true;\n      }\n    });\n\n    node.body = unshift.concat(node.body);\n  }\n};\n","var t = require(\"../../types\");\n\nexports.BlockStatement =\nexports.Program = function (node) {\n  var kinds = {};\n  var kind;\n\n  for (var i in node._declarations) {\n    var declar = node._declarations[i];\n\n    kind = declar.kind || \"var\";\n    var declarNode = t.variableDeclarator(declar.id, declar.init);\n\n    if (!declar.init) {\n      kinds[kind] = kinds[kind] || [];\n      kinds[kind].push(declarNode);\n    } else {\n      node.body.unshift(t.variableDeclaration(kind, [declarNode]));\n    }\n  }\n\n  for (kind in kinds) {\n    node.body.unshift(t.variableDeclaration(kind, kinds[kind]));\n  }\n};\n","var transform = require(\"../transform\");\n\nexports.ast = {\n  exit: function (ast, file) {\n    if (!transform.transformers.modules.canRun(file)) return;\n\n    if (file.moduleFormatter.transform) {\n      file.moduleFormatter.transform(ast);\n    }\n  }\n};\n","var util = require(\"../../util\");\n\nexports.Property = function (node) {\n  if (node.method) node.method = false;\n};\n\nexports.ObjectExpression = function (node, parent, file) {\n  var mutatorMap = {};\n  var hasAny = false;\n\n  node.properties = node.properties.filter(function (prop) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      hasAny = true;\n      util.pushMutatorMap(mutatorMap, prop.key, prop.kind, prop.value);\n      return false;\n    } else {\n      return true;\n    }\n  });\n\n  if (!hasAny) return;\n\n  var objId = util.getUid(parent, file);\n\n  return util.template(\"object-define-properties-closure\", {\n    KEY: objId,\n    OBJECT: node,\n    CONTENT: util.template(\"object-define-properties\", {\n      OBJECT: objId,\n      PROPS:  util.buildDefineProperties(mutatorMap)\n    })\n  });\n};\n","var t = require(\"../../types\");\n\nexports.ArrowFunctionExpression = function (node) {\n  t.ensureBlock(node);\n\n  node._aliasFunction = \"arrow\";\n  node.expression = false;\n  node.type = \"FunctionExpression\";\n\n  return node;\n};\n","var traverse = require(\"../../traverse\");\nvar util     = require(\"../../util\");\nvar t        = require(\"../../types\");\n\nexports.ClassDeclaration = function (node, parent, file, scope) {\n  var closure = true;\n  if (t.isProgram(parent) || t.isBlockStatement(parent)) {\n    closure = false;\n  }\n\n  var factory = new Class(node, file, scope, closure);\n  var newNode = factory.run();\n  if (factory.closure) {\n    if (closure) {\n      // declaration in an expression context...\n      // export default class Foo {}\n      scope.push({\n        kind: \"var\",\n        key: node.id.key,\n        id: node.id\n      });\n      return t.assignmentExpression(\"=\", node.id, newNode);\n    } else {\n      // likely has a PrivateDeclaration etc\n      return t.variableDeclaration(\"let\", [\n        t.variableDeclarator(node.id, newNode)\n      ]);\n    }\n  } else {\n    return newNode;\n  }\n};\n\nexports.ClassExpression = function (node, parent, file, scope) {\n  return new Class(node, file, scope, true).run();\n};\n\n/**\n * Description\n *\n * @param {Node} node\n * @param {File} file\n * @param {Scope} scope\n * @param {Boolean} closure\n */\n\nfunction Class(node, file, scope, closure) {\n  this.closure = closure;\n  this.scope   = scope;\n  this.node    = node;\n  this.file    = file;\n\n  this.hasInstanceMutators = false;\n  this.hasStaticMutators   = false;\n\n  this.instanceMutatorMap = {};\n  this.staticMutatorMap   = {};\n  this.hasConstructor     = false;\n  this.className          = node.id || file.generateUidIdentifier(\"class\", scope);\n  this.superName          = node.superClass;\n}\n\n/**\n * Description\n *\n * @returns {Array}\n */\n\nClass.prototype.run = function () {\n  var superName = this.superName;\n  var className = this.className;\n  var file      = this.file;\n\n  //\n\n  var body = this.body = [];\n\n  var constructor = t.functionExpression(null, [], t.blockStatement([]));\n  if (this.node.id) constructor.id = className;\n  this.constructor = constructor;\n\n  body.push(t.variableDeclaration(\"let\", [\n    t.variableDeclarator(className, constructor)\n  ]));\n\n  //\n\n  if (superName && t.isDynamic(superName)) {\n    // so we're only evaluating it once\n    var superRefName = \"super\";\n    if (className) superRefName = className.name + \"Super\";\n\n    var superRef = file.generateUidIdentifier(superRefName, this.scope);\n    body.unshift(t.variableDeclaration(\"var\", [\n      t.variableDeclarator(superRef, superName)\n    ]));\n    superName = superRef;\n  }\n\n  this.superName = superName;\n\n  //\n\n  if (superName) {\n    body.push(t.expressionStatement(t.callExpression(file.addDeclaration(\"inherits\"), [className, superName])));\n  }\n\n  this.buildBody();\n\n  t.inheritsComments(body[0], this.node);\n\n  if (this.closure) {\n    if (body.length === 1) {\n      // only a constructor so no need for a closure container\n      return constructor;\n    } else {\n      body.push(t.returnStatement(className));\n      return t.callExpression(\n        t.functionExpression(null, [], t.blockStatement(body)),\n        []\n      );\n    }\n  } else {\n    return body;\n  }\n};\n\n/**\n * Description\n */\n\nClass.prototype.buildBody = function () {\n  var constructor = this.constructor;\n  var className   = this.className;\n  var superName   = this.superName;\n  var classBody   = this.node.body.body;\n  var body        = this.body;\n  var self        = this;\n\n  for (var i in classBody) {\n    var node = classBody[i];\n    if (t.isMethodDefinition(node)) {\n      self.replaceInstanceSuperReferences(node);\n\n      if (node.key.name === \"constructor\") {\n        self.pushConstructor(node);\n      } else {\n        self.pushMethod(node);\n      }\n    } else if (t.isPrivateDeclaration(node)) {\n      self.closure = true;\n      body.unshift(node);\n    }\n  }\n\n  if (!this.hasConstructor && superName) {\n    constructor.body.body.push(util.template(\"class-super-constructor-call\", {\n      SUPER_NAME: superName\n    }, true));\n  }\n\n  var instanceProps;\n  var staticProps;\n\n  if (this.hasInstanceMutators) {\n    var protoId = util.template(\"prototype-identifier\", {\n      CLASS_NAME: className\n    });\n\n    instanceProps = util.buildDefineProperties(this.instanceMutatorMap, protoId);\n  }\n\n  if (this.hasStaticMutators) {\n    staticProps = util.buildDefineProperties(this.staticMutatorMap, className);\n  }\n\n  if (instanceProps || staticProps) {\n    staticProps = staticProps || t.literal(null);\n\n    var args = [className, staticProps];\n    if (instanceProps) args.push(instanceProps);\n\n    body.push(t.expressionStatement(\n      t.callExpression(this.file.addDeclaration(\"prototype-properties\"), args)\n    ));\n  }\n};\n\n/**\n * Push a method to it's respective mutatorMap.\n *\n * @param {Node} node MethodDefinition\n */\n\nClass.prototype.pushMethod = function (node) {\n  var methodName = node.key;\n\n  var kind = node.kind;\n\n  if (kind === \"\") {\n    // method\n\n    var className = this.className;\n    if (!node.static) className = t.memberExpression(className, t.identifier(\"prototype\"));\n    methodName = t.memberExpression(className, methodName, node.computed);\n\n    var expr = t.expressionStatement(t.assignmentExpression(\"=\", methodName, node.value));\n    t.inheritsComments(expr, node);\n    this.body.push(expr);\n  } else {\n    // mutator\n    var mutatorMap = this.instanceMutatorMap;\n    if (node.static) {\n      this.hasStaticMutators = true;\n      mutatorMap = this.staticMutatorMap;\n    } else {\n      this.hasInstanceMutators = true;\n    }\n    util.pushMutatorMap(mutatorMap, methodName, kind, node);\n  }\n};\n\n/**\n * Given a `methodNode`, produce a `MemberExpression` super class reference.\n *\n * @param {Node} methodNode MethodDefinition\n * @param {Node} node Identifier\n * @param {Node} parent\n *\n * @returns {Node}\n */\n\nClass.prototype.superIdentifier = function (methodNode, id, parent) {\n  var methodName = methodNode.key;\n  var superName  = this.superName || t.identifier(\"Function\");\n\n  if (parent.property === id) {\n    return;\n  } else if (t.isCallExpression(parent, { callee: id })) {\n    // super(); -> ClassName.prototype.MethodName.call(this);\n    parent.arguments.unshift(t.thisExpression());\n\n    if (methodName.name === \"constructor\") {\n      // constructor() { super(); }\n      return t.memberExpression(superName, t.identifier(\"call\"));\n    } else {\n      id = superName;\n\n      // foo() { super(); }\n      if (!methodNode.static) {\n        id = t.memberExpression(id, t.identifier(\"prototype\"));\n      }\n\n      id = t.memberExpression(id, methodName, methodNode.computed);\n      return t.memberExpression(id, t.identifier(\"call\"));\n    }\n  } else if (t.isMemberExpression(parent) && !methodNode.static) {\n    // super.test -> ClassName.prototype.test\n    return t.memberExpression(superName, t.identifier(\"prototype\"));\n  } else {\n    return superName;\n  }\n};\n\n/**\n * Replace all `super` references with a reference to our `superClass`.\n *\n * @param {Node} methodNode MethodDefinition\n */\n\nClass.prototype.replaceInstanceSuperReferences = function (methodNode) {\n  var method = methodNode.value;\n  var self = this;\n\n  traverse(method, {\n    enter: function (node, parent) {\n      if (t.isIdentifier(node, { name: \"super\" })) {\n        return self.superIdentifier(methodNode, node, parent);\n      } else if (t.isCallExpression(node)) {\n        var callee = node.callee;\n        if (!t.isMemberExpression(callee)) return;\n        if (callee.object.name !== \"super\") return;\n\n        // super.test(); -> ClassName.prototype.MethodName.call(this);\n        callee.property = t.memberExpression(callee.property, t.identifier(\"call\"));\n        node.arguments.unshift(t.thisExpression());\n      }\n    }\n  });\n};\n\n/**\n * Replace the constructor body of our class.\n *\n * @param {Node} method MethodDefinition\n */\n\nClass.prototype.pushConstructor = function (method) {\n  if (method.kind !== \"\") {\n    throw this.file.errorWithNode(method, \"illegal kind for constructor method\");\n  }\n\n  var construct = this.constructor;\n  var fn        = method.value;\n\n  this.hasConstructor = true;\n\n  t.inherits(construct, fn);\n  t.inheritsComments(construct, method);\n\n  construct.defaults = fn.defaults;\n  construct.params   = fn.params;\n  construct.body     = fn.body;\n  construct.rest     = fn.rest;\n};\n","var util = require(\"../../util\");\nvar t    = require(\"../../types\");\n\nexports.ObjectExpression = function (node, parent, file) {\n  var hasComputed = false;\n\n  var computed = [];\n\n  node.properties = node.properties.filter(function (prop) {\n    if (prop.computed) {\n      hasComputed = true;\n      computed.unshift(prop);\n      return false;\n    } else {\n      return true;\n    }\n  });\n\n  if (!hasComputed) return;\n\n  var objId = util.getUid(parent, file);\n\n  var container = util.template(\"function-return-obj\", {\n    KEY: objId,\n    OBJECT: node\n  });\n\n  var containerCallee = container.callee;\n  var containerBody = containerCallee.body.body;\n\n  containerCallee._aliasFunction = true;\n\n  for (var i in computed) {\n    var prop = computed[i];\n    containerBody.unshift(\n      t.expressionStatement(\n        t.assignmentExpression(\n          \"=\",\n          t.memberExpression(objId, prop.key, true),\n          prop.value\n        )\n      )\n    );\n  }\n\n  return container;\n};\n","var traverse = require(\"../../traverse\");\nvar t        = require(\"../../types\");\nvar _        = require(\"lodash\");\n\nexports.Program =\nexports.BlockStatement =\nexports.ForInStatement =\nexports.ForOfStatement =\nexports.ForStatement = function (node, parent, file) {\n  var hasConstants = false;\n  var constants = {};\n\n  /**\n   * Check the results of `util.getIds` as `names` generated from a\n   * node against it's parent.\n   */\n\n  var check = function (parent, names, scope) {\n    for (var name in names) {\n      var nameNode = names[name];\n      if (!_.has(constants, name)) continue;\n      if (parent && t.isBlockStatement(parent) && parent !== constants[name]) continue;\n\n      if (scope) {\n        var defined = scope.get(name);\n        if (defined && defined === nameNode) continue;\n      }\n\n      throw file.errorWithNode(nameNode, name + \" is read-only\");\n    }\n  };\n\n  var getIds = function (node) {\n    return t.getIds(node, true, [\"MemberExpression\"]);\n  };\n\n  /**\n   * Collect all constants in this scope.\n   */\n\n  _.each(node.body, function (child, parent) {\n    if (t.isExportDeclaration(child)) {\n      child = child.declaration;\n    }\n\n    if (t.isVariableDeclaration(child, { kind: \"const\" })) {\n      for (var i in child.declarations) {\n        var declar = child.declarations[i];\n\n        var ids = getIds(declar);\n        for (var name in ids) {\n          var nameNode = ids[name];\n\n          var names = {};\n          names[name] = nameNode;\n          check(parent, names);\n\n          constants[name] = parent;\n          hasConstants = true;\n        }\n\n        declar._ignoreConstant = true;\n      }\n\n      child._ignoreConstant = true;\n      child.kind = \"let\";\n    }\n  });\n\n  if (!hasConstants) return;\n\n  traverse(node, {\n    enter: function (child, parent, scope) {\n      if (child._ignoreConstant) return;\n      if (t.isVariableDeclaration(child)) return;\n\n      if (t.isVariableDeclarator(child) || t.isDeclaration(child) || t.isAssignmentExpression(child)) {\n        check(parent, getIds(child), scope);\n      }\n    }\n  });\n};\n","var traverse = require(\"../../traverse\");\nvar util     = require(\"../../util\");\nvar t        = require(\"../../types\");\nvar _        = require(\"lodash\");\n\nexports.Function = function (node, parent, file, scope) {\n  if (!node.defaults || !node.defaults.length) return;\n  t.ensureBlock(node);\n\n  var ids = node.params.map(function (param) {\n    return t.getIds(param);\n  });\n\n  var iife = false;\n  var i;\n  var def;\n\n  for (i in node.defaults) {\n    def = node.defaults[i];\n    if (!def) continue;\n\n    var param = node.params[i];\n\n    // temporal dead zone check - here we prevent accessing of params that\n    // are to the right - ie. uninitialized parameters\n    _.each(ids.slice(i), function (ids) {\n      var check = function (node, parent) {\n        if (!t.isIdentifier(node) || !t.isReferenced(node, parent)) return;\n\n        if (ids.indexOf(node.name) >= 0) {\n          throw file.errorWithNode(node, \"Temporal dead zone - accessing a variable before it's initialized\");\n        }\n\n        if (scope.has(node.name)) {\n          iife = true;\n        }\n      };\n\n      check(def, node);\n      traverse(def, { enter: check });\n    });\n\n    // we're accessing a variable that's already defined within this function\n    var has = scope.get(param.name);\n    if (has && node.params.indexOf(has) < 0) {\n      iife = true;\n    }\n  }\n\n  var body = [];\n\n  for (i in node.defaults) {\n    def = node.defaults[i];\n    if (!def) continue;\n\n    body.push(util.template(\"if-undefined-set-to\", {\n      VARIABLE: node.params[i],\n      DEFAULT:  def\n    }, true));\n  }\n\n  if (iife) {\n    var container = t.functionExpression(null, [], node.body, node.generator);\n    container._aliasFunction = true;\n\n    body.push(t.returnStatement(t.callExpression(container, [])));\n\n    node.body = t.blockStatement(body);\n  } else {\n    node.body.body = body.concat(node.body.body);\n  }\n\n  node.defaults = [];\n};\n","// TODO: Clean up\n\nvar t = require(\"../../types\");\n\nvar buildVariableAssign = function (opts, id, init) {\n  var op = opts.operator;\n  if (t.isMemberExpression(id)) op = \"=\";\n\n  if (op) {\n    return t.expressionStatement(t.assignmentExpression(\"=\", id, init));\n  } else {\n    return t.variableDeclaration(opts.kind, [\n      t.variableDeclarator(id, init)\n    ]);\n  }\n};\n\nvar push = function (opts, nodes, elem, parentId) {\n  if (t.isObjectPattern(elem)) {\n    pushObjectPattern(opts, nodes, elem, parentId);\n  } else if (t.isArrayPattern(elem)) {\n    pushArrayPattern(opts, nodes, elem, parentId);\n  } else {\n    nodes.push(buildVariableAssign(opts, elem, parentId));\n  }\n};\n\nvar pushObjectPattern = function (opts, nodes, pattern, parentId) {\n  for (var i in pattern.properties) {\n    var prop = pattern.properties[i];\n    if (t.isSpreadProperty(prop)) {\n        // get all the keys that appear in this object before the current spread\n        var keys = [];\n        for (var i2 in pattern.properties) {\n          var prop2 = pattern.properties[i2];\n\n          if (i2 >= i) break;\n          if (t.isSpreadProperty(prop2)) continue;\n\n          var key = prop2.key;\n          if (t.isIdentifier(key)) {\n            key = t.literal(prop2.key.name);\n          }\n          keys.push(key);\n        }\n        keys = t.arrayExpression(keys);\n\n        var value = t.callExpression(opts.file.addDeclaration(\"object-without-properties\"), [parentId, keys]);\n        nodes.push(buildVariableAssign(opts, prop.argument, value));\n    } else {\n      var pattern2   = prop.value;\n      var patternId2 = t.memberExpression(parentId, prop.key, prop.computed);\n\n      if (t.isPattern(pattern2)) {\n        push(opts, nodes, pattern2, patternId2);\n      } else {\n        nodes.push(buildVariableAssign(opts, pattern2, patternId2));\n      }\n    }\n  }\n};\n\nvar pushArrayPattern = function (opts, nodes, pattern, parentId) {\n  if (!pattern.elements) return;\n\n  var i;\n\n  var hasSpreadElement = false;\n  for (i in pattern.elements) {\n    if (t.isSpreadElement(pattern.elements[i])) {\n      hasSpreadElement = true;\n      break;\n    }\n  }\n\n  var toArray = opts.file.toArray(parentId, !hasSpreadElement && pattern.elements.length);\n\n  var _parentId = opts.file.generateUidIdentifier(\"ref\", opts.scope);\n  nodes.push(t.variableDeclaration(\"var\", [\n    t.variableDeclarator(_parentId, toArray)\n  ]));\n  parentId = _parentId;\n\n  for (i in pattern.elements) {\n    var elem = pattern.elements[i];\n    if (!elem) continue;\n\n    i = +i;\n\n    var newPatternId;\n\n    if (t.isSpreadElement(elem)) {\n      newPatternId = opts.file.toArray(parentId);\n\n      if (i > 0) {\n        newPatternId = t.callExpression(t.memberExpression(newPatternId, t.identifier(\"slice\")), [t.literal(i)]);\n      }\n\n      elem = elem.argument;\n    } else {\n      newPatternId = t.memberExpression(parentId, t.literal(i), true);\n    }\n\n    push(opts, nodes, elem, newPatternId);\n  }\n};\n\nvar pushPattern = function (opts) {\n  var nodes = opts.nodes;\n  var pattern = opts.pattern;\n  var parentId = opts.id;\n  var file = opts.file;\n  var scope = opts.scope;\n\n  if (!t.isMemberExpression(parentId) && !t.isIdentifier(parentId)) {\n    var key = file.generateUidIdentifier(\"ref\", scope);\n\n    nodes.push(t.variableDeclaration(\"var\", [\n      t.variableDeclarator(key, parentId)\n    ]));\n\n    parentId = key;\n  }\n\n  push(opts, nodes, pattern, parentId);\n};\n\nexports.ForInStatement =\nexports.ForOfStatement = function (node, parent, file, scope) {\n  var declar = node.left;\n  if (!t.isVariableDeclaration(declar)) return;\n\n  var pattern = declar.declarations[0].id;\n  if (!t.isPattern(pattern)) return;\n\n  var key = file.generateUidIdentifier(\"ref\", scope);\n  node.left = t.variableDeclaration(declar.kind, [\n    t.variableDeclarator(key, null)\n  ]);\n\n  var nodes = [];\n\n  push({\n    kind: declar.kind,\n    file: file,\n    scope: scope\n  }, nodes, pattern, key);\n\n  t.ensureBlock(node);\n\n  var block = node.body;\n  block.body = nodes.concat(block.body);\n};\n\nexports.Function = function (node, parent, file, scope) {\n  var nodes = [];\n\n  var hasDestructuring = false;\n\n  node.params = node.params.map(function (pattern) {\n    if (!t.isPattern(pattern)) return pattern;\n\n    hasDestructuring = true;\n    var parentId = file.generateUidIdentifier(\"ref\", scope);\n\n    pushPattern({\n      kind:    \"var\",\n      nodes:   nodes,\n      pattern: pattern,\n      id:      parentId,\n      file:    file,\n      scope:   scope\n    });\n\n    return parentId;\n  });\n\n  if (!hasDestructuring) return;\n\n  t.ensureBlock(node);\n\n  var block = node.body;\n  block.body = nodes.concat(block.body);\n};\n\nexports.ExpressionStatement = function (node, parent, file, scope) {\n  var expr = node.expression;\n  if (expr.type !== \"AssignmentExpression\") return;\n\n  if (!t.isPattern(expr.left)) return;\n\n  var nodes = [];\n\n  var ref = file.generateUidIdentifier(\"ref\", scope);\n  nodes.push(t.variableDeclaration(\"var\", [\n    t.variableDeclarator(ref, expr.right)\n  ]));\n\n  push({\n    operator: expr.operator,\n    file: file,\n    scope: scope\n  }, nodes, expr.left, ref);\n\n  return nodes;\n};\n\nexports.AssignmentExpression = function (node, parent, file, scope) {\n  if (parent.type === \"ExpressionStatement\") return;\n  if (!t.isPattern(node.left)) return;\n\n  var tempName = file.generateUid(\"temp\", scope);\n  var ref = t.identifier(tempName);\n  scope.push({\n    key: tempName,\n    id: ref\n  });\n\n  var nodes = [];\n  nodes.push(t.assignmentExpression(\"=\", ref, node.right));\n\n  push({\n    operator: node.operator,\n    file: file,\n    scope: scope\n  }, nodes, node.left, ref);\n\n  nodes.push(ref);\n\n  return t.toSequenceExpression(nodes, scope);\n};\n\nexports.VariableDeclaration = function (node, parent, file, scope) {\n  if (t.isForInStatement(parent) || t.isForOfStatement(parent)) return;\n\n  var nodes = [];\n  var i;\n  var declar;\n\n  var hasPattern = false;\n  for (i in node.declarations) {\n    declar = node.declarations[i];\n    if (t.isPattern(declar.id)) {\n      hasPattern = true;\n      break;\n    }\n  }\n  if (!hasPattern) return;\n\n  for (i in node.declarations) {\n    declar = node.declarations[i];\n\n    var patternId = declar.init;\n    var pattern   = declar.id;\n    var opts = {\n      kind:    node.kind,\n      nodes:   nodes,\n      pattern: pattern,\n      id:      patternId,\n      file:    file,\n      scope:   scope\n    };\n    if (t.isPattern(pattern) && patternId) {\n      pushPattern(opts);\n    } else {\n      nodes.push(buildVariableAssign(opts, declar.id, declar.init));\n    }\n  }\n\n  if (!t.isProgram(parent) && !t.isBlockStatement(parent)) {\n    declar = null;\n\n    for (i in nodes) {\n      node = nodes[i];\n      declar = declar || t.variableDeclaration(node.kind, []);\n\n      if (!t.isVariableDeclaration(node) && declar.kind !== node.kind) {\n        throw file.errorWithNode(node, \"Cannot use this node within the current parent\");\n      }\n\n      declar.declarations = declar.declarations.concat(node.declarations);\n    }\n\n    return declar;\n  }\n\n  return nodes;\n};\n","var util = require(\"../../util\");\nvar t    = require(\"../../types\");\n\nexports.ForOfStatement = function (node, parent, file, scope) {\n  var left = node.left;\n  var declar;\n\n  var stepKey   = file.generateUidIdentifier(\"step\", scope);\n  var stepValue = t.memberExpression(stepKey, t.identifier(\"value\"));\n\n  if (t.isIdentifier(left)) {\n    declar = t.expressionStatement(t.assignmentExpression(\"=\", left, stepValue));\n  } else if (t.isVariableDeclaration(left)) {\n    declar = t.variableDeclaration(left.kind, [\n      t.variableDeclarator(left.declarations[0].id, stepValue)\n    ]);\n  } else {\n    throw file.errorWithNode(left, \"Unknown node type \" + left.type + \" in ForOfStatement\");\n  }\n\n  var node2 = util.template(\"for-of\", {\n    ITERATOR_KEY: file.generateUidIdentifier(\"iterator\", scope),\n    STEP_KEY:     stepKey,\n    OBJECT:       node.right\n  });\n\n  t.inheritsComments(node2, node);\n  t.ensureBlock(node);\n\n  var block = node2.body;\n  block.body.push(declar);\n  block.body = block.body.concat(node.body.body);\n\n  return node2;\n};\n","module.exports = require(\"regenerator\").transform;\n","var traverse = require(\"../../traverse\");\nvar util     = require(\"../../util\");\nvar t        = require(\"../../types\");\nvar _        = require(\"lodash\");\n\nvar isLet = function (node, parent) {\n  if (!t.isVariableDeclaration(node)) return false;\n  if (node._let) return true;\n  if (node.kind !== \"let\") return false;\n\n  // https://github.com/6to5/6to5/issues/255\n  if (!t.isFor(parent) || t.isFor(parent) && parent.left !== node) {\n    _.each(node.declarations, function (declar) {\n      declar.init = declar.init || t.identifier(\"undefined\");\n    });\n  }\n\n  node._let = true;\n  node.kind = \"var\";\n  return true;\n};\n\nvar isVar = function (node, parent) {\n  return t.isVariableDeclaration(node, { kind: \"var\" }) && !isLet(node, parent);\n};\n\nvar standardiseLets = function (declars) {\n  for (var i in declars) {\n    delete declars[i]._let;\n  }\n};\n\nexports.VariableDeclaration = function (node, parent) {\n  isLet(node, parent);\n};\n\nexports.Loop = function (node, parent, file, scope) {\n  var init = node.left || node.init;\n  if (isLet(init, node)) {\n    t.ensureBlock(node);\n    node.body._letDeclars = [init];\n  }\n\n  if (t.isLabeledStatement(parent)) {\n    // set label so `run` has access to it\n    node.label = parent.label;\n  }\n\n  var letScoping = new LetScoping(node, node.body, parent, file, scope);\n  letScoping.run();\n\n  if (node.label && !t.isLabeledStatement(parent)) {\n    // we've been given a label so let's wrap ourselves\n    return t.labeledStatement(node.label, node);\n  }\n};\n\nexports.BlockStatement = function (block, parent, file, scope) {\n  if (!t.isLoop(parent)) {\n    var letScoping = new LetScoping(false, block, parent, file, scope);\n    letScoping.run();\n  }\n};\n\n/**\n * Description\n *\n * @param {Boolean|Node} loopParent\n * @param {Node} block\n * @param {Node} parent\n * @param {File} file\n * @param {Scope} scope\n */\n\nfunction LetScoping(loopParent, block, parent, file, scope) {\n  this.loopParent = loopParent;\n  this.parent     = parent;\n  this.scope      = scope;\n  this.block      = block;\n  this.file       = file;\n\n  this.letReferences = {};\n  this.body          = [];\n}\n\n/**\n * Start the ball rolling.\n */\n\nLetScoping.prototype.run = function () {\n  var block = this.block;\n\n  if (block._letDone) return;\n  block._letDone = true;\n\n  this.info = this.getInfo();\n\n  // remap all let references that exist in upper scopes to their uid\n  this.remap();\n\n  // this is a block within a `Function` so we can safely leave it be\n  if (t.isFunction(this.parent)) return this.noClosure();\n\n  // this block has no let references so let's clean up\n  if (!this.info.keys.length) return this.noClosure();\n\n  // returns whether or not there are any outside let references within any\n  // functions\n  var referencesInClosure = this.getLetReferences();\n\n  // no need for a closure so let's clean up\n  if (!referencesInClosure) return this.noClosure();\n\n  // if we're inside of a for loop then we search to see if there are any\n  // `break`s, `continue`s, `return`s etc\n  this.has = this.checkLoop();\n\n  // hoist var references to retain scope\n  this.hoistVarDeclarations();\n\n  // set let references to plain var references\n  standardiseLets(this.info.declarators);\n\n  // turn letReferences into an array\n  var letReferences = _.values(this.letReferences);\n\n  // build the closure that we're going to wrap the block with\n  var fn = t.functionExpression(null, letReferences, t.blockStatement(block.body));\n  fn._aliasFunction = true;\n\n  // replace the current block body with the one we're going to build\n  block.body = this.body;\n\n  // change upper scope references with their uid if they have one\n  var params = this.getParams(letReferences);\n\n  // build a call and a unique id that we can assign the return value to\n  var call = t.callExpression(fn, params);\n  var ret  = this.file.generateUidIdentifier(\"ret\", this.scope);\n\n  var hasYield = traverse.hasType(fn.body, \"YieldExpression\", t.FUNCTION_TYPES);\n  if (hasYield) {\n    fn.generator = true;\n    call = t.yieldExpression(call, true);\n  }\n\n  this.build(ret, call);\n};\n\n/**\n * There are no let references accessed within a closure so we can just turn the\n * lets into vars.\n */\n\nLetScoping.prototype.noClosure = function () {\n  standardiseLets(this.info.declarators);\n};\n\n/**\n * Traverse through block and replace all references that exist in a higher\n * scope to their uids.\n */\n\nLetScoping.prototype.remap = function () {\n  var replacements = this.info.duplicates;\n  var block        = this.block;\n\n  if (!this.info.hasDuplicates) return;\n\n  var replace = function (node, parent, scope) {\n    if (!t.isIdentifier(node)) return;\n    if (!t.isReferenced(node, parent)) return;\n    if (scope && scope.hasOwn(node.name)) return;\n    node.name = replacements[node.name] || node.name;\n  };\n\n  var traverseReplace = function (node, parent) {\n    replace(node, parent);\n    traverse(node, { enter: replace });\n  };\n\n  var loopParent = this.loopParent;\n  if (loopParent) {\n    traverseReplace(loopParent.right, loopParent);\n    traverseReplace(loopParent.test, loopParent);\n    traverseReplace(loopParent.update, loopParent);\n  }\n\n  traverse(block, { enter: replace });\n};\n\n/**\n * Description\n *\n * @returns {Object}\n */\n\nLetScoping.prototype.getInfo = function () {\n  var block = this.block;\n  var scope = this.scope;\n  var file  = this.file;\n\n  var opts = {\n    // array of `Identifier` names of let variables that appear lexically out of\n    // this scope but should be accessible - eg. `ForOfStatement`.left\n    outsideKeys: [],\n\n    // array of let `VariableDeclarator`s that are a part of this block\n    declarators: block._letDeclars || [],\n\n    // object of duplicate ids and their aliases - if there's an `Identifier`\n    // name that's used in an upper scope we generate a unique id and replace\n    // all references with it\n    duplicates:  {},\n\n    hasDuplicates: false,\n\n    // array of `Identifier` names of let variables that are accessible within\n    // the current block\n    keys:        []\n  };\n\n  var duplicates = function (id, key) {\n    var has = scope.parentGet(key);\n\n    if (has && has !== id) {\n      // there's a variable with this exact name in an upper scope so we need\n      // to generate a new name\n      opts.duplicates[key] = id.name = file.generateUid(key, scope);\n      opts.hasDuplicates = true;\n    }\n  };\n\n  var i;\n  var declar;\n\n  for (i in opts.declarators) {\n    declar = opts.declarators[i];\n    opts.declarators.push(declar);\n\n    var keys = t.getIds(declar, true);\n    _.each(keys, duplicates);\n    keys = Object.keys(keys);\n\n    opts.outsideKeys = opts.outsideKeys.concat(keys);\n    opts.keys = opts.keys.concat(keys);\n  }\n\n  for (i in block.body) {\n    declar = block.body[i];\n    if (!isLet(declar, block)) continue;\n\n    _.each(t.getIds(declar, true), function (id, key) {\n      duplicates(id, key);\n      opts.keys.push(key);\n    });\n  }\n\n  return opts;\n};\n\n/**\n * If we're inside of a loop then traverse it and check if it has one of\n * the following node types `ReturnStatement`, `BreakStatement`,\n * `ContinueStatement` and replace it with a return value that we can track\n * later on.\n *\n * @returns {Object}\n */\n\nLetScoping.prototype.checkLoop = function () {\n  var has = {\n    hasContinue: false,\n    hasReturn:   false,\n    hasBreak:    false,\n  };\n\n  traverse(this.block, {\n    enter: function (node, parent) {\n      var replace;\n\n      if (t.isFunction(node) || t.isLoop(node)) {\n        return false;\n      }\n\n      if (node && !node.label) {\n        if (t.isBreakStatement(node)) {\n          if (t.isSwitchCase(parent)) return;\n\n          has.hasBreak = true;\n          replace = t.returnStatement(t.literal(\"break\"));\n        } else if (t.isContinueStatement(node)) {\n          has.hasContinue = true;\n          replace = t.returnStatement(t.literal(\"continue\"));\n        }\n      }\n\n      if (t.isReturnStatement(node)) {\n        has.hasReturn = true;\n        replace = t.returnStatement(t.objectExpression([\n          t.property(\"init\", t.identifier(\"v\"), node.argument || t.identifier(\"undefined\"))\n        ]));\n      }\n\n      if (replace) return t.inherits(replace, node);\n    }\n  });\n\n  return has;\n};\n\n/**\n * Hoist all var declarations in this block to before it so they retain scope\n * once we wrap everything in a closure.\n */\n\nLetScoping.prototype.hoistVarDeclarations = function () {\n  var self = this;\n  traverse(this.block, {\n    enter: function (node, parent) {\n      if (t.isForStatement(node)) {\n        if (isVar(node.init, node)) {\n          node.init = t.sequenceExpression(self.pushDeclar(node.init));\n        }\n      } else if (t.isFor(node)) {\n        if (isVar(node.left, node)) {\n          node.left = node.left.declarations[0].id;\n        }\n      } else if (isVar(node, parent)) {\n        return self.pushDeclar(node).map(t.expressionStatement);\n      } else if (t.isFunction(node)) {\n        return false;\n      }\n    }\n  });\n};\n\n/**\n * Build up a parameter list that we'll call our closure wrapper with, replacing\n * all duplicate ids with their uid.\n *\n * @param {Array} params\n * @returns {Array}\n */\n\nLetScoping.prototype.getParams = function (params) {\n  var info = this.info;\n  params = _.cloneDeep(params);\n  _.each(params, function (param) {\n    param.name = info.duplicates[param.name] || param.name;\n  });\n  return params;\n};\n\n/**\n * Get all let references within this block. Stopping whenever we reach another\n * block.\n */\n\nLetScoping.prototype.getLetReferences = function () {\n  var closurify = false;\n  var self = this;\n\n  // traverse through this block, stopping on functions and checking if they\n  // contain any outside let references\n  traverse(this.block, {\n    enter: function (node, parent, scope) {\n      if (t.isFunction(node)) {\n        traverse(node, {\n          enter: function (node, parent) {\n            // not an identifier so we have no use\n            if (!t.isIdentifier(node)) return;\n\n            // not a direct reference\n            if (!t.isReferenced(node, parent)) return;\n\n            // this scope has a variable with the same name so it couldn't belong\n            // to our let scope\n            if (scope.hasOwn(node.name)) return;\n\n            closurify = true;\n\n            // this key doesn't appear just outside our scope\n            if (!_.contains(self.info.outsideKeys, node.name)) return;\n\n            // push this badboy\n            self.letReferences[node.name] = node;\n          }\n        });\n\n        return false;\n      } else if (t.isLoop(node)) {\n        return false;\n      }\n    }\n  });\n\n  return closurify;\n};\n\n/**\n * Turn a `VariableDeclaration` into an array of `AssignmentExpressions` with\n * their declarations hoisted to before the closure wrapper.\n *\n * @param {Node} node VariableDeclaration\n * @returns {Array}\n */\n\nLetScoping.prototype.pushDeclar = function (node) {\n  this.body.push(t.variableDeclaration(node.kind, node.declarations.map(function (declar) {\n    return t.variableDeclarator(declar.id);\n  })));\n\n  var replace = [];\n\n  for (var i in node.declarations) {\n    var declar = node.declarations[i];\n    if (!declar.init) continue;\n\n    var expr = t.assignmentExpression(\"=\", declar.id, declar.init);\n    replace.push(t.inherits(expr, declar));\n  }\n\n  return replace;\n};\n\n/**\n * Push the closure to the body.\n *\n * @param {Node} ret Identifier\n * @param {Node} call CallExpression\n */\n\nLetScoping.prototype.build = function (ret, call) {\n  var has = this.has;\n  if (has.hasReturn || has.hasBreak || has.hasContinue) {\n    this.buildHas(ret, call);\n  } else {\n    this.body.push(t.expressionStatement(call));\n  }\n};\n\n/**\n * Description\n *\n * @param {Node} ret Identifier\n * @param {Node} call CallExpression\n */\n\nLetScoping.prototype.buildHas = function (ret, call) {\n  var body = this.body;\n\n  body.push(t.variableDeclaration(\"var\", [\n    t.variableDeclarator(ret, call)\n  ]));\n\n  var loopParent = this.loopParent;\n  var retCheck;\n  var has = this.has;\n  var cases = [];\n\n  if (has.hasReturn) {\n    // typeof ret === \"object\"\n    retCheck = util.template(\"let-scoping-return\", {\n      RETURN: ret\n    });\n  }\n\n  if (has.hasBreak || has.hasContinue) {\n    // ensure that the parent has a label as we're building a switch and we\n    // need to be able to access it\n    var label = loopParent.label = loopParent.label || this.file.generateUidIdentifier(\"loop\", this.scope);\n\n    if (has.hasBreak) {\n      cases.push(t.switchCase(t.literal(\"break\"), [t.breakStatement(label)]));\n    }\n\n    if (has.hasContinue) {\n      cases.push(t.switchCase(t.literal(\"continue\"), [t.continueStatement(label)]));\n    }\n\n    if (has.hasReturn) {\n      cases.push(t.switchCase(null, [retCheck]));\n    }\n\n    if (cases.length === 1) {\n      var single = cases[0];\n      body.push(t.ifStatement(\n        t.binaryExpression(\"===\", ret, single.test),\n        single.consequent[0]\n      ));\n    } else {\n      body.push(t.switchStatement(ret, cases));\n    }\n  } else {\n    if (has.hasReturn) body.push(retCheck);\n  }\n};\n","var t = require(\"../../types\");\n\nexports.ImportDeclaration = function (node, parent, file) {\n  var nodes = [];\n\n  if (node.specifiers.length) {\n    for (var i in node.specifiers) {\n      file.moduleFormatter.importSpecifier(node.specifiers[i], node, nodes, parent);\n    }\n  } else {\n    file.moduleFormatter.importDeclaration(node, nodes, parent);\n  }\n\n  return nodes;\n};\n\nexports.ExportDeclaration = function (node, parent, file) {\n  var nodes = [];\n\n  if (node.declaration) {\n    // make sure variable exports have an initialiser\n    // this is done here to avoid duplicating it in the module formatters\n    if (t.isVariableDeclaration(node.declaration)) {\n      var declar = node.declaration.declarations[0];\n      declar.init = declar.init || t.identifier(\"undefined\");\n    }\n\n    file.moduleFormatter.exportDeclaration(node, nodes, parent);\n  } else {\n    for (var i in node.specifiers) {\n      file.moduleFormatter.exportSpecifier(node.specifiers[i], node, nodes, parent);\n    }\n  }\n\n  return nodes;\n};\n","var t = require(\"../../types\");\nvar _ = require(\"lodash\");\n\nexports.Property = function (node) {\n  if (!node.shorthand) return;\n  node.shorthand = false;\n  node.key = t.removeComments(_.clone(node.key));\n};\n","var t = require(\"../../types\");\n\nexports.Function = function (node, parent, file) {\n  if (!node.rest) return;\n\n  var rest = node.rest;\n  delete node.rest;\n\n  t.ensureBlock(node);\n\n  var call = file.toArray(t.identifier(\"arguments\"));\n\n  if (node.params.length) {\n    call.arguments.push(t.literal(node.params.length));\n  }\n\n  call._ignoreAliasFunctions = true;\n\n  node.body.body.unshift(t.variableDeclaration(\"var\", [\n    t.variableDeclarator(rest, call)\n  ]));\n};\n","var t = require(\"../../types\");\n\nvar getSpreadLiteral = function (spread, file) {\n  return file.toArray(spread.argument);\n};\n\nvar hasSpread = function (nodes) {\n  for (var i in nodes) {\n    if (t.isSpreadElement(nodes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\nvar build = function (props, file) {\n  var nodes = [];\n\n  var _props = [];\n\n  var push = function () {\n    if (!_props.length) return;\n    nodes.push(t.arrayExpression(_props));\n    _props = [];\n  };\n\n  for (var i in props) {\n    var prop = props[i];\n    if (t.isSpreadElement(prop)) {\n      push();\n      nodes.push(getSpreadLiteral(prop, file));\n    } else {\n      _props.push(prop);\n    }\n  }\n\n  push();\n\n  return nodes;\n};\n\nexports.ArrayExpression = function (node, parent, file) {\n  var elements = node.elements;\n  if (!hasSpread(elements)) return;\n\n  var nodes = build(elements, file);\n  var first = nodes.shift();\n\n  if (!t.isArrayExpression(first)) {\n    nodes.unshift(first);\n    first = t.arrayExpression([]);\n  }\n\n  return t.callExpression(t.memberExpression(first, t.identifier(\"concat\")), nodes);\n};\n\nexports.CallExpression = function (node, parent, file, scope) {\n  var args = node.arguments;\n  if (!hasSpread(args)) return;\n\n  var contextLiteral = t.literal(null);\n\n  node.arguments = [];\n\n  var nodes;\n  if (args.length === 1 && args[0].argument.name === 'arguments') {\n    nodes = [args[0].argument];\n  } else {\n    nodes = build(args, file);\n  }\n  var first = nodes.shift();\n\n  if (nodes.length) {\n    node.arguments.push(t.callExpression(t.memberExpression(first, t.identifier(\"concat\")), nodes));\n  } else {\n    node.arguments.push(first);\n  }\n\n  var callee = node.callee;\n  var temp;\n\n  if (t.isMemberExpression(callee)) {\n    contextLiteral = callee.object;\n\n    if (t.isDynamic(contextLiteral)) {\n      temp = contextLiteral = scope.generateTemp(file);\n      callee.object = t.assignmentExpression(\"=\", temp, callee.object);\n    }\n\n    if (callee.computed) {\n      callee.object = t.memberExpression(callee.object, callee.property, true);\n      callee.property = t.identifier(\"apply\");\n      callee.computed = false;\n    } else {\n      callee.property = t.memberExpression(callee.property, t.identifier(\"apply\"));\n    }\n  } else {\n    node.callee = t.memberExpression(node.callee, t.identifier(\"apply\"));\n  }\n\n  node.arguments.unshift(contextLiteral);\n};\n\nexports.NewExpression = function (node, parent, file) {\n  var args = node.arguments;\n  if (!hasSpread(args)) return;\n\n  var nodes = build(args, file);\n  var first = nodes.shift();\n\n  if (nodes.length) {\n    args = t.callExpression(t.memberExpression(first, t.identifier(\"concat\")), nodes);\n  } else {\n    args = first;\n  }\n\n  return t.callExpression(file.addDeclaration(\"apply-constructor\"), [node.callee, args]);\n};\n","var t = require(\"../../types\");\n\nvar buildBinaryExpression = function (left, right) {\n  return t.binaryExpression(\"+\", left, right);\n};\n\nexports.TaggedTemplateExpression = function (node, parent, file) {\n  var args = [];\n  var quasi = node.quasi;\n\n  var strings = [];\n  var raw = [];\n\n  for (var i in quasi.quasis) {\n    var elem = quasi.quasis[i];\n    strings.push(t.literal(elem.value.cooked));\n    raw.push(t.literal(elem.value.raw));\n  }\n\n  args.push(t.callExpression(file.addDeclaration(\"tagged-template-literal\"), [\n    t.arrayExpression(strings),\n    t.arrayExpression(raw)\n  ]));\n\n  args = args.concat(quasi.expressions);\n\n  return t.callExpression(node.tag, args);\n};\n\nexports.TemplateLiteral = function (node) {\n  var nodes = [];\n  var i;\n\n  for (i in node.quasis) {\n    var elem = node.quasis[i];\n\n    nodes.push(t.literal(elem.value.cooked));\n\n    var expr = node.expressions.shift();\n    if (expr) nodes.push(expr);\n  }\n\n  if (nodes.length > 1) {\n    // remove redundant '' at the end of the expression\n    var last = nodes[nodes.length - 1];\n    if (t.isLiteral(last, { value: \"\" })) nodes.pop();\n\n    var root = buildBinaryExpression(nodes.shift(), nodes.shift());\n\n    for (i in nodes) {\n      root = buildBinaryExpression(root, nodes[i]);\n    }\n\n    return root;\n  } else {\n    return nodes[0];\n  }\n};\n","var rewritePattern = require(\"regexpu/rewrite-pattern\");\nvar _              = require(\"lodash\");\n\nexports.Literal = function (node) {\n  var regex = node.regex;\n  if (!regex) return;\n\n  var flags = regex.flags.split(\"\");\n  if (regex.flags.indexOf(\"u\") < 0) return;\n  _.pull(flags, \"u\");\n\n  regex.pattern = rewritePattern(regex.pattern, regex.flags);\n  regex.flags   = flags.join(\"\");\n};\n","// https://github.com/zenparsing/es-abstract-refs\n\nvar util = require(\"../../util\");\nvar t    = require(\"../../types\");\n\nvar container = function (parent, call, ret) {\n  if (t.isExpressionStatement(parent)) {\n    // we don't need to worry about return values\n    return call;\n  } else {\n    var exprs = [];\n    if (t.isSequenceExpression(call)) {\n      exprs = call.expressions;\n    } else {\n      exprs.push(call);\n    }\n    exprs.push(ret);\n    return t.sequenceExpression(exprs);\n  }\n};\n\nexports.AssignmentExpression = function (node, parent, file, scope) {\n  var left = node.left;\n  if (!t.isVirtualPropertyExpression(left)) return;\n\n  var value = node.right;\n  var temp;\n\n  // we need to return `node.right`\n  if (!t.isExpressionStatement(parent)) {\n    // `node.right` isn't a simple identifier so we need to reference it\n    if (t.isDynamic(value)) {\n      temp = value = scope.generateTemp(file);\n    }\n  }\n\n  if (node.operator !== \"=\") {\n    value = t.binaryExpression(\n      node.operator[0],\n      util.template(\"abstract-expression-get\", {\n        PROPERTY: node.property,\n        OBJECT:   node.object\n      }),\n      value\n    );\n  }\n\n  var call = util.template(\"abstract-expression-set\", {\n    PROPERTY: left.property,\n    OBJECT:   left.object,\n    VALUE:    value\n  });\n\n  if (temp) {\n    call = t.sequenceExpression([\n      t.assignmentExpression(\"=\", temp, node.right),\n      call\n    ]);\n  }\n\n  return container(parent, call, value);\n};\n\nexports.UnaryExpression = function (node, parent) {\n  var arg = node.argument;\n  if (!t.isVirtualPropertyExpression(arg)) return;\n  if (node.operator !== \"delete\") return;\n\n  var call = util.template(\"abstract-expression-delete\", {\n    PROPERTY: arg.property,\n    OBJECT:   arg.object\n  });\n\n  return container(parent, call, t.literal(true));\n};\n\nexports.CallExpression = function (node, parent, file, scope) {\n  var callee = node.callee;\n  if (!t.isVirtualPropertyExpression(callee)) return;\n\n  var temp;\n  if (t.isDynamic(callee.object)) {\n    // we need to save `callee.object` so we can call it again\n    temp = scope.generateTemp(file);\n  }\n\n  var call = util.template(\"abstract-expression-call\", {\n    PROPERTY: callee.property,\n    OBJECT:   temp || callee.object\n  });\n\n  call.arguments = call.arguments.concat(node.arguments);\n\n  if (temp) {\n    return t.sequenceExpression([\n      t.assignmentExpression(\"=\", temp, callee.object),\n      call\n    ]);\n  } else {\n    return call;\n  }\n};\n\nexports.VirtualPropertyExpression = function (node) {\n  return util.template(\"abstract-expression-get\", {\n    PROPERTY: node.property,\n    OBJECT:   node.object\n  });\n};\n\nexports.PrivateDeclaration = function (node) {\n  return t.variableDeclaration(\"const\", node.declarations.map(function (id) {\n    return t.variableDeclarator(id, t.newExpression(t.identifier(\"WeakMap\"), []));\n  }));\n};\n","var util = require(\"../../util\");\nvar t    = require(\"../../types\");\n\nvar single = function (node, file) {\n  var block = node.blocks[0];\n\n  var templateName = \"array-expression-comprehension-map\";\n  if (node.filter) templateName = \"array-expression-comprehension-filter\";\n\n  var result = util.template(templateName, {\n    STATEMENT: node.body,\n    FILTER:    node.filter,\n    ARRAY:     file.toArray(block.right),\n    KEY:       block.left\n  });\n\n  var aliasPossibles = [result.callee.object, result];\n  for (var i in aliasPossibles) {\n    var call = aliasPossibles[i];\n    if (t.isCallExpression(call)) {\n      call.arguments[0]._aliasFunction = true;\n    }\n  }\n\n  return result;\n};\n\nvar multiple = function (node, file) {\n  var uid = file.generateUidIdentifier(\"arr\");\n\n  var container = util.template(\"array-comprehension-container\", {\n    KEY: uid\n  });\n  container.callee.expression._aliasFunction = true;\n\n  var block = container.callee.body;\n  var body  = block.body;\n\n  var returnStatement = body.pop();\n\n  body.push(exports._build(node, function () {\n    return util.template(\"array-push\", {\n      STATEMENT: node.body,\n      KEY:       uid\n    }, true);\n  }));\n  body.push(returnStatement);\n\n  return container;\n};\n\nexports._build = function (node, buildBody) {\n  var self = node.blocks.shift();\n  if (!self) return;\n\n  var child = exports._build(node, buildBody);\n  if (!child) {\n    // last item\n    child = buildBody();\n\n    // add a filter as this is our final stop\n    if (node.filter) {\n      child = t.ifStatement(node.filter, t.blockStatement([child]));\n    }\n  }\n\n  return t.forOfStatement(\n    t.variableDeclaration(\"var\", [t.variableDeclarator(self.left)]),\n    self.right,\n    t.blockStatement([child])\n  );\n};\n\nexports.ComprehensionExpression = function (node, parent, file) {\n  if (node.generator) return;\n\n  if (node.blocks.length === 1) {\n    return single(node, file);\n  } else {\n    return multiple(node, file);\n  }\n};\n","// https://github.com/rwaldron/exponentiation-operator\n\nvar t = require(\"../../types\");\nvar pow = t.memberExpression(t.identifier(\"Math\"), t.identifier(\"pow\"));\n\nexports.AssignmentExpression = function (node) {\n  if (node.operator !== \"**=\") return;\n  node.operator = \"=\";\n  node.right = t.callExpression(pow, [node.left, node.right]);\n};\n\nexports.BinaryExpression = function (node) {\n  if (node.operator !== \"**\") return;\n\n  return t.callExpression(pow, [node.left, node.right]);\n};\n","var arrayComprehension = require(\"./es7-array-comprehension\");\nvar t                  = require(\"../../types\");\n\nexports.ComprehensionExpression = function (node) {\n  if (!node.generator) return;\n\n  var body = [];\n  var container = t.functionExpression(null, [], t.blockStatement(body), true);\n  container._aliasFunction = true;\n\n  body.push(arrayComprehension._build(node, function () {\n    return t.expressionStatement(t.yieldExpression(node.body));\n  }));\n\n  return t.callExpression(container, []);\n};\n","// https://github.com/sebmarkbage/ecmascript-rest-spread\n\nvar t = require(\"../../types\");\n\nexports.ObjectExpression = function (node) {\n  var hasSpread = false;\n  var i;\n  var prop;\n  for (i in node.properties) {\n    prop = node.properties[i];\n    if (t.isSpreadProperty(prop)) {\n      hasSpread = true;\n      break;\n    }\n  }\n  if (!hasSpread) return;\n\n  var args = [];\n  var props = [];\n\n  var push = function () {\n    if (!props.length) return;\n    args.push(t.objectExpression(props));\n    props = [];\n  };\n\n  for (i in node.properties) {\n    prop = node.properties[i];\n    if (t.isSpreadProperty(prop)) {\n      push();\n      args.push(prop.argument);\n    } else {\n      props.push(prop);\n    }\n  }\n\n  push();\n\n  if (!t.isObjectExpression(args[0])) {\n    args.unshift(t.objectExpression([]));\n  }\n\n  return t.callExpression(t.memberExpression(t.identifier(\"Object\"), t.identifier(\"assign\")), args);\n};\n","var t = require(\"../../types\");\n\nvar isMemo = function (node) {\n  var is = t.isAssignmentExpression(node) && node.operator === \"?=\";\n  if (is) t.assertMemberExpression(node.left);\n  return is;\n};\n\nvar getPropRef = function (nodes, prop, file, scope) {\n  if (t.isIdentifier(prop)) {\n    return t.literal(prop.name);\n  } else {\n    var temp = file.generateUidIdentifier(\"propKey\", scope);\n    nodes.push(t.variableDeclaration(\"var\", [\n      t.variableDeclarator(temp, prop)\n    ]));\n    return temp;\n  }\n};\n\nvar getObjRef = function (nodes, obj, file, scope) {\n  if (t.isDynamic(obj)) {\n    var temp = file.generateUidIdentifier(\"obj\", scope);\n    nodes.push(t.variableDeclaration(\"var\", [\n      t.variableDeclarator(temp, obj)\n    ]));\n    return temp;\n  } else {\n    return obj;\n  }\n};\n\nvar buildHasOwn = function (obj, prop, file) {\n  return t.unaryExpression(\n    \"!\",\n    t.callExpression(\n      t.memberExpression(file.addDeclaration(\"has-own\"), t.identifier(\"call\")),\n      [obj, prop]\n    ),\n    true\n  );\n};\n\nvar buildAbsoluteRef = function (left, obj, prop) {\n  var computed = left.computed || t.isLiteral(prop);\n  return t.memberExpression(obj, prop, computed);\n};\n\nvar buildAssignment = function (expr, obj, prop) {\n  return t.assignmentExpression(\"=\", buildAbsoluteRef(expr.left, obj, prop), expr.right);\n};\n\nexports.ExpressionStatement = function (node, parent, file, scope) {\n  var expr = node.expression;\n  if (!isMemo(expr)) return;\n\n  var nodes = [];\n\n  var left = expr.left;\n  var obj  = getObjRef(nodes, left.object, file, scope);\n  var prop = getPropRef(nodes, left.property, file, scope);\n\n  nodes.push(t.ifStatement(\n    buildHasOwn(obj, prop, file),\n    t.expressionStatement(buildAssignment(expr, obj, prop))\n  ));\n\n  return nodes;\n};\n\nexports.AssignmentExpression = function (node, parent, file, scope) {\n  if (t.isExpressionStatement(parent)) return;\n  if (!isMemo(node)) return;\n\n  var nodes = [];\n\n  var left = node.left;\n  var obj  = getObjRef(nodes, left.object, file, scope);\n  var prop = getPropRef(nodes, left.property, file, scope);\n\n  nodes.push(t.logicalExpression(\n    \"&&\",\n    buildHasOwn(obj, prop, file),\n    buildAssignment(node, obj, prop)\n  ));\n\n  nodes.push(buildAbsoluteRef(left, obj, prop));\n\n  return t.toSequenceExpression(nodes, scope);\n};\n","var t = require(\"../../types\");\nvar _ = require(\"lodash\");\n\nexports.BindMemberExpression = function (node, parent, file, scope) {\n  var object = node.object;\n  var prop   = node.property;\n\n  var temp;\n  if (t.isDynamic(object)) {\n    temp = object = scope.generateTemp(file);\n  }\n\n  var call = t.callExpression(\n    t.memberExpression(t.memberExpression(object, prop), t.identifier(\"bind\")),\n    [object].concat(node.arguments)\n  );\n\n  if (temp) {\n    return t.sequenceExpression([\n      t.assignmentExpression(\"=\", temp, node.object),\n      call\n    ]);\n  } else {\n    return call;\n  }\n};\n\nexports.BindFunctionExpression = function (node, parent, file, scope) {\n  var buildCall = function (args) {\n    var param = file.generateUidIdentifier(\"val\", scope);\n    return t.functionExpression(null, [param], t.blockStatement([\n      t.returnStatement(t.callExpression(t.memberExpression(param, node.callee), args))\n    ]));\n  };\n\n  if (_.find(node.arguments, t.isDynamic)) {\n    var temp = scope.generateTemp(file, \"args\");\n\n    return t.sequenceExpression([\n      t.assignmentExpression(\"=\", temp, t.arrayExpression(node.arguments)),\n      buildCall(node.arguments.map(function (node, i) {\n        return t.memberExpression(temp, t.literal(i), true);\n      }))\n    ]);\n  } else {\n    return buildCall(node.arguments);\n  }\n};\n","var traverse = require(\"../../traverse\");\nvar t        = require(\"../../types\");\n\nexports.Property =\nexports.MethodDefinition = function (node, parent, file, scope) {\n  if (node.kind !== \"memo\") return;\n  node.kind = \"get\";\n\n  var value = node.value;\n  t.ensureBlock(value);\n\n  var body  = value.body.body;\n  var key   = node.key;\n\n  if (t.isIdentifier(key) && !node.computed) {\n    key = \"_\" + key.name;\n  } else {\n    key = file.generateUid(\"memo\", scope);\n  }\n\n  var memoId = t.memberExpression(t.thisExpression(), t.identifier(key));\n  var doneId = t.memberExpression(t.thisExpression(), t.identifier(key + \"Done\"));\n\n  traverse(value, {\n    enter: function (node) {\n      if (t.isFunction(node)) return;\n\n      if (t.isReturnStatement(node) && node.argument) {\n        node.argument = t.assignmentExpression(\"=\", memoId, node.argument);\n      }\n    }\n  });\n\n  // this._barDone = true;\n  body.unshift(t.expressionStatement(t.assignmentExpression(\"=\", doneId, t.literal(true))));\n\n  // if (this._barDone) return this._bar;\n  body.unshift(t.ifStatement(doneId, t.returnStatement(memoId)));\n};\n","// Based upon the excellent jsx-transpiler by Ingvar Stepanyan (RReverser)\n// https://github.com/RReverser/jsx-transpiler\n\n// jsx\n\nvar esutils = require(\"esutils\");\nvar t       = require(\"../../types\");\n\nexports.XJSIdentifier = function (node) {\n  if (esutils.keyword.isIdentifierName(node.name)) {\n    node.type = \"Identifier\";\n  } else {\n    return t.literal(node.name);\n  }\n};\n\nexports.XJSNamespacedName = function (node, parent, file) {\n  throw file.errorWithNode(node, \"Namespace tags are not supported. ReactJSX is not XML.\");\n};\n\nexports.XJSMemberExpression = {\n  exit: function (node) {\n    node.computed = t.isLiteral(node.property);\n    node.type = \"MemberExpression\";\n  }\n};\n\nexports.XJSExpressionContainer = function (node) {\n  return node.expression;\n};\n\nexports.XJSAttribute = {\n  exit: function (node) {\n    var value = node.value || t.literal(true);\n    return t.property(\"init\", node.name, value);\n  }\n};\n\nexports.XJSOpeningElement = {\n  exit: function (node) {\n    var tagExpr = node.name;\n    var args = [];\n\n    var tagName;\n    if (t.isIdentifier(tagExpr)) {\n      tagName = tagExpr.name;\n    } else if (t.isLiteral(tagExpr)) {\n      tagName = tagExpr.value;\n    }\n\n    if (tagName && (/[a-z]/.exec(tagName[0]) || tagName.indexOf(\"-\") >= 0)) {\n      args.push(t.literal(tagName));\n    } else {\n      args.push(tagExpr);\n    }\n\n    var props = node.attributes;\n    if (props.length) {\n      var _props = [];\n      var objs = [];\n\n      var pushProps = function () {\n        if (!_props.length) return;\n\n        objs.push(t.objectExpression(_props));\n        _props = [];\n      };\n\n      while (props.length) {\n        var prop = props.shift();\n        if (t.isXJSSpreadAttribute(prop)) {\n          pushProps();\n          objs.push(prop.argument);\n        } else {\n          _props.push(prop);\n        }\n      }\n\n      pushProps();\n\n      if (objs.length === 1) {\n        props = objs[0];\n      } else {\n        if (!t.isObjectExpression(objs[0])) {\n          objs.unshift(t.objectExpression([]));\n        }\n\n        props = t.callExpression(\n          t.memberExpression(t.identifier(\"React\"), t.identifier(\"__spread\")),\n          objs\n        );\n      }\n    } else {\n      props = t.literal(null);\n    }\n\n    args.push(props);\n\n    tagExpr = t.memberExpression(t.identifier(\"React\"), t.identifier(\"createElement\"));\n    return t.callExpression(tagExpr, args);\n  }\n};\n\nexports.XJSElement = {\n  exit: function (node) {\n    var callExpr = node.openingElement;\n    var i;\n\n    for (i in node.children) {\n      var child = node.children[i];\n\n      if (t.isLiteral(child)) {\n        var lines = child.value.split(/\\r\\n|\\n|\\r/);\n\n        for (i in lines) {\n          var line = lines[i];\n\n          var isFirstLine = i === \"0\";\n          var isLastLine = +i === lines.length - 1;\n\n          // replace rendered whitespace tabs with spaces\n          var trimmedLine = line.replace(/\\t/g, ' ');\n\n          // trim whitespace touching a newline\n          if (!isFirstLine) {\n            trimmedLine = trimmedLine.replace(/^[ ]+/, '');\n          }\n\n          // trim whitespace touching an endline\n          if (!isLastLine) {\n            trimmedLine = trimmedLine.replace(/[ ]+$/, '');\n          }\n\n          if (trimmedLine) {\n            callExpr.arguments.push(t.literal(trimmedLine));\n          }\n        }\n\n        continue;\n      } else if (t.isXJSEmptyExpression(child)) {\n        continue;\n      }\n\n      callExpr.arguments.push(child);\n    }\n\n    return t.inherits(callExpr, node);\n  }\n};\n\n// display names\n\nvar addDisplayName = function (id, call) {\n  if (!call || !t.isCallExpression(call)) return;\n\n  var callee = call.callee;\n  if (!t.isMemberExpression(callee)) return;\n\n  // not React\n  var obj = callee.object;\n  if (!t.isIdentifier(obj, { name: \"React\" })) return;\n\n  // not createClass\n  var prop = callee.property;\n  if (!t.isIdentifier(prop, { name: \"createClass\" })) return;\n\n  // no arguments\n  var args = call.arguments;\n  if (args.length !== 1) return;\n\n  // not an object\n  var first = args[0];\n  if (!t.isObjectExpression(first)) return;\n\n  var props = first.properties;\n  var safe = true;\n\n  for (var i in props) {\n    prop = props[i];\n    if (t.isIdentifier(prop.key, { name: \"displayName\" })) {\n      safe = false;\n      break;\n    }\n  }\n\n  if (safe) {\n    props.unshift(t.property(\"init\", t.identifier(\"displayName\"), t.literal(id)));\n  }\n};\n\nexports.AssignmentExpression =\nexports.Property =\nexports.VariableDeclarator = function (node) {\n  var left, right;\n\n  if (t.isAssignmentExpression(node)) {\n    left = node.left;\n    right = node.right;\n  } else if (t.isProperty(node)) {\n    left = node.key;\n    right = node.value;\n  } else if (t.isVariableDeclarator(node)) {\n    left = node.id;\n    right = node.init;\n  }\n\n  if (t.isMemberExpression(left)) {\n    left = left.property;\n  }\n\n  if (t.isIdentifier(left)) {\n    addDisplayName(left.name, right);\n  }\n};\n","var t = require(\"../../types\");\n\nexports.BlockStatement = function (node, parent) {\n  if (t.isFunction(parent)) return;\n\n  node.body = node.body.map(function (node) {\n    if (t.isFunction(node)) {\n      node.type = \"FunctionExpression\";\n      var declar = t.variableDeclaration(\"let\", [\n        t.variableDeclarator(node.id, node)\n      ]);\n      declar._blockHoist = true;\n      return declar;\n    } else {\n      return node;\n    }\n  });\n};\n","var esutils = require(\"esutils\");\nvar t       = require(\"../../types\");\n\nexports.MemberExpression = function (node) {\n  var prop = node.property;\n  if (node.computed && t.isLiteral(prop) && t.isValidIdentifier(prop.value)) {\n    // computed literal that is a valid identifier\n    node.property = t.identifier(prop.value);\n    node.computed = false;\n  } else if (!node.computed && t.isIdentifier(prop) && esutils.keyword.isKeywordES6(prop.name, true)) {\n    node.property = t.literal(prop.name);\n    node.computed = true;\n  }\n};\n","var t = require(\"../../types\");\n\nexports.ObjectExpression = function (node, parent, file) {\n  var keys = [];\n\n  for (var i in node.properties) {\n    var prop = node.properties[i];\n    if (prop.computed || prop.kind !== \"init\") continue;\n\n    var key = prop.key;\n    if (t.isIdentifier(key)) {\n      key = key.name;\n    } else if (t.isLiteral(key)) {\n      key = key.value;\n    } else {\n      continue;\n    }\n\n    if (keys.indexOf(key) >= 0) {\n      throw file.errorWithNode(prop.key, \"Duplicate property key\");\n    } else {\n      keys.push(key);\n    }\n  }\n};\n","var t = require(\"../../types\");\n\nexports.ForInStatement =\nexports.ForOfStatement = function (node, parent, file) {\n  var left = node.left;\n  if (t.isVariableDeclaration(left)) {\n    var declar = left.declarations[0];\n    if (declar.init) throw file.errorWithNode(declar, \"No assignments allowed in for-in/of head\");\n  }\n};\n","var esutils = require(\"esutils\");\nvar t       = require(\"../../types\");\n\nexports.Property = function (node) {\n  var key = node.key;\n  if (t.isLiteral(key) && t.isValidIdentifier(key.value)) {\n    // property key is a literal but a valid identifier\n    node.key = t.identifier(key.value);\n    node.computed = false;\n  } else if (!node.computed && t.isIdentifier(key) && esutils.keyword.isKeywordES6(key.name, true)) {\n    // property key is a keyword\n    node.key = t.literal(key.name);\n  }\n};\n","var t = require(\"../../types\");\n\nmodule.exports = function (ast) {\n  var body = ast.program.body;\n  var first = body[0];\n\n  var noStrict = !first || !t.isExpressionStatement(first) || !t.isLiteral(first.expression) || first.expression.value !== \"use strict\";\n\n  if (noStrict) {\n    body.unshift(t.expressionStatement(t.literal(\"use strict\")));\n  }\n};\n","module.exports = traverse;\n\nvar Scope = require(\"./scope\");\nvar t     = require(\"../types\");\nvar _     = require(\"lodash\");\n\nfunction traverse(parent, opts, scope) {\n  // falsy node\n  if (!parent) return;\n\n  // array of nodes\n  if (_.isArray(parent)) {\n    _.each(parent, function (node) {\n      traverse(node, opts, scope);\n    });\n    return;\n  }\n\n  // unknown node type to traverse\n  var keys = t.VISITOR_KEYS[parent.type];\n  if (!keys) return;\n\n  opts = opts || {};\n\n  for (var i in keys) {\n    var key = keys[i];\n    var nodes = parent[key];\n    if (!nodes) continue;\n\n    var updated = false;\n\n    var handle = function (obj, key) {\n      var node = obj[key];\n      if (!node) return;\n\n      // type is blacklisted\n      if (opts.blacklist && opts.blacklist.indexOf(node.type) > -1) return;\n\n      // replace node\n      var maybeReplace = function (result) {\n        if (result === false) return;\n\n        if (result != null) {\n          updated = true;\n\n          var isArray = _.isArray(result);\n\n          // inherit comments from original node to the first replacement node\n          var inheritTo = result;\n          if (isArray) inheritTo = result[0];\n          if (inheritTo) t.inheritsComments(inheritTo, node);\n\n          // replace the node\n          node = obj[key] = result;\n\n          // we're replacing a statement or block node with an array of statements so we better\n          // ensure that it's a block\n          if (isArray && _.contains(t.STATEMENT_OR_BLOCK_KEYS, key) && !t.isBlockStatement(obj)) {\n            t.ensureBlock(obj, key);\n          }\n        }\n      };\n\n      var stopped = false;\n      var removed = false;\n\n      var context = {\n        stop: function () {\n          stopped = true;\n        },\n\n        remove: function () {\n          stopped = removed = true;\n        }\n      };\n\n      //\n      var ourScope = scope;\n      if (t.isScope(node)) ourScope = new Scope(node, scope);\n\n      // enter\n      if (opts.enter) {\n        var result = opts.enter.call(context, node, parent, ourScope);\n        maybeReplace(result);\n\n        if (removed) {\n          delete obj[key];\n          updated = true;\n        }\n\n        // stop iteration\n        if (stopped || result === false) return;\n      }\n\n      // traverse node\n      traverse(node, opts, ourScope);\n\n      // exit\n      if (opts.exit) {\n        maybeReplace(opts.exit.call(context, node, parent, ourScope));\n      }\n    };\n\n    if (_.isArray(nodes)) {\n      for (i in nodes) {\n        handle(nodes, i);\n      }\n\n      if (updated) parent[key] = _.flatten(parent[key]);\n    } else {\n      handle(parent, key);\n    }\n  }\n}\n\ntraverse.removeProperties = function (tree) {\n  var clear = function (node) {\n    delete node._declarations;\n    delete node.extendedRange;\n    delete node._scopeInfo;\n    delete node.tokens;\n    delete node.range;\n    delete node.start;\n    delete node.end;\n    delete node.loc;\n    delete node.raw;\n\n    clearComments(node.trailingComments);\n    clearComments(node.leadingComments);\n  };\n\n  var clearComments = function (comments) {\n    _.each(comments, clear);\n  };\n\n  clear(tree);\n  traverse(tree, { enter: clear });\n\n  return tree;\n};\n\ntraverse.hasType = function (tree, type, blacklistTypes) {\n  blacklistTypes = [].concat(blacklistTypes || []);\n\n  var has = false;\n\n  // the node we're searching in is blacklisted\n  if (_.contains(blacklistTypes, tree.type)) return false;\n\n  // the type we're looking for is the same as the passed node\n  if (tree.type === type) return true;\n\n  traverse(tree, {\n    blacklist: blacklistTypes,\n    enter: function (node) {\n      if (node.type === type) {\n        has = true;\n        return false;\n      }\n    }\n  });\n\n  return has;\n};\n","module.exports = Scope;\n\nvar traverse = require(\"./index\");\nvar t        = require(\"../types\");\nvar _        = require(\"lodash\");\n\nvar FOR_KEYS = [\"left\", \"init\"];\n\n/**\n * This searches the current \"scope\" and collects all references/declarations\n * within.\n *\n * @param {Node} block\n * @param {Scope} [parent]\n */\n\nfunction Scope(block, parent) {\n  this.parent = parent;\n  this.block  = block;\n\n  var info = this.getInfo();\n  this.references = info.references;\n  this.declarations = info.declarations;\n}\n\nvar vars = require(\"jshint/src/vars\");\nScope.defaultDeclarations = _.flatten([vars.newEcmaIdentifiers, vars.node, vars.ecmaIdentifiers, vars.reservedVars].map(_.keys));\n\nScope.add = function (node, references) {\n  if (!node) return;\n  _.defaults(references, t.getIds(node, true));\n};\n\nScope.prototype.generateTemp = function (file, name) {\n  var id = file.generateUidIdentifier(name || \"temp\", this);\n  this.push({\n    key: id.name,\n    id: id\n  });\n  return id;\n};\n\nScope.prototype.getInfo = function () {\n  var block = this.block;\n  if (block._scopeInfo) return block._scopeInfo;\n\n  var info = block._scopeInfo = {};\n  var references = info.references = {};\n  var declarations = info.declarations = {};\n\n  var add = function (node, reference) {\n    Scope.add(node, references);\n    if (!reference) Scope.add(node, declarations);\n  };\n\n  // ForStatement - left, init\n\n  if (t.isFor(block)) {\n    _.each(FOR_KEYS, function (key) {\n      var node = block[key];\n      if (t.isLet(node)) add(node);\n    });\n\n    block = block.body;\n  }\n\n  // Program, BlockStatement - let variables\n\n  if (t.isBlockStatement(block) || t.isProgram(block)) {\n    _.each(block.body, function (node) {\n      // check for non-var `VariableDeclaration`s\n      if (t.isLet(node)) add(node);\n    });\n  }\n\n  // CatchClause - param\n\n  if (t.isCatchClause(block)) {\n    add(block.param);\n  }\n\n  // Program, Function - var variables\n\n  if (t.isProgram(block) || t.isFunction(block)) {\n    traverse(block, {\n      enter: function (node, parent, scope) {\n        if (t.isFor(node)) {\n          _.each(FOR_KEYS, function (key) {\n            var declar = node[key];\n            if (t.isVar(declar)) add(declar);\n          });\n        }\n\n        // this block is a function so we'll stop since none of the variables\n        // declared within are accessible\n        if (t.isFunction(node)) return false;\n\n        // function identifier doesn't belong to this scope\n        if (block.id && node === block.id) return;\n\n        if (t.isIdentifier(node) && t.isReferenced(node, parent) && !scope.has(node.name)) {\n          add(node, true);\n        }\n\n        // we've ran into a declaration!\n        // we'll let the BlockStatement scope deal with `let` declarations unless\n        if (t.isDeclaration(node) && !t.isLet(node)) {\n          add(node);\n        }\n      }\n    }, this);\n  }\n\n  // Function - params, rest\n\n  if (t.isFunction(block)) {\n    add(block.rest);\n    _.each(block.params, function (param) {\n      add(param);\n    });\n  }\n\n  return info;\n};\n\nScope.prototype.push = function (opts) {\n  var block = this.block;\n\n  if (t.isFor(block) || t.isCatchClause(block) || t.isFunction(block)) {\n    t.ensureBlock(block);\n    block = block.body;\n  }\n\n  if (t.isBlockStatement(block) || t.isProgram(block)) {\n    block._declarations = block._declarations || {};\n    block._declarations[opts.key] = {\n      kind: opts.kind,\n      id: opts.id,\n      init: opts.init\n    };\n  } else {\n    throw new TypeError(\"cannot add a declaration here in node type \" + block.type);\n  }\n};\n\nScope.prototype.add = function (node) {\n  Scope.add(node, this.references);\n};\n\nScope.prototype.get = function (id, decl) {\n  return id && (this.getOwn(id, decl) || this.parentGet(id, decl));\n};\n\nScope.prototype.getOwn = function (id, decl) {\n  var refs = this.references;\n  if (decl) refs = this.declarations;\n  return _.has(refs, id) && refs[id];\n};\n\nScope.prototype.parentGet = function (id, decl) {\n  return this.parent && this.parent.get(id, decl);\n};\n\nScope.prototype.has = function (id, decl) {\n  return (id && (this.hasOwn(id, decl) || this.parentHas(id, decl))) ||\n         _.contains(Scope.defaultDeclarations, id);\n};\n\nScope.prototype.hasOwn = function (id, decl) {\n  return !!this.getOwn(id, decl);\n};\n\nScope.prototype.parentHas = function (id, decl) {\n  return this.parent && this.parent.has(id, decl);\n};\n","module.exports={\n  \"ExpressionStatement\": [\"Statement\"],\n  \"BreakStatement\":      [\"Statement\"],\n  \"ContinueStatement\":   [\"Statement\"],\n  \"DebuggerStatement\":   [\"Statement\"],\n  \"DoWhileStatement\":    [\"Statement\", \"Loop\", \"While\"],\n  \"IfStatement\":         [\"Statement\"],\n  \"ReturnStatement\":     [\"Statement\"],\n  \"SwitchStatement\":     [\"Statement\"],\n  \"ThrowStatement\":      [\"Statement\"],\n  \"TryStatement\":        [\"Statement\"],\n  \"WhileStatement\":      [\"Statement\", \"Loop\", \"While\"],\n  \"WithStatement\":       [\"Statement\"],\n  \"EmptyStatement\":      [\"Statement\"],\n  \"LabeledStatement\":    [\"Statement\"],\n  \"VariableDeclaration\": [\"Statement\", \"Declaration\"],\n  \"ExportDeclaration\":   [\"Statement\", \"Declaration\"],\n  \"ImportDeclaration\":   [\"Statement\", \"Declaration\"],\n\n  \"ArrowFunctionExpression\": [\"Scope\", \"Function\"],\n  \"FunctionDeclaration\":     [\"Statement\", \"Declaration\", \"Scope\", \"Function\"],\n  \"FunctionExpression\":      [\"Scope\", \"Function\"],\n\n  \"BlockStatement\": [\"Statement\", \"Scope\"],\n  \"Program\":        [\"Scope\"],\n  \"CatchClause\":    [\"Scope\"],\n\n  \"LogicalExpression\": [\"Binary\"],\n  \"BinaryExpression\":  [\"Binary\"],\n\n  \"UnaryExpression\": [\"UnaryLike\"],\n  \"SpreadProperty\":  [\"UnaryLike\"],\n  \"SpreadElement\":   [\"UnaryLike\"],\n\n  \"ClassDeclaration\": [\"Statement\", \"Declaration\", \"Class\"],\n  \"ClassExpression\":  [\"Class\"],\n\n  \"ForOfStatement\": [\"Statement\", \"For\", \"Scope\", \"Loop\"],\n  \"ForInStatement\": [\"Statement\", \"For\", \"Scope\", \"Loop\"],\n  \"ForStatement\":   [\"Statement\", \"For\", \"Scope\", \"Loop\"],\n\n  \"ObjectPattern\": [\"Pattern\"],\n  \"ArrayPattern\":  [\"Pattern\"],\n\n  \"Property\": [\"UserWhitespacable\"],\n  \"XJSElement\": [\"UserWhitespacable\"]\n}\n","module.exports={\n  \"ArrayExpression\":         [\"elements\"],\n  \"ArrowFunctionExpression\": [\"params\", \"body\"],\n  \"AssignmentExpression\":    [\"operator\", \"left\", \"right\"],\n  \"BinaryExpression\":        [\"operator\", \"left\", \"right\"],\n  \"BlockStatement\":          [\"body\"],\n  \"CallExpression\":          [\"callee\", \"arguments\"],\n  \"ConditionalExpression\":   [\"test\", \"consequent\", \"alternate\"],\n  \"ExpressionStatement\":     [\"expression\"],\n  \"File\":                    [\"program\", \"comments\", \"tokens\"],\n  \"FunctionExpression\":      [\"id\", \"params\", \"body\", \"generator\"],\n  \"Identifier\":              [\"name\"],\n  \"IfStatement\":             [\"test\", \"consequent\", \"alternate\"],\n  \"Literal\":                 [\"value\"],\n  \"LogicalExpression\":       [\"operator\", \"left\", \"right\"],\n  \"MemberExpression\":        [\"object\", \"property\", \"computed\"],\n  \"NewExpression\":           [\"callee\", \"arguments\"],\n  \"ObjectExpression\":        [\"properties\"],\n  \"Program\":                 [\"body\"],\n  \"Property\":                [\"kind\", \"key\", \"value\", \"computed\"],\n  \"ReturnStatement\":         [\"argument\"],\n  \"SequenceExpression\":      [\"expressions\"],\n  \"ThrowExpression\":         [\"argument\"],\n  \"UnaryExpression\":         [\"operator\", \"argument\", \"prefix\"],\n  \"VariableDeclaration\":     [\"kind\", \"declarations\"],\n  \"VariableDeclarator\":      [\"id\", \"init\"],\n  \"WithStatement\":           [\"object\", \"body\"],\n  \"YieldExpression\":         [\"argument\", \"delegate\"]\n}\n","var esutils = require(\"esutils\");\nvar _       = require(\"lodash\");\n\nvar t = exports;\n\nvar addAssert = function (type, is) {\n  t[\"assert\" + type] = function (node, opts) {\n    opts = opts || {};\n    if (!is(node, opts)) {\n      throw new Error(\"Expected type \" + JSON.stringify(type) + \" with option \" + JSON.stringify(opts));\n    }\n  };\n};\n\nt.STATEMENT_OR_BLOCK_KEYS = [\"consequent\", \"body\"];\n\n//\n\nt.VISITOR_KEYS = require(\"./visitor-keys\");\n\n_.each(t.VISITOR_KEYS, function (keys, type) {\n  var is = t[\"is\" + type] = function (node, opts) {\n    return node && node.type === type && t.shallowEqual(node, opts);\n  };\n\n  addAssert(type, is);\n});\n\n//\n\nt.BUILDER_KEYS = _.defaults(require(\"./builder-keys\"), t.VISITOR_KEYS);\n\n_.each(t.BUILDER_KEYS, function (keys, type) {\n  t[type[0].toLowerCase() + type.slice(1)] = function () {\n    var args = arguments;\n    var node = { type: type };\n    _.each(keys, function (key, i) {\n      node[key] = args[i];\n    });\n    return node;\n  };\n});\n\n//\n\nt.ALIAS_KEYS = require(\"./alias-keys\");\n\nt.FLIPPED_ALIAS_KEYS = {};\n\n_.each(t.ALIAS_KEYS, function (aliases, type) {\n  _.each(aliases, function (alias) {\n    var types = t.FLIPPED_ALIAS_KEYS[alias] = t.FLIPPED_ALIAS_KEYS[alias] || [];\n    types.push(type);\n  });\n});\n\n_.each(t.FLIPPED_ALIAS_KEYS, function (types, type) {\n  t[type.toUpperCase() + \"_TYPES\"] = types;\n\n  var is = t[\"is\" + type] = function (node, opts) {\n    return node && types.indexOf(node.type) >= 0 && t.shallowEqual(node, opts);\n  };\n\n  addAssert(type, is);\n});\n\n//\n\nt.isExpression = function (node) {\n  return !t.isStatement(node);\n};\n\naddAssert(\"Expression\", t.isExpression);\n\n//\n\nt.toSequenceExpression = function (nodes, scope) {\n  var exprs = [];\n\n  _.each(nodes, function (node) {\n    if (t.isExpression(node)) {\n      exprs.push(node);\n    } if (t.isExpressionStatement(node)) {\n      exprs.push(node.expression);\n    } else if (t.isVariableDeclaration(node)) {\n      _.each(node.declarations, function (declar) {\n        scope.push({\n          kind: node.kind,\n          key: declar.id.name,\n          id: declar.id\n        });\n        exprs.push(t.assignmentExpression(\"=\", declar.id, declar.init));\n      });\n    }\n  });\n\n  return t.sequenceExpression(exprs);\n};\n\n//\n\nt.shallowEqual = function (actual, expected) {\n  var same = true;\n\n  if (expected) {\n    _.each(expected, function (val, key) {\n      if (actual[key] !== val) {\n        return same = false;\n      }\n    });\n  }\n\n  return same;\n};\n\n//\n\nt.isDynamic = function (node) {\n  if (t.isExpressionStatement(node)) {\n    return t.isDynamic(node.expression);\n  } else if (t.isIdentifier(node) || t.isLiteral(node) || t.isThisExpression(node)) {\n    return false;\n  } else if (t.isMemberExpression(node)) {\n    return t.isDynamic(node.object) || t.isDynamic(node.property);\n  } else {\n    return true;\n  }\n};\n\n// todo: https://github.com/eventualbuddha/ast-util/blob/9bf91c5ce8/lib/index.js#L454-L507\nt.isReferenced = function (node, parent) {\n  // we're a property key and we aren't computed so we aren't referenced\n  if (t.isProperty(parent) && parent.key === node && !parent.computed) return false;\n\n  // we're a variable declarator id so we aren't referenced\n  if (t.isVariableDeclarator(parent) && parent.id === node) return false;\n\n  var isMemberExpression = t.isMemberExpression(parent);\n\n  // we're in a member expression and we're the computed property so we're referenced\n  var isComputedProperty = isMemberExpression && parent.property === node && parent.computed;\n\n  // we're in a member expression and we're the object so we're referenced\n  var isObject = isMemberExpression && parent.object === node;\n\n  // we are referenced\n  if (!isMemberExpression || isComputedProperty || isObject) return true;\n\n  return false;\n};\n\nt.toIdentifier = function (name) {\n  if (t.isIdentifier(name)) return name.name;\n\n  // replace all non-valid identifiers with dashes\n  name = name.replace(/[^a-zA-Z0-9]/g, \"-\");\n\n  // remove all dashes and numbers from start of name\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  // camel case\n  name = name.replace(/[-_\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  return name || '_';\n};\n\nt.isValidIdentifier = function (name) {\n  return _.isString(name) && esutils.keyword.isIdentifierName(name) && !esutils.keyword.isKeywordES6(name, true);\n};\n\nt.ensureBlock = function (node, key) {\n  key = key || \"body\";\n  node[key] = t.toBlock(node[key], node);\n};\n\nt.toStatement = function (node, ignore) {\n  if (t.isStatement(node)) {\n    return node;\n  }\n\n  var mustHaveId = false;\n  var newType;\n\n  if (t.isClass(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\";\n  } else if (t.isFunction(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\";\n  }\n\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(\"cannot turn \" + node.type + \" to a statement\");\n    }\n  }\n\n  node.type = newType;\n\n  return node;\n};\n\nt.toBlock = function (node, parent) {\n  if (t.isBlockStatement(node)) {\n    return node;\n  }\n\n  if (!_.isArray(node)) {\n    if (!t.isStatement(node)) {\n      if (t.isFunction(parent)) {\n        node = t.returnStatement(node);\n      } else {\n        node = t.expressionStatement(node);\n      }\n    }\n\n    node = [node];\n  }\n\n  return t.blockStatement(node);\n};\n\nt.getIds = function (node, map, ignoreTypes) {\n  ignoreTypes = ignoreTypes || [];\n\n  var search = [].concat(node);\n  var ids    = {};\n\n  while (search.length) {\n    var id = search.shift();\n    if (!id) continue;\n    if (_.contains(ignoreTypes, id.type)) continue;\n\n    var nodeKey = t.getIds.nodes[id.type];\n    var arrKeys  = t.getIds.arrays[id.type];\n\n    if (t.isIdentifier(id)) {\n      ids[id.name] = id;\n    } else if (nodeKey) {\n      if (id[nodeKey]) search.push(id[nodeKey]);\n    } else if (arrKeys) {\n      for (var i in arrKeys) {\n        var key = arrKeys[i];\n        search = search.concat(id[key] || []);\n      }\n    }\n  }\n\n  if (!map) ids = _.keys(ids);\n  return ids;\n};\n\nt.getIds.nodes = {\n  AssignmentExpression: \"left\",\n  ImportSpecifier: \"name\",\n  ExportSpecifier: \"name\",\n  VariableDeclarator: \"id\",\n  FunctionDeclaration: \"id\",\n  ClassDeclaration: \"id\",\n  MemeberExpression: \"object\",\n  SpreadElement: \"argument\",\n  Property: \"value\"\n};\n\nt.getIds.arrays = {\n  ExportDeclaration: [\"specifiers\", \"declaration\"],\n  ImportDeclaration: [\"specifiers\"],\n  VariableDeclaration: [\"declarations\"],\n  ArrayPattern: [\"elements\"],\n  ObjectPattern: [\"properties\"]\n};\n\nt.isLet = function (node) {\n  return t.isVariableDeclaration(node) && (node.kind !== \"var\" || node._let);\n};\n\nt.isVar = function (node) {\n  return t.isVariableDeclaration(node, { kind: \"var\" }) && !node._let;\n};\n\nt.removeComments = function (child) {\n  delete child.leadingComments;\n  delete child.trailingComments;\n  return child;\n};\n\nt.inheritsComments = function (child, parent) {\n  _.each([\"leadingComments\", \"trailingComments\"], function (key) {\n    child[key]  = _.uniq(_.compact([].concat(child[key], parent[key])));\n  });\n  return child;\n};\n\nt.inherits = function (child, parent) {\n  child.loc   = parent.loc;\n  child.end   = parent.end;\n  child.range = parent.range;\n  child.start = parent.start;\n  t.inheritsComments(child, parent);\n  return child;\n};\n\nt.getSpecifierName = function (specifier) {\n  return specifier.name || specifier.id;\n};\n\nt.isSpecifierDefault = function (specifier) {\n  return t.isIdentifier(specifier.id) && specifier.id.name === \"default\";\n};\n","module.exports={\n  \"ArrayExpression\":           [\"elements\"],\n  \"ArrayPattern\":              [\"elements\"],\n  \"ArrowFunctionExpression\":   [\"params\", \"defaults\", \"rest\", \"body\"],\n  \"AssignmentExpression\":      [\"left\", \"right\"],\n  \"AwaitExpression\":           [\"argument\"],\n  \"BinaryExpression\":          [\"left\", \"right\"],\n  \"BindFunctionExpression\":    [\"callee\", \"arguments\"],\n  \"BindMemberExpression\":      [\"object\", \"property\", \"arguments\"],\n  \"BlockStatement\":            [\"body\"],\n  \"BreakStatement\":            [\"label\"],\n  \"CallExpression\":            [\"callee\", \"arguments\"],\n  \"CatchClause\":               [\"param\", \"body\"],\n  \"ClassBody\":                 [\"body\"],\n  \"ClassDeclaration\":          [\"id\", \"body\", \"superClass\"],\n  \"ClassExpression\":           [\"id\", \"body\", \"superClass\"],\n  \"ClassProperty\":             [\"key\"],\n  \"ComprehensionBlock\":        [\"left\", \"right\", \"body\"],\n  \"ComprehensionExpression\":   [\"filter\", \"blocks\", \"body\"],\n  \"ConditionalExpression\":     [\"test\", \"consequent\", \"alternate\"],\n  \"ContinueStatement\":         [\"label\"],\n  \"DebuggerStatement\":         [],\n  \"DoWhileStatement\":          [\"body\", \"test\"],\n  \"EmptyStatement\":            [],\n  \"ExportBatchSpecifier\":      [],\n  \"ExportDeclaration\":         [\"declaration\", \"specifiers\", \"source\"],\n  \"ExportSpecifier\":           [\"id\", \"name\"],\n  \"ExpressionStatement\":       [\"expression\"],\n  \"File\":                      [\"program\"],\n  \"ForInStatement\":            [\"left\", \"right\", \"body\"],\n  \"ForOfStatement\":            [\"left\", \"right\", \"body\"],\n  \"ForStatement\":              [\"init\", \"test\", \"update\", \"body\"],\n  \"FunctionDeclaration\":       [\"id\", \"params\", \"defaults\", \"rest\", \"body\"],\n  \"FunctionExpression\":        [\"id\", \"params\", \"defaults\", \"rest\", \"body\"],\n  \"Identifier\":                [],\n  \"IfStatement\":               [\"test\", \"consequent\", \"alternate\"],\n  \"ImportBatchSpecifier\":      [\"id\"],\n  \"ImportDeclaration\":         [\"specifiers\", \"source\"],\n  \"ImportSpecifier\":           [\"id\", \"name\"],\n  \"LabeledStatement\":          [\"label\", \"body\"],\n  \"Literal\":                   [],\n  \"LogicalExpression\":         [\"left\", \"right\"],\n  \"MemberExpression\":          [\"object\", \"property\"],\n  \"MethodDefinition\":          [\"key\", \"value\"],\n  \"NewExpression\":             [\"callee\", \"arguments\"],\n  \"ObjectExpression\":          [\"properties\"],\n  \"ObjectPattern\":             [\"properties\"],\n  \"PrivateDeclaration\":        [\"declarations\"],\n  \"Program\":                   [\"body\"],\n  \"Property\":                  [\"key\", \"value\"],\n  \"ReturnStatement\":           [\"argument\"],\n  \"SequenceExpression\":        [\"expressions\"],\n  \"SpreadElement\":             [\"argument\"],\n  \"SpreadProperty\":            [\"argument\"],\n  \"SwitchCase\":                [\"test\", \"consequent\"],\n  \"SwitchStatement\":           [\"discriminant\", \"cases\"],\n  \"TaggedTemplateExpression\":  [\"tag\", \"quasi\"],\n  \"TemplateElement\":           [],\n  \"TemplateLiteral\":           [\"quasis\", \"expressions\"],\n  \"ThisExpression\":            [],\n  \"ThrowStatement\":            [\"argument\"],\n  \"TryStatement\":              [\"block\", \"handlers\", \"handler\", \"guardedHandlers\", \"finalizer\"],\n  \"UnaryExpression\":           [\"argument\"],\n  \"UpdateExpression\":          [\"argument\"],\n  \"VariableDeclaration\":       [\"declarations\"],\n  \"VariableDeclarator\":        [\"id\", \"init\"],\n  \"VirtualPropertyExpression\": [\"object\", \"property\"],\n  \"WhileStatement\":            [\"test\", \"body\"],\n  \"WithStatement\":             [\"object\", \"body\"],\n  \"XJSAttribute\":              [\"name\", \"value\"],\n  \"XJSClosingElement\":         [\"name\"],\n  \"XJSElement\":                [\"openingElement\", \"closingElement\", \"children\"],\n  \"XJSEmptyExpression\":        [],\n  \"XJSExpressionContainer\":    [\"expression\"],\n  \"XJSIdentifier\":             [],\n  \"XJSMemberExpression\":       [\"object\", \"property\"],\n  \"XJSNamespacedName\":         [\"namespace\", \"name\"],\n  \"XJSOpeningElement\":         [\"name\", \"attributes\"],\n  \"XJSSpreadAttribute\":        [\"argument\"],\n  \"YieldExpression\":           [\"argument\"]\n}\n","require(\"./patch\");\n\nvar estraverse = require(\"estraverse\");\nvar traverse   = require(\"./traverse\");\nvar acorn      = require(\"acorn-6to5\");\nvar path       = require(\"path\");\nvar util       = require(\"util\");\nvar fs         = require(\"fs\");\nvar t          = require(\"./types\");\nvar _          = require(\"lodash\");\n\nexports.inherits = util.inherits;\n\nexports.canCompile = function (filename, altExts) {\n  var exts = altExts || [\".js\", \".jsx\", \".es6\"];\n  var ext = path.extname(filename);\n  return _.contains(exts, ext);\n};\n\nexports.isInteger = function (i) {\n  return _.isNumber(i) && i % 1 === 0;\n};\n\nexports.resolve = function (loc) {\n  try {\n    return require.resolve(loc);\n  } catch (err) {\n    return null;\n  }\n};\n\nexports.trimRight = function (str) {\n  return str.replace(/[\\n\\s]+$/g, \"\");\n};\n\nexports.list = function (val) {\n  return val ? val.split(\",\") : [];\n};\n\nexports.regexify = function (val) {\n  if (!val) return new RegExp(/.^/);\n  if (_.isArray(val)) val = val.join(\"|\");\n  if (_.isString(val)) return new RegExp(val);\n  if (_.isRegExp(val)) return val;\n  throw new TypeError(\"illegal type for regexify\");\n};\n\nexports.arrayify = function (val) {\n  if (!val) return [];\n  if (_.isString(val)) return exports.list(val);\n  if (_.isArray(val)) return val;\n  throw new TypeError(\"illegal type for arrayify\");\n};\n\nexports.getUid = function (parent, file) {\n  var node;\n\n  if (t.isAssignmentExpression(parent)) {\n    node = parent.left;\n  } else if (t.isVariableDeclarator(parent)) {\n    node = parent.id;\n  }\n\n  var id = \"ref\";\n\n  if (t.isIdentifier(node)) id = node.name;\n\n  return file.generateUidIdentifier(id);\n};\n\nexports.isAbsolute = function (loc) {\n  if (!loc) return false;\n  if (loc[0] === \"/\") return true; // unix\n  if (loc[1] === \":\" && loc[2] === \"\\\\\") return true; // windows\n  return false;\n};\n\nexports.sourceMapToComment = function (map) {\n  var json = JSON.stringify(map);\n  var base64 = new Buffer(json).toString(\"base64\");\n  return \"//# sourceMappingURL=data:application/json;base64,\" + base64;\n};\n\nexports.pushMutatorMap = function (mutatorMap, key, kind, method) {\n  var alias;\n\n  if (t.isIdentifier(key)) {\n    alias = key.name;\n    if (method.computed) alias = \"computed:\" + alias;\n  } else if (t.isLiteral(key)) {\n    alias = String(key.value);\n  } else {\n    alias = JSON.stringify(traverse.removeProperties(_.cloneDeep(key)));\n  }\n\n  var map;\n  if (_.has(mutatorMap, alias)) {\n    map = mutatorMap[alias];\n  } else {\n    map = {};\n  }\n  mutatorMap[alias] = map;\n\n  map._key = key;\n  if (method.computed) {\n    map._computed = true;\n  }\n\n  map[kind] = method;\n};\n\nexports.buildDefineProperties = function (mutatorMap) {\n  var objExpr = t.objectExpression([]);\n\n  _.each(mutatorMap, function (map) {\n    var mapNode = t.objectExpression([]);\n\n    var propNode = t.property(\"init\", map._key, mapNode, map._computed);\n\n    map.enumerable = t.literal(true);\n\n    _.each(map, function (node, key) {\n      if (key[0] === \"_\") return;\n\n      node = _.clone(node);\n      var inheritNode = node;\n      if (t.isMethodDefinition(node)) node = node.value;\n\n      var prop = t.property(\"init\", t.identifier(key), node);\n      t.inheritsComments(prop, inheritNode);\n      t.removeComments(inheritNode);\n      mapNode.properties.push(prop);\n    });\n\n    objExpr.properties.push(propNode);\n  });\n\n  return objExpr;\n};\n\nexports.template = function (name, nodes, keepExpression) {\n  var template = exports.templates[name];\n  if (!template) throw new ReferenceError(\"unknown template \" + name);\n\n  if (nodes === true) {\n    keepExpression = true;\n    nodes = null;\n  }\n\n  template = _.cloneDeep(template);\n\n  if (!_.isEmpty(nodes)) {\n    traverse(template, {\n      enter: function (node) {\n        if (t.isIdentifier(node) && _.has(nodes, node.name)) {\n          return nodes[node.name];\n        }\n      }\n    });\n  }\n\n  var node = template.body[0];\n\n  if (!keepExpression && t.isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  return node;\n};\n\nexports.codeFrame = function (lines, lineNumber, colNumber) {\n  colNumber = Math.max(colNumber, 0);\n\n  lines = lines.split(\"\\n\");\n\n  var start = Math.max(lineNumber - 3, 0);\n  var end   = Math.min(lines.length, lineNumber + 3);\n  var width = (end + \"\").length;\n\n  if (!lineNumber && !colNumber) {\n    start = 0;\n    end = lines.length;\n  }\n\n  return \"\\n\" + lines.slice(start, end).map(function (line, i) {\n    var curr = i + start + 1;\n\n    var gutter = curr === lineNumber ? \"> \" : \"  \";\n\n    var sep = curr + exports.repeat(width + 1);\n    gutter += sep + \"| \";\n\n    var str = gutter + line;\n\n    if (colNumber && curr === lineNumber) {\n      str += \"\\n\";\n      str += exports.repeat(gutter.length - 2);\n      str += \"|\" + exports.repeat(colNumber) + \"^\";\n    }\n\n    return str;\n  }).join(\"\\n\");\n};\n\nexports.repeat = function (width, cha) {\n  cha = cha || \" \";\n  return new Array(width + 1).join(cha);\n};\n\nexports.normaliseAst = function (ast, comments, tokens) {\n  if (ast && ast.type === \"Program\") {\n    return t.file(ast, comments || [], tokens || []);\n  } else {\n    throw new Error(\"Not a valid ast?\");\n  }\n};\n\nexports.parse = function (opts, code, callback) {\n  try {\n    var comments = [];\n    var tokens   = [];\n\n    var ast = acorn.parse(code, {\n      allowImportExportEverywhere: true,\n      allowReturnOutsideFunction:  true,\n      ecmaVersion:                 opts.experimental ? 7 : 6,\n      playground:                  opts.playground,\n      strictMode:                  true,\n      onComment:                   comments,\n      locations:                   true,\n      onToken:                     tokens,\n      ranges:                      true\n    });\n\n    estraverse.attachComments(ast, comments, tokens);\n\n    ast = exports.normaliseAst(ast, comments, tokens);\n\n    if (callback) {\n      return callback(ast);\n    } else {\n      return ast;\n    }\n  } catch (err) {\n    if (!err._6to5) {\n      err._6to5 = true;\n      var message = opts.filename + \": \" + err.message;\n\n      var loc = err.loc;\n      if (loc) {\n        var frame = exports.codeFrame(code, loc.line, loc.column);\n        message += frame;\n      }\n\n      if (err.stack) err.stack = err.stack.replace(err.message, message);\n      err.message = message;\n    }\n\n    throw err;\n  }\n};\n\nexports.parseTemplate = function (loc, code) {\n  var ast = exports.parse({ filename: loc }, code).program;\n  return traverse.removeProperties(ast);\n};\n\nvar loadTemplates = function () {\n  var templates = {};\n\n  var templatesLoc = __dirname + \"/transformation/templates\";\n  if (!fs.existsSync(templatesLoc)) {\n    throw new Error(\"no templates directory - this is most likely the \" +\n                    \"result of a broken `npm publish`. Please report to \" +\n                    \"https://githut.com/6to5/6to5/issues\");\n  }\n\n  _.each(fs.readdirSync(templatesLoc), function (name) {\n    if (name[0] === \".\") return;\n\n    var key  = path.basename(name, path.extname(name));\n    var loc  = templatesLoc + \"/\" + name;\n    var code = fs.readFileSync(loc, \"utf8\");\n\n    templates[key] = exports.parseTemplate(loc, code);\n  });\n\n  return templates;\n};\n\ntry {\n  exports.templates = require(\"../../templates.json\");\n} catch (err) {\n  if (err.code !== \"MODULE_NOT_FOUND\") throw err;\n\n  exports.templates = loadTemplates();\n}\n","// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke and various contributors and\n// released under an MIT license. The Unicode regexps (for identifiers\n// and whitespace) were taken from [Esprima](http://esprima.org) by\n// Ariya Hidayat.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/marijnh/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/marijnh/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\n(function(root, mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") return mod(exports); // CommonJS\n  if (typeof define == \"function\" && define.amd) return define([\"exports\"], mod); // AMD\n  mod(root.acorn || (root.acorn = {})); // Plain browser env\n})(this, function(exports) {\n  \"use strict\";\n\n  exports.version = \"0.11.1\";\n\n  // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and\n  // returns an abstract syntax tree as specified by [Mozilla parser\n  // API][api], with the caveat that inline XML is not recognized.\n  //\n  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\n  var options, input, inputLen, sourceFile;\n\n  exports.parse = function(inpt, opts) {\n    input = String(inpt); inputLen = input.length;\n    setOptions(opts);\n    initTokenState();\n    var startPos = options.locations ? [tokPos, curPosition()] : tokPos;\n    initParserState();\n    return parseTopLevel(options.program || startNodeAt(startPos));\n  };\n\n  // A second optional argument can be given to further configure\n  // the parser process. These options are recognized:\n\n  var defaultOptions = exports.defaultOptions = {\n    playground: false,\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must\n    // be either 3, or 5, or 6. This influences support for strict\n    // mode, the set of reserved words, support for getters and\n    // setters and other features.\n    ecmaVersion: 5,\n    // Turn on `strictSemicolons` to prevent the parser from doing\n    // automatic semicolon insertion.\n    strictSemicolons: false,\n    // When `allowTrailingCommas` is false, the parser will not allow\n    // trailing commas in array and object literals.\n    allowTrailingCommas: true,\n    // By default, reserved words are not enforced. Enable\n    // `forbidReserved` to enforce them. When this option has the\n    // value \"everywhere\", reserved words and keywords can also not be\n    // used as property names.\n    forbidReserved: false,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program.\n    allowImportExportEverywhere: false,\n    // When enabled, hashbang directive in the beginning of file\n    // is allowed and treated as a line comment.\n    allowHashBang: false,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onToken` option, which will\n    // cause Acorn to call that function with object in the same\n    // format as tokenize() returns. Note that you are not\n    // allowed to call the parser from the callback—that will\n    // corrupt its internal state.\n    onToken: null,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback—that will corrupt its internal state.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n    // When enabled, parenthesized expressions are represented by\n    // (non-standard) ParenthesizedExpression nodes\n    preserveParens: false\n  };\n\n  // This function tries to parse a single expression at a given\n  // offset in a string. Useful for parsing mixed-language formats\n  // that embed JavaScript expressions.\n\n  exports.parseExpressionAt = function(inpt, pos, opts) {\n    input = String(inpt); inputLen = input.length;\n    setOptions(opts);\n    initTokenState(pos);\n    initParserState();\n    return parseExpression();\n  };\n\n  var isArray = function (obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n\n  function setOptions(opts) {\n    options = {};\n    for (var opt in defaultOptions)\n      options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt];\n    sourceFile = options.sourceFile || null;\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) {\n        tokens.push(token);\n      };\n    }\n    if (isArray(options.onComment)) {\n      var comments = options.onComment;\n      options.onComment = function (block, text, start, end, startLoc, endLoc) {\n        var comment = {\n          type: block ? 'Block' : 'Line',\n          value: text,\n          start: start,\n          end: end\n        };\n        if (options.locations) {\n          comment.loc = new SourceLocation();\n          comment.loc.start = startLoc;\n          comment.loc.end = endLoc;\n        }\n        if (options.ranges)\n          comment.range = [start, end];\n        comments.push(comment);\n      };\n    }\n    if (options.strictMode) {\n      strict = true;\n    }\n    if (options.ecmaVersion >= 6) {\n      isKeyword = isEcma6Keyword;\n    } else {\n      isKeyword = isEcma5AndLessKeyword;\n    }\n  }\n\n  // The `getLineInfo` function is mostly useful when the\n  // `locations` option is off (for performance reasons) and you\n  // want to find the line/column position for a given character\n  // offset. `input` should be the code string that the offset refers\n  // into.\n\n  var getLineInfo = exports.getLineInfo = function(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreak.lastIndex = cur;\n      var match = lineBreak.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else break;\n    }\n    return {line: line, column: offset - cur};\n  };\n\n  function Token() {\n    this.type = tokType;\n    this.value = tokVal;\n    this.start = tokStart;\n    this.end = tokEnd;\n    if (options.locations) {\n      this.loc = new SourceLocation();\n      this.loc.end = tokEndLoc;\n      // TODO: remove in next major release\n      this.startLoc = tokStartLoc;\n      this.endLoc = tokEndLoc;\n    }\n    if (options.ranges)\n      this.range = [tokStart, tokEnd];\n  }\n\n  exports.Token = Token;\n\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\n  // The `tokenize` export provides an interface to the tokenizer.\n  // Because the tokenizer is optimized for being efficiently used by\n  // the Acorn parser itself, this interface is somewhat crude and not\n  // very modular. Performing another parse or call to `tokenize` will\n  // reset the internal state, and invalidate existing tokenizers.\n\n  exports.tokenize = function(inpt, opts) {\n    input = String(inpt); inputLen = input.length;\n    setOptions(opts);\n    initTokenState();\n    skipSpace();\n\n    function getToken(forceRegexp) {\n      lastEnd = tokEnd;\n      readToken(forceRegexp);\n      return new Token();\n    }\n    getToken.jumpTo = function(pos, reAllowed) {\n      tokPos = pos;\n      if (options.locations) {\n        tokCurLine = 1;\n        tokLineStart = lineBreak.lastIndex = 0;\n        var match;\n        while ((match = lineBreak.exec(input)) && match.index < pos) {\n          ++tokCurLine;\n          tokLineStart = match.index + match[0].length;\n        }\n      }\n      tokRegexpAllowed = reAllowed;\n      skipSpace();\n    };\n    getToken.noRegexp = function() {\n      tokRegexpAllowed = false;\n    };\n    getToken.options = options;\n    return getToken;\n  };\n\n  // State is kept in (closure-)global variables. We already saw the\n  // `options`, `input`, and `inputLen` variables above.\n\n  // The current position of the tokenizer in the input.\n\n  var tokPos;\n\n  // The start and end offsets of the current token.\n\n  var tokStart, tokEnd;\n\n  // When `options.locations` is true, these hold objects\n  // containing the tokens start and end line/column pairs.\n\n  var tokStartLoc, tokEndLoc;\n\n  // The type and value of the current token. Token types are objects,\n  // named by variables against which they can be compared, and\n  // holding properties that describe them (indicating, for example,\n  // the precedence of an infix operator, and the original name of a\n  // keyword token). The kind of value that's held in `tokVal` depends\n  // on the type of the token. For literals, it is the literal value,\n  // for operators, the operator name, and so on.\n\n  var tokType, tokVal;\n\n  // Internal state for the tokenizer. To distinguish between division\n  // operators and regular expressions, it remembers whether the last\n  // token was one that is allowed to be followed by an expression.\n  // (If it is, a slash is probably a regexp, if it isn't it's a\n  // division operator. See the `parseStatement` function for a\n  // caveat.)\n\n  var tokRegexpAllowed;\n\n  // When `options.locations` is true, these are used to keep\n  // track of the current line, and know when a new line has been\n  // entered.\n\n  var tokCurLine, tokLineStart;\n\n  // These store the position of the previous token, which is useful\n  // when finishing a node and assigning its `end` position.\n\n  var lastStart, lastEnd, lastEndLoc;\n\n  // This is the parser's state. `inFunction` is used to reject\n  // `return` statements outside of functions, `inGenerator` to\n  // reject `yield`s outside of generators, `labels` to verify\n  // that `break` and `continue` have somewhere to jump to, and\n  // `strict` indicates whether strict mode is on.\n\n  var inFunction, inGenerator, inAsync, labels, strict,\n    inXJSChild, inXJSTag, inType;\n\n  // This counter is used for checking that arrow expressions did\n  // not contain nested parentheses in argument list.\n\n  var metParenL;\n\n  // This is used by the tokenizer to track the template strings it is\n  // inside, and count the amount of open braces seen inside them, to\n  // be able to switch back to a template token when the } to match ${\n  // is encountered. It will hold an array of integers.\n\n  var templates;\n\n  function initParserState() {\n    lastStart = lastEnd = tokPos;\n    if (options.locations) lastEndLoc = new Position;\n    inFunction = inGenerator = inAsync = strict = false;\n    labels = [];\n    skipSpace();\n    readToken();\n  }\n\n  // This function is used to raise exceptions on parse errors. It\n  // takes an offset integer (into the current `input`) to indicate\n  // the location of the error, attaches the position to the end\n  // of the error message, and then raises a `SyntaxError` with that\n  // message.\n\n  function raise(pos, message) {\n    var loc = getLineInfo(input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = tokPos;\n    throw err;\n  }\n\n  // Reused empty array added for node fields that are always empty.\n\n  var empty = [];\n\n  // ## Token types\n\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n\n  // These are the general types. The `type` property is only used to\n  // make them recognizeable when debugging.\n\n  var _num = {type: \"num\"}, _regexp = {type: \"regexp\"}, _string = {type: \"string\"};\n  var _name = {type: \"name\"}, _eof = {type: \"eof\"};\n\n  // These are JSX-specific token types\n\n  var _xjsName = {type: \"xjsName\"}, _xjsText = {type: \"xjsText\"};\n\n  // Keyword tokens. The `keyword` property (also used in keyword-like\n  // operators) indicates that the token originated from an\n  // identifier-like word, which is used when parsing property names.\n  //\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n  var _break = {keyword: \"break\"}, _case = {keyword: \"case\", beforeExpr: true}, _catch = {keyword: \"catch\"};\n  var _continue = {keyword: \"continue\"}, _debugger = {keyword: \"debugger\"}, _default = {keyword: \"default\"};\n  var _do = {keyword: \"do\", isLoop: true}, _else = {keyword: \"else\", beforeExpr: true};\n  var _finally = {keyword: \"finally\"}, _for = {keyword: \"for\", isLoop: true}, _function = {keyword: \"function\"};\n  var _if = {keyword: \"if\"}, _return = {keyword: \"return\", beforeExpr: true}, _switch = {keyword: \"switch\"};\n  var _throw = {keyword: \"throw\", beforeExpr: true}, _try = {keyword: \"try\"}, _var = {keyword: \"var\"};\n  var _let = {keyword: \"let\"}, _const = {keyword: \"const\"};\n  var _while = {keyword: \"while\", isLoop: true}, _with = {keyword: \"with\"}, _new = {keyword: \"new\", beforeExpr: true};\n  var _this = {keyword: \"this\"};\n  var _class = {keyword: \"class\"}, _extends = {keyword: \"extends\", beforeExpr: true};\n  var _export = {keyword: \"export\"}, _import = {keyword: \"import\"};\n  var _yield = {keyword: \"yield\", beforeExpr: true};\n\n  // The keywords that denote values.\n\n  var _null = {keyword: \"null\", atomValue: null}, _true = {keyword: \"true\", atomValue: true};\n  var _false = {keyword: \"false\", atomValue: false};\n\n  // Some keywords are treated as regular operators. `in` sometimes\n  // (when parsing `for`) needs to be tested against specifically, so\n  // we assign a variable name to it for quick comparing.\n\n  var _in = {keyword: \"in\", binop: 7, beforeExpr: true};\n\n  // Map keyword names to token types.\n\n  var keywordTypes = {\"break\": _break, \"case\": _case, \"catch\": _catch,\n                      \"continue\": _continue, \"debugger\": _debugger, \"default\": _default,\n                      \"do\": _do, \"else\": _else, \"finally\": _finally, \"for\": _for,\n                      \"function\": _function, \"if\": _if, \"return\": _return, \"switch\": _switch,\n                      \"throw\": _throw, \"try\": _try, \"var\": _var, \"let\": _let, \"const\": _const,\n                      \"while\": _while, \"with\": _with,\n                      \"null\": _null, \"true\": _true, \"false\": _false, \"new\": _new, \"in\": _in,\n                      \"instanceof\": {keyword: \"instanceof\", binop: 7, beforeExpr: true}, \"this\": _this,\n                      \"typeof\": {keyword: \"typeof\", prefix: true, beforeExpr: true},\n                      \"void\": {keyword: \"void\", prefix: true, beforeExpr: true},\n                      \"delete\": {keyword: \"delete\", prefix: true, beforeExpr: true},\n                      \"class\": _class, \"extends\": _extends,\n                      \"export\": _export, \"import\": _import, \"yield\": _yield};\n\n  // Punctuation token types. Again, the `type` property is purely for debugging.\n\n  var _bracketL = {type: \"[\", beforeExpr: true}, _bracketR = {type: \"]\"}, _braceL = {type: \"{\", beforeExpr: true};\n  var _braceR = {type: \"}\"}, _parenL = {type: \"(\", beforeExpr: true}, _parenR = {type: \")\"};\n  var _comma = {type: \",\", beforeExpr: true}, _semi = {type: \";\", beforeExpr: true};\n  var _colon = {type: \":\", beforeExpr: true}, _dot = {type: \".\"}, _question = {type: \"?\", beforeExpr: true};\n  var _arrow = {type: \"=>\", beforeExpr: true}, _bquote = {type: \"`\"}, _dollarBraceL = {type: \"${\", beforeExpr: true};\n  var _ltSlash = {type: \"</\"};\n  var _arrow = {type: \"=>\", beforeExpr: true}, _template = {type: \"template\"}, _templateContinued = {type: \"templateContinued\"};\n  var _ellipsis = {type: \"...\", prefix: true, beforeExpr: true};\n  var _paamayimNekudotayim = { type: \"::\", beforeExpr: true };\n  var _at = { type: '@' };\n  var _hash = { type: '#' };\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator. `isUpdate` specifies that the node produced by\n  // the operator should be of type UpdateExpression rather than\n  // simply UnaryExpression (`++` and `--`).\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  var _slash = {binop: 10, beforeExpr: true}, _eq = {isAssign: true, beforeExpr: true};\n  var _assign = {isAssign: true, beforeExpr: true};\n  var _incDec = {postfix: true, prefix: true, isUpdate: true}, _prefix = {prefix: true, beforeExpr: true};\n  var _logicalOR = {binop: 1, beforeExpr: true};\n  var _logicalAND = {binop: 2, beforeExpr: true};\n  var _bitwiseOR = {binop: 3, beforeExpr: true};\n  var _bitwiseXOR = {binop: 4, beforeExpr: true};\n  var _bitwiseAND = {binop: 5, beforeExpr: true};\n  var _equality = {binop: 6, beforeExpr: true};\n  var _relational = {binop: 7, beforeExpr: true};\n  var _bitShift = {binop: 8, beforeExpr: true};\n  var _plusMin = {binop: 9, prefix: true, beforeExpr: true};\n  var _modulo = {binop: 10, beforeExpr: true};\n\n  // '*' may be multiply or have special meaning in ES6\n  var _star = {binop: 10, beforeExpr: true};\n  var _exponent = {binop: 10, beforeExpr: true};\n\n  // '<', '>' may be relational or have special meaning in JSX\n  var _lt = {binop: 7, beforeExpr: true}, _gt = {binop: 7, beforeExpr: true};\n\n  // Provide access to the token types for external users of the\n  // tokenizer.\n\n  exports.tokTypes = {bracketL: _bracketL, bracketR: _bracketR, braceL: _braceL, braceR: _braceR,\n                      parenL: _parenL, parenR: _parenR, comma: _comma, semi: _semi, colon: _colon,\n                      dot: _dot, ellipsis: _ellipsis, question: _question, slash: _slash, eq: _eq,\n                      name: _name, eof: _eof, num: _num, regexp: _regexp, string: _string,\n                      arrow: _arrow, bquote: _bquote, dollarBraceL: _dollarBraceL, star: _star,\n                      assign: _assign, xjsName: _xjsName, xjsText: _xjsText,\n                      paamayimNekudotayim: _paamayimNekudotayim, exponent: _exponent, at: _at, hash: _hash,\n                      template: _template, templateContinued: _templateContinued};\n  for (var kw in keywordTypes) exports.tokTypes[\"_\" + kw] = keywordTypes[kw];\n\n  // This is a trick taken from Esprima. It turns out that, on\n  // non-Chrome browsers, to check whether a string is in a set, a\n  // predicate containing a big ugly `switch` statement is faster than\n  // a regular expression, and on Chrome the two are about on par.\n  // This function uses `eval` (non-lexical) to produce such a\n  // predicate from a space-separated string of words.\n  //\n  // It starts by sorting the words by length.\n\n  function makePredicate(words) {\n    words = words.split(\" \");\n    var f = \"\", cats = [];\n    out: for (var i = 0; i < words.length; ++i) {\n      for (var j = 0; j < cats.length; ++j)\n        if (cats[j][0].length == words[i].length) {\n          cats[j].push(words[i]);\n          continue out;\n        }\n      cats.push([words[i]]);\n    }\n    function compareTo(arr) {\n      if (arr.length == 1) return f += \"return str === \" + JSON.stringify(arr[0]) + \";\";\n      f += \"switch(str){\";\n      for (var i = 0; i < arr.length; ++i) f += \"case \" + JSON.stringify(arr[i]) + \":\";\n      f += \"return true}return false;\";\n    }\n\n    // When there are more than three length categories, an outer\n    // switch first dispatches on the lengths, to save on comparisons.\n\n    if (cats.length > 3) {\n      cats.sort(function(a, b) {return b.length - a.length;});\n      f += \"switch(str.length){\";\n      for (var i = 0; i < cats.length; ++i) {\n        var cat = cats[i];\n        f += \"case \" + cat[0].length + \":\";\n        compareTo(cat);\n      }\n      f += \"}\";\n\n    // Otherwise, simply generate a flat `switch` statement.\n\n    } else {\n      compareTo(words);\n    }\n    return new Function(\"str\", f);\n  }\n\n  // The ECMAScript 3 reserved word list.\n\n  var isReservedWord3 = makePredicate(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\");\n\n  // ECMAScript 5 reserved words.\n\n  var isReservedWord5 = makePredicate(\"class enum extends super const export import\");\n\n  // The additional reserved words in strict mode.\n\n  var isStrictReservedWord = makePredicate(\"implements interface let package private protected public static yield\");\n\n  // The forbidden variable names in strict mode.\n\n  var isStrictBadIdWord = makePredicate(\"eval arguments\");\n\n  // And the keywords.\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var isEcma5AndLessKeyword = makePredicate(ecma5AndLessKeywords);\n\n  var ecma6AndLessKeywords = ecma5AndLessKeywords + \" let const class extends export import yield\";\n\n  var isEcma6Keyword = makePredicate(ecma6AndLessKeywords);\n\n  var isKeyword = isEcma5AndLessKeyword;\n\n  // ## Character categories\n\n  // Big ugly regular expressions that match characters in the\n  // whitespace, identifier, and identifier-start categories. These\n  // are only applied when a character is found to actually have a\n  // code point above 128.\n  // Generated by `tools/generate-identifier-regex.js`.\n\n  var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n  var nonASCIIidentifierStartChars = \"\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\n  var nonASCIIidentifierChars = \"\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19B0-\\u19C0\\u19C8\\u19C9\\u19D0-\\u19D9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u200C\\u200D\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA900-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F\";\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  var decimalNumber = /^\\d+$/;\n  var hexNumber = /^[\\da-fA-F]+$/;\n\n  // Whether a single character denotes a newline.\n\n  var newline = /[\\n\\r\\u2028\\u2029]/;\n\n  function isNewLine(code) {\n    return code === 10 || code === 13 || code === 0x2028 || code == 0x2029;\n  }\n\n  // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n|[\\n\\r\\u2028\\u2029]/g;\n\n  // Test whether a given character code starts an identifier.\n\n  var isIdentifierStart = exports.isIdentifierStart = function(code) {\n    if (code < 65) return code === 36;\n    if (code < 91) return true;\n    if (code < 97) return code === 95;\n    if (code < 123)return true;\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  };\n\n  // Test whether a given character is part of an identifier.\n\n  var isIdentifierChar = exports.isIdentifierChar = function(code) {\n    if (code < 48) return code === 36;\n    if (code < 58) return true;\n    if (code < 65) return false;\n    if (code < 91) return true;\n    if (code < 97) return code === 95;\n    if (code < 123)return true;\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  };\n\n  // ## Tokenizer\n\n  // These are used when `options.locations` is on, for the\n  // `tokStartLoc` and `tokEndLoc` properties.\n\n  function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  }\n\n  Position.prototype.offset = function(n) {\n    return new Position(this.line, this.column + n);\n  }\n\n  function curPosition() {\n    return new Position(tokCurLine, tokPos - tokLineStart);\n  }\n\n  // Reset the token state. Used at the start of a parse.\n\n  function initTokenState(pos) {\n    if (pos) {\n      tokPos = pos;\n      tokLineStart = Math.max(0, input.lastIndexOf(\"\\n\", pos));\n      tokCurLine = input.slice(0, tokLineStart).split(newline).length;\n    } else {\n      tokCurLine = 1;\n      tokPos = tokLineStart = 0;\n    }\n    tokRegexpAllowed = true;\n    metParenL = 0;\n    inType = inXJSChild = inXJSTag = false;\n    templates = [];\n    if (tokPos === 0 && options.allowHashBang && input.slice(0, 2) === '#!') {\n      skipLineComment(2);\n    }\n  }\n\n  // Called at the end of every token. Sets `tokEnd`, `tokVal`, and\n  // `tokRegexpAllowed`, and skips the space after the token, so that\n  // the next one's `tokStart` will point at the right position.\n\n  function finishToken(type, val, shouldSkipSpace) {\n    tokEnd = tokPos;\n    if (options.locations) tokEndLoc = curPosition();\n    tokType = type;\n    if (shouldSkipSpace !== false) skipSpace();\n    tokVal = val;\n    tokRegexpAllowed = type.beforeExpr;\n    if (options.onToken) {\n      options.onToken(new Token());\n    }\n  }\n\n  function skipBlockComment() {\n    var startLoc = options.onComment && options.locations && curPosition();\n    var start = tokPos, end = input.indexOf(\"*/\", tokPos += 2);\n    if (end === -1) raise(tokPos - 2, \"Unterminated comment\");\n    tokPos = end + 2;\n    if (options.locations) {\n      lineBreak.lastIndex = start;\n      var match;\n      while ((match = lineBreak.exec(input)) && match.index < tokPos) {\n        ++tokCurLine;\n        tokLineStart = match.index + match[0].length;\n      }\n    }\n    if (options.onComment)\n      options.onComment(true, input.slice(start + 2, end), start, tokPos,\n                        startLoc, options.locations && curPosition());\n  }\n\n  function skipLineComment(startSkip) {\n    var start = tokPos;\n    var startLoc = options.onComment && options.locations && curPosition();\n    var ch = input.charCodeAt(tokPos+=startSkip);\n    while (tokPos < inputLen && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n      ++tokPos;\n      ch = input.charCodeAt(tokPos);\n    }\n    if (options.onComment)\n      options.onComment(false, input.slice(start + startSkip, tokPos), start, tokPos,\n                        startLoc, options.locations && curPosition());\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  function skipSpace() {\n    while (tokPos < inputLen) {\n      var ch = input.charCodeAt(tokPos);\n      if (ch === 32) { // ' '\n        ++tokPos;\n      } else if (ch === 13) {\n        ++tokPos;\n        var next = input.charCodeAt(tokPos);\n        if (next === 10) {\n          ++tokPos;\n        }\n        if (options.locations) {\n          ++tokCurLine;\n          tokLineStart = tokPos;\n        }\n      } else if (ch === 10 || ch === 8232 || ch === 8233) {\n        ++tokPos;\n        if (options.locations) {\n          ++tokCurLine;\n          tokLineStart = tokPos;\n        }\n      } else if (ch > 8 && ch < 14) {\n        ++tokPos;\n      } else if (ch === 47) { // '/'\n        var next = input.charCodeAt(tokPos + 1);\n        if (next === 42) { // '*'\n          skipBlockComment();\n        } else if (next === 47) { // '/'\n          skipLineComment(2);\n        } else break;\n      } else if (ch === 160) { // '\\xa0'\n        ++tokPos;\n      } else if (ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++tokPos;\n      } else {\n        break;\n      }\n    }\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n  // The `forceRegexp` parameter is used in the one case where the\n  // `tokRegexpAllowed` trick does not work. See `parseStatement`.\n\n  function readToken_dot() {\n    var next = input.charCodeAt(tokPos + 1);\n    if (next >= 48 && next <= 57) return readNumber(true);\n    var next2 = input.charCodeAt(tokPos + 2);\n    if (options.playground && next === 63) { // 63\n      tokPos += 2;\n      return finishToken(_dotQuestion);\n    } else if (options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n      tokPos += 3;\n      return finishToken(_ellipsis);\n    } else {\n      ++tokPos;\n      return finishToken(_dot);\n    }\n  }\n\n  function readToken_slash() { // '/'\n    var next = input.charCodeAt(tokPos + 1);\n    if (tokRegexpAllowed) {++tokPos; return readRegexp();}\n    if (next === 61) return finishOp(_assign, 2);\n    return finishOp(_slash, 1);\n  }\n\n  function readToken_modulo() { // '%'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === 61) return finishOp(_assign, 2);\n    return finishOp(_modulo, 1);\n  }\n\n  function readToken_mult() { // '*'\n    var type = _star;\n    var width = 1;\n    var next = input.charCodeAt(tokPos + 1);\n\n    if (options.ecmaVersion >= 7 && next === 42) { // '*'\n      width++;\n      next = input.charCodeAt(tokPos + 2);\n      type = _exponent;\n    }\n\n    if (next === 61) { // '='\n      width++;\n      type = _assign;\n    }\n    \n    return finishOp(type, width);\n  }\n\n  function readToken_pipe_amp(code) { // '|&'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === code) return finishOp(code === 124 ? _logicalOR : _logicalAND, 2);\n    if (next === 61) return finishOp(_assign, 2);\n    return finishOp(code === 124 ? _bitwiseOR : _bitwiseAND, 1);\n  }\n\n  function readToken_caret() { // '^'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === 61) return finishOp(_assign, 2);\n    return finishOp(_bitwiseXOR, 1);\n  }\n\n  function readToken_plus_min(code) { // '+-'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === code) {\n      if (next == 45 && input.charCodeAt(tokPos + 2) == 62 &&\n          newline.test(input.slice(lastEnd, tokPos))) {\n        // A `-->` line comment\n        skipLineComment(3);\n        skipSpace();\n        return readToken();\n      }\n      return finishOp(_incDec, 2);\n    }\n    if (next === 61) return finishOp(_assign, 2);\n    return finishOp(_plusMin, 1);\n  }\n\n  function readToken_lt_gt(code) { // '<>'\n    var next = input.charCodeAt(tokPos + 1);\n    var size = 1;\n    if (!inType && next === code) {\n      size = code === 62 && input.charCodeAt(tokPos + 2) === 62 ? 3 : 2;\n      if (input.charCodeAt(tokPos + size) === 61) return finishOp(_assign, size + 1);\n      return finishOp(_bitShift, size);\n    }\n    if (next == 33 && code == 60 && input.charCodeAt(tokPos + 2) == 45 &&\n        input.charCodeAt(tokPos + 3) == 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      skipLineComment(4);\n      skipSpace();\n      return readToken();\n    }\n    if (next === 61) {\n      size = input.charCodeAt(tokPos + 2) === 61 ? 3 : 2;\n      return finishOp(_relational, size);\n    }\n    if (next === 47) {\n      // '</', beginning of JSX closing element\n      size = 2;\n      return finishOp(_ltSlash, size);\n    }\n    return code === 60 ? finishOp(_lt, size) : finishOp(_gt, size, !inXJSTag);\n  }\n\n  function readToken_eq_excl(code) { // '=!', '=>'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === 61) return finishOp(_equality, input.charCodeAt(tokPos + 2) === 61 ? 3 : 2);\n    if (code === 61 && next === 62 && options.ecmaVersion >= 6) { // '=>'\n      tokPos += 2;\n      return finishToken(_arrow);\n    }\n    return finishOp(code === 61 ? _eq : _prefix, 1);\n  }\n\n  // Get token inside ES6 template (special rules work there).\n\n  function getTemplateToken(code) {\n    // '`' and '${' have special meanings, but they should follow\n    // string (can be empty)\n    if (tokType === _string) {\n      if (code === 96) { // '`'\n        ++tokPos;\n        return finishToken(_bquote);\n      } else if (code === 36 && input.charCodeAt(tokPos + 1) === 123) { // '${'\n        tokPos += 2;\n        return finishToken(_dollarBraceL);\n      }\n    }\n    // anything else is considered string literal\n    return readTmplString();\n  }\n\n  function getTokenFromCode(code) {\n    switch(code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n    case 46: // '.'\n      return readToken_dot();\n\n      // Punctuation tokens.\n    case 40: ++tokPos; return finishToken(_parenL);\n    case 41: ++tokPos; return finishToken(_parenR);\n    case 59: ++tokPos; return finishToken(_semi);\n    case 44: ++tokPos; return finishToken(_comma);\n    case 91: ++tokPos; return finishToken(_bracketL);\n    case 93: ++tokPos; return finishToken(_bracketR);\n    case 123:\n      ++tokPos;\n      if (templates.length) ++templates[templates.length - 1];\n      return finishToken(_braceL);\n    case 125:\n      ++tokPos;\n      if (templates.length && --templates[templates.length - 1] === 0)\n        return readTemplateString(_templateContinued);\n      else\n        return finishToken(_braceR);\n    case 63: ++tokPos; return finishToken(_question);\n\n    case 64:\n      if (options.playground) {\n        ++tokPos;\n        return finishToken(_at);\n      }\n\n    case 35:\n      if (options.playground) {\n        ++tokPos;\n        return finishToken(_hash);\n      }\n\n    case 58:\n      ++tokPos;\n      if (options.ecmaVersion >= 7) {\n        var next = input.charCodeAt(tokPos);\n        if (next === 58) {\n          ++tokPos;\n          return finishToken(_paamayimNekudotayim);\n        }\n      }\n      return finishToken(_colon);\n\n    case 96: // '`'\n      if (options.ecmaVersion >= 6) {\n        ++tokPos;\n        return readTemplateString(_template);\n      }\n\n    case 48: // '0'\n      var next = input.charCodeAt(tokPos + 1);\n      if (next === 120 || next === 88) return readRadixNumber(16); // '0x', '0X' - hex number\n      if (options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) return readRadixNumber(8); // '0o', '0O' - octal number\n        if (next === 98 || next === 66) return readRadixNumber(2); // '0b', '0B' - binary number\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float.\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n      return readNumber(false);\n\n      // Quotes produce strings.\n    case 34: case 39: // '\"', \"'\"\n      return inXJSTag ? readXJSStringLiteral() : readString(code);\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n    case 47: // '/'\n      return readToken_slash();\n\n    case 37: // '%'\n      return readToken_modulo();\n\n    case 42: // '*'\n      return readToken_mult();\n\n    case 124: case 38: // '|&'\n      return readToken_pipe_amp(code);\n\n    case 94: // '^'\n      return readToken_caret();\n\n    case 43: case 45: // '+-'\n      return readToken_plus_min(code);\n\n    case 60: case 62: // '<>'\n      return readToken_lt_gt(code);\n\n    case 61: case 33: // '=!'\n      return readToken_eq_excl(code);\n\n    case 126: // '~'\n      return finishOp(_prefix, 1);\n    }\n\n    return false;\n  }\n\n  function readToken(forceRegexp) {\n    if (!forceRegexp) tokStart = tokPos;\n    else tokPos = tokStart + 1;\n    if (options.locations) tokStartLoc = curPosition();\n    if (forceRegexp) return readRegexp();\n    if (tokPos >= inputLen) return finishToken(_eof);\n\n    var code = input.charCodeAt(tokPos);\n\n    // JSX content - either simple text, start of <tag> or {expression}\n    if (inXJSChild && tokType !== _braceL && code !== 60 && code !== 123 && code !== 125) {\n      return readXJSText(['<', '{']);\n    }\n\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code) || code === 92 /* '\\' */) return readWord();\n\n    var tok = getTokenFromCode(code);\n\n    if (tok === false) {\n      // If we are here, we either found a non-ASCII identifier\n      // character, or something that's entirely disallowed.\n      var ch = String.fromCharCode(code);\n      if (ch === \"\\\\\" || nonASCIIidentifierStart.test(ch)) return readWord();\n      raise(tokPos, \"Unexpected character '\" + ch + \"'\");\n    }\n    return tok;\n  }\n\n  function finishOp(type, size, shouldSkipSpace) {\n    var str = input.slice(tokPos, tokPos + size);\n    tokPos += size;\n    finishToken(type, str, shouldSkipSpace);\n  }\n\n  var regexpUnicodeSupport = false;\n  try { new RegExp(\"\\uffff\", \"u\"); regexpUnicodeSupport = true; }\n  catch(e) {}\n\n  // Parse a regular expression. Some context-awareness is necessary,\n  // since a '/' inside a '[]' set does not end the expression.\n\n  function readRegexp() {\n    var content = \"\", escaped, inClass, start = tokPos;\n    for (;;) {\n      if (tokPos >= inputLen) raise(start, \"Unterminated regular expression\");\n      var ch = nextChar();\n      if (newline.test(ch)) raise(start, \"Unterminated regular expression\");\n      if (!escaped) {\n        if (ch === \"[\") inClass = true;\n        else if (ch === \"]\" && inClass) inClass = false;\n        else if (ch === \"/\" && !inClass) break;\n        escaped = ch === \"\\\\\";\n      } else escaped = false;\n      ++tokPos;\n    }\n    var content = input.slice(start, tokPos);\n    ++tokPos;\n    // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n    // here (don't ask).\n    var mods = readWord1();\n    // Detect invalid regular expressions.\n    var tmp = content;\n    if (mods) {\n      var validFlags = /^[gmsiy]*$/;\n      if (options.ecmaVersion >= 6) validFlags = /^[gmsiyu]*$/;\n      if (!validFlags.test(mods)) raise(start, \"Invalid regular expression flag\");\n      if (mods.indexOf('u') >= 0 && !regexpUnicodeSupport) {\n        // Replace each astral symbol and every Unicode code point\n        // escape sequence that represents such a symbol with a single\n        // ASCII symbol to avoid throwing on regular expressions that\n        // are only valid in combination with the `/u` flag.\n        tmp = tmp\n          .replace(/\\\\u\\{([0-9a-fA-F]{5,6})\\}/g, \"x\")\n          .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \"x\");\n      }\n    }\n    // Detect invalid regular expressions.\n    try {\n      new RegExp(tmp);\n    } catch (e) {\n      if (e instanceof SyntaxError) raise(start, \"Error parsing regular expression: \" + e.message);\n      raise(e);\n    }\n    // Get a regular expression object for this pattern-flag pair, or `null` in\n    // case the current environment doesn't support the flags it uses.\n    try {\n      var value = new RegExp(content, mods);\n    } catch (err) {\n      value = null;\n  }\n    return finishToken(_regexp, {pattern: content, flags: mods, value: value});\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  function readInt(radix, len) {\n    var start = tokPos, total = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = input.charCodeAt(tokPos), val;\n      if (code >= 97) val = code - 97 + 10; // a\n      else if (code >= 65) val = code - 65 + 10; // A\n      else if (code >= 48 && code <= 57) val = code - 48; // 0-9\n      else val = Infinity;\n      if (val >= radix) break;\n      ++tokPos;\n      total = total * radix + val;\n    }\n    if (tokPos === start || len != null && tokPos - start !== len) return null;\n\n    return total;\n  }\n\n  function readRadixNumber(radix) {\n    tokPos += 2; // 0x\n    var val = readInt(radix);\n    if (val == null) raise(tokStart + 2, \"Expected number in radix \" + radix);\n    if (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\n    return finishToken(_num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  function readNumber(startsWithDot) {\n    var start = tokPos, isFloat = false, octal = input.charCodeAt(tokPos) === 48;\n    if (!startsWithDot && readInt(10) === null) raise(start, \"Invalid number\");\n    if (input.charCodeAt(tokPos) === 46) {\n      ++tokPos;\n      readInt(10);\n      isFloat = true;\n    }\n    var next = input.charCodeAt(tokPos);\n    if (next === 69 || next === 101) { // 'eE'\n      next = input.charCodeAt(++tokPos);\n      if (next === 43 || next === 45) ++tokPos; // '+-'\n      if (readInt(10) === null) raise(start, \"Invalid number\");\n      isFloat = true;\n    }\n    if (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\n\n    var str = input.slice(start, tokPos), val;\n    if (isFloat) val = parseFloat(str);\n    else if (!octal || str.length === 1) val = parseInt(str, 10);\n    else if (/[89]/.test(str) || strict) raise(start, \"Invalid number\");\n    else val = parseInt(str, 8);\n    return finishToken(_num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  function readCodePoint() {\n    var ch = input.charCodeAt(tokPos), code;\n    \n    if (ch === 123) {\n      if (options.ecmaVersion < 6) unexpected();\n      ++tokPos;\n      code = readHexChar(input.indexOf('}', tokPos) - tokPos);\n      ++tokPos;\n      if (code > 0x10FFFF) unexpected();\n    } else {\n      code = readHexChar(4);\n    }\n\n    // UTF-16 Encoding\n    if (code <= 0xFFFF) {\n      return String.fromCharCode(code);\n    }\n    var cu1 = ((code - 0x10000) >> 10) + 0xD800;\n    var cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n    return String.fromCharCode(cu1, cu2);\n  }\n\n  function readString(quote) {\n    ++tokPos;\n    var out = \"\";\n    for (;;) {\n      if (tokPos >= inputLen) raise(tokStart, \"Unterminated string constant\");\n      var ch = input.charCodeAt(tokPos);\n      if (ch === quote) {\n        ++tokPos;\n        return finishToken(_string, out);\n      }\n      if (ch === 92) { // '\\'\n        out += readEscapedChar();\n      } else {\n        ++tokPos;\n        if (newline.test(String.fromCharCode(ch))) {\n          raise(tokStart, \"Unterminated string constant\");\n          }\n        out += String.fromCharCode(ch); // '\\'\n        }\n    }\n  }\n\n  function readTemplateString(type) {\n    if (type == _templateContinued) templates.pop();\n    var out = \"\", start = tokPos;;\n    for (;;) {\n      if (tokPos >= inputLen) raise(tokStart, \"Unterminated template\");\n      var ch = input.charAt(tokPos);\n      if (ch === \"`\" || ch === \"$\" && input.charCodeAt(tokPos + 1) === 123) { // '`', '${'\n        var raw = input.slice(start, tokPos);\n        ++tokPos;\n        if (ch == \"$\") { ++tokPos; templates.push(1); }\n        return finishToken(type, {cooked: out, raw: raw});\n      }\n\n      if (ch === \"\\\\\") { // '\\'\n        out += readEscapedChar();\n      } else {\n        ++tokPos;\n        if (newline.test(ch)) {\n          if (ch === \"\\r\" && input.charCodeAt(tokPos) === 10) {\n            ++tokPos;\n            ch = \"\\n\";\n          }\n          if (options.locations) {\n            ++tokCurLine;\n            tokLineStart = tokPos;\n          }\n        }\n        out += ch;\n      }\n    }\n  }\n\n  // Used to read escaped characters\n\n  function readEscapedChar() {\n    var ch = input.charCodeAt(++tokPos);\n    var octal = /^[0-7]+/.exec(input.slice(tokPos, tokPos + 3));\n    if (octal) octal = octal[0];\n    while (octal && parseInt(octal, 8) > 255) octal = octal.slice(0, -1);\n    if (octal === \"0\") octal = null;\n    ++tokPos;\n    if (octal) {\n      if (strict) raise(tokPos - 2, \"Octal literal in strict mode\");\n      tokPos += octal.length - 1;\n      return String.fromCharCode(parseInt(octal, 8));\n    } else {\n      switch (ch) {\n        case 110: return \"\\n\"; // 'n' -> '\\n'\n        case 114: return \"\\r\"; // 'r' -> '\\r'\n        case 120: return String.fromCharCode(readHexChar(2)); // 'x'\n        case 117: return readCodePoint(); // 'u'\n        case 116: return \"\\t\"; // 't' -> '\\t'\n        case 98: return \"\\b\"; // 'b' -> '\\b'\n        case 118: return \"\\u000b\"; // 'v' -> '\\u000b'\n        case 102: return \"\\f\"; // 'f' -> '\\f'\n        case 48: return \"\\0\"; // 0 -> '\\0'\n        case 13: if (input.charCodeAt(tokPos) === 10) ++tokPos; // '\\r\\n'\n        case 10: // ' \\n'\n          if (options.locations) { tokLineStart = tokPos; ++tokCurLine; }\n          return \"\";\n        default: return String.fromCharCode(ch);\n      }\n    }\n  }\n\n  var XHTMLEntities = {\n    quot: '\\u0022',\n    amp: '&',\n    apos: '\\u0027',\n    lt: '<',\n    gt: '>',\n    nbsp: '\\u00A0',\n    iexcl: '\\u00A1',\n    cent: '\\u00A2',\n    pound: '\\u00A3',\n    curren: '\\u00A4',\n    yen: '\\u00A5',\n    brvbar: '\\u00A6',\n    sect: '\\u00A7',\n    uml: '\\u00A8',\n    copy: '\\u00A9',\n    ordf: '\\u00AA',\n    laquo: '\\u00AB',\n    not: '\\u00AC',\n    shy: '\\u00AD',\n    reg: '\\u00AE',\n    macr: '\\u00AF',\n    deg: '\\u00B0',\n    plusmn: '\\u00B1',\n    sup2: '\\u00B2',\n    sup3: '\\u00B3',\n    acute: '\\u00B4',\n    micro: '\\u00B5',\n    para: '\\u00B6',\n    middot: '\\u00B7',\n    cedil: '\\u00B8',\n    sup1: '\\u00B9',\n    ordm: '\\u00BA',\n    raquo: '\\u00BB',\n    frac14: '\\u00BC',\n    frac12: '\\u00BD',\n    frac34: '\\u00BE',\n    iquest: '\\u00BF',\n    Agrave: '\\u00C0',\n    Aacute: '\\u00C1',\n    Acirc: '\\u00C2',\n    Atilde: '\\u00C3',\n    Auml: '\\u00C4',\n    Aring: '\\u00C5',\n    AElig: '\\u00C6',\n    Ccedil: '\\u00C7',\n    Egrave: '\\u00C8',\n    Eacute: '\\u00C9',\n    Ecirc: '\\u00CA',\n    Euml: '\\u00CB',\n    Igrave: '\\u00CC',\n    Iacute: '\\u00CD',\n    Icirc: '\\u00CE',\n    Iuml: '\\u00CF',\n    ETH: '\\u00D0',\n    Ntilde: '\\u00D1',\n    Ograve: '\\u00D2',\n    Oacute: '\\u00D3',\n    Ocirc: '\\u00D4',\n    Otilde: '\\u00D5',\n    Ouml: '\\u00D6',\n    times: '\\u00D7',\n    Oslash: '\\u00D8',\n    Ugrave: '\\u00D9',\n    Uacute: '\\u00DA',\n    Ucirc: '\\u00DB',\n    Uuml: '\\u00DC',\n    Yacute: '\\u00DD',\n    THORN: '\\u00DE',\n    szlig: '\\u00DF',\n    agrave: '\\u00E0',\n    aacute: '\\u00E1',\n    acirc: '\\u00E2',\n    atilde: '\\u00E3',\n    auml: '\\u00E4',\n    aring: '\\u00E5',\n    aelig: '\\u00E6',\n    ccedil: '\\u00E7',\n    egrave: '\\u00E8',\n    eacute: '\\u00E9',\n    ecirc: '\\u00EA',\n    euml: '\\u00EB',\n    igrave: '\\u00EC',\n    iacute: '\\u00ED',\n    icirc: '\\u00EE',\n    iuml: '\\u00EF',\n    eth: '\\u00F0',\n    ntilde: '\\u00F1',\n    ograve: '\\u00F2',\n    oacute: '\\u00F3',\n    ocirc: '\\u00F4',\n    otilde: '\\u00F5',\n    ouml: '\\u00F6',\n    divide: '\\u00F7',\n    oslash: '\\u00F8',\n    ugrave: '\\u00F9',\n    uacute: '\\u00FA',\n    ucirc: '\\u00FB',\n    uuml: '\\u00FC',\n    yacute: '\\u00FD',\n    thorn: '\\u00FE',\n    yuml: '\\u00FF',\n    OElig: '\\u0152',\n    oelig: '\\u0153',\n    Scaron: '\\u0160',\n    scaron: '\\u0161',\n    Yuml: '\\u0178',\n    fnof: '\\u0192',\n    circ: '\\u02C6',\n    tilde: '\\u02DC',\n    Alpha: '\\u0391',\n    Beta: '\\u0392',\n    Gamma: '\\u0393',\n    Delta: '\\u0394',\n    Epsilon: '\\u0395',\n    Zeta: '\\u0396',\n    Eta: '\\u0397',\n    Theta: '\\u0398',\n    Iota: '\\u0399',\n    Kappa: '\\u039A',\n    Lambda: '\\u039B',\n    Mu: '\\u039C',\n    Nu: '\\u039D',\n    Xi: '\\u039E',\n    Omicron: '\\u039F',\n    Pi: '\\u03A0',\n    Rho: '\\u03A1',\n    Sigma: '\\u03A3',\n    Tau: '\\u03A4',\n    Upsilon: '\\u03A5',\n    Phi: '\\u03A6',\n    Chi: '\\u03A7',\n    Psi: '\\u03A8',\n    Omega: '\\u03A9',\n    alpha: '\\u03B1',\n    beta: '\\u03B2',\n    gamma: '\\u03B3',\n    delta: '\\u03B4',\n    epsilon: '\\u03B5',\n    zeta: '\\u03B6',\n    eta: '\\u03B7',\n    theta: '\\u03B8',\n    iota: '\\u03B9',\n    kappa: '\\u03BA',\n    lambda: '\\u03BB',\n    mu: '\\u03BC',\n    nu: '\\u03BD',\n    xi: '\\u03BE',\n    omicron: '\\u03BF',\n    pi: '\\u03C0',\n    rho: '\\u03C1',\n    sigmaf: '\\u03C2',\n    sigma: '\\u03C3',\n    tau: '\\u03C4',\n    upsilon: '\\u03C5',\n    phi: '\\u03C6',\n    chi: '\\u03C7',\n    psi: '\\u03C8',\n    omega: '\\u03C9',\n    thetasym: '\\u03D1',\n    upsih: '\\u03D2',\n    piv: '\\u03D6',\n    ensp: '\\u2002',\n    emsp: '\\u2003',\n    thinsp: '\\u2009',\n    zwnj: '\\u200C',\n    zwj: '\\u200D',\n    lrm: '\\u200E',\n    rlm: '\\u200F',\n    ndash: '\\u2013',\n    mdash: '\\u2014',\n    lsquo: '\\u2018',\n    rsquo: '\\u2019',\n    sbquo: '\\u201A',\n    ldquo: '\\u201C',\n    rdquo: '\\u201D',\n    bdquo: '\\u201E',\n    dagger: '\\u2020',\n    Dagger: '\\u2021',\n    bull: '\\u2022',\n    hellip: '\\u2026',\n    permil: '\\u2030',\n    prime: '\\u2032',\n    Prime: '\\u2033',\n    lsaquo: '\\u2039',\n    rsaquo: '\\u203A',\n    oline: '\\u203E',\n    frasl: '\\u2044',\n    euro: '\\u20AC',\n    image: '\\u2111',\n    weierp: '\\u2118',\n    real: '\\u211C',\n    trade: '\\u2122',\n    alefsym: '\\u2135',\n    larr: '\\u2190',\n    uarr: '\\u2191',\n    rarr: '\\u2192',\n    darr: '\\u2193',\n    harr: '\\u2194',\n    crarr: '\\u21B5',\n    lArr: '\\u21D0',\n    uArr: '\\u21D1',\n    rArr: '\\u21D2',\n    dArr: '\\u21D3',\n    hArr: '\\u21D4',\n    forall: '\\u2200',\n    part: '\\u2202',\n    exist: '\\u2203',\n    empty: '\\u2205',\n    nabla: '\\u2207',\n    isin: '\\u2208',\n    notin: '\\u2209',\n    ni: '\\u220B',\n    prod: '\\u220F',\n    sum: '\\u2211',\n    minus: '\\u2212',\n    lowast: '\\u2217',\n    radic: '\\u221A',\n    prop: '\\u221D',\n    infin: '\\u221E',\n    ang: '\\u2220',\n    and: '\\u2227',\n    or: '\\u2228',\n    cap: '\\u2229',\n    cup: '\\u222A',\n    'int': '\\u222B',\n    there4: '\\u2234',\n    sim: '\\u223C',\n    cong: '\\u2245',\n    asymp: '\\u2248',\n    ne: '\\u2260',\n    equiv: '\\u2261',\n    le: '\\u2264',\n    ge: '\\u2265',\n    sub: '\\u2282',\n    sup: '\\u2283',\n    nsub: '\\u2284',\n    sube: '\\u2286',\n    supe: '\\u2287',\n    oplus: '\\u2295',\n    otimes: '\\u2297',\n    perp: '\\u22A5',\n    sdot: '\\u22C5',\n    lceil: '\\u2308',\n    rceil: '\\u2309',\n    lfloor: '\\u230A',\n    rfloor: '\\u230B',\n    lang: '\\u2329',\n    rang: '\\u232A',\n    loz: '\\u25CA',\n    spades: '\\u2660',\n    clubs: '\\u2663',\n    hearts: '\\u2665',\n    diams: '\\u2666'\n  };\n\n  function readXJSEntity() {\n    var str = '', count = 0, entity;\n    var ch = nextChar();\n    if (ch !== '&') raise(tokPos, \"Entity must start with an ampersand\");\n    var startPos = ++tokPos;\n    while (tokPos < inputLen && count++ < 10) {\n      ch = nextChar();\n      tokPos++;\n      if (ch === ';') {\n        if (str[0] === '#') {\n          if (str[1] === 'x') {\n            str = str.substr(2);\n            if (hexNumber.test(str)) {\n              entity = String.fromCharCode(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n            if (decimalNumber.test(str)) {\n              entity = String.fromCharCode(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = XHTMLEntities[str];\n        }\n        break;\n      }\n      str += ch;\n    }\n    if (!entity) {\n      tokPos = startPos;\n      return '&';\n    }\n    return entity;\n  }\n\n  function readXJSText(stopChars) {\n    var str = '';\n    while (tokPos < inputLen) {\n      var ch = nextChar();\n      if (stopChars.indexOf(ch) !== -1) {\n        break;\n      }\n      if (ch === '&') {\n        str += readXJSEntity();\n      } else {\n        ++tokPos;\n        if (ch === '\\r' && nextChar() === '\\n') {\n          str += ch;\n          ++tokPos;\n          ch = '\\n';\n        }\n        if (ch === '\\n' && options.locations) {\n          tokLineStart = tokPos;\n          ++tokCurLine;\n        }\n        str += ch;\n      }\n    }\n    return finishToken(_xjsText, str);\n  }\n\n  function readXJSStringLiteral() {\n    var quote = input.charCodeAt(tokPos);\n\n    if (quote !== 34 && quote !== 39) {\n      raise(\"String literal must starts with a quote\");\n    }\n\n    ++tokPos;\n\n    readXJSText([String.fromCharCode(quote)]);\n\n    if (quote !== input.charCodeAt(tokPos)) {\n      unexpected();\n    }\n\n    ++tokPos;\n\n    return finishToken(tokType, tokVal);\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n  function readHexChar(len) {\n    var n = readInt(16, len);\n    if (n === null) raise(tokStart, \"Bad character escape sequence\");\n    return n;\n  }\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n\n  var containsEsc;\n\n  // Read an identifier, and return it as a string. Sets `containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Only builds up the word character-by-character when it actually\n  // containeds an escape, as a micro-optimization.\n\n  function readWord1() {\n    containsEsc = false;\n    var word, first = true, start = tokPos;\n    for (;;) {\n      var ch = input.charCodeAt(tokPos);\n      if (isIdentifierChar(ch) || (inXJSTag && ch === 45)) {\n        if (containsEsc) word += nextChar();\n        ++tokPos;\n      } else if (ch === 92 && !inXJSTag) { // \"\\\"\n        if (!containsEsc) word = input.slice(start, tokPos);\n        containsEsc = true;\n        if (input.charCodeAt(++tokPos) != 117) // \"u\"\n          raise(tokPos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n        ++tokPos;\n        var esc = readHexChar(4);\n        var escStr = String.fromCharCode(esc);\n        if (!escStr) raise(tokPos - 1, \"Invalid Unicode escape\");\n        if (!(first ? isIdentifierStart(esc) : isIdentifierChar(esc)))\n          raise(tokPos - 4, \"Invalid Unicode escape\");\n        word += escStr;\n      } else {\n        break;\n      }\n      first = false;\n    }\n    return containsEsc ? word : input.slice(start, tokPos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  function readWord() {\n    var word = readWord1();\n    var type = inXJSTag ? _xjsName : _name;\n    if (!containsEsc && isKeyword(word))\n      type = keywordTypes[word];\n    return finishToken(type, word);\n  }\n\n  // ## Parser\n\n  // A recursive descent parser operates by defining functions for all\n  // syntactic elements, and recursively calling those, each function\n  // advancing the input stream and returning an AST node. Precedence\n  // of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n  // instead of `(!x)[1]` is handled by the fact that the parser\n  // function that parses unary prefix operators is called first, and\n  // in turn calls the function that parses `[]` subscripts — that\n  // way, it'll receive the node for `x[1]` already parsed, and wraps\n  // *that* in the unary operator node.\n  //\n  // Acorn uses an [operator precedence parser][opp] to handle binary\n  // operator precedence, because it is much more compact than using\n  // the technique outlined above, which uses different, nesting\n  // functions to specify precedence, for all of the ten binary\n  // precedence levels that JavaScript defines.\n  //\n  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n  // ### Parser utilities\n\n  // Continue to the next token.\n\n  function next() {\n    lastStart = tokStart;\n    lastEnd = tokEnd;\n    lastEndLoc = tokEndLoc;\n    readToken();\n  }\n\n  // Enter strict mode. Re-reads the next token to please pedantic\n  // tests (\"use strict\"; 010; -- should fail).\n\n  function setStrict(strct) {\n    strict = strct;\n    tokPos = tokStart;\n    if (options.locations) {\n      while (tokPos < tokLineStart) {\n        tokLineStart = input.lastIndexOf(\"\\n\", tokLineStart - 2) + 1;\n        --tokCurLine;\n      }\n    }\n    skipSpace();\n    readToken();\n  }\n\n  // Start an AST node, attaching a start offset.\n\n  function Node() {\n    this.type = null;\n    this.start = tokStart;\n    this.end = null;\n  }\n  \n  exports.Node = Node;\n\n  function SourceLocation() {\n    this.start = tokStartLoc;\n    this.end = null;\n    if (sourceFile !== null) this.source = sourceFile;\n  }\n\n  function startNode() {\n    var node = new Node();\n    if (options.locations)\n      node.loc = new SourceLocation();\n    if (options.directSourceFile)\n      node.sourceFile = options.directSourceFile;\n    if (options.ranges)\n      node.range = [tokStart, 0];\n    return node;\n  }\n\n  // Sometimes, a node is only started *after* the token stream passed\n  // its start position. The functions below help storing a position\n  // and creating a node from a previous position.\n\n  function storeCurrentPos() {\n    return options.locations ? [tokStart, tokStartLoc] : tokStart;\n  }\n\n  function startNodeAt(pos) {\n    var node = new Node(), start = pos;\n    if (options.locations) {\n      node.loc = new SourceLocation();\n      node.loc.start = start[1];\n      start = pos[0];\n    }\n    node.start = start;\n    if (options.directSourceFile)\n      node.sourceFile = options.directSourceFile;\n    if (options.ranges)\n      node.range = [start, 0];\n\n    return node;\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  function finishNode(node, type) {\n    node.type = type;\n    node.end = lastEnd;\n    if (options.locations)\n      node.loc.end = lastEndLoc;\n    if (options.ranges)\n      node.range[1] = lastEnd;\n    return node;\n  }\n\n  function finishNodeAt(node, type, pos) {\n    if (options.locations) { node.loc.end = pos[1]; pos = pos[0]; }\n    node.type = type;\n    node.end = pos;\n    if (options.ranges)\n      node.range[1] = pos;\n    return node;\n  }\n\n  // Test whether a statement node is the string literal `\"use strict\"`.\n\n  function isUseStrict(stmt) {\n    return options.ecmaVersion >= 5 && stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"Literal\" && stmt.expression.value === \"use strict\";\n  }\n\n  // Predicate that tests whether the next token is of the given\n  // type, and if yes, consumes it as a side effect.\n\n  function eat(type) {\n    if (tokType === type) {\n      next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  function canInsertSemicolon() {\n    return !options.strictSemicolons &&\n      (tokType === _eof || tokType === _braceR || newline.test(input.slice(lastEnd, tokStart)));\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  function semicolon() {\n    if (!eat(_semi) && !canInsertSemicolon()) unexpected();\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error.\n\n  function expect(type) {\n    eat(type) || unexpected();\n  }\n\n  // Get following char.\n\n  function nextChar() {\n    return input.charAt(tokPos);\n  }\n\n  // Raise an unexpected token error.\n\n  function unexpected(pos) {\n    raise(pos != null ? pos : tokStart, \"Unexpected token\");\n  }\n\n  // Checks if hash object has a property.\n\n  function has(obj, propName) {\n    return Object.prototype.hasOwnProperty.call(obj, propName);\n  }\n// Convert existing expression atom to assignable pattern\n  // if possible.\n\n  function toAssignable(node, allowSpread, checkType) {\n    if (options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"MemberExpression\":\n          break;          \n\n        case \"ObjectExpression\":\n          node.type = \"ObjectPattern\";\n          for (var i = 0; i < node.properties.length; i++) {\n            var prop = node.properties[i];\n            if (prop.type === \"Property\" && prop.kind !== \"init\") unexpected(prop.key.start);\n            toAssignable(prop.value, false, checkType);\n          }\n          break;\n\n        case \"ArrayExpression\":\n          node.type = \"ArrayPattern\";\n          for (var i = 0, lastI = node.elements.length - 1; i <= lastI; i++) {\n            toAssignable(node.elements[i], i === lastI, checkType);\n          }\n          break;\n\n        case \"SpreadElement\":\n          if (allowSpread) {\n            toAssignable(node.argument, false, checkType);\n            checkSpreadAssign(node.argument);\n          } else {\n            unexpected(node.start);\n          }\n          break;\n\n        default:\n          if (checkType) unexpected(node.start);\n      }\n    }\n    return node;\n  }\n\n  // Checks if node can be assignable spread argument.\n\n  function checkSpreadAssign(node) {\n    if (node.type !== \"Identifier\" && node.type !== \"ArrayPattern\")\n      unexpected(node.start);\n  }\n\n  // Verify that argument names are not repeated, and it does not\n  // try to bind the words `eval` or `arguments`.\n\n  function checkFunctionParam(param, nameHash) {\n    switch (param.type) {\n      case \"Identifier\":\n        if (isStrictReservedWord(param.name) || isStrictBadIdWord(param.name))\n          raise(param.start, \"Defining '\" + param.name + \"' in strict mode\");\n        if (has(nameHash, param.name))\n          raise(param.start, \"Argument name clash in strict mode\");\n        nameHash[param.name] = true;\n        break;\n\n      case \"ObjectPattern\":\n        for (var i = 0; i < param.properties.length; i++)\n          checkFunctionParam(param.properties[i].value, nameHash);\n        break;\n\n      case \"ArrayPattern\":\n        for (var i = 0; i < param.elements.length; i++) {\n          var elem = param.elements[i];\n          if (elem) checkFunctionParam(elem, nameHash);\n        }\n        break;\n    }\n  }\n\n  // Check if property name clashes with already added.\n  // Object/class getters and setters are not allowed to clash —\n  // either with each other or with an init property — and in\n  // strict mode, init properties are also not allowed to be repeated.\n\n  function checkPropClash(prop, propHash) {\n    if (options.ecmaVersion >= 6) return;\n    var key = prop.key, name;\n    switch (key.type) {\n      case \"Identifier\": name = key.name; break;\n      case \"Literal\": name = String(key.value); break;\n      default: return;\n    }\n    var kind = prop.kind || \"init\", other;\n    if (has(propHash, name)) {\n      other = propHash[name];\n      var isGetSet = kind !== \"init\";\n      if ((strict || isGetSet) && other[kind] || !(isGetSet ^ other.init))\n        raise(key.start, \"Redefinition of property\");\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  }\n\n  // Verify that a node is an lval — something that can be assigned\n  // to.\n\n  function checkLVal(expr, isBinding) {\n    switch (expr.type) {\n      case \"Identifier\":\n        if (strict && (isStrictBadIdWord(expr.name) || isStrictReservedWord(expr.name)))\n          raise(expr.start, (isBinding ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\");\n        break;\n      \n      case \"MemberExpression\":\n        if (isBinding) raise(expr.start, \"Binding to member expression\");\n        break;\n\n      case \"ObjectPattern\":\n        for (var i = 0; i < expr.properties.length; i++) {\n          var prop = expr.properties[i];\n          if (prop.type === \"Property\") prop = prop.value;\n          checkLVal(prop, isBinding);\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (var i = 0; i < expr.elements.length; i++) {\n          var elem = expr.elements[i];\n          if (elem) checkLVal(elem, isBinding);\n        }\n        break;\n\n      case \"SpreadProperty\":\n      case \"SpreadElement\":\n      case \"VirtualPropertyExpression\":\n        break;\n\n      default:\n      raise(expr.start, \"Assigning to rvalue\");\n  }\n  }\n\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  function parseTopLevel(node) {\n    var first = true;\n    if (!node.body) node.body = [];\n    while (tokType !== _eof) {\n      var stmt = parseStatement(true);\n      node.body.push(stmt);\n      if (first && isUseStrict(stmt)) setStrict(true);\n      first = false;\n    }\n\n    lastStart = tokStart;\n    lastEnd = tokEnd;\n    lastEndLoc = tokEndLoc;\n    return finishNode(node, \"Program\");\n  }\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo);`, where looking at the previous token\n  // does not help.\n\n  function parseStatement(topLevel) {\n    if (tokType === _slash || tokType === _assign && tokVal == \"/=\")\n      readToken(true);\n\n    var starttype = tokType, node = startNode();\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n    case _break: case _continue: return parseBreakContinueStatement(node, starttype.keyword);\n    case _debugger: return parseDebuggerStatement(node);\n    case _do: return parseDoStatement(node);\n    case _for: return parseForStatement(node);\n    case _function: return parseFunctionStatement(node);\n    case _class: return parseClass(node, true);\n    case _if: return parseIfStatement(node);\n    case _return: return parseReturnStatement(node);\n    case _switch: return parseSwitchStatement(node);\n    case _throw: return parseThrowStatement(node);\n    case _try: return parseTryStatement(node);\n    case _var: case _let: case _const: return parseVarStatement(node, starttype.keyword);\n    case _while: return parseWhileStatement(node);\n    case _with: return parseWithStatement(node);\n    case _braceL: return parseBlock(); // no point creating a function for this\n    case _semi: return parseEmptyStatement(node);\n    case _export:\n    case _import:\n      if (!topLevel && !options.allowImportExportEverywhere)\n        raise(tokStart, \"'import' and 'export' may only appear at the top level\");\n      return starttype === _import ? parseImport(node) : parseExport(node);\n\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n    default:\n      var maybeName = tokVal, expr = parseExpression();\n      if (starttype === _name) {\n        if (expr.type === \"FunctionExpression\" && expr.async) {\n          expr.type = \"FunctionDeclaration\";\n          return expr;\n        } else  if (expr.type === \"Identifier\") {\n          if (eat(_colon)) {\n            return parseLabeledStatement(node, maybeName, expr);\n          }\n\n          if (options.ecmaVersion >= 7 && expr.name === \"private\" && tokType === _name) {\n            return parsePrivate(node);\n          } else if (expr.name === \"declare\") {\n            if (tokType === _class || tokType === _name || tokType === _function || tokType === _var) {\n              return parseDeclare(node);\n            }\n          } else if (tokType === _name) {\n            if (expr.name === \"interface\") {\n              return parseInterface(node);\n            } else if (expr.name === \"type\") {\n              return parseTypeAlias(node);\n            }\n          }\n        }\n      }\n\n      return parseExpressionStatement(node, expr);\n    }\n  }\n  \n  function parseBreakContinueStatement(node, keyword) {\n    var isBreak = keyword == \"break\";\n    next();\n    if (eat(_semi) || canInsertSemicolon()) node.label = null;\n    else if (tokType !== _name) unexpected();\n    else {\n      node.label = parseIdent();\n      semicolon();\n    }\n\n    // Verify that there is an actual destination to break or\n    // continue to.\n    for (var i = 0; i < labels.length; ++i) {\n      var lab = labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === labels.length) raise(node.start, \"Unsyntactic \" + keyword);\n    return finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n  \n  function parseDebuggerStatement(node) {\n    next();\n    semicolon();\n    return finishNode(node, \"DebuggerStatement\");\n  }\n  \n  function parseDoStatement(node) {\n    next();\n    labels.push(loopLabel);\n    node.body = parseStatement();\n    labels.pop();\n    expect(_while);\n    node.test = parseParenExpression();\n    if (options.ecmaVersion >= 6)\n      eat(_semi);\n    else\n      semicolon();\n    return finishNode(node, \"DoWhileStatement\");\n  }\n  \n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n  \n  function parseForStatement(node) {\n    next();\n    labels.push(loopLabel);\n    expect(_parenL);\n    if (tokType === _semi) return parseFor(node, null);\n    if (tokType === _var || tokType === _let) {\n      var init = startNode(), varKind = tokType.keyword, isLet = tokType === _let;\n      next();\n      parseVar(init, true, varKind);\n      finishNode(init, \"VariableDeclaration\");\n      if ((tokType === _in || (options.ecmaVersion >= 6 && tokType === _name && tokVal === \"of\")) && init.declarations.length === 1 &&\n          !(isLet && init.declarations[0].init))\n        return parseForIn(node, init);\n      return parseFor(node, init);\n    }\n    var init = parseExpression(false, true);\n    if (tokType === _in || (options.ecmaVersion >= 6 && tokType === _name && tokVal === \"of\")) {\n      checkLVal(init);\n      return parseForIn(node, init);\n    }\n    return parseFor(node, init);\n  }\n  \n  function parseFunctionStatement(node) {\n    next();\n    return parseFunction(node, true, false);\n  }\n  \n  function parseIfStatement(node) {\n    next();\n    node.test = parseParenExpression();\n    node.consequent = parseStatement();\n    node.alternate = eat(_else) ? parseStatement() : null;\n    return finishNode(node, \"IfStatement\");\n  }\n  \n  function parseReturnStatement(node) {\n    if (!inFunction && !options.allowReturnOutsideFunction)\n      raise(tokStart, \"'return' outside of function\");\n    next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (eat(_semi) || canInsertSemicolon()) node.argument = null;\n    else { node.argument = parseExpression(); semicolon(); }\n    return finishNode(node, \"ReturnStatement\");\n  }\n  \n  function parseSwitchStatement(node) {\n    next();\n    node.discriminant = parseParenExpression();\n    node.cases = [];\n    expect(_braceL);\n    labels.push(switchLabel);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    for (var cur, sawDefault; tokType != _braceR;) {\n      if (tokType === _case || tokType === _default) {\n        var isCase = tokType === _case;\n        if (cur) finishNode(cur, \"SwitchCase\");\n        node.cases.push(cur = startNode());\n        cur.consequent = [];\n        next();\n        if (isCase) cur.test = parseExpression();\n        else {\n          if (sawDefault) raise(lastStart, \"Multiple default clauses\"); sawDefault = true;\n          cur.test = null;\n        }\n        expect(_colon);\n      } else {\n        if (!cur) unexpected();\n        cur.consequent.push(parseStatement());\n      }\n    }\n    if (cur) finishNode(cur, \"SwitchCase\");\n    next(); // Closing brace\n    labels.pop();\n    return finishNode(node, \"SwitchStatement\");\n  }\n  \n  function parseThrowStatement(node) {\n    next();\n    if (newline.test(input.slice(lastEnd, tokStart)))\n      raise(lastEnd, \"Illegal newline after throw\");\n    node.argument = parseExpression();\n    semicolon();\n    return finishNode(node, \"ThrowStatement\");\n  }\n  \n  function parseTryStatement(node) {\n    next();\n    node.block = parseBlock();\n    node.handler = null;\n    if (tokType === _catch) {\n      var clause = startNode();\n      next();\n      expect(_parenL);\n      clause.param = parseIdent();\n      if (strict && isStrictBadIdWord(clause.param.name))\n        raise(clause.param.start, \"Binding \" + clause.param.name + \" in strict mode\");\n      expect(_parenR);\n      clause.guard = null;\n      clause.body = parseBlock();\n      node.handler = finishNode(clause, \"CatchClause\");\n    }\n    node.guardedHandlers = empty;\n    node.finalizer = eat(_finally) ? parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      raise(node.start, \"Missing catch or finally clause\");\n    return finishNode(node, \"TryStatement\");\n  }\n  \n  function parseVarStatement(node, kind) {\n    next();\n    parseVar(node, false, kind);\n    semicolon();\n    return finishNode(node, \"VariableDeclaration\");\n  }\n  \n  function parseWhileStatement(node) {\n    next();\n    node.test = parseParenExpression();\n    labels.push(loopLabel);\n    node.body = parseStatement();\n    labels.pop();\n    return finishNode(node, \"WhileStatement\");\n  }\n  \n  function parseWithStatement(node) {\n    if (strict) raise(tokStart, \"'with' in strict mode\");\n    next();\n    node.object = parseParenExpression();\n    node.body = parseStatement();\n    return finishNode(node, \"WithStatement\");\n  }\n  \n  function parseEmptyStatement(node) {\n    next();\n    return finishNode(node, \"EmptyStatement\");\n  }\n  \n  function parseLabeledStatement(node, maybeName, expr) {\n    for (var i = 0; i < labels.length; ++i)\n      if (labels[i].name === maybeName) raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    var kind = tokType.isLoop ? \"loop\" : tokType === _switch ? \"switch\" : null;\n    labels.push({name: maybeName, kind: kind});\n    node.body = parseStatement();\n    labels.pop();\n    node.label = expr;\n    return finishNode(node, \"LabeledStatement\");\n  }\n  \n  function parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    semicolon();\n    return finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Used for constructs like `switch` and `if` that insist on\n  // parentheses around their expression.\n\n  function parseParenExpression() {\n    expect(_parenL);\n    var val = parseExpression();\n    expect(_parenR);\n    return val;\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  function parseBlock(allowStrict) {\n    var node = startNode(), first = true, oldStrict;\n    node.body = [];\n    expect(_braceL);\n    while (!eat(_braceR)) {\n      var stmt = parseStatement();\n      node.body.push(stmt);\n      if (first && allowStrict && isUseStrict(stmt)) {\n        oldStrict = strict;\n        setStrict(strict = true);\n      }\n      first = false;\n    }\n    if (oldStrict === false) setStrict(false);\n    return finishNode(node, \"BlockStatement\");\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  function parseFor(node, init) {\n    node.init = init;\n    expect(_semi);\n    node.test = tokType === _semi ? null : parseExpression();\n    expect(_semi);\n    node.update = tokType === _parenR ? null : parseExpression();\n    expect(_parenR);\n    node.body = parseStatement();\n    labels.pop();\n    return finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  function parseForIn(node, init) {\n    var type = tokType === _in ? \"ForInStatement\" : \"ForOfStatement\";\n    next();\n    node.left = init;\n    node.right = parseExpression();\n    expect(_parenR);\n    node.body = parseStatement();\n    labels.pop();\n    return finishNode(node, type);\n  }\n\n  // Parse a list of variable declarations.\n\n  function parseVar(node, noIn, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = startNode();\n      decl.id = options.ecmaVersion >= 6 ? toAssignable(parseExprAtom()) : parseIdent();\n      checkLVal(decl.id, true);\n\n      if (tokType === _colon) {\n        decl.id.typeAnnotation = parseTypeAnnotation();\n        finishNode(decl.id, decl.id.type);\n      }\n\n      decl.init = eat(_eq) ? parseExpression(true, noIn) : (kind === _const.keyword ? unexpected() : null);\n      node.declarations.push(finishNode(decl, \"VariableDeclarator\"));\n      if (!eat(_comma)) break;\n    }\n    return node;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression. The arguments are used to forbid comma\n  // sequences (in argument lists, array literals, or object literals)\n  // or the `in` operator (in for loops initalization expressions).\n\n  function parseExpression(noComma, noIn) {\n    var start = storeCurrentPos();\n    var expr = parseMaybeAssign(noIn);\n    if (!noComma && tokType === _comma) {\n      var node = startNodeAt(start);\n      node.expressions = [expr];\n      while (eat(_comma)) node.expressions.push(parseMaybeAssign(noIn));\n      return finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  function parseMaybeAssign(noIn, noLess) {\n    var start = storeCurrentPos();\n    var left = parseMaybeConditional(noIn, noLess);\n    if (tokType.isAssign) {\n      var node = startNodeAt(start);\n      node.operator = tokVal;\n      node.left = tokType === _eq ? toAssignable(left) : left;\n      checkLVal(left);\n      next();\n      node.right = parseMaybeAssign(noIn);\n      return finishNode(node, \"AssignmentExpression\");\n    }\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  function parseMaybeConditional(noIn, noLess) {\n    var start = storeCurrentPos();\n    var expr = parseExprOps(noIn, noLess);\n    if (eat(_question)) {\n      var node = startNodeAt(start);\n      if (eat(_eq)) {\n        var left = node.left = toAssignable(expr);\n        if (left.type !== \"MemberExpression\") raise(left.start, \"You can only use member expressions in memoization assignment\");\n        node.right = parseMaybeAssign(noIn);\n        node.operator = \"?=\";\n        return finishNode(node, \"AssignmentExpression\");\n      }\n      node.test = expr;\n      node.consequent = parseExpression(true);\n      expect(_colon);\n      node.alternate = parseExpression(true, noIn);\n      return finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n\n  function parseExprOps(noIn, noLess) {\n    var start = storeCurrentPos();\n    return parseExprOp(parseMaybeUnary(), start, -1, noIn, noLess);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  function parseExprOp(left, leftStart, minPrec, noIn, noLess) {\n    var prec = tokType.binop;\n    if (prec != null && (!noIn || tokType !== _in) && (!noLess || tokType !== _lt)) {\n      if (prec > minPrec) {\n        var node = startNodeAt(leftStart);\n        node.left = left;\n        node.operator = tokVal;\n        var op = tokType;\n        next();\n        var start = storeCurrentPos();\n        node.right = parseExprOp(parseMaybeUnary(), start, prec, noIn);\n        finishNode(node, (op === _logicalOR || op === _logicalAND) ? \"LogicalExpression\" : \"BinaryExpression\");\n        return parseExprOp(node, leftStart, minPrec, noIn);\n      }\n    }\n    return left;\n  }\n\n  // Parse unary operators, both prefix and postfix.\n\n  function parseMaybeUnary() {\n    if (tokType.prefix) {\n      var node = startNode(), update = tokType.isUpdate, nodeType;\n      if (tokType === _ellipsis) {\n        nodeType = \"SpreadElement\";\n      } else {\n        nodeType = update ? \"UpdateExpression\" : \"UnaryExpression\";\n      node.operator = tokVal;\n      node.prefix = true;\n      }\n      tokRegexpAllowed = true;\n      next();\n      node.argument = parseMaybeUnary();\n      if (update) checkLVal(node.argument);\n      else if (strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        raise(node.start, \"Deleting local variable in strict mode\");\n      return finishNode(node, nodeType);\n    }\n    var start = storeCurrentPos();\n    var expr = parseExprSubscripts();\n    while (tokType.postfix && !canInsertSemicolon()) {\n      var node = startNodeAt(start);\n      node.operator = tokVal;\n      node.prefix = false;\n      node.argument = expr;\n      checkLVal(expr);\n      next();\n      expr = finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  function parseExprSubscripts() {\n    var start = storeCurrentPos();\n    return parseSubscripts(parseExprAtom(), start);\n  }\n\n  function parseSubscripts(base, start, noCalls) {\n    if (options.playground && eat(_hash)) {\n      var node = startNodeAt(start);\n      node.object = base;\n      node.property = parseIdent(true);\n      if (eat(_parenL)) {\n        node.arguments = parseExprList(_parenR, false);\n      } else {\n        node.arguments = [];\n      }\n      return parseSubscripts(finishNode(node, \"BindMemberExpression\"), start, noCalls);\n    } else if (eat(_paamayimNekudotayim)) {\n      var node = startNodeAt(start);\n      node.object = base;\n      node.property = parseIdent(true);\n      return parseSubscripts(finishNode(node, \"VirtualPropertyExpression\"), start, noCalls);\n    } else if (eat(_dot)) {\n      var node = startNodeAt(start);\n      node.object = base;\n      node.property = parseIdent(true);\n      node.computed = false;\n      return parseSubscripts(finishNode(node, \"MemberExpression\"), start, noCalls);\n    } else if (eat(_bracketL)) {\n      var node = startNodeAt(start);\n      node.object = base;\n      node.property = parseExpression();\n      node.computed = true;\n      expect(_bracketR);\n      return parseSubscripts(finishNode(node, \"MemberExpression\"), start, noCalls);\n    } else if (!noCalls && eat(_parenL)) {\n      var node = startNodeAt(start);\n      node.callee = base;\n      node.arguments = parseExprList(_parenR, false);\n      return parseSubscripts(finishNode(node, \"CallExpression\"), start, noCalls);\n    } else if (tokType === _template) {\n      var node = startNodeAt(start);\n      node.tag = base;\n      node.quasi = parseTemplate();\n      return parseSubscripts(finishNode(node, \"TaggedTemplateExpression\"), start, noCalls);\n    } return base;\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  function parseExprAtom() {\n    switch (tokType) {\n    case _this:\n      var node = startNode();\n      next();\n      return finishNode(node, \"ThisExpression\");\n\n    case _at:\n      var node = startNode();\n      next();\n      node.object = { type: \"ThisExpression\" }\n      node.property = parseExprSubscripts();\n      node.computed = false;\n      return finishNode(node, \"MemberExpression\");\n    \n    case _yield:\n      if (inGenerator) return parseYield();\n\n    case _name:\n      var start = storeCurrentPos();\n      var node = startNode();\n      var id = parseIdent(tokType !== _name);\n\n      if (options.ecmaVersion >= 7) {\n        // async functions!\n        if (id.name === \"async\") {\n          // arrow functions\n          if (tokType === _parenL) {\n            next();\n            var oldParenL = ++metParenL;\n            if (tokType !== _parenR) {\n              val = parseExpression();\n              exprList = val.type === \"SequenceExpression\" ? val.expressions : [val];\n            } else {\n              exprList = [];\n            }\n            expect(_parenR);\n            // if '=>' follows '(...)', convert contents to arguments\n            if (metParenL === oldParenL && eat(_arrow)) {\n              return parseArrowExpression(node, exprList, true);\n            } else {\n              node.callee = id;\n              node.arguments = exprList;\n              return parseSubscripts(finishNode(node, \"CallExpression\"), start);\n            }\n          } else if (tokType === _name) {\n            id = parseIdent();\n            if (eat(_arrow)) {\n              return parseArrowExpression(node, [id], true);\n            }\n            return id;\n          }\n\n          // normal functions\n          if (tokType === _function) {\n            next();\n            return parseFunction(node, false, true);\n          }\n        } else if (id.name === \"await\") {\n          if (inAsync) return parseAwait(node);\n        }\n      }\n\n      if (eat(_arrow)) {\n        return parseArrowExpression(node, [id]);\n      }\n      return id;\n      \n    case _regexp:\n      var node = startNode();\n      node.regex = {pattern: tokVal.pattern, flags: tokVal.flags};\n      node.value = tokVal.value;\n      node.raw = input.slice(tokStart, tokEnd);\n      next();\n      return finishNode(node, \"Literal\");\n\n    case _num: case _string: case _xjsText:\n      var node = startNode();\n      node.value = tokVal;\n      node.raw = input.slice(tokStart, tokEnd);\n      next();\n      return finishNode(node, \"Literal\");\n\n    case _null: case _true: case _false:\n      var node = startNode();\n      node.value = tokType.atomValue;\n      node.raw = tokType.keyword;\n      next();\n      return finishNode(node, \"Literal\");\n\n    case _parenL:\n      var start = storeCurrentPos();\n      var val, exprList;\n      next();\n      // check whether this is generator comprehension or regular expression\n      if (options.ecmaVersion >= 7 && tokType === _for) {\n        val = parseComprehension(startNodeAt(start), true);\n      } else {\n        var oldParenL = ++metParenL;\n        if (tokType !== _parenR) {\n          val = parseExpression();\n          exprList = val.type === \"SequenceExpression\" ? val.expressions : [val];\n        } else {\n          exprList = [];\n        }\n        expect(_parenR);\n        // if '=>' follows '(...)', convert contents to arguments\n        if (metParenL === oldParenL && eat(_arrow)) {\n          val = parseArrowExpression(startNodeAt(start), exprList);\n        } else {\n          // forbid '()' before everything but '=>'\n          if (!val) unexpected(lastStart);\n          // forbid '...' in sequence expressions\n          if (options.ecmaVersion >= 6) {\n            for (var i = 0; i < exprList.length; i++) {\n              if (exprList[i].type === \"SpreadElement\") unexpected();\n            }\n          }\n\n          if (options.preserveParens) {\n            var par = startNodeAt(start);\n            par.expression = val;\n            val = finishNode(par, \"ParenthesizedExpression\");\n          }\n        }\n      }\n      return val;\n\n    case _bracketL:\n      var node = startNode();\n      next();\n      // check whether this is array comprehension or regular array\n      if (options.ecmaVersion >= 7 && tokType === _for) {\n        return parseComprehension(node, false);\n        }\n      node.elements = parseExprList(_bracketR, true, true);\n      return finishNode(node, \"ArrayExpression\");\n\n    case _braceL:\n      return parseObj();\n\n    case _function:\n      var node = startNode();\n      next();\n      return parseFunction(node, false, false);\n\n    case _class:\n      return parseClass(startNode(), false);\n\n    case _new:\n      return parseNew();\n\n    case _template:\n      return parseTemplate();\n\n    case _lt:\n      return parseXJSElement();\n\n    case _hash:\n      return parseBindFunctionExpression();\n\n    default:\n      unexpected();\n    }\n  }\n\n  function parseBindFunctionExpression() {\n    var node = startNode();\n    next();\n\n    var start = storeCurrentPos();\n    node.callee = parseSubscripts(parseExprAtom(), start, true);\n\n    if (eat(_parenL)) {\n      node.arguments = parseExprList(_parenR, false);\n    } else {\n      node.arguments = [];\n    }\n\n    return finishNode(node, \"BindFunctionExpression\");\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument\n  // to be a `[]` or dot subscript expression, but not a call — at\n  // least, not without wrapping it in parentheses. Thus, it uses the\n\n  function parseNew() {\n    var node = startNode();\n    next();\n    var start = storeCurrentPos();\n    node.callee = parseSubscripts(parseExprAtom(), start, true);\n    if (eat(_parenL)) node.arguments = parseExprList(_parenR, false);\n    else node.arguments = empty;\n    return finishNode(node, \"NewExpression\");\n  }\n\n  // Parse template expression.\n\n  function parseTemplateElement() {\n    var elem = startNodeAt(options.locations ? [tokStart + 1, tokStartLoc.offset(1)] : tokStart + 1);\n    elem.value = tokVal;\n    elem.tail = input.charCodeAt(tokEnd - 1) !== 123; // '{'\n    next();\n    var endOff = elem.tail ? 1 : 2;\n    return finishNodeAt(elem, \"TemplateElement\", options.locations ? [lastEnd - endOff, lastEndLoc.offset(-endOff)] : lastEnd - endOff);\n  }\n\n  function parseTemplate() {\n    var node = startNode();\n    node.expressions = [];\n    var curElt = parseTemplateElement();\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(parseExpression());\n      if (tokType !== _templateContinued) unexpected();\n      node.quasis.push(curElt = parseTemplateElement());\n    }\n    return finishNode(node, \"TemplateLiteral\");\n  }\n\n  // Parse an object literal.\n\n  function parseObj() {\n    var node = startNode(), first = true, propHash = {};\n    node.properties = [];\n    next();\n    while (!eat(_braceR)) {\n      if (!first) {\n        expect(_comma);\n        if (options.allowTrailingCommas && eat(_braceR)) break;\n      } else first = false;\n\n      var prop = startNode(), isGenerator = false, isAsync = false;\n      if (options.ecmaVersion >= 7 && tokType === _ellipsis) {\n        prop = parseMaybeUnary();\n        prop.type = \"SpreadProperty\";\n        node.properties.push(prop);\n        continue;\n      }\n      if (options.ecmaVersion >= 6) {\n        prop.method = false;\n        prop.shorthand = false;\n        isGenerator = eat(_star);\n      }\n      if (options.ecmaVersion >= 7 && tokType === _name && tokVal === \"async\") {\n        var asyncId = parseIdent();\n        if (tokType === _colon || tokType === _parenL) {\n          prop.key = asyncId;\n        } else {\n          isAsync = true;\n          parsePropertyName(prop);\n        }\n      } else {\n        parsePropertyName(prop);\n      }\n      var typeParameters\n      if (tokType === _lt) {\n        typeParameters = parseTypeParameterDeclaration();\n        if (tokType !== _parenL) unexpected();\n      }\n      if (eat(_colon)) {\n        prop.value = parseExpression(true);\n        prop.kind = \"init\";\n      } else if (options.ecmaVersion >= 6 && tokType === _parenL) {\n        prop.kind = \"init\";\n        prop.method = true;\n        prop.value = parseMethod(isGenerator, isAsync);\n      } else if (options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n                 (prop.key.name === \"get\" || prop.key.name === \"set\" || (options.playground && prop.key.name === \"memo\"))) {\n        if (isGenerator || isAsync) unexpected();\n        prop.kind = prop.key.name;\n        parsePropertyName(prop);\n        prop.value = parseMethod(false, false);\n      } else if (options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n        prop.kind = \"init\";\n        prop.value = prop.key;\n        prop.shorthand = true;\n      } else unexpected();\n\n      prop.value.typeParameters = typeParameters;\n      checkPropClash(prop, propHash);\n      node.properties.push(finishNode(prop, \"Property\"));\n    }\n    return finishNode(node, \"ObjectExpression\");\n  }\n\n  function parsePropertyName(prop) {\n    if (options.ecmaVersion >= 6) {\n      if (eat(_bracketL)) {\n        prop.computed = true;\n        prop.key = parseExpression();\n        expect(_bracketR);\n        return;\n      } else {\n        prop.computed = false;\n      }\n    }\n    prop.key = (tokType === _num || tokType === _string) ? parseExprAtom() : parseIdent(true);\n  }\n\n  // Initialize empty function node.\n\n  function initFunction(node, isAsync) {\n    node.id = null;\n    node.params = [];\n    if (options.ecmaVersion >= 6) {\n      node.defaults = [];\n      node.rest = null;\n      node.generator = false;\n    }\n    if (options.ecmaVersion >= 7) {\n      node.async = isAsync;\n    }\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  function parseFunction(node, isStatement, isAsync, allowExpressionBody) {\n    initFunction(node, isAsync);\n    if (options.ecmaVersion >= 6) {\n      node.generator = eat(_star);\n    }\n    if (isStatement || tokType === _name) {\n      node.id = parseIdent();\n    }\n    if (tokType === _lt) {\n      node.typeParameters = parseTypeParameterDeclaration();\n    }\n    parseFunctionParams(node);\n    parseFunctionBody(node, allowExpressionBody);\n    return finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n  }\n\n  // Parse object or class method.\n\n  function parseMethod(isGenerator, isAsync) {\n    var node = startNode();\n    initFunction(node, isAsync);\n    parseFunctionParams(node);\n    var allowExpressionBody;\n    if (options.ecmaVersion >= 6) {\n      node.generator = isGenerator;\n      allowExpressionBody = true;\n    } else {\n      allowExpressionBody = false;\n    }\n    parseFunctionBody(node, allowExpressionBody);\n    return finishNode(node, \"FunctionExpression\");\n  }\n\n  // Parse arrow function expression with given parameters.\n\n  function parseArrowExpression(node, params, isAsync) {\n    initFunction(node, isAsync);\n\n    var defaults = node.defaults, hasDefaults = false;\n    \n    for (var i = 0, lastI = params.length - 1; i <= lastI; i++) {\n      var param = params[i];\n\n      if (param.type === \"AssignmentExpression\" && param.operator === \"=\") {\n        hasDefaults = true;\n        params[i] = param.left;\n        defaults.push(param.right);\n      } else {\n        toAssignable(param, i === lastI, true);\n        defaults.push(null);\n        if (param.type === \"SpreadElement\") {\n          params.length--;\n          node.rest = param.argument;\n          break;\n        }\n      }\n    }\n\n    node.params = params;\n    if (!hasDefaults) node.defaults = [];\n\n    parseFunctionBody(node, true);\n    return finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  // Parse function parameters.\n\n  function parseFunctionParams(node) {\n    var defaults = [], hasDefaults = false;\n\n    expect(_parenL);\n    for (;;) {\n      if (eat(_parenR)) {\n        break;\n      } else if (options.ecmaVersion >= 6 && eat(_ellipsis)) {\n        node.rest = toAssignable(parseExprAtom(), false, true);\n        checkSpreadAssign(node.rest);\n        parseFunctionParam(node.rest);\n        expect(_parenR);\n        defaults.push(null);\n        break;\n      } else {\n        var param = options.ecmaVersion >= 6 ? toAssignable(parseExprAtom(), false, true) : parseIdent();\n        parseFunctionParam(param);\n        node.params.push(param);\n\n        if (options.ecmaVersion >= 6) {\n          if (eat(_eq)) {\n            hasDefaults = true;\n            defaults.push(parseExpression(true));\n          } else {\n            defaults.push(null);\n          }\n        }\n        if (!eat(_comma)) {\n          expect(_parenR);\n          break;\n        }\n      }\n    }\n\n    if (hasDefaults) node.defaults = defaults;\n\n    if (tokType === _colon) {\n      node.returnType = parseTypeAnnotation();\n    }\n  }\n\n  function parseFunctionParam(param) {\n    if (tokType === _colon) {\n      param.typeAnnotation = parseTypeAnnotation();\n    } else if (eat(_question)) {\n      param.optional = true;\n    }\n    finishNode(param, param.type);\n  }\n\n  // Parse function body and check parameters.\n\n  function parseFunctionBody(node, allowExpression) {\n    var isExpression = allowExpression && tokType !== _braceL;\n\n    var oldInAsync = inAsync;\n    inAsync = node.async;\n    if (isExpression) {\n      node.body = parseExpression(true);\n      node.expression = true;\n    } else {\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n      var oldInFunc = inFunction, oldInGen = inGenerator, oldLabels = labels;\n      inFunction = true; inGenerator = node.generator; labels = [];\n      node.body = parseBlock(true);\n      node.expression = false;\n      inFunction = oldInFunc; inGenerator = oldInGen; labels = oldLabels;\n    }\n    inAsync = oldInAsync;\n\n    // If this is a strict mode function, verify that argument names\n    // are not repeated, and it does not try to bind the words `eval`\n    // or `arguments`.\n    if (strict || !isExpression && node.body.body.length && isUseStrict(node.body.body[0])) {\n      var nameHash = {};\n      if (node.id)\n        checkFunctionParam(node.id, {});\n      for (var i = 0; i < node.params.length; i++)\n        checkFunctionParam(node.params[i], nameHash);\n      if (node.rest)\n        checkFunctionParam(node.rest, nameHash);\n    }\n  }\n\n  function parsePrivate(node) {\n    node.declarations = [];\n    do {\n      node.declarations.push(parseIdent());\n    } while (eat(_comma));\n    semicolon();\n    return finishNode(node, \"PrivateDeclaration\");\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n  \n  function parseClass(node, isStatement) {\n    next();\n    node.id = tokType === _name ? parseIdent() : isStatement ? unexpected() : null;\n    if (tokType === _lt) {\n      node.typeParameters = parseTypeParameterDeclaration();\n    }\n    node.superClass = eat(_extends) ? parseMaybeAssign(false, true) : null;\n    if (node.superClass && tokType === _lt) {\n      node.superTypeParameters = parseTypeParameterInstantiation();\n    }\n    if (tokType === _name && tokVal === \"implements\") {\n      next();\n      node.implements = parseClassImplements();\n    }\n    var classBody = startNode();\n    classBody.body = [];\n    expect(_braceL);\n    while (!eat(_braceR)) {\n      var method = startNode();\n      if (options.ecmaVersion >= 7 && tokType === _name && tokVal === \"private\") {\n        next();\n        classBody.body.push(parsePrivate(method));\n        continue;\n      }\n      if (tokType === _name && tokVal === \"static\") {\n        next();\n        method['static'] = true;\n      } else {\n        method['static'] = false;\n      }\n      var isAsync = false;\n      var isGenerator = eat(_star);\n      if (options.ecmaVersion >= 7 && !isGenerator && tokType === _name && tokVal === \"async\") {\n        var asyncId = parseIdent();\n        if (tokType === _colon || tokType === _parenL) {\n          method.key = asyncId;\n        } else {\n          isAsync = true;\n          parsePropertyName(method);\n        }\n      } else {\n        parsePropertyName(method);\n      }\n      if (tokType !== _parenL && !method.computed && method.key.type === \"Identifier\" &&\n          (method.key.name === \"get\" || method.key.name === \"set\" || (options.playground && method.key.name === \"memo\"))) {\n        if (isGenerator || isAsync) unexpected();\n        method.kind = method.key.name;\n        parsePropertyName(method);\n      } else {\n        method.kind = \"\";\n      }\n      if (tokType === _colon) {\n        if (isGenerator || isAsync) unexpected();\n        method.typeAnnotation = parseTypeAnnotation();\n        semicolon();\n        classBody.body.push(finishNode(method, \"ClassProperty\"));\n      } else {\n        var typeParameters;\n        if (tokType === _lt) {\n          typeParameters = parseTypeParameterDeclaration();\n        }\n        method.value = parseMethod(isGenerator, isAsync);\n        method.value.typeParameters = typeParameters;\n        classBody.body.push(finishNode(method, \"MethodDefinition\"));\n        eat(_semi);\n      }\n    }\n    node.body = finishNode(classBody, \"ClassBody\");\n    return finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  function parseClassImplements() {\n      var implemented = [];\n\n      do {\n        var node = startNode();\n        node.id = parseIdent();\n        if (tokType === _lt) {\n            node.typeParameters = parseTypeParameterInstantiation();\n        } else {\n            node.typeParameters = null;\n        }\n        implemented.push(finishNode(node, \"ClassImplements\"));\n      } while(eat(_comma));\n\n      return implemented;\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  function parseExprList(close, allowTrailingComma, allowEmpty) {\n    var elts = [], first = true;\n    while (!eat(close)) {\n      if (!first) {\n        expect(_comma);\n        if (allowTrailingComma && options.allowTrailingCommas && eat(close)) break;\n      } else first = false;\n\n      if (allowEmpty && tokType === _comma) elts.push(null);\n      else elts.push(parseExpression(true));\n    }\n    return elts;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n\n  function parseIdent(liberal) {\n    var node = startNode();\n    if (liberal && options.forbidReserved == \"everywhere\") liberal = false;\n    if (tokType === _name) {\n      if (!liberal &&\n          (options.forbidReserved &&\n           (options.ecmaVersion === 3 ? isReservedWord3 : isReservedWord5)(tokVal) ||\n           strict && isStrictReservedWord(tokVal)) &&\n          input.slice(tokStart, tokEnd).indexOf(\"\\\\\") == -1)\n        raise(tokStart, \"The keyword '\" + tokVal + \"' is reserved\");\n      node.name = tokVal;\n    } else if (liberal && tokType.keyword) {\n      node.name = tokType.keyword;\n    } else {\n      unexpected();\n    }\n    tokRegexpAllowed = false;\n    next();\n    return finishNode(node, \"Identifier\");\n  }\n\n  // Parses module export declaration.\n\n  function parseExport(node) {\n    next();\n    // export var|const|let|function|class ...;\n    if (tokType === _var || tokType === _const || tokType === _let || tokType === _function || tokType === _class || tokType === _name && tokVal === 'async') {\n      node.declaration = parseStatement();\n      node['default'] = false;\n      node.specifiers = null;\n      node.source = null;\n    } else\n    // export default ...;\n    if (eat(_default)) {\n      var declar = node.declaration = parseExpression(true);\n      if (declar.id) {\n        if (declar.type === \"FunctionExpression\") {\n          declar.type = \"FunctionDeclaration\";\n        } else if (declar.type === \"ClassExpression\") {\n          declar.type = \"ClassDeclaration\";\n        }\n      }\n      node['default'] = true;\n      node.specifiers = null;\n      node.source = null;\n      semicolon();\n    } else {\n      // export * from '...';\n      // export { x, y as z } [from '...'];\n      var isBatch = tokType === _star;\n      node.declaration = null;\n      node['default'] = false;\n      node.specifiers = parseExportSpecifiers();\n      if (tokType === _name && tokVal === \"from\") {\n        next();\n        node.source = tokType === _string ? parseExprAtom() : unexpected();\n      } else {\n        if (isBatch) unexpected();\n        node.source = null;\n      }\n      semicolon();\n    }\n    return finishNode(node, \"ExportDeclaration\");\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  function parseExportSpecifiers() {\n    var nodes = [], first = true;\n    if (tokType === _star) {\n      // export * from '...'\n      var node = startNode();\n      next();\n      nodes.push(finishNode(node, \"ExportBatchSpecifier\"));\n    } else {\n      // export { x, y as z } [from '...']\n      expect(_braceL);\n      while (!eat(_braceR)) {\n        if (!first) {\n          expect(_comma);\n          if (options.allowTrailingCommas && eat(_braceR)) break;\n        } else first = false;\n\n        var node = startNode();\n        node.id = parseIdent(tokType === _default);\n        if (tokType === _name && tokVal === \"as\") {\n          next();\n          node.name = parseIdent(true);\n        } else {\n          node.name = null;\n        }\n        nodes.push(finishNode(node, \"ExportSpecifier\"));\n      }\n    }\n    return nodes;\n  }\n\n  // Parses import declaration.\n\n  function parseImport(node) {\n    next();\n    // import '...';\n    if (tokType === _string) {\n      node.specifiers = [];\n      node.source = parseExprAtom();\n    } else {\n      node.specifiers = parseImportSpecifiers();\n      if (tokType !== _name || tokVal !== \"from\") unexpected();\n      next();\n      node.source = tokType === _string ? parseExprAtom() : unexpected();\n    }\n    semicolon();\n    return finishNode(node, \"ImportDeclaration\");\n  }\n\n  // Parses a comma-separated list of module imports.\n\n  function parseImportSpecifiers() {\n    var nodes = [], first = true;\n    if (tokType === _name) {\n      // import defaultObj, { x, y as z } from '...'\n      var node = startNode();\n      node.id = startNode();\n      node.name = parseIdent();\n      checkLVal(node.name, true);\n      node.id.name = \"default\";\n      finishNode(node.id, \"Identifier\");\n      nodes.push(finishNode(node, \"ImportSpecifier\"));\n      if (!eat(_comma)) return nodes;\n    }\n    if (tokType === _star) {\n      var node = startNode();\n      next();\n      if (tokType !== _name || tokVal !== \"as\") unexpected();\n      next();\n      node.name = parseIdent();\n      checkLVal(node.name, true);\n      nodes.push(finishNode(node, \"ImportBatchSpecifier\"));\n      return nodes;\n    }\n    expect(_braceL);\n    while (!eat(_braceR)) {\n      if (!first) {\n        expect(_comma);\n        if (options.allowTrailingCommas && eat(_braceR)) break;\n      } else first = false;\n\n      var node = startNode();\n      node.id = parseIdent(true);\n      if (tokType === _name && tokVal === \"as\") {\n        next();\n        node.name = parseIdent();\n      } else {\n        node.name = null;\n      }\n      checkLVal(node.name || node.id, true);\n      node['default'] = false;\n      nodes.push(finishNode(node, \"ImportSpecifier\"));\n    }\n    return nodes;\n  }\n\n  // Parses yield expression inside generator.\n\n  function parseYield() {\n    var node = startNode();\n    next();\n    if (eat(_semi) || canInsertSemicolon()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = eat(_star);\n      node.argument = parseExpression(true);\n    }\n    return finishNode(node, \"YieldExpression\");\n  }\n\n  // Parses await expression inside async function.\n\n  function parseAwait(node) {\n    if (eat(_semi) || canInsertSemicolon()) {\n      unexpected();\n    }\n    node.delegate = eat(_star);\n    node.argument = parseExpression(true);\n    return finishNode(node, \"AwaitExpression\");\n  }\n\n  // Parses array and generator comprehensions.\n\n  function parseComprehension(node, isGenerator) {\n    node.blocks = [];\n    while (tokType === _for) {\n      var block = startNode();\n      next();\n      expect(_parenL);\n      block.left = toAssignable(parseExprAtom());\n      checkLVal(block.left, true);\n      if (tokType !== _name || tokVal !== \"of\") unexpected();\n      next();\n      // `of` property is here for compatibility with Esprima's AST\n      // which also supports deprecated [for (... in ...) expr]\n      block.of = true;\n      block.right = parseExpression();\n      expect(_parenR);\n      node.blocks.push(finishNode(block, \"ComprehensionBlock\"));\n    }\n    node.filter = eat(_if) ? parseParenExpression() : null;\n    node.body = parseExpression();\n    expect(isGenerator ? _parenR : _bracketR);\n    node.generator = isGenerator;\n    return finishNode(node, \"ComprehensionExpression\");\n  }\n\n  // Transforms JSX element name to string.\n\n  function getQualifiedXJSName(object) {\n    if (object.type === \"XJSIdentifier\") {\n      return object.name;\n    }\n    if (object.type === \"XJSNamespacedName\") {\n      return object.namespace.name + ':' + object.name.name;\n    }\n    if (object.type === \"XJSMemberExpression\") {\n      return (\n        getQualifiedXJSName(object.object) + '.' +\n        getQualifiedXJSName(object.property)\n      );\n    }\n  }\n\n  // Parse next token as JSX identifier\n\n  function parseXJSIdentifier() {\n    var node = startNode();\n    if (tokType === _xjsName) {\n      node.name = tokVal;\n    } else if (tokType.keyword) {\n      node.name = tokType.keyword;\n    } else {\n      unexpected();\n    }\n    tokRegexpAllowed = false;\n    next();\n    return finishNode(node, \"XJSIdentifier\");\n  }\n\n  // Parse namespaced identifier.\n\n  function parseXJSNamespacedName() {\n    var node = startNode();\n\n    node.namespace = parseXJSIdentifier();\n    expect(_colon);\n    node.name = parseXJSIdentifier();\n\n    return finishNode(node, \"XJSNamespacedName\");\n  }\n\n  // Parse JSX object.\n\n  function parseXJSMemberExpression() {\n    var start = storeCurrentPos();\n    var node = parseXJSIdentifier();\n\n    while (eat(_dot)) {\n      var newNode = startNodeAt(start);\n      newNode.object = node;\n      newNode.property = parseXJSIdentifier();\n      node = finishNode(newNode, \"XJSMemberExpression\");\n    }\n\n    return node;\n  }\n\n  // Parses element name in any form - namespaced, object\n  // or single identifier.\n\n  function parseXJSElementName() {\n    switch (nextChar()) {\n      case ':':\n        return parseXJSNamespacedName();\n\n      case '.':\n        return parseXJSMemberExpression();\n\n      default:\n        return parseXJSIdentifier();\n    }\n  }\n\n  // Parses attribute name as optionally namespaced identifier.\n\n  function parseXJSAttributeName() {\n    if (nextChar() === ':') {\n      return parseXJSNamespacedName();\n    }\n\n    return parseXJSIdentifier();\n  }\n\n  // Parses any type of JSX attribute value.\n\n  function parseXJSAttributeValue() {\n    switch (tokType) {\n      case _braceL:\n        var node = parseXJSExpressionContainer();\n        if (node.expression.type === \"XJSEmptyExpression\") {\n          raise(\n            node.start,\n              'XJS attributes must only be assigned a non-empty ' +\n              'expression'\n          );\n        }\n        return node;\n\n      case _lt:\n        return parseXJSElement();\n\n      case _xjsText:\n        return parseExprAtom();\n\n      default:\n        raise(tokStart, \"XJS value should be either an expression or a quoted XJS text\");\n    }\n  }\n\n  // XJSEmptyExpression is unique type since it doesn't actually parse anything,\n  // and so it should start at the end of last read token (left brace) and finish\n  // at the beginning of the next one (right brace).\n\n  function parseXJSEmptyExpression() {\n    if (tokType !== _braceR) {\n      unexpected();\n    }\n\n    var tmp;\n\n    tmp = tokStart;\n    tokStart = lastEnd;\n    lastEnd = tmp;\n\n    tmp = tokStartLoc;\n    tokStartLoc = lastEndLoc;\n    lastEndLoc = tmp;\n\n    return finishNode(startNode(), \"XJSEmptyExpression\");\n  }\n\n  // Parses JSX expression enclosed into curly brackets.\n\n  function parseXJSExpressionContainer() {\n    var node = startNode();\n\n    var origInXJSTag = inXJSTag,\n      origInXJSChild = inXJSChild;\n\n    inXJSTag = false;\n    inXJSChild = false;\n\n    next();\n    node.expression = tokType === _braceR ? parseXJSEmptyExpression() : parseExpression();\n\n    inXJSTag = origInXJSTag;\n    inXJSChild = origInXJSChild;\n\n    if (inXJSChild) {\n      tokPos = tokEnd;\n    }\n    expect(_braceR);\n    return finishNode(node, \"XJSExpressionContainer\");\n  }\n\n  // Parses following JSX attribute name-value pair.\n\n  function parseXJSAttribute() {\n    if (tokType === _braceL) {\n      var tokStart1 = tokStart, tokStartLoc1 = tokStartLoc;\n\n      var origInXJSTag = inXJSTag;\n      inXJSTag = false;\n\n      next();\n      if (tokType !== _ellipsis) unexpected();\n      var node = parseMaybeUnary();\n\n      inXJSTag = origInXJSTag;\n\n      expect(_braceR);\n      node.type = \"XJSSpreadAttribute\";\n      \n      node.start = tokStart1;\n      node.end = lastEnd;\n      if (options.locations) {\n        node.loc.start = tokStartLoc1;\n        node.loc.end = lastEndLoc;\n      }\n      if (options.ranges) {\n        node.range = [tokStart1, lastEnd];\n      }\n\n      return node;\n    }\n\n    var node = startNode();\n    node.name = parseXJSAttributeName();\n\n    // HTML empty attribute\n    if (tokType === _eq) {\n      next();\n      node.value = parseXJSAttributeValue();\n    } else {\n      node.value = null;\n    }\n\n    return finishNode(node, \"XJSAttribute\");\n  }\n\n  // Parses any type of JSX contents (expression, text or another tag).\n\n  function parseXJSChild() {\n    switch (tokType) {\n      case _braceL:\n        return parseXJSExpressionContainer();\n\n      case _xjsText:\n        return parseExprAtom();\n\n      default:\n        return parseXJSElement();\n    }\n  }\n\n  // Parses JSX open tag.\n\n  function parseXJSOpeningElement() {\n    var node = startNode(), attributes = node.attributes = [];\n\n    var origInXJSChild = inXJSChild;\n    var origInXJSTag = inXJSTag;\n    inXJSChild = false;\n    inXJSTag = true;\n\n    next();\n\n    node.name = parseXJSElementName();\n\n    while (tokType !== _eof && tokType !== _slash && tokType !== _gt) {\n      attributes.push(parseXJSAttribute());\n    }\n\n    inXJSTag = false;\n\n    if (node.selfClosing = !!eat(_slash)) {\n      inXJSTag = origInXJSTag;\n      inXJSChild = origInXJSChild;\n    } else {\n      inXJSChild = true;\n    }\n\n    expect(_gt);\n\n    return finishNode(node, \"XJSOpeningElement\");\n  }\n\n  // Parses JSX closing tag.\n\n  function parseXJSClosingElement() {\n    var node = startNode();\n    var origInXJSChild = inXJSChild;\n    var origInXJSTag = inXJSTag;\n    inXJSChild = false;\n    inXJSTag = true;\n    tokRegexpAllowed = false;\n    expect(_ltSlash);\n    node.name = parseXJSElementName();\n    skipSpace();\n    // A valid token is expected after >, so parser needs to know\n    // whether to look for a standard JS token or an XJS text node\n    inXJSChild = origInXJSChild;\n    inXJSTag = origInXJSTag;\n    tokRegexpAllowed = false;\n    if (inXJSChild) {\n      tokPos = tokEnd;\n    }\n    expect(_gt);\n    return finishNode(node, \"XJSClosingElement\");\n  }\n\n  // Parses entire JSX element, including it's opening tag,\n  // attributes, contents and closing tag.\n\n  function parseXJSElement() {\n    var node = startNode();\n\n    var children = [];\n\n    var origInXJSChild = inXJSChild;\n    var openingElement = parseXJSOpeningElement();\n    var closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      while (tokType !== _eof && tokType !== _ltSlash) {\n        inXJSChild = true;\n        children.push(parseXJSChild());\n      }\n      inXJSChild = origInXJSChild;\n      closingElement = parseXJSClosingElement();\n      if (getQualifiedXJSName(closingElement.name) !== getQualifiedXJSName(openingElement.name)) {\n        raise(\n          closingElement.start,\n          \"Expected corresponding XJS closing tag for '\" + getQualifiedXJSName(openingElement.name) + \"'\"\n        );\n      }\n    }\n\n    // When (erroneously) writing two adjacent tags like\n    //\n    //     var x = <div>one</div><div>two</div>;\n    //\n    // the default error message is a bit incomprehensible. Since it's\n    // rarely (never?) useful to write a less-than sign after an XJS\n    // element, we disallow it here in the parser in order to provide a\n    // better error message. (In the rare case that the less-than operator\n    // was intended, the left tag can be wrapped in parentheses.)\n    if (!origInXJSChild && tokType === _lt) {\n      raise(tokStart, \"Adjacent XJS elements must be wrapped in an enclosing tag\");\n    }\n\n    node.openingElement = openingElement;\n    node.closingElement = closingElement;\n    node.children = children;\n    return finishNode(node, \"XJSElement\");\n  }\n\n  // Declare\n  \n  function parseDeclareClass(node) {\n    next();\n    parseInterfaceish(node, true);\n    return finishNode(node, \"DeclareClass\");\n  }\n\n  function parseDeclareFunction(node) {\n    next();\n\n    var id = node.id = parseIdent();\n\n    var typeNode = startNode();\n    var typeContainer = startNode();\n\n    if (tokType === _lt) {\n      typeNode.typeParameters = parseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    expect(_parenL);\n    var tmp = parseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    expect(_parenR);\n\n    expect(_colon);\n    typeNode.returnType = parseType();\n\n    typeContainer.typeAnnotation = finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = finishNode(typeContainer, \"TypeAnnotation\");\n\n    finishNode(id, id.type);\n\n    semicolon();\n\n    return finishNode(node, \"DeclareFunction\");\n  }\n\n  function parseDeclare(node) {\n    if (tokType === _class) {\n      return parseDeclareClass(node);\n    } else if (tokType === _function) {\n      return parseDeclareFunction(node);\n    } else if (tokType === _var) {\n      return parseDeclareVariable(node);\n    } else if (tokType === _name && tokVal === \"module\") {\n      return parseDeclareModule(node);\n    } else {\n      unexpected();\n    }\n  }\n\n  function parseDeclareVariable(node) {\n    next();\n    node.id = parseTypeAnnotatableIdentifier();\n    semicolon();\n    return finishNode(node, \"DeclareVariable\");\n  }\n\n  function parseDeclareModule(node) {\n    next();\n\n    if (tokType === _string) {\n      node.id = parseExprAtom();\n    } else {\n      node.id = parseIdent();\n    }\n\n    var bodyNode = node.body = startNode();\n    var body = bodyNode.body = [];\n    expect(_braceL);\n    while (tokType !== _braceR) {\n      var node2 = startNode();\n\n      // todo: declare check\n      next();\n\n      body.push(parseDeclare(node2));\n    }\n    expect(_braceR);\n\n    finishNode(bodyNode, \"BlockStatement\");\n    return finishNode(node, \"DeclareModule\");\n  }\n\n\n  // Interfaces\n\n  function parseInterfaceish(node, allowStatic) {\n    node.id = parseIdent();\n    if (tokType === _lt) {\n      node.typeParameters = parseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n\n    if (eat(_extends)) {\n      do {\n        node.extends.push(parseInterfaceExtends());\n      } while(eat(_comma));\n    }\n\n    node.body = parseObjectType(allowStatic);\n  }\n\n  function parseInterfaceExtends() {\n    var node = startNode();\n\n    node.id = parseIdent();\n    if (tokType === _lt) {\n      node.typeParameters = parseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return finishNode(node, \"InterfaceExtends\");\n  }\n\n  function parseInterface(node) {\n    parseInterfaceish(node, false);\n    return finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  // Type aliases\n  \n  function parseTypeAlias(node) {\n    node.id = parseIdent();\n\n    if (tokType === _lt) {\n      node.typeParameters = parseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    expect(_eq);\n\n    node.right = parseType();\n\n    semicolon();\n\n    return finishNode(node, \"TypeAlias\");\n  }\n\n  // Type annotations\n\n  function parseTypeParameterDeclaration() {\n    var node = startNode();\n    node.params = [];\n\n    expect(_lt);\n    while (tokType !== _gt) {\n      node.params.push(parseIdent());\n      if (tokType !== _gt) {\n        expect(_comma);\n      }\n    }\n    expect(_gt);\n\n    return finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  function parseTypeParameterInstantiation() {\n    var node = startNode(), oldInType = inType;\n    node.params = [];\n\n    inType = true;\n\n    expect(_lt);\n    while (tokType !== _gt) {\n      node.params.push(parseType());\n      if (tokType !== _gt) {\n        expect(_comma);\n      }\n    }\n    expect(_gt);\n\n    inType = oldInType;\n\n    return finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  function parseObjectPropertyKey() {\n    return (tokType === _num || tokType === _string) ? parseExprAtom() : parseIdent(true);;\n  }\n\n  function parseObjectTypeIndexer(node, isStatic) {\n    node.static = isStatic;\n\n    expect(_bracketL);\n    node.id = parseObjectPropertyKey();\n    expect(_colon);\n    node.key = parseType();\n    expect(_bracketR);\n    expect(_colon);\n    node.value = parseType();\n\n    return finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  function parseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n\n    if (tokType === _lt) {\n      node.typeParameters = parseTypeParameterDeclaration();\n    }\n\n    expect(_parenL);\n    while (tokType === _name) {\n      node.params.push(parseFunctionTypeParam());\n      if (tokType !== _parenR) {\n        expect(_comma);\n      }\n    }\n\n    if (eat(_ellipsis)) {\n      node.rest = parseFunctionTypeParam();\n    }\n    expect(_parenR);\n    expect(_colon);\n    node.returnType = parseType();\n\n    return finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  function parseObjectTypeMethod(start, isStatic, key) {\n    var node = startNodeAt(start);\n    node.value = parseObjectTypeMethodish(startNodeAt(start));\n    node.static = isStatic;\n    node.key = key;\n    node.optional = false;\n    return finishNode(node, \"ObjectTypeProperty\");\n  }\n\n  function parseObjectTypeCallProperty(node, isStatic) {\n    var valueNode = startNode();\n    node.static = isStatic;\n    node.value = parseObjectTypeMethodish(valueNode);\n    return finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  function parseObjectType(allowStatic) {\n    var nodeStart = startNode();\n    var node;\n    var optional = false;\n    var property;\n    var propertyKey;\n    var propertyTypeAnnotation;\n    var token;\n    var isStatic;\n\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n\n    expect(_braceL);\n\n    while (tokType !== _braceR) {\n      var start = storeCurrentPos();\n      node = startNode();\n      if (allowStatic && tokType === _name && tokVal === \"static\") {\n        next();\n        isStatic = true;\n      }\n\n      if (tokType === _bracketL) {\n        nodeStart.indexers.push(parseObjectTypeIndexer(node, isStatic));\n      } else if (tokType === _parenL || tokType === _lt) {\n        nodeStart.callProperties.push(parseObjectTypeCallProperty(node, allowStatic));\n      } else {\n        if (isStatic && tokType === _colon) {\n          propertyKey = parseIdent();\n        } else {\n          propertyKey = parseObjectPropertyKey();\n        }\n        if (tokType === _lt || tokType === _parenL) {\n          // This is a method property\n          nodeStart.properties.push(parseObjectTypeMethod(start, isStatic, propertyKey));\n        } else {\n          if (eat(_question)) {\n            optional = true;\n          }\n          expect(_colon);\n          node.key = propertyKey;\n          node.value = parseType();\n          node.optional = optional;\n          node.static = isStatic;\n          nodeStart.properties.push(finishNode(node, \"ObjectTypeProperty\"));\n        }\n      }\n\n      if (!eat(_semi) && tokType !== _braceR) {\n        unexpected();\n      }\n    }\n\n    expect(_braceR);\n\n    return finishNode(nodeStart, \"ObjectTypeAnnotation\")\n  }\n\n  function parseGenericType(start, id) {\n    var node = startNodeAt(start);\n\n    node.typeParameters = null;\n    node.id = id;\n\n    while (eat(_dot)) {\n      var node2 = startNodeAt(start);\n      node2.qualification = node.id;\n      node2.id = parseIdent();\n      node.id = finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    if (tokType === _lt) {\n      node.typeParameters = parseTypeParameterInstantiation();\n    }\n\n    return finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  function parseVoidType() {\n    var node = startNode();\n    expect(keywordTypes[\"void\"]);\n    return finishNode(node, \"VoidTypeAnnotation\");\n  }\n\n  function parseTypeofType() {\n    var node = startNode();\n    expect(keywordTypes[\"typeof\"]);\n    node.argument = parsePrimaryType();\n    return finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  function parseTupleType() {\n    var node = startNode();\n    node.types = [];\n    expect(_bracketL);\n    // We allow trailing commas\n    while (tokPos < inputLen && tokType !== _bracketR) {\n      node.types.push(parseType());\n      if (tokType === _bracketR) break;\n      expect(_comma);\n    }\n    expect(_bracketR);\n    return finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  function parseFunctionTypeParam() {\n    var optional = false;\n    var node = startNode();\n    node.name = parseIdent();\n    if (eat(_question)) {\n      optional = true;\n    }\n    expect(_colon);\n    node.optional = optional;\n    node.typeAnnotation = parseType();\n    return finishNode(node, \"FunctionTypeParam\");\n  }\n\n  function parseFunctionTypeParams() {\n    var ret = { params: [], rest: null };\n    while (tokType === _name) {\n      ret.params.push(parseFunctionTypeParam());\n      if (tokType !== _parenR) {\n        expect(_comma);\n      }\n    }\n\n    if (eat(_ellipsis)) {\n      ret.rest = parseFunctionTypeParam();\n    }\n    return ret;\n  }\n\n  function identToTypeAnnotation(start, node, id) {\n    switch (id.name) {\n      case 'any':\n        return finishNode(node, \"AnyTypeAnnotation\");\n\n      case 'bool':\n      case 'boolean':\n        return finishNode(node, \"BooleanTypeAnnotation\");\n\n      case 'number':\n        return finishNode(node, \"NumberTypeAnnotation\");\n\n      case 'string':\n        return finishNode(node, \"StringTypeAnnotation\");\n\n      default:\n        return parseGenericType(start, id);\n    }\n  }\n\n  // The parsing of types roughly parallels the parsing of expressions, and\n  // primary types are kind of like primary expressions...they're the\n  // primitives with which other types are constructed.\n  function parsePrimaryType() {\n    var typeIdentifier = null;\n    var params = null;\n    var returnType = null;\n    var start = storeCurrentPos();\n    var node = startNode();\n    var rest = null;\n    var tmp;\n    var typeParameters;\n    var token;\n    var type;\n    var isGroupedType = false;\n\n    switch (tokType) {\n      case _name:\n        return identToTypeAnnotation(start, node, parseIdent());\n\n      case _braceL:\n        return parseObjectType();\n\n      case _bracketL:\n        return parseTupleType();\n\n      case _lt:\n        node.typeParameters = parseTypeParameterDeclaration();\n        expect(_parenL);\n        tmp = parseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        expect(_parenR);\n\n        expect(_arrow);\n\n        node.returnType = parseType();\n\n        return finishNode(node, \"FunctionTypeAnnotation\");\n\n      case _parenL:\n        next();\n\n        var tmpId;\n\n        // Check to see if this is actually a grouped type\n        if (tokType !== _parenR && tokType !== _ellipsis) {\n          if (tokType === _name) {\n            //tmpId = identToTypeAnnotation(start, node, parseIdent());\n            //next();\n            //isGroupedType = tokType !== _question && tokType !== _colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          if (tmpId && _parenR) {\n            type = tmpId;\n          } else {\n            type = parseType();\n            expect(_parenR);\n          }\n\n          // If we see a => next then someone was probably confused about\n          // function types, so we can provide a better error message\n          if (eat(_arrow)) {\n            raise(node,\n              'Unexpected token =>. It looks like ' +\n              'you are trying to write a function type, but you ended up ' +\n              'writing a grouped type followed by an =>, which is a syntax ' +\n              'error. Remember, function type parameters are named so function ' +\n              'types look like (name1: type1, name2: type2) => returnType. You ' +\n              'probably wrote (type1) => returnType'\n            );\n          }\n\n          return type;\n        }\n\n        tmp = parseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n\n        expect(_parenR);\n\n        expect(_arrow);\n\n        node.returnType = parseType();\n        node.typeParameters = null;\n\n        return finishNode(node, \"FunctionTypeAnnotation\");\n\n      case _string:\n        node.value = tokVal;\n        node.raw = input.slice(tokStart, tokEnd);\n        next();\n        return finishNode(node, \"StringLiteralTypeAnnotation\");\n\n      default:\n        if (tokType.keyword) {\n          switch (tokType.keyword) {\n            case 'void':\n              return parseVoidType();\n\n            case 'typeof':\n              return parseTypeofType();\n          }\n        }\n    }\n\n    unexpected();\n  }\n\n  function parsePostfixType() {\n    var node = startNode();\n    var type = node.elementType = parsePrimaryType();\n    if (tokType === _bracketL) {\n      expect(_bracketL);\n      expect(_bracketR);\n      return finishNode(node, \"ArrayTypeAnnotation\");\n    }\n    return type;\n  }\n\n  function parsePrefixType() {\n    var node = startNode();\n    if (eat(_question)) {\n      node.typeAnnotation = parsePrefixType();\n      return finishNode(node, \"NullableTypeAnnotation\");\n    }\n    return parsePostfixType();\n  }\n\n  function parseIntersectionType() {\n    var node = startNode();\n    var type = parsePrefixType();\n    node.types = [type];\n    while (eat(_bitwiseAND)) {\n      node.types.push(parsePrefixType());\n    }\n    return node.types.length === 1 ? type : finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  function parseUnionType() {\n    var node = startNode();\n    var type = parseIntersectionType();\n    node.types = [type];\n    while (eat(_bitwiseOR)) {\n      node.types.push(parseIntersectionType());\n    }\n    return node.types.length === 1 ? type : finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  function parseType() {\n    var oldInType = inType;\n    inType = true;\n    var type = parseUnionType();\n    inType = oldInType;\n    return type;\n  }\n\n  function parseTypeAnnotation() {\n    var node = startNode();\n\n    expect(_colon);\n    node.typeAnnotation = parseType();\n\n    return finishNode(node, \"TypeAnnotation\");\n  }\n\n  function parseTypeAnnotatableIdentifier(requireTypeAnnotation, canBeOptionalParam) {\n    var node = startNode();\n    var ident = parseIdent();\n    var isOptionalParam = false;\n\n    if (canBeOptionalParam && eat(_question)) {\n      expect(_question);\n      isOptionalParam = true;\n    }\n\n    if (requireTypeAnnotation || tokType === _colon) {\n      ident.typeAnnotation = parseTypeAnnotation();\n      finishNode(ident, ident.type);\n    }\n\n    if (isOptionalParam) {\n      ident.optional = true;\n      finishNode(ident, ident.type);\n    }\n\n    return ident;\n  }\n});\n","var types = require(\"../lib/types\");\nvar Type = types.Type;\nvar def = Type.def;\nvar or = Type.or;\nvar builtin = types.builtInTypes;\nvar isString = builtin.string;\nvar isNumber = builtin.number;\nvar isBoolean = builtin.boolean;\nvar isRegExp = builtin.RegExp;\nvar shared = require(\"../lib/shared\");\nvar defaults = shared.defaults;\nvar geq = shared.geq;\n\n// Abstract supertype of all syntactic entities that are allowed to have a\n// .loc field.\ndef(\"Printable\")\n    .field(\"loc\", or(\n        def(\"SourceLocation\"),\n        null\n    ), defaults[\"null\"], true);\n\ndef(\"Node\")\n    .bases(\"Printable\")\n    .field(\"type\", isString);\n\ndef(\"SourceLocation\")\n    .build(\"start\", \"end\", \"source\")\n    .field(\"start\", def(\"Position\"))\n    .field(\"end\", def(\"Position\"))\n    .field(\"source\", or(isString, null), defaults[\"null\"]);\n\ndef(\"Position\")\n    .build(\"line\", \"column\")\n    .field(\"line\", geq(1))\n    .field(\"column\", geq(0));\n\ndef(\"Program\")\n    .bases(\"Node\")\n    .build(\"body\")\n    .field(\"body\", [def(\"Statement\")])\n    .field(\"comments\", or(\n        [or(def(\"Block\"), def(\"Line\"))],\n        null\n    ), defaults[\"null\"], true);\n\ndef(\"Function\")\n    .bases(\"Node\")\n    .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n    .field(\"params\", [def(\"Pattern\")])\n    .field(\"body\", or(def(\"BlockStatement\"), def(\"Expression\")));\n\ndef(\"Statement\").bases(\"Node\");\n\n// The empty .build() here means that an EmptyStatement can be constructed\n// (i.e. it's not abstract) but that it needs no arguments.\ndef(\"EmptyStatement\").bases(\"Statement\").build();\n\ndef(\"BlockStatement\")\n    .bases(\"Statement\")\n    .build(\"body\")\n    .field(\"body\", [def(\"Statement\")]);\n\n// TODO Figure out how to silently coerce Expressions to\n// ExpressionStatements where a Statement was expected.\ndef(\"ExpressionStatement\")\n    .bases(\"Statement\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n\ndef(\"IfStatement\")\n    .bases(\"Statement\")\n    .build(\"test\", \"consequent\", \"alternate\")\n    .field(\"test\", def(\"Expression\"))\n    .field(\"consequent\", def(\"Statement\"))\n    .field(\"alternate\", or(def(\"Statement\"), null), defaults[\"null\"]);\n\ndef(\"LabeledStatement\")\n    .bases(\"Statement\")\n    .build(\"label\", \"body\")\n    .field(\"label\", def(\"Identifier\"))\n    .field(\"body\", def(\"Statement\"));\n\ndef(\"BreakStatement\")\n    .bases(\"Statement\")\n    .build(\"label\")\n    .field(\"label\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n\ndef(\"ContinueStatement\")\n    .bases(\"Statement\")\n    .build(\"label\")\n    .field(\"label\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n\ndef(\"WithStatement\")\n    .bases(\"Statement\")\n    .build(\"object\", \"body\")\n    .field(\"object\", def(\"Expression\"))\n    .field(\"body\", def(\"Statement\"));\n\ndef(\"SwitchStatement\")\n    .bases(\"Statement\")\n    .build(\"discriminant\", \"cases\", \"lexical\")\n    .field(\"discriminant\", def(\"Expression\"))\n    .field(\"cases\", [def(\"SwitchCase\")])\n    .field(\"lexical\", isBoolean, defaults[\"false\"]);\n\ndef(\"ReturnStatement\")\n    .bases(\"Statement\")\n    .build(\"argument\")\n    .field(\"argument\", or(def(\"Expression\"), null));\n\ndef(\"ThrowStatement\")\n    .bases(\"Statement\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\ndef(\"TryStatement\")\n    .bases(\"Statement\")\n    .build(\"block\", \"handler\", \"finalizer\")\n    .field(\"block\", def(\"BlockStatement\"))\n    .field(\"handler\", or(def(\"CatchClause\"), null), function() {\n        return this.handlers && this.handlers[0] || null;\n    })\n    .field(\"handlers\", [def(\"CatchClause\")], function() {\n        return this.handler ? [this.handler] : [];\n    }, true) // Indicates this field is hidden from eachField iteration.\n    .field(\"guardedHandlers\", [def(\"CatchClause\")], defaults.emptyArray)\n    .field(\"finalizer\", or(def(\"BlockStatement\"), null), defaults[\"null\"]);\n\ndef(\"CatchClause\")\n    .bases(\"Node\")\n    .build(\"param\", \"guard\", \"body\")\n    .field(\"param\", def(\"Pattern\"))\n    .field(\"guard\", or(def(\"Expression\"), null), defaults[\"null\"])\n    .field(\"body\", def(\"BlockStatement\"));\n\ndef(\"WhileStatement\")\n    .bases(\"Statement\")\n    .build(\"test\", \"body\")\n    .field(\"test\", def(\"Expression\"))\n    .field(\"body\", def(\"Statement\"));\n\ndef(\"DoWhileStatement\")\n    .bases(\"Statement\")\n    .build(\"body\", \"test\")\n    .field(\"body\", def(\"Statement\"))\n    .field(\"test\", def(\"Expression\"));\n\ndef(\"ForStatement\")\n    .bases(\"Statement\")\n    .build(\"init\", \"test\", \"update\", \"body\")\n    .field(\"init\", or(\n        def(\"VariableDeclaration\"),\n        def(\"Expression\"),\n        null))\n    .field(\"test\", or(def(\"Expression\"), null))\n    .field(\"update\", or(def(\"Expression\"), null))\n    .field(\"body\", def(\"Statement\"));\n\ndef(\"ForInStatement\")\n    .bases(\"Statement\")\n    .build(\"left\", \"right\", \"body\", \"each\")\n    .field(\"left\", or(\n        def(\"VariableDeclaration\"),\n        def(\"Expression\")))\n    .field(\"right\", def(\"Expression\"))\n    .field(\"body\", def(\"Statement\"))\n    .field(\"each\", isBoolean);\n\ndef(\"DebuggerStatement\").bases(\"Statement\").build();\n\ndef(\"Declaration\").bases(\"Statement\");\n\ndef(\"FunctionDeclaration\")\n    .bases(\"Function\", \"Declaration\")\n    .build(\"id\", \"params\", \"body\")\n    .field(\"id\", def(\"Identifier\"));\n\ndef(\"FunctionExpression\")\n    .bases(\"Function\", \"Expression\")\n    .build(\"id\", \"params\", \"body\");\n\ndef(\"VariableDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"kind\", \"declarations\")\n    .field(\"kind\", or(\"var\", \"let\", \"const\"))\n    .field(\"declarations\", [or(\n        def(\"VariableDeclarator\"),\n        def(\"Identifier\") // TODO Esprima deviation.\n    )]);\n\ndef(\"VariableDeclarator\")\n    .bases(\"Node\")\n    .build(\"id\", \"init\")\n    .field(\"id\", def(\"Pattern\"))\n    .field(\"init\", or(def(\"Expression\"), null));\n\n// TODO Are all Expressions really Patterns?\ndef(\"Expression\").bases(\"Node\", \"Pattern\");\n\ndef(\"ThisExpression\").bases(\"Expression\").build();\n\ndef(\"ArrayExpression\")\n    .bases(\"Expression\")\n    .build(\"elements\")\n    .field(\"elements\", [or(def(\"Expression\"), null)]);\n\ndef(\"ObjectExpression\")\n    .bases(\"Expression\")\n    .build(\"properties\")\n    .field(\"properties\", [def(\"Property\")]);\n\n// TODO Not in the Mozilla Parser API, but used by Esprima.\ndef(\"Property\")\n    .bases(\"Node\") // Want to be able to visit Property Nodes.\n    .build(\"kind\", \"key\", \"value\")\n    .field(\"kind\", or(\"init\", \"get\", \"set\"))\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n    .field(\"value\", def(\"Expression\"));\n\ndef(\"SequenceExpression\")\n    .bases(\"Expression\")\n    .build(\"expressions\")\n    .field(\"expressions\", [def(\"Expression\")]);\n\nvar UnaryOperator = or(\n    \"-\", \"+\", \"!\", \"~\",\n    \"typeof\", \"void\", \"delete\");\n\ndef(\"UnaryExpression\")\n    .bases(\"Expression\")\n    .build(\"operator\", \"argument\", \"prefix\")\n    .field(\"operator\", UnaryOperator)\n    .field(\"argument\", def(\"Expression\"))\n    // TODO Esprima doesn't bother with this field, presumably because\n    // it's always true for unary operators.\n    .field(\"prefix\", isBoolean, defaults[\"true\"]);\n\nvar BinaryOperator = or(\n    \"==\", \"!=\", \"===\", \"!==\",\n    \"<\", \"<=\", \">\", \">=\",\n    \"<<\", \">>\", \">>>\",\n    \"+\", \"-\", \"*\", \"/\", \"%\",\n    \"&\", // TODO Missing from the Parser API.\n    \"|\", \"^\", \"in\",\n    \"instanceof\", \"..\");\n\ndef(\"BinaryExpression\")\n    .bases(\"Expression\")\n    .build(\"operator\", \"left\", \"right\")\n    .field(\"operator\", BinaryOperator)\n    .field(\"left\", def(\"Expression\"))\n    .field(\"right\", def(\"Expression\"));\n\nvar AssignmentOperator = or(\n    \"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\",\n    \"<<=\", \">>=\", \">>>=\",\n    \"|=\", \"^=\", \"&=\");\n\ndef(\"AssignmentExpression\")\n    .bases(\"Expression\")\n    .build(\"operator\", \"left\", \"right\")\n    .field(\"operator\", AssignmentOperator)\n    .field(\"left\", def(\"Pattern\"))\n    .field(\"right\", def(\"Expression\"));\n\nvar UpdateOperator = or(\"++\", \"--\");\n\ndef(\"UpdateExpression\")\n    .bases(\"Expression\")\n    .build(\"operator\", \"argument\", \"prefix\")\n    .field(\"operator\", UpdateOperator)\n    .field(\"argument\", def(\"Expression\"))\n    .field(\"prefix\", isBoolean);\n\nvar LogicalOperator = or(\"||\", \"&&\");\n\ndef(\"LogicalExpression\")\n    .bases(\"Expression\")\n    .build(\"operator\", \"left\", \"right\")\n    .field(\"operator\", LogicalOperator)\n    .field(\"left\", def(\"Expression\"))\n    .field(\"right\", def(\"Expression\"));\n\ndef(\"ConditionalExpression\")\n    .bases(\"Expression\")\n    .build(\"test\", \"consequent\", \"alternate\")\n    .field(\"test\", def(\"Expression\"))\n    .field(\"consequent\", def(\"Expression\"))\n    .field(\"alternate\", def(\"Expression\"));\n\ndef(\"NewExpression\")\n    .bases(\"Expression\")\n    .build(\"callee\", \"arguments\")\n    .field(\"callee\", def(\"Expression\"))\n    // The Mozilla Parser API gives this type as [or(def(\"Expression\"),\n    // null)], but null values don't really make sense at the call site.\n    // TODO Report this nonsense.\n    .field(\"arguments\", [def(\"Expression\")]);\n\ndef(\"CallExpression\")\n    .bases(\"Expression\")\n    .build(\"callee\", \"arguments\")\n    .field(\"callee\", def(\"Expression\"))\n    // See comment for NewExpression above.\n    .field(\"arguments\", [def(\"Expression\")]);\n\ndef(\"MemberExpression\")\n    .bases(\"Expression\")\n    .build(\"object\", \"property\", \"computed\")\n    .field(\"object\", def(\"Expression\"))\n    .field(\"property\", or(def(\"Identifier\"), def(\"Expression\")))\n    .field(\"computed\", isBoolean);\n\ndef(\"Pattern\").bases(\"Node\");\n\ndef(\"ObjectPattern\")\n    .bases(\"Pattern\")\n    .build(\"properties\")\n    // TODO File a bug to get PropertyPattern added to the interfaces API.\n    .field(\"properties\", [def(\"PropertyPattern\")]);\n\ndef(\"PropertyPattern\")\n    .bases(\"Pattern\")\n    .build(\"key\", \"pattern\")\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n    .field(\"pattern\", def(\"Pattern\"));\n\ndef(\"ArrayPattern\")\n    .bases(\"Pattern\")\n    .build(\"elements\")\n    .field(\"elements\", [or(def(\"Pattern\"), null)]);\n\ndef(\"SwitchCase\")\n    .bases(\"Node\")\n    .build(\"test\", \"consequent\")\n    .field(\"test\", or(def(\"Expression\"), null))\n    .field(\"consequent\", [def(\"Statement\")]);\n\ndef(\"Identifier\")\n    // But aren't Expressions and Patterns already Nodes? TODO Report this.\n    .bases(\"Node\", \"Expression\", \"Pattern\")\n    .build(\"name\")\n    .field(\"name\", isString);\n\ndef(\"Literal\")\n    // But aren't Expressions already Nodes? TODO Report this.\n    .bases(\"Node\", \"Expression\")\n    .build(\"value\")\n    .field(\"value\", or(\n        isString,\n        isBoolean,\n        null, // isNull would also work here.\n        isNumber,\n        isRegExp\n    ));\n\n// Block comment. Not a Node.\ndef(\"Block\")\n    .bases(\"Printable\")\n    .build(\"loc\", \"value\")\n    .field(\"value\", isString);\n\n// Single line comment. Not a Node.\ndef(\"Line\")\n    .bases(\"Printable\")\n    .build(\"loc\", \"value\")\n    .field(\"value\", isString);\n","require(\"./core\");\nvar types = require(\"../lib/types\");\nvar def = types.Type.def;\nvar or = types.Type.or;\nvar builtin = types.builtInTypes;\nvar isString = builtin.string;\nvar isBoolean = builtin.boolean;\n\n// Note that none of these types are buildable because the Mozilla Parser\n// API doesn't specify any builder functions, and nobody uses E4X anymore.\n\ndef(\"XMLDefaultDeclaration\")\n    .bases(\"Declaration\")\n    .field(\"namespace\", def(\"Expression\"));\n\ndef(\"XMLAnyName\").bases(\"Expression\");\n\ndef(\"XMLQualifiedIdentifier\")\n    .bases(\"Expression\")\n    .field(\"left\", or(def(\"Identifier\"), def(\"XMLAnyName\")))\n    .field(\"right\", or(def(\"Identifier\"), def(\"Expression\")))\n    .field(\"computed\", isBoolean);\n\ndef(\"XMLFunctionQualifiedIdentifier\")\n    .bases(\"Expression\")\n    .field(\"right\", or(def(\"Identifier\"), def(\"Expression\")))\n    .field(\"computed\", isBoolean);\n\ndef(\"XMLAttributeSelector\")\n    .bases(\"Expression\")\n    .field(\"attribute\", def(\"Expression\"));\n\ndef(\"XMLFilterExpression\")\n    .bases(\"Expression\")\n    .field(\"left\", def(\"Expression\"))\n    .field(\"right\", def(\"Expression\"));\n\ndef(\"XMLElement\")\n    .bases(\"XML\", \"Expression\")\n    .field(\"contents\", [def(\"XML\")]);\n\ndef(\"XMLList\")\n    .bases(\"XML\", \"Expression\")\n    .field(\"contents\", [def(\"XML\")]);\n\ndef(\"XML\").bases(\"Node\");\n\ndef(\"XMLEscape\")\n    .bases(\"XML\")\n    .field(\"expression\", def(\"Expression\"));\n\ndef(\"XMLText\")\n    .bases(\"XML\")\n    .field(\"text\", isString);\n\ndef(\"XMLStartTag\")\n    .bases(\"XML\")\n    .field(\"contents\", [def(\"XML\")]);\n\ndef(\"XMLEndTag\")\n    .bases(\"XML\")\n    .field(\"contents\", [def(\"XML\")]);\n\ndef(\"XMLPointTag\")\n    .bases(\"XML\")\n    .field(\"contents\", [def(\"XML\")]);\n\ndef(\"XMLName\")\n    .bases(\"XML\")\n    .field(\"contents\", or(isString, [def(\"XML\")]));\n\ndef(\"XMLAttribute\")\n    .bases(\"XML\")\n    .field(\"value\", isString);\n\ndef(\"XMLCdata\")\n    .bases(\"XML\")\n    .field(\"contents\", isString);\n\ndef(\"XMLComment\")\n    .bases(\"XML\")\n    .field(\"contents\", isString);\n\ndef(\"XMLProcessingInstruction\")\n    .bases(\"XML\")\n    .field(\"target\", isString)\n    .field(\"contents\", or(isString, null));\n","require(\"./core\");\nvar types = require(\"../lib/types\");\nvar def = types.Type.def;\nvar or = types.Type.or;\nvar builtin = types.builtInTypes;\nvar isBoolean = builtin.boolean;\nvar isObject = builtin.object;\nvar isString = builtin.string;\nvar defaults = require(\"../lib/shared\").defaults;\n\ndef(\"Function\")\n    .field(\"generator\", isBoolean, defaults[\"false\"])\n    .field(\"expression\", isBoolean, defaults[\"false\"])\n    .field(\"defaults\", [or(def(\"Expression\"), null)], defaults.emptyArray)\n    // TODO This could be represented as a SpreadElementPattern in .params.\n    .field(\"rest\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n\ndef(\"FunctionDeclaration\")\n    .build(\"id\", \"params\", \"body\", \"generator\", \"expression\");\n\ndef(\"FunctionExpression\")\n    .build(\"id\", \"params\", \"body\", \"generator\", \"expression\");\n\n// TODO The Parser API calls this ArrowExpression, but Esprima uses\n// ArrowFunctionExpression.\ndef(\"ArrowFunctionExpression\")\n    .bases(\"Function\", \"Expression\")\n    .build(\"params\", \"body\", \"expression\")\n    // The forced null value here is compatible with the overridden\n    // definition of the \"id\" field in the Function interface.\n    .field(\"id\", null, defaults[\"null\"])\n    // The current spec forbids arrow generators, so I have taken the\n    // liberty of enforcing that. TODO Report this.\n    .field(\"generator\", false);\n\ndef(\"YieldExpression\")\n    .bases(\"Expression\")\n    .build(\"argument\", \"delegate\")\n    .field(\"argument\", or(def(\"Expression\"), null))\n    .field(\"delegate\", isBoolean, defaults[\"false\"]);\n\ndef(\"GeneratorExpression\")\n    .bases(\"Expression\")\n    .build(\"body\", \"blocks\", \"filter\")\n    .field(\"body\", def(\"Expression\"))\n    .field(\"blocks\", [def(\"ComprehensionBlock\")])\n    .field(\"filter\", or(def(\"Expression\"), null));\n\ndef(\"ComprehensionExpression\")\n    .bases(\"Expression\")\n    .build(\"body\", \"blocks\", \"filter\")\n    .field(\"body\", def(\"Expression\"))\n    .field(\"blocks\", [def(\"ComprehensionBlock\")])\n    .field(\"filter\", or(def(\"Expression\"), null));\n\ndef(\"ComprehensionBlock\")\n    .bases(\"Node\")\n    .build(\"left\", \"right\", \"each\")\n    .field(\"left\", def(\"Pattern\"))\n    .field(\"right\", def(\"Expression\"))\n    .field(\"each\", isBoolean);\n\ndef(\"ModuleSpecifier\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    .field(\"value\", isString);\n\ndef(\"Property\")\n    // Esprima extensions not mentioned in the Mozilla Parser API:\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n    .field(\"method\", isBoolean, defaults[\"false\"])\n    .field(\"shorthand\", isBoolean, defaults[\"false\"])\n    .field(\"computed\", isBoolean, defaults[\"false\"]);\n\ndef(\"PropertyPattern\")\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n    .field(\"computed\", isBoolean, defaults[\"false\"]);\n\ndef(\"MethodDefinition\")\n    .bases(\"Declaration\")\n    .build(\"kind\", \"key\", \"value\")\n    .field(\"kind\", or(\"init\", \"get\", \"set\", \"\"))\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n    .field(\"value\", def(\"Function\"))\n    .field(\"computed\", isBoolean, defaults[\"false\"]);\n\ndef(\"SpreadElement\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\ndef(\"ArrayExpression\")\n    .field(\"elements\", [or(def(\"Expression\"), def(\"SpreadElement\"), null)]);\n\ndef(\"NewExpression\")\n    .field(\"arguments\", [or(def(\"Expression\"), def(\"SpreadElement\"))]);\n\ndef(\"CallExpression\")\n    .field(\"arguments\", [or(def(\"Expression\"), def(\"SpreadElement\"))]);\n\ndef(\"SpreadElementPattern\")\n    .bases(\"Pattern\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Pattern\"));\n\nvar ClassBodyElement = or(\n    def(\"MethodDefinition\"),\n    def(\"VariableDeclarator\"),\n    def(\"ClassPropertyDefinition\"),\n    def(\"ClassProperty\")\n);\n\ndef(\"ClassProperty\")\n  .bases(\"Declaration\")\n  .build(\"key\")\n  .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n  .field(\"computed\", isBoolean, defaults[\"false\"]);\n\ndef(\"ClassPropertyDefinition\") // static property\n    .bases(\"Declaration\")\n    .build(\"definition\")\n    // Yes, Virginia, circular definitions are permitted.\n    .field(\"definition\", ClassBodyElement);\n\ndef(\"ClassBody\")\n    .bases(\"Declaration\")\n    .build(\"body\")\n    .field(\"body\", [ClassBodyElement]);\n\ndef(\"ClassDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"id\", \"body\", \"superClass\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"body\", def(\"ClassBody\"))\n    .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]);\n\ndef(\"ClassExpression\")\n    .bases(\"Expression\")\n    .build(\"id\", \"body\", \"superClass\")\n    .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n    .field(\"body\", def(\"ClassBody\"))\n    .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"])\n    .field(\"implements\", [def(\"ClassImplements\")], defaults.emptyArray);\n\ndef(\"ClassImplements\")\n    .bases(\"Node\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]);\n\n// Specifier and NamedSpecifier are abstract non-standard types that I\n// introduced for definitional convenience.\ndef(\"Specifier\").bases(\"Node\");\ndef(\"NamedSpecifier\")\n    .bases(\"Specifier\")\n    // Note: this abstract type is intentionally not buildable.\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"name\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n\n// Like NamedSpecifier, except type:\"ExportSpecifier\" and buildable.\n// export {<id [as name]>} [from ...];\ndef(\"ExportSpecifier\")\n    .bases(\"NamedSpecifier\")\n    .build(\"id\", \"name\");\n\n// export <*> from ...;\ndef(\"ExportBatchSpecifier\")\n    .bases(\"Specifier\")\n    .build();\n\n// Like NamedSpecifier, except type:\"ImportSpecifier\" and buildable.\n// import {<id [as name]>} from ...;\ndef(\"ImportSpecifier\")\n    .bases(\"NamedSpecifier\")\n    .build(\"id\", \"name\");\n\n// import <* as id> from ...;\ndef(\"ImportNamespaceSpecifier\")\n    .bases(\"Specifier\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"));\n\n// import <id> from ...;\ndef(\"ImportDefaultSpecifier\")\n    .bases(\"Specifier\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"));\n\ndef(\"ExportDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n    .field(\"default\", isBoolean)\n    .field(\"declaration\", or(\n        def(\"Declaration\"),\n        def(\"Expression\"), // Implies default.\n        null\n    ))\n    .field(\"specifiers\", [or(\n        def(\"ExportSpecifier\"),\n        def(\"ExportBatchSpecifier\")\n    )], defaults.emptyArray)\n    .field(\"source\", or(def(\"ModuleSpecifier\"), null), defaults[\"null\"]);\n\ndef(\"ImportDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"specifiers\", \"source\")\n    .field(\"specifiers\", [or(\n        def(\"ImportSpecifier\"),\n        def(\"ImportNamespaceSpecifier\"),\n        def(\"ImportDefaultSpecifier\")\n    )], defaults.emptyArray)\n    .field(\"source\", def(\"ModuleSpecifier\"));\n\ndef(\"TaggedTemplateExpression\")\n    .bases(\"Expression\")\n    .field(\"tag\", def(\"Expression\"))\n    .field(\"quasi\", def(\"TemplateLiteral\"));\n\ndef(\"TemplateLiteral\")\n    .bases(\"Expression\")\n    .build(\"quasis\", \"expressions\")\n    .field(\"quasis\", [def(\"TemplateElement\")])\n    .field(\"expressions\", [def(\"Expression\")]);\n\ndef(\"TemplateElement\")\n    .bases(\"Node\")\n    .build(\"value\", \"tail\")\n    .field(\"value\", {\"cooked\": isString, \"raw\": isString})\n    .field(\"tail\", isBoolean);\n","require(\"./core\");\nvar types = require(\"../lib/types\");\nvar def = types.Type.def;\nvar or = types.Type.or;\nvar builtin = types.builtInTypes;\nvar isBoolean = builtin.boolean;\nvar defaults = require(\"../lib/shared\").defaults;\n\ndef(\"Function\")\n    .field(\"async\", isBoolean, defaults[\"false\"]);\n\ndef(\"SpreadProperty\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\ndef(\"ObjectExpression\")\n    .field(\"properties\", [or(def(\"Property\"), def(\"SpreadProperty\"))]);\n\ndef(\"SpreadPropertyPattern\")\n    .bases(\"Pattern\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Pattern\"));\n\ndef(\"ObjectPattern\")\n    .field(\"properties\", [or(\n        def(\"PropertyPattern\"),\n        def(\"SpreadPropertyPattern\")\n    )]);\n\ndef(\"AwaitExpression\")\n    .bases(\"Expression\")\n    .build(\"argument\", \"all\")\n    .field(\"argument\", or(def(\"Expression\"), null))\n    .field(\"all\", isBoolean, defaults[\"false\"]);\n","require(\"./core\");\nvar types = require(\"../lib/types\");\nvar def = types.Type.def;\nvar or = types.Type.or;\nvar builtin = types.builtInTypes;\nvar isString = builtin.string;\nvar isBoolean = builtin.boolean;\nvar defaults = require(\"../lib/shared\").defaults;\n\ndef(\"XJSAttribute\")\n    .bases(\"Node\")\n    .build(\"name\", \"value\")\n    .field(\"name\", or(def(\"XJSIdentifier\"), def(\"XJSNamespacedName\")))\n    .field(\"value\", or(\n        def(\"Literal\"), // attr=\"value\"\n        def(\"XJSExpressionContainer\"), // attr={value}\n        null // attr= or just attr\n    ), defaults[\"null\"]);\n\ndef(\"XJSIdentifier\")\n    .bases(\"Node\")\n    .build(\"name\")\n    .field(\"name\", isString);\n\ndef(\"XJSNamespacedName\")\n    .bases(\"Node\")\n    .build(\"namespace\", \"name\")\n    .field(\"namespace\", def(\"XJSIdentifier\"))\n    .field(\"name\", def(\"XJSIdentifier\"));\n\ndef(\"XJSMemberExpression\")\n    .bases(\"MemberExpression\")\n    .build(\"object\", \"property\")\n    .field(\"object\", or(def(\"XJSIdentifier\"), def(\"XJSMemberExpression\")))\n    .field(\"property\", def(\"XJSIdentifier\"))\n    .field(\"computed\", isBoolean, defaults.false);\n\nvar XJSElementName = or(\n    def(\"XJSIdentifier\"),\n    def(\"XJSNamespacedName\"),\n    def(\"XJSMemberExpression\")\n);\n\ndef(\"XJSSpreadAttribute\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\nvar XJSAttributes = [or(\n    def(\"XJSAttribute\"),\n    def(\"XJSSpreadAttribute\")\n)];\n\ndef(\"XJSExpressionContainer\")\n    .bases(\"Expression\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n\ndef(\"XJSElement\")\n    .bases(\"Expression\")\n    .build(\"openingElement\", \"closingElement\", \"children\")\n    .field(\"openingElement\", def(\"XJSOpeningElement\"))\n    .field(\"closingElement\", or(def(\"XJSClosingElement\"), null), defaults[\"null\"])\n    .field(\"children\", [or(\n        def(\"XJSElement\"),\n        def(\"XJSExpressionContainer\"),\n        def(\"XJSText\"),\n        def(\"Literal\") // TODO Esprima should return XJSText instead.\n    )], defaults.emptyArray)\n    .field(\"name\", XJSElementName, function() {\n        // Little-known fact: the `this` object inside a default function\n        // is none other than the partially-built object itself, and any\n        // fields initialized directly from builder function arguments\n        // (like openingElement, closingElement, and children) are\n        // guaranteed to be available.\n        return this.openingElement.name;\n    })\n    .field(\"selfClosing\", isBoolean, function() {\n        return this.openingElement.selfClosing;\n    })\n    .field(\"attributes\", XJSAttributes, function() {\n        return this.openingElement.attributes;\n    });\n\ndef(\"XJSOpeningElement\")\n    .bases(\"Node\") // TODO Does this make sense? Can't really be an XJSElement.\n    .build(\"name\", \"attributes\", \"selfClosing\")\n    .field(\"name\", XJSElementName)\n    .field(\"attributes\", XJSAttributes, defaults.emptyArray)\n    .field(\"selfClosing\", isBoolean, defaults[\"false\"]);\n\ndef(\"XJSClosingElement\")\n    .bases(\"Node\") // TODO Same concern.\n    .build(\"name\")\n    .field(\"name\", XJSElementName);\n\ndef(\"XJSText\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    .field(\"value\", isString);\n\ndef(\"XJSEmptyExpression\").bases(\"Expression\").build();\n\n// Type Annotations\ndef(\"Type\")\n  .bases(\"Node\");\n\ndef(\"AnyTypeAnnotation\")\n  .bases(\"Type\");\n\ndef(\"VoidTypeAnnotation\")\n  .bases(\"Type\");\n\ndef(\"NumberTypeAnnotation\")\n  .bases(\"Type\");\n\ndef(\"StringTypeAnnotation\")\n  .bases(\"Type\");\n\ndef(\"StringLiteralTypeAnnotation\")\n  .bases(\"Type\")\n  .build(\"value\", \"raw\")\n  .field(\"value\", isString)\n  .field(\"raw\", isString);\n\ndef(\"BooleanTypeAnnotation\")\n  .bases(\"Type\");\n\ndef(\"TypeAnnotation\")\n  .bases(\"Node\")\n  .build(\"typeAnnotation\")\n  .field(\"typeAnnotation\", def(\"Type\"));\n\ndef(\"NullableTypeAnnotation\")\n  .bases(\"Type\")\n  .build(\"typeAnnotation\")\n  .field(\"typeAnnotation\", def(\"Type\"));\n\ndef(\"FunctionTypeAnnotation\")\n  .bases(\"Type\")\n  .build(\"params\", \"returnType\", \"rest\", \"typeParameters\")\n  .field(\"params\", [def(\"FunctionTypeParam\")])\n  .field(\"returnType\", def(\"Type\"))\n  .field(\"rest\", or(def(\"FunctionTypeParam\"), null))\n  .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null));\n\ndef(\"FunctionTypeParam\")\n  .bases(\"Node\")\n  .build(\"name\", \"typeAnnotation\", \"optional\")\n  .field(\"name\", def(\"Identifier\"))\n  .field(\"typeAnnotation\", def(\"Type\"))\n  .field(\"optional\", isBoolean);\n\ndef(\"ObjectTypeAnnotation\")\n  .bases(\"Type\")\n  .build(\"properties\")\n  .field(\"properties\", [def(\"ObjectTypeProperty\")])\n  .field(\"indexers\", [def(\"ObjectTypeIndexer\")], defaults.emptyArray)\n  .field(\"callProperties\", [def(\"ObjectTypeCallProperty\")], defaults.emptyArray);\n\ndef(\"ObjectTypeProperty\")\n  .bases(\"Node\")\n  .build(\"key\", \"value\", \"optional\")\n  .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n  .field(\"value\", def(\"Type\"))\n  .field(\"optional\", isBoolean);\n\ndef(\"ObjectTypeIndexer\")\n  .bases(\"Node\")\n  .build(\"id\", \"key\", \"value\")\n  .field(\"id\", def(\"Identifier\"))\n  .field(\"key\", def(\"Type\"))\n  .field(\"value\", def(\"Type\"));\n\ndef(\"ObjectTypeCallProperty\")\n  .bases(\"Node\")\n  .build(\"value\")\n  .field(\"value\", def(\"FunctionTypeAnnotation\"))\n  .field(\"static\", isBoolean, false);\n\ndef(\"QualifiedTypeIdentifier\")\n  .bases(\"Node\")\n  .build(\"qualification\", \"id\")\n  .field(\"qualification\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n  .field(\"id\", def(\"Identifier\"));\n\ndef(\"GenericTypeAnnotation\")\n  .bases(\"Type\")\n  .build(\"id\", \"typeParameters\")\n  .field(\"id\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n  .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n\ndef(\"MemberTypeAnnotation\")\n  .bases(\"Type\")\n  .build(\"object\", \"property\")\n  .field(\"object\", def(\"Identifier\"))\n  .field(\"property\", or(def(\"MemberTypeAnnotation\"), def(\"GenericTypeAnnotation\")));\n\ndef(\"UnionTypeAnnotation\")\n  .bases(\"Type\")\n  .build(\"types\")\n  .field(\"types\", [def(\"Type\")]);\n\ndef(\"IntersectionTypeAnnotation\")\n  .bases(\"Type\")\n  .build(\"types\")\n  .field(\"types\", [def(\"Type\")]);\n\ndef(\"TypeofTypeAnnotation\")\n  .bases(\"Type\")\n  .build(\"argument\")\n  .field(\"argument\", def(\"Type\"));\n\ndef(\"Identifier\")\n  .field(\"typeAnnotation\", or(def(\"TypeAnnotation\"), null), defaults[\"null\"]);\n\ndef(\"TypeParameterDeclaration\")\n  .bases(\"Node\")\n  .build(\"params\")\n  .field(\"params\", [def(\"Identifier\")]);\n\ndef(\"TypeParameterInstantiation\")\n  .bases(\"Node\")\n  .build(\"params\")\n  .field(\"params\", [def(\"Type\")]);\n\ndef(\"Function\")\n  .field(\"returnType\", or(def(\"TypeAnnotation\"), null), defaults[\"null\"])\n  .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null), defaults[\"null\"]);\n\ndef(\"ClassProperty\")\n  .build(\"key\", \"typeAnnotation\")\n  .field(\"typeAnnotation\", def(\"TypeAnnotation\"))\n  .field(\"static\", isBoolean, false);\n\ndef(\"ClassImplements\")\n  .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n\ndef(\"InterfaceDeclaration\")\n  .bases(\"Statement\")\n  .build(\"id\", \"body\", \"extends\")\n  .field(\"id\", def(\"Identifier\"))\n  .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null), defaults[\"null\"])\n  .field(\"body\", def(\"ObjectTypeAnnotation\"))\n  .field(\"extends\", [def(\"InterfaceExtends\")]);\n\ndef(\"InterfaceExtends\")\n  .bases(\"Node\")\n  .build(\"id\")\n  .field(\"id\", def(\"Identifier\"))\n  .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n\ndef(\"TypeAlias\")\n  .bases(\"Statement\")\n  .build(\"id\", \"typeParameters\", \"right\")\n  .field(\"id\", def(\"Identifier\"))\n  .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n  .field(\"right\", def(\"Type\"));\n\ndef(\"TupleTypeAnnotation\")\n  .bases(\"Type\")\n  .build(\"types\")\n  .field(\"types\", [def(\"Type\")]);\n\ndef(\"DeclareVariable\")\n  .bases(\"Statement\")\n  .build(\"id\")\n  .field(\"id\", def(\"Identifier\"));\n\ndef(\"DeclareFunction\")\n  .bases(\"Statement\")\n  .build(\"id\")\n  .field(\"id\", def(\"Identifier\"));\n\ndef(\"DeclareClass\")\n  .bases(\"InterfaceDeclaration\")\n  .build(\"id\");\n\ndef(\"DeclareModule\")\n  .bases(\"Statement\")\n  .build(\"id\", \"body\")\n  .field(\"id\", or(def(\"Identifier\"), def(\"Literal\")))\n  .field(\"body\", def(\"BlockStatement\"));\n","require(\"./core\");\nvar types = require(\"../lib/types\");\nvar def = types.Type.def;\nvar or = types.Type.or;\nvar geq = require(\"../lib/shared\").geq;\n\ndef(\"ForOfStatement\")\n    .bases(\"Statement\")\n    .build(\"left\", \"right\", \"body\")\n    .field(\"left\", or(\n        def(\"VariableDeclaration\"),\n        def(\"Expression\")))\n    .field(\"right\", def(\"Expression\"))\n    .field(\"body\", def(\"Statement\"));\n\ndef(\"LetStatement\")\n    .bases(\"Statement\")\n    .build(\"head\", \"body\")\n    // TODO Deviating from the spec by reusing VariableDeclarator here.\n    .field(\"head\", [def(\"VariableDeclarator\")])\n    .field(\"body\", def(\"Statement\"));\n\ndef(\"LetExpression\")\n    .bases(\"Expression\")\n    .build(\"head\", \"body\")\n    // TODO Deviating from the spec by reusing VariableDeclarator here.\n    .field(\"head\", [def(\"VariableDeclarator\")])\n    .field(\"body\", def(\"Expression\"));\n\ndef(\"GraphExpression\")\n    .bases(\"Expression\")\n    .build(\"index\", \"expression\")\n    .field(\"index\", geq(0))\n    .field(\"expression\", def(\"Literal\"));\n\ndef(\"GraphIndexExpression\")\n    .bases(\"Expression\")\n    .build(\"index\")\n    .field(\"index\", geq(0));\n","var assert = require(\"assert\");\nvar types = require(\"../main\");\nvar getFieldNames = types.getFieldNames;\nvar getFieldValue = types.getFieldValue;\nvar isArray = types.builtInTypes.array;\nvar isObject = types.builtInTypes.object;\nvar isDate = types.builtInTypes.Date;\nvar isRegExp = types.builtInTypes.RegExp;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction astNodesAreEquivalent(a, b, problemPath) {\n    if (isArray.check(problemPath)) {\n        problemPath.length = 0;\n    } else {\n        problemPath = null;\n    }\n\n    return areEquivalent(a, b, problemPath);\n}\n\nastNodesAreEquivalent.assert = function(a, b) {\n    var problemPath = [];\n    if (!astNodesAreEquivalent(a, b, problemPath)) {\n        if (problemPath.length === 0) {\n            assert.strictEqual(a, b);\n        } else {\n            assert.ok(\n                false,\n                \"Nodes differ in the following path: \" +\n                    problemPath.map(subscriptForProperty).join(\"\")\n            );\n        }\n    }\n};\n\nfunction subscriptForProperty(property) {\n    if (/[_$a-z][_$a-z0-9]*/i.test(property)) {\n        return \".\" + property;\n    }\n    return \"[\" + JSON.stringify(property) + \"]\";\n}\n\nfunction areEquivalent(a, b, problemPath) {\n    if (a === b) {\n        return true;\n    }\n\n    if (isArray.check(a)) {\n        return arraysAreEquivalent(a, b, problemPath);\n    }\n\n    if (isObject.check(a)) {\n        return objectsAreEquivalent(a, b, problemPath);\n    }\n\n    if (isDate.check(a)) {\n        return isDate.check(b) && (+a === +b);\n    }\n\n    if (isRegExp.check(a)) {\n        return isRegExp.check(b) && (\n            a.source === b.source &&\n            a.global === b.global &&\n            a.multiline === b.multiline &&\n            a.ignoreCase === b.ignoreCase\n        );\n    }\n\n    return a == b;\n}\n\nfunction arraysAreEquivalent(a, b, problemPath) {\n    isArray.assert(a);\n    var aLength = a.length;\n\n    if (!isArray.check(b) || b.length !== aLength) {\n        if (problemPath) {\n            problemPath.push(\"length\");\n        }\n        return false;\n    }\n\n    for (var i = 0; i < aLength; ++i) {\n        if (problemPath) {\n            problemPath.push(i);\n        }\n\n        if (i in a !== i in b) {\n            return false;\n        }\n\n        if (!areEquivalent(a[i], b[i], problemPath)) {\n            return false;\n        }\n\n        if (problemPath) {\n            assert.strictEqual(problemPath.pop(), i);\n        }\n    }\n\n    return true;\n}\n\nfunction objectsAreEquivalent(a, b, problemPath) {\n    isObject.assert(a);\n    if (!isObject.check(b)) {\n        return false;\n    }\n\n    // Fast path for a common property of AST nodes.\n    if (a.type !== b.type) {\n        if (problemPath) {\n            problemPath.push(\"type\");\n        }\n        return false;\n    }\n\n    var aNames = getFieldNames(a);\n    var aNameCount = aNames.length;\n\n    var bNames = getFieldNames(b);\n    var bNameCount = bNames.length;\n\n    if (aNameCount === bNameCount) {\n        for (var i = 0; i < aNameCount; ++i) {\n            var name = aNames[i];\n            var aChild = getFieldValue(a, name);\n            var bChild = getFieldValue(b, name);\n\n            if (problemPath) {\n                problemPath.push(name);\n            }\n\n            if (!areEquivalent(aChild, bChild, problemPath)) {\n                return false;\n            }\n\n            if (problemPath) {\n                assert.strictEqual(problemPath.pop(), name);\n            }\n        }\n\n        return true;\n    }\n\n    if (!problemPath) {\n        return false;\n    }\n\n    // Since aNameCount !== bNameCount, we need to find some name that's\n    // missing in aNames but present in bNames, or vice-versa.\n\n    var seenNames = Object.create(null);\n\n    for (i = 0; i < aNameCount; ++i) {\n        seenNames[aNames[i]] = true;\n    }\n\n    for (i = 0; i < bNameCount; ++i) {\n        name = bNames[i];\n\n        if (!hasOwn.call(seenNames, name)) {\n            problemPath.push(name);\n            return false;\n        }\n\n        delete seenNames[name];\n    }\n\n    for (name in seenNames) {\n        problemPath.push(name);\n        break;\n    }\n\n    return false;\n}\n\nmodule.exports = astNodesAreEquivalent;\n","var assert = require(\"assert\");\nvar types = require(\"./types\");\nvar n = types.namedTypes;\nvar b = types.builders;\nvar isNumber = types.builtInTypes.number;\nvar isArray = types.builtInTypes.array;\nvar Path = require(\"./path\");\nvar Scope = require(\"./scope\");\n\nfunction NodePath(value, parentPath, name) {\n    assert.ok(this instanceof NodePath);\n    Path.call(this, value, parentPath, name);\n}\n\nrequire(\"util\").inherits(NodePath, Path);\nvar NPp = NodePath.prototype;\n\nObject.defineProperties(NPp, {\n    node: {\n        get: function() {\n            Object.defineProperty(this, \"node\", {\n                configurable: true, // Enable deletion.\n                value: this._computeNode()\n            });\n\n            return this.node;\n        }\n    },\n\n    parent: {\n        get: function() {\n            Object.defineProperty(this, \"parent\", {\n                configurable: true, // Enable deletion.\n                value: this._computeParent()\n            });\n\n            return this.parent;\n        }\n    },\n\n    scope: {\n        get: function() {\n            Object.defineProperty(this, \"scope\", {\n                configurable: true, // Enable deletion.\n                value: this._computeScope()\n            });\n\n            return this.scope;\n        }\n    }\n});\n\nNPp.replace = function() {\n    delete this.node;\n    delete this.parent;\n    delete this.scope;\n    return Path.prototype.replace.apply(this, arguments);\n};\n\nNPp.prune = function() {\n    var remainingNodePath = this.parent;\n\n    this.replace();\n\n    return cleanUpNodesAfterPrune(remainingNodePath);\n};\n\n// The value of the first ancestor Path whose value is a Node.\nNPp._computeNode = function() {\n    var value = this.value;\n    if (n.Node.check(value)) {\n        return value;\n    }\n\n    var pp = this.parentPath;\n    return pp && pp.node || null;\n};\n\n// The first ancestor Path whose value is a Node distinct from this.node.\nNPp._computeParent = function() {\n    var value = this.value;\n    var pp = this.parentPath;\n\n    if (!n.Node.check(value)) {\n        while (pp && !n.Node.check(pp.value)) {\n            pp = pp.parentPath;\n        }\n\n        if (pp) {\n            pp = pp.parentPath;\n        }\n    }\n\n    while (pp && !n.Node.check(pp.value)) {\n        pp = pp.parentPath;\n    }\n\n    return pp || null;\n};\n\n// The closest enclosing scope that governs this node.\nNPp._computeScope = function() {\n    var value = this.value;\n    var pp = this.parentPath;\n    var scope = pp && pp.scope;\n\n    if (n.Node.check(value) &&\n        Scope.isEstablishedBy(value)) {\n        scope = new Scope(this, scope);\n    }\n\n    return scope || null;\n};\n\nNPp.getValueProperty = function(name) {\n    return types.getFieldValue(this.value, name);\n};\n\n/**\n * Determine whether this.node needs to be wrapped in parentheses in order\n * for a parser to reproduce the same local AST structure.\n *\n * For instance, in the expression `(1 + 2) * 3`, the BinaryExpression\n * whose operator is \"+\" needs parentheses, because `1 + 2 * 3` would\n * parse differently.\n *\n * If assumeExpressionContext === true, we don't worry about edge cases\n * like an anonymous FunctionExpression appearing lexically first in its\n * enclosing statement and thus needing parentheses to avoid being parsed\n * as a FunctionDeclaration with a missing name.\n */\nNPp.needsParens = function(assumeExpressionContext) {\n    var pp = this.parentPath;\n    if (!pp) {\n        return false;\n    }\n\n    var node = this.value;\n\n    // Only expressions need parentheses.\n    if (!n.Expression.check(node)) {\n        return false;\n    }\n\n    // Identifiers never need parentheses.\n    if (node.type === \"Identifier\") {\n        return false;\n    }\n\n    while (!n.Node.check(pp.value)) {\n        pp = pp.parentPath;\n        if (!pp) {\n            return false;\n        }\n    }\n\n    var parent = pp.value;\n\n    switch (node.type) {\n    case \"UnaryExpression\":\n    case \"SpreadElement\":\n    case \"SpreadProperty\":\n        return parent.type === \"MemberExpression\"\n            && this.name === \"object\"\n            && parent.object === node;\n\n    case \"BinaryExpression\":\n    case \"LogicalExpression\":\n        switch (parent.type) {\n        case \"CallExpression\":\n            return this.name === \"callee\"\n                && parent.callee === node;\n\n        case \"UnaryExpression\":\n        case \"SpreadElement\":\n        case \"SpreadProperty\":\n            return true;\n\n        case \"MemberExpression\":\n            return this.name === \"object\"\n                && parent.object === node;\n\n        case \"BinaryExpression\":\n        case \"LogicalExpression\":\n            var po = parent.operator;\n            var pp = PRECEDENCE[po];\n            var no = node.operator;\n            var np = PRECEDENCE[no];\n\n            if (pp > np) {\n                return true;\n            }\n\n            if (pp === np && this.name === \"right\") {\n                assert.strictEqual(parent.right, node);\n                return true;\n            }\n\n        default:\n            return false;\n        }\n\n    case \"SequenceExpression\":\n        switch (parent.type) {\n        case \"ForStatement\":\n            // Although parentheses wouldn't hurt around sequence\n            // expressions in the head of for loops, traditional style\n            // dictates that e.g. i++, j++ should not be wrapped with\n            // parentheses.\n            return false;\n\n        case \"ExpressionStatement\":\n            return this.name !== \"expression\";\n\n        default:\n            // Otherwise err on the side of overparenthesization, adding\n            // explicit exceptions above if this proves overzealous.\n            return true;\n        }\n\n    case \"YieldExpression\":\n        switch (parent.type) {\n        case \"BinaryExpression\":\n        case \"LogicalExpression\":\n        case \"UnaryExpression\":\n        case \"SpreadElement\":\n        case \"SpreadProperty\":\n        case \"CallExpression\":\n        case \"MemberExpression\":\n        case \"NewExpression\":\n        case \"ConditionalExpression\":\n        case \"YieldExpression\":\n            return true;\n\n        default:\n            return false;\n        }\n\n    case \"Literal\":\n        return parent.type === \"MemberExpression\"\n            && isNumber.check(node.value)\n            && this.name === \"object\"\n            && parent.object === node;\n\n    case \"AssignmentExpression\":\n    case \"ConditionalExpression\":\n        switch (parent.type) {\n        case \"UnaryExpression\":\n        case \"SpreadElement\":\n        case \"SpreadProperty\":\n        case \"BinaryExpression\":\n        case \"LogicalExpression\":\n            return true;\n\n        case \"CallExpression\":\n            return this.name === \"callee\"\n                && parent.callee === node;\n\n        case \"ConditionalExpression\":\n            return this.name === \"test\"\n                && parent.test === node;\n\n        case \"MemberExpression\":\n            return this.name === \"object\"\n                && parent.object === node;\n\n        default:\n            return false;\n        }\n\n    default:\n        if (parent.type === \"NewExpression\" &&\n            this.name === \"callee\" &&\n            parent.callee === node) {\n            return containsCallExpression(node);\n        }\n    }\n\n    if (assumeExpressionContext !== true &&\n        !this.canBeFirstInStatement() &&\n        this.firstInStatement())\n        return true;\n\n    return false;\n};\n\nfunction isBinary(node) {\n    return n.BinaryExpression.check(node)\n        || n.LogicalExpression.check(node);\n}\n\nfunction isUnaryLike(node) {\n    return n.UnaryExpression.check(node)\n        // I considered making SpreadElement and SpreadProperty subtypes\n        // of UnaryExpression, but they're not really Expression nodes.\n        || (n.SpreadElement && n.SpreadElement.check(node))\n        || (n.SpreadProperty && n.SpreadProperty.check(node));\n}\n\nvar PRECEDENCE = {};\n[[\"||\"],\n [\"&&\"],\n [\"|\"],\n [\"^\"],\n [\"&\"],\n [\"==\", \"===\", \"!=\", \"!==\"],\n [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n [\">>\", \"<<\", \">>>\"],\n [\"+\", \"-\"],\n [\"*\", \"/\", \"%\"]\n].forEach(function(tier, i) {\n    tier.forEach(function(op) {\n        PRECEDENCE[op] = i;\n    });\n});\n\nfunction containsCallExpression(node) {\n    if (n.CallExpression.check(node)) {\n        return true;\n    }\n\n    if (isArray.check(node)) {\n        return node.some(containsCallExpression);\n    }\n\n    if (n.Node.check(node)) {\n        return types.someField(node, function(name, child) {\n            return containsCallExpression(child);\n        });\n    }\n\n    return false;\n}\n\nNPp.canBeFirstInStatement = function() {\n    var node = this.node;\n    return !n.FunctionExpression.check(node)\n        && !n.ObjectExpression.check(node);\n};\n\nNPp.firstInStatement = function() {\n    return firstInStatement(this);\n};\n\nfunction firstInStatement(path) {\n    for (var node, parent; path.parent; path = path.parent) {\n        node = path.node;\n        parent = path.parent.node;\n\n        if (n.BlockStatement.check(parent) &&\n            path.parent.name === \"body\" &&\n            path.name === 0) {\n            assert.strictEqual(parent.body[0], node);\n            return true;\n        }\n\n        if (n.ExpressionStatement.check(parent) &&\n            path.name === \"expression\") {\n            assert.strictEqual(parent.expression, node);\n            return true;\n        }\n\n        if (n.SequenceExpression.check(parent) &&\n            path.parent.name === \"expressions\" &&\n            path.name === 0) {\n            assert.strictEqual(parent.expressions[0], node);\n            continue;\n        }\n\n        if (n.CallExpression.check(parent) &&\n            path.name === \"callee\") {\n            assert.strictEqual(parent.callee, node);\n            continue;\n        }\n\n        if (n.MemberExpression.check(parent) &&\n            path.name === \"object\") {\n            assert.strictEqual(parent.object, node);\n            continue;\n        }\n\n        if (n.ConditionalExpression.check(parent) &&\n            path.name === \"test\") {\n            assert.strictEqual(parent.test, node);\n            continue;\n        }\n\n        if (isBinary(parent) &&\n            path.name === \"left\") {\n            assert.strictEqual(parent.left, node);\n            continue;\n        }\n\n        if (n.UnaryExpression.check(parent) &&\n            !parent.prefix &&\n            path.name === \"argument\") {\n            assert.strictEqual(parent.argument, node);\n            continue;\n        }\n\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * Pruning certain nodes will result in empty or incomplete nodes, here we clean those nodes up.\n */\nfunction cleanUpNodesAfterPrune(remainingNodePath) {\n    if (n.VariableDeclaration.check(remainingNodePath.node)) {\n        var declarations = remainingNodePath.get('declarations').value;\n        if (!declarations || declarations.length === 0) {\n            return remainingNodePath.prune();\n        }\n    } else if (n.ExpressionStatement.check(remainingNodePath.node)) {\n        if (!remainingNodePath.get('expression').value) {\n            return remainingNodePath.prune();\n        }\n    } else if (n.IfStatement.check(remainingNodePath.node)) {\n        cleanUpIfStatementAfterPrune(remainingNodePath);\n    }\n\n    return remainingNodePath;\n}\n\nfunction cleanUpIfStatementAfterPrune(ifStatement) {\n    var testExpression = ifStatement.get('test').value;\n    var alternate = ifStatement.get('alternate').value;\n    var consequent = ifStatement.get('consequent').value;\n\n    if (!consequent && !alternate) {\n        var testExpressionStatement = b.expressionStatement(testExpression);\n\n        ifStatement.replace(testExpressionStatement);\n    } else if (!consequent && alternate) {\n        var negatedTestExpression = b.unaryExpression('!', testExpression, true);\n\n        if (n.UnaryExpression.check(testExpression) && testExpression.operator === '!') {\n            negatedTestExpression = testExpression.argument;\n        }\n\n        ifStatement.get(\"test\").replace(negatedTestExpression);\n        ifStatement.get(\"consequent\").replace(alternate);\n        ifStatement.get(\"alternate\").replace();\n    }\n}\n\nmodule.exports = NodePath;\n","var assert = require(\"assert\");\nvar types = require(\"./types\");\nvar NodePath = require(\"./node-path\");\nvar Node = types.namedTypes.Node;\nvar isArray = types.builtInTypes.array;\nvar isObject = types.builtInTypes.object;\nvar isFunction = types.builtInTypes.function;\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar undefined;\n\nfunction PathVisitor() {\n    assert.ok(this instanceof PathVisitor);\n\n    // Permanent state.\n    this._reusableContextStack = [];\n    this._methodNameTable = computeMethodNameTable(this);\n    this.Context = makeContextConstructor(this);\n\n    // State reset every time PathVisitor.prototype.visit is called.\n    this._visiting = false;\n    this._changeReported = false;\n}\n\nfunction computeMethodNameTable(visitor) {\n    var typeNames = Object.create(null);\n\n    for (var methodName in visitor) {\n        if (/^visit[A-Z]/.test(methodName)) {\n            typeNames[methodName.slice(\"visit\".length)] = true;\n        }\n    }\n\n    var supertypeTable = types.computeSupertypeLookupTable(typeNames);\n    var methodNameTable = Object.create(null);\n\n    var typeNames = Object.keys(supertypeTable);\n    var typeNameCount = typeNames.length;\n    for (var i = 0; i < typeNameCount; ++i) {\n        var typeName = typeNames[i];\n        methodName = \"visit\" + supertypeTable[typeName];\n        if (isFunction.check(visitor[methodName])) {\n            methodNameTable[typeName] = methodName;\n        }\n    }\n\n    return methodNameTable;\n}\n\nPathVisitor.fromMethodsObject = function fromMethodsObject(methods) {\n    if (methods instanceof PathVisitor) {\n        return methods;\n    }\n\n    if (!isObject.check(methods)) {\n        // An empty visitor?\n        return new PathVisitor;\n    }\n\n    function Visitor() {\n        assert.ok(this instanceof Visitor);\n        PathVisitor.call(this);\n    }\n\n    var Vp = Visitor.prototype = Object.create(PVp);\n    Vp.constructor = Visitor;\n\n    extend(Vp, methods);\n    extend(Visitor, PathVisitor);\n\n    isFunction.assert(Visitor.fromMethodsObject);\n    isFunction.assert(Visitor.visit);\n\n    return new Visitor;\n};\n\nfunction extend(target, source) {\n    for (var property in source) {\n        if (hasOwn.call(source, property)) {\n            target[property] = source[property];\n        }\n    }\n\n    return target;\n}\n\nPathVisitor.visit = function visit(node, methods) {\n    var visitor = PathVisitor.fromMethodsObject(methods);\n\n    if (node instanceof NodePath) {\n        visitor.visit(node);\n        return node.value;\n    }\n\n    var rootPath = new NodePath({ root: node });\n    visitor.visit(rootPath.get(\"root\"));\n    return rootPath.value.root;\n};\n\nvar PVp = PathVisitor.prototype;\n\nvar recursiveVisitWarning = [\n    \"Recursively calling visitor.visit(path) resets visitor state.\",\n    \"Try this.visit(path) or this.traverse(path) instead.\"\n].join(\" \");\n\nPVp.visit = function(path) {\n    assert.ok(!this._visiting, recursiveVisitWarning);\n\n    // Private state that needs to be reset before every traversal.\n    this._visiting = true;\n    this._changeReported = false;\n\n    // Called with the same arguments as .visit.\n    this.reset.apply(this, arguments);\n\n    try {\n        return this.visitWithoutReset(path);\n    } finally {\n        this._visiting = false;\n    }\n};\n\nPVp.reset = function(path/*, additional arguments */) {\n    // Empty stub; may be reassigned or overridden by subclasses.\n};\n\nPVp.visitWithoutReset = function(path) {\n    if (this instanceof this.Context) {\n        // Since this.Context.prototype === this, there's a chance we\n        // might accidentally call context.visitWithoutReset. If that\n        // happens, re-invoke the method against context.visitor.\n        return this.visitor.visitWithoutReset(path);\n    }\n\n    assert.ok(path instanceof NodePath);\n    var value = path.value;\n\n    var methodName = Node.check(value) && this._methodNameTable[value.type];\n    if (methodName) {\n        var context = this.acquireContext(path);\n        try {\n            context.invokeVisitorMethod(methodName);\n        } finally {\n            this.releaseContext(context);\n        }\n\n    } else {\n        // If there was no visitor method to call, visit the children of\n        // this node generically.\n        visitChildren(path, this);\n    }\n};\n\nfunction visitChildren(path, visitor) {\n    assert.ok(path instanceof NodePath);\n    assert.ok(visitor instanceof PathVisitor);\n\n    var value = path.value;\n\n    if (isArray.check(value)) {\n        path.each(visitor.visitWithoutReset, visitor);\n    } else if (!isObject.check(value)) {\n        // No children to visit.\n    } else {\n        var childNames = types.getFieldNames(value);\n        var childCount = childNames.length;\n        var childPaths = [];\n\n        for (var i = 0; i < childCount; ++i) {\n            var childName = childNames[i];\n            if (!hasOwn.call(value, childName)) {\n                value[childName] = types.getFieldValue(value, childName);\n            }\n            childPaths.push(path.get(childName));\n        }\n\n        for (var i = 0; i < childCount; ++i) {\n            visitor.visitWithoutReset(childPaths[i]);\n        }\n    }\n}\n\nPVp.acquireContext = function(path) {\n    if (this._reusableContextStack.length === 0) {\n        return new this.Context(path);\n    }\n    return this._reusableContextStack.pop().reset(path);\n};\n\nPVp.releaseContext = function(context) {\n    assert.ok(context instanceof this.Context);\n    this._reusableContextStack.push(context);\n    context.currentPath = null;\n};\n\nPVp.reportChanged = function() {\n    this._changeReported = true;\n};\n\nPVp.wasChangeReported = function() {\n    return this._changeReported;\n};\n\nfunction makeContextConstructor(visitor) {\n    function Context(path) {\n        assert.ok(this instanceof Context);\n        assert.ok(this instanceof PathVisitor);\n        assert.ok(path instanceof NodePath);\n\n        Object.defineProperty(this, \"visitor\", {\n            value: visitor,\n            writable: false,\n            enumerable: true,\n            configurable: false\n        });\n\n        this.currentPath = path;\n        this.needToCallTraverse = true;\n\n        Object.seal(this);\n    }\n\n    assert.ok(visitor instanceof PathVisitor);\n\n    // Note that the visitor object is the prototype of Context.prototype,\n    // so all visitor methods are inherited by context objects.\n    var Cp = Context.prototype = Object.create(visitor);\n\n    Cp.constructor = Context;\n    extend(Cp, sharedContextProtoMethods);\n\n    return Context;\n}\n\n// Every PathVisitor has a different this.Context constructor and\n// this.Context.prototype object, but those prototypes can all use the\n// same reset, invokeVisitorMethod, and traverse function objects.\nvar sharedContextProtoMethods = Object.create(null);\n\nsharedContextProtoMethods.reset =\nfunction reset(path) {\n    assert.ok(this instanceof this.Context);\n    assert.ok(path instanceof NodePath);\n\n    this.currentPath = path;\n    this.needToCallTraverse = true;\n\n    return this;\n};\n\nsharedContextProtoMethods.invokeVisitorMethod =\nfunction invokeVisitorMethod(methodName) {\n    assert.ok(this instanceof this.Context);\n    assert.ok(this.currentPath instanceof NodePath);\n\n    var result = this.visitor[methodName].call(this, this.currentPath);\n\n    if (result === false) {\n        // Visitor methods return false to indicate that they have handled\n        // their own traversal needs, and we should not complain if\n        // this.needToCallTraverse is still true.\n        this.needToCallTraverse = false;\n\n    } else if (result !== undefined) {\n        // Any other non-undefined value returned from the visitor method\n        // is interpreted as a replacement value.\n        this.currentPath = this.currentPath.replace(result)[0];\n\n        if (this.needToCallTraverse) {\n            // If this.traverse still hasn't been called, visit the\n            // children of the replacement node.\n            this.traverse(this.currentPath);\n        }\n    }\n\n    assert.strictEqual(\n        this.needToCallTraverse, false,\n        \"Must either call this.traverse or return false in \" + methodName\n    );\n};\n\nsharedContextProtoMethods.traverse =\nfunction traverse(path, newVisitor) {\n    assert.ok(this instanceof this.Context);\n    assert.ok(path instanceof NodePath);\n    assert.ok(this.currentPath instanceof NodePath);\n\n    this.needToCallTraverse = false;\n\n    visitChildren(path, PathVisitor.fromMethodsObject(\n        newVisitor || this.visitor\n    ));\n};\n\nsharedContextProtoMethods.visit =\nfunction visit(path, newVisitor) {\n    assert.ok(this instanceof this.Context);\n    assert.ok(path instanceof NodePath);\n    assert.ok(this.currentPath instanceof NodePath);\n\n    this.needToCallTraverse = false;\n\n    PathVisitor.fromMethodsObject(\n        newVisitor || this.visitor\n    ).visitWithoutReset(path);\n};\n\nsharedContextProtoMethods.reportChanged = function reportChanged() {\n    this.visitor.reportChanged();\n};\n\nmodule.exports = PathVisitor;\n","var assert = require(\"assert\");\nvar Op = Object.prototype;\nvar hasOwn = Op.hasOwnProperty;\nvar types = require(\"./types\");\nvar isArray = types.builtInTypes.array;\nvar isNumber = types.builtInTypes.number;\nvar Ap = Array.prototype;\nvar slice = Ap.slice;\nvar map = Ap.map;\n\nfunction Path(value, parentPath, name) {\n    assert.ok(this instanceof Path);\n\n    if (parentPath) {\n        assert.ok(parentPath instanceof Path);\n    } else {\n        parentPath = null;\n        name = null;\n    }\n\n    // The value encapsulated by this Path, generally equal to\n    // parentPath.value[name] if we have a parentPath.\n    this.value = value;\n\n    // The immediate parent Path of this Path.\n    this.parentPath = parentPath;\n\n    // The name of the property of parentPath.value through which this\n    // Path's value was reached.\n    this.name = name;\n\n    // Calling path.get(\"child\") multiple times always returns the same\n    // child Path object, for both performance and consistency reasons.\n    this.__childCache = null;\n}\n\nvar Pp = Path.prototype;\n\nfunction getChildCache(path) {\n    // Lazily create the child cache. This also cheapens cache\n    // invalidation, since you can just reset path.__childCache to null.\n    return path.__childCache || (path.__childCache = Object.create(null));\n}\n\nfunction getChildPath(path, name) {\n    var cache = getChildCache(path);\n    var actualChildValue = path.getValueProperty(name);\n    var childPath = cache[name];\n    if (!hasOwn.call(cache, name) ||\n        // Ensure consistency between cache and reality.\n        childPath.value !== actualChildValue) {\n        childPath = cache[name] = new path.constructor(\n            actualChildValue, path, name\n        );\n    }\n    return childPath;\n}\n\n// This method is designed to be overridden by subclasses that need to\n// handle missing properties, etc.\nPp.getValueProperty = function getValueProperty(name) {\n    return this.value[name];\n};\n\nPp.get = function get(name) {\n    var path = this;\n    var names = arguments;\n    var count = names.length;\n\n    for (var i = 0; i < count; ++i) {\n        path = getChildPath(path, names[i]);\n    }\n\n    return path;\n};\n\nPp.each = function each(callback, context) {\n    var childPaths = [];\n    var len = this.value.length;\n    var i = 0;\n\n    // Collect all the original child paths before invoking the callback.\n    for (var i = 0; i < len; ++i) {\n        if (hasOwn.call(this.value, i)) {\n            childPaths[i] = this.get(i);\n        }\n    }\n\n    // Invoke the callback on just the original child paths, regardless of\n    // any modifications made to the array by the callback. I chose these\n    // semantics over cleverly invoking the callback on new elements because\n    // this way is much easier to reason about.\n    context = context || this;\n    for (i = 0; i < len; ++i) {\n        if (hasOwn.call(childPaths, i)) {\n            callback.call(context, childPaths[i]);\n        }\n    }\n};\n\nPp.map = function map(callback, context) {\n    var result = [];\n\n    this.each(function(childPath) {\n        result.push(callback.call(this, childPath));\n    }, context);\n\n    return result;\n};\n\nPp.filter = function filter(callback, context) {\n    var result = [];\n\n    this.each(function(childPath) {\n        if (callback.call(this, childPath)) {\n            result.push(childPath);\n        }\n    }, context);\n\n    return result;\n};\n\nfunction emptyMoves() {}\nfunction getMoves(path, offset, start, end) {\n    isArray.assert(path.value);\n\n    if (offset === 0) {\n        return emptyMoves;\n    }\n\n    var length = path.value.length;\n    if (length < 1) {\n        return emptyMoves;\n    }\n\n    var argc = arguments.length;\n    if (argc === 2) {\n        start = 0;\n        end = length;\n    } else if (argc === 3) {\n        start = Math.max(start, 0);\n        end = length;\n    } else {\n        start = Math.max(start, 0);\n        end = Math.min(end, length);\n    }\n\n    isNumber.assert(start);\n    isNumber.assert(end);\n\n    var moves = Object.create(null);\n    var cache = getChildCache(path);\n\n    for (var i = start; i < end; ++i) {\n        if (hasOwn.call(path.value, i)) {\n            var childPath = path.get(i);\n            assert.strictEqual(childPath.name, i);\n            var newIndex = i + offset;\n            childPath.name = newIndex;\n            moves[newIndex] = childPath;\n            delete cache[i];\n        }\n    }\n\n    delete cache.length;\n\n    return function() {\n        for (var newIndex in moves) {\n            var childPath = moves[newIndex];\n            assert.strictEqual(childPath.name, +newIndex);\n            cache[newIndex] = childPath;\n            path.value[newIndex] = childPath.value;\n        }\n    };\n}\n\nPp.shift = function shift() {\n    var move = getMoves(this, -1);\n    var result = this.value.shift();\n    move();\n    return result;\n};\n\nPp.unshift = function unshift(node) {\n    var move = getMoves(this, arguments.length);\n    var result = this.value.unshift.apply(this.value, arguments);\n    move();\n    return result;\n};\n\nPp.push = function push(node) {\n    isArray.assert(this.value);\n    delete getChildCache(this).length\n    return this.value.push.apply(this.value, arguments);\n};\n\nPp.pop = function pop() {\n    isArray.assert(this.value);\n    var cache = getChildCache(this);\n    delete cache[this.value.length - 1];\n    delete cache.length;\n    return this.value.pop();\n};\n\nPp.insertAt = function insertAt(index, node) {\n    var argc = arguments.length;\n    var move = getMoves(this, argc - 1, index);\n    if (move === emptyMoves) {\n        return this;\n    }\n\n    index = Math.max(index, 0);\n\n    for (var i = 1; i < argc; ++i) {\n        this.value[index + i - 1] = arguments[i];\n    }\n\n    move();\n\n    return this;\n};\n\nPp.insertBefore = function insertBefore(node) {\n    var pp = this.parentPath;\n    var argc = arguments.length;\n    var insertAtArgs = [this.name];\n    for (var i = 0; i < argc; ++i) {\n        insertAtArgs.push(arguments[i]);\n    }\n    return pp.insertAt.apply(pp, insertAtArgs);\n};\n\nPp.insertAfter = function insertAfter(node) {\n    var pp = this.parentPath;\n    var argc = arguments.length;\n    var insertAtArgs = [this.name + 1];\n    for (var i = 0; i < argc; ++i) {\n        insertAtArgs.push(arguments[i]);\n    }\n    return pp.insertAt.apply(pp, insertAtArgs);\n};\n\nfunction repairRelationshipWithParent(path) {\n    assert.ok(path instanceof Path);\n\n    var pp = path.parentPath;\n    if (!pp) {\n        // Orphan paths have no relationship to repair.\n        return path;\n    }\n\n    var parentValue = pp.value;\n    var parentCache = getChildCache(pp);\n\n    // Make sure parentCache[path.name] is populated.\n    if (parentValue[path.name] === path.value) {\n        parentCache[path.name] = path;\n    } else if (isArray.check(parentValue)) {\n        // Something caused path.name to become out of date, so attempt to\n        // recover by searching for path.value in parentValue.\n        var i = parentValue.indexOf(path.value);\n        if (i >= 0) {\n            parentCache[path.name = i] = path;\n        }\n    } else {\n        // If path.value disagrees with parentValue[path.name], and\n        // path.name is not an array index, let path.value become the new\n        // parentValue[path.name] and update parentCache accordingly.\n        parentValue[path.name] = path.value;\n        parentCache[path.name] = path;\n    }\n\n    assert.strictEqual(parentValue[path.name], path.value);\n    assert.strictEqual(path.parentPath.get(path.name), path);\n\n    return path;\n}\n\nPp.replace = function replace(replacement) {\n    var results = [];\n    var parentValue = this.parentPath.value;\n    var parentCache = getChildCache(this.parentPath);\n    var count = arguments.length;\n\n    repairRelationshipWithParent(this);\n\n    if (isArray.check(parentValue)) {\n        var originalLength = parentValue.length;\n        var move = getMoves(this.parentPath, count - 1, this.name + 1);\n\n        var spliceArgs = [this.name, 1];\n        for (var i = 0; i < count; ++i) {\n            spliceArgs.push(arguments[i]);\n        }\n\n        var splicedOut = parentValue.splice.apply(parentValue, spliceArgs);\n\n        assert.strictEqual(splicedOut[0], this.value);\n        assert.strictEqual(\n            parentValue.length,\n            originalLength - 1 + count\n        );\n\n        move();\n\n        if (count === 0) {\n            delete this.value;\n            delete parentCache[this.name];\n            this.__childCache = null;\n\n        } else {\n            assert.strictEqual(parentValue[this.name], replacement);\n\n            if (this.value !== replacement) {\n                this.value = replacement;\n                this.__childCache = null;\n            }\n\n            for (i = 0; i < count; ++i) {\n                results.push(this.parentPath.get(this.name + i));\n            }\n\n            assert.strictEqual(results[0], this);\n        }\n\n    } else if (count === 1) {\n        if (this.value !== replacement) {\n            this.__childCache = null;\n        }\n        this.value = parentValue[this.name] = replacement;\n        results.push(this);\n\n    } else if (count === 0) {\n        delete parentValue[this.name];\n        delete this.value;\n        this.__childCache = null;\n\n        // Leave this path cached as parentCache[this.name], even though\n        // it no longer has a value defined.\n\n    } else {\n        assert.ok(false, \"Could not replace path\");\n    }\n\n    return results;\n};\n\nmodule.exports = Path;\n","var assert = require(\"assert\");\nvar types = require(\"./types\");\nvar Type = types.Type;\nvar namedTypes = types.namedTypes;\nvar Node = namedTypes.Node;\nvar Expression = namedTypes.Expression;\nvar isArray = types.builtInTypes.array;\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar b = types.builders;\n\nfunction Scope(path, parentScope) {\n    assert.ok(this instanceof Scope);\n    assert.ok(path instanceof require(\"./node-path\"));\n    ScopeType.assert(path.value);\n\n    var depth;\n\n    if (parentScope) {\n        assert.ok(parentScope instanceof Scope);\n        depth = parentScope.depth + 1;\n    } else {\n        parentScope = null;\n        depth = 0;\n    }\n\n    Object.defineProperties(this, {\n        path: { value: path },\n        node: { value: path.value },\n        isGlobal: { value: !parentScope, enumerable: true },\n        depth: { value: depth },\n        parent: { value: parentScope },\n        bindings: { value: {} }\n    });\n}\n\nvar scopeTypes = [\n    // Program nodes introduce global scopes.\n    namedTypes.Program,\n\n    // Function is the supertype of FunctionExpression,\n    // FunctionDeclaration, ArrowExpression, etc.\n    namedTypes.Function,\n\n    // In case you didn't know, the caught parameter shadows any variable\n    // of the same name in an outer scope.\n    namedTypes.CatchClause\n];\n\nvar ScopeType = Type.or.apply(Type, scopeTypes);\n\nScope.isEstablishedBy = function(node) {\n    return ScopeType.check(node);\n};\n\nvar Sp = Scope.prototype;\n\n// Will be overridden after an instance lazily calls scanScope.\nSp.didScan = false;\n\nSp.declares = function(name) {\n    this.scan();\n    return hasOwn.call(this.bindings, name);\n};\n\nSp.declareTemporary = function(prefix) {\n    if (prefix) {\n        assert.ok(/^[a-z$_]/i.test(prefix), prefix);\n    } else {\n        prefix = \"t$\";\n    }\n\n    // Include this.depth in the name to make sure the name does not\n    // collide with any variables in nested/enclosing scopes.\n    prefix += this.depth.toString(36) + \"$\";\n\n    this.scan();\n\n    var index = 0;\n    while (this.declares(prefix + index)) {\n        ++index;\n    }\n\n    var name = prefix + index;\n    return this.bindings[name] = types.builders.identifier(name);\n};\n\nSp.injectTemporary = function(identifier, init) {\n    identifier || (identifier = this.declareTemporary());\n\n    var bodyPath = this.path.get(\"body\");\n    if (namedTypes.BlockStatement.check(bodyPath.value)) {\n        bodyPath = bodyPath.get(\"body\");\n    }\n\n    bodyPath.unshift(\n        b.variableDeclaration(\n            \"var\",\n            [b.variableDeclarator(identifier, init || null)]\n        )\n    );\n\n    return identifier;\n};\n\nSp.scan = function(force) {\n    if (force || !this.didScan) {\n        for (var name in this.bindings) {\n            // Empty out this.bindings, just in cases.\n            delete this.bindings[name];\n        }\n        scanScope(this.path, this.bindings);\n        this.didScan = true;\n    }\n};\n\nSp.getBindings = function () {\n    this.scan();\n    return this.bindings;\n};\n\nfunction scanScope(path, bindings) {\n    var node = path.value;\n    ScopeType.assert(node);\n\n    if (namedTypes.CatchClause.check(node)) {\n        // A catch clause establishes a new scope but the only variable\n        // bound in that scope is the catch parameter. Any other\n        // declarations create bindings in the outer scope.\n        addPattern(path.get(\"param\"), bindings);\n\n    } else {\n        recursiveScanScope(path, bindings);\n    }\n}\n\nfunction recursiveScanScope(path, bindings) {\n    var node = path.value;\n\n    if (path.parent &&\n        namedTypes.FunctionExpression.check(path.parent.node) &&\n        path.parent.node.id) {\n        addPattern(path.parent.get(\"id\"), bindings);\n    }\n\n    if (!node) {\n        // None of the remaining cases matter if node is falsy.\n\n    } else if (isArray.check(node)) {\n        path.each(function(childPath) {\n            recursiveScanChild(childPath, bindings);\n        });\n\n    } else if (namedTypes.Function.check(node)) {\n        path.get(\"params\").each(function(paramPath) {\n            addPattern(paramPath, bindings);\n        });\n\n        recursiveScanChild(path.get(\"body\"), bindings);\n\n    } else if (namedTypes.VariableDeclarator.check(node)) {\n        addPattern(path.get(\"id\"), bindings);\n        recursiveScanChild(path.get(\"init\"), bindings);\n\n    } else if (node.type === \"ImportSpecifier\" ||\n               node.type === \"ImportNamespaceSpecifier\" ||\n               node.type === \"ImportDefaultSpecifier\") {\n        addPattern(\n            node.name ? path.get(\"name\") : path.get(\"id\"),\n            bindings\n        );\n\n    } else if (Node.check(node) && !Expression.check(node)) {\n        types.eachField(node, function(name, child) {\n            var childPath = path.get(name);\n            assert.strictEqual(childPath.value, child);\n            recursiveScanChild(childPath, bindings);\n        });\n    }\n}\n\nfunction recursiveScanChild(path, bindings) {\n    var node = path.value;\n\n    if (!node || Expression.check(node)) {\n        // Ignore falsy values and Expressions.\n\n    } else if (namedTypes.FunctionDeclaration.check(node)) {\n        addPattern(path.get(\"id\"), bindings);\n\n    } else if (namedTypes.ClassDeclaration &&\n               namedTypes.ClassDeclaration.check(node)) {\n        addPattern(path.get(\"id\"), bindings);\n\n    } else if (ScopeType.check(node)) {\n        if (namedTypes.CatchClause.check(node)) {\n            var catchParamName = node.param.name;\n            var hadBinding = hasOwn.call(bindings, catchParamName);\n\n            // Any declarations that occur inside the catch body that do\n            // not have the same name as the catch parameter should count\n            // as bindings in the outer scope.\n            recursiveScanScope(path.get(\"body\"), bindings);\n\n            // If a new binding matching the catch parameter name was\n            // created while scanning the catch body, ignore it because it\n            // actually refers to the catch parameter and not the outer\n            // scope that we're currently scanning.\n            if (!hadBinding) {\n                delete bindings[catchParamName];\n            }\n        }\n\n    } else {\n        recursiveScanScope(path, bindings);\n    }\n}\n\nfunction addPattern(patternPath, bindings) {\n    var pattern = patternPath.value;\n    namedTypes.Pattern.assert(pattern);\n\n    if (namedTypes.Identifier.check(pattern)) {\n        if (hasOwn.call(bindings, pattern.name)) {\n            bindings[pattern.name].push(patternPath);\n        } else {\n            bindings[pattern.name] = [patternPath];\n        }\n\n    } else if (namedTypes.SpreadElement &&\n               namedTypes.SpreadElement.check(pattern)) {\n        addPattern(patternPath.get(\"argument\"), bindings);\n    }\n}\n\nSp.lookup = function(name) {\n    for (var scope = this; scope; scope = scope.parent)\n        if (scope.declares(name))\n            break;\n    return scope;\n};\n\nSp.getGlobalScope = function() {\n    var scope = this;\n    while (!scope.isGlobal)\n        scope = scope.parent;\n    return scope;\n};\n\nmodule.exports = Scope;\n","var types = require(\"../lib/types\");\nvar Type = types.Type;\nvar builtin = types.builtInTypes;\nvar isNumber = builtin.number;\n\n// An example of constructing a new type with arbitrary constraints from\n// an existing type.\nexports.geq = function(than) {\n    return new Type(function(value) {\n        return isNumber.check(value) && value >= than;\n    }, isNumber + \" >= \" + than);\n};\n\n// Default value-returning functions that may optionally be passed as a\n// third argument to Def.prototype.field.\nexports.defaults = {\n    // Functions were used because (among other reasons) that's the most\n    // elegant way to allow for the emptyArray one always to give a new\n    // array instance.\n    \"null\": function() { return null },\n    \"emptyArray\": function() { return [] },\n    \"false\": function() { return false },\n    \"true\": function() { return true },\n    \"undefined\": function() {}\n};\n\nvar naiveIsPrimitive = Type.or(\n    builtin.string,\n    builtin.number,\n    builtin.boolean,\n    builtin.null,\n    builtin.undefined\n);\n\nexports.isPrimitive = new Type(function(value) {\n    if (value === null)\n        return true;\n    var type = typeof value;\n    return !(type === \"object\" ||\n             type === \"function\");\n}, naiveIsPrimitive.toString());\n","var assert = require(\"assert\");\nvar Ap = Array.prototype;\nvar slice = Ap.slice;\nvar map = Ap.map;\nvar each = Ap.forEach;\nvar Op = Object.prototype;\nvar objToStr = Op.toString;\nvar funObjStr = objToStr.call(function(){});\nvar strObjStr = objToStr.call(\"\");\nvar hasOwn = Op.hasOwnProperty;\n\n// A type is an object with a .check method that takes a value and returns\n// true or false according to whether the value matches the type.\n\nfunction Type(check, name) {\n    var self = this;\n    assert.ok(self instanceof Type, self);\n\n    // Unfortunately we can't elegantly reuse isFunction and isString,\n    // here, because this code is executed while defining those types.\n    assert.strictEqual(objToStr.call(check), funObjStr,\n                       check + \" is not a function\");\n\n    // The `name` parameter can be either a function or a string.\n    var nameObjStr = objToStr.call(name);\n    assert.ok(nameObjStr === funObjStr ||\n              nameObjStr === strObjStr,\n              name + \" is neither a function nor a string\");\n\n    Object.defineProperties(self, {\n        name: { value: name },\n        check: {\n            value: function(value, deep) {\n                var result = check.call(self, value, deep);\n                if (!result && deep && objToStr.call(deep) === funObjStr)\n                    deep(self, value);\n                return result;\n            }\n        }\n    });\n}\n\nvar Tp = Type.prototype;\n\n// Throughout this file we use Object.defineProperty to prevent\n// redefinition of exported properties.\nexports.Type = Type;\n\n// Like .check, except that failure triggers an AssertionError.\nTp.assert = function(value, deep) {\n    if (!this.check(value, deep)) {\n        var str = shallowStringify(value);\n        assert.ok(false, str + \" does not match type \" + this);\n        return false;\n    }\n    return true;\n};\n\nfunction shallowStringify(value) {\n    if (isObject.check(value))\n        return \"{\" + Object.keys(value).map(function(key) {\n            return key + \": \" + value[key];\n        }).join(\", \") + \"}\";\n\n    if (isArray.check(value))\n        return \"[\" + value.map(shallowStringify).join(\", \") + \"]\";\n\n    return JSON.stringify(value);\n}\n\nTp.toString = function() {\n    var name = this.name;\n\n    if (isString.check(name))\n        return name;\n\n    if (isFunction.check(name))\n        return name.call(this) + \"\";\n\n    return name + \" type\";\n};\n\nvar builtInTypes = {};\nexports.builtInTypes = builtInTypes;\n\nfunction defBuiltInType(example, name) {\n    var objStr = objToStr.call(example);\n\n    Object.defineProperty(builtInTypes, name, {\n        enumerable: true,\n        value: new Type(function(value) {\n            return objToStr.call(value) === objStr;\n        }, name)\n    });\n\n    return builtInTypes[name];\n}\n\n// These types check the underlying [[Class]] attribute of the given\n// value, rather than using the problematic typeof operator. Note however\n// that no subtyping is considered; so, for instance, isObject.check\n// returns false for [], /./, new Date, and null.\nvar isString = defBuiltInType(\"\", \"string\");\nvar isFunction = defBuiltInType(function(){}, \"function\");\nvar isArray = defBuiltInType([], \"array\");\nvar isObject = defBuiltInType({}, \"object\");\nvar isRegExp = defBuiltInType(/./, \"RegExp\");\nvar isDate = defBuiltInType(new Date, \"Date\");\nvar isNumber = defBuiltInType(3, \"number\");\nvar isBoolean = defBuiltInType(true, \"boolean\");\nvar isNull = defBuiltInType(null, \"null\");\nvar isUndefined = defBuiltInType(void 0, \"undefined\");\n\n// There are a number of idiomatic ways of expressing types, so this\n// function serves to coerce them all to actual Type objects. Note that\n// providing the name argument is not necessary in most cases.\nfunction toType(from, name) {\n    // The toType function should of course be idempotent.\n    if (from instanceof Type)\n        return from;\n\n    // The Def type is used as a helper for constructing compound\n    // interface types for AST nodes.\n    if (from instanceof Def)\n        return from.type;\n\n    // Support [ElemType] syntax.\n    if (isArray.check(from))\n        return Type.fromArray(from);\n\n    // Support { someField: FieldType, ... } syntax.\n    if (isObject.check(from))\n        return Type.fromObject(from);\n\n    // If isFunction.check(from), assume that from is a binary predicate\n    // function we can use to define the type.\n    if (isFunction.check(from))\n        return new Type(from, name);\n\n    // As a last resort, toType returns a type that matches any value that\n    // is === from. This is primarily useful for literal values like\n    // toType(null), but it has the additional advantage of allowing\n    // toType to be a total function.\n    return new Type(function(value) {\n        return value === from;\n    }, isUndefined.check(name) ? function() {\n        return from + \"\";\n    } : name);\n}\n\n// Returns a type that matches the given value iff any of type1, type2,\n// etc. match the value.\nType.or = function(/* type1, type2, ... */) {\n    var types = [];\n    var len = arguments.length;\n    for (var i = 0; i < len; ++i)\n        types.push(toType(arguments[i]));\n\n    return new Type(function(value, deep) {\n        for (var i = 0; i < len; ++i)\n            if (types[i].check(value, deep))\n                return true;\n        return false;\n    }, function() {\n        return types.join(\" | \");\n    });\n};\n\nType.fromArray = function(arr) {\n    assert.ok(isArray.check(arr));\n    assert.strictEqual(\n        arr.length, 1,\n        \"only one element type is permitted for typed arrays\");\n    return toType(arr[0]).arrayOf();\n};\n\nTp.arrayOf = function() {\n    var elemType = this;\n    return new Type(function(value, deep) {\n        return isArray.check(value) && value.every(function(elem) {\n            return elemType.check(elem, deep);\n        });\n    }, function() {\n        return \"[\" + elemType + \"]\";\n    });\n};\n\nType.fromObject = function(obj) {\n    var fields = Object.keys(obj).map(function(name) {\n        return new Field(name, obj[name]);\n    });\n\n    return new Type(function(value, deep) {\n        return isObject.check(value) && fields.every(function(field) {\n            return field.type.check(value[field.name], deep);\n        });\n    }, function() {\n        return \"{ \" + fields.join(\", \") + \" }\";\n    });\n};\n\nfunction Field(name, type, defaultFn, hidden) {\n    var self = this;\n\n    assert.ok(self instanceof Field);\n    isString.assert(name);\n\n    type = toType(type);\n\n    var properties = {\n        name: { value: name },\n        type: { value: type },\n        hidden: { value: !!hidden }\n    };\n\n    if (isFunction.check(defaultFn)) {\n        properties.defaultFn = { value: defaultFn };\n    }\n\n    Object.defineProperties(self, properties);\n}\n\nvar Fp = Field.prototype;\n\nFp.toString = function() {\n    return JSON.stringify(this.name) + \": \" + this.type;\n};\n\nFp.getValue = function(obj) {\n    var value = obj[this.name];\n\n    if (!isUndefined.check(value))\n        return value;\n\n    if (this.defaultFn)\n        value = this.defaultFn.call(obj);\n\n    return value;\n};\n\n// Define a type whose name is registered in a namespace (the defCache) so\n// that future definitions will return the same type given the same name.\n// In particular, this system allows for circular and forward definitions.\n// The Def object d returned from Type.def may be used to configure the\n// type d.type by calling methods such as d.bases, d.build, and d.field.\nType.def = function(typeName) {\n    isString.assert(typeName);\n    return hasOwn.call(defCache, typeName)\n        ? defCache[typeName]\n        : defCache[typeName] = new Def(typeName);\n};\n\n// In order to return the same Def instance every time Type.def is called\n// with a particular name, those instances need to be stored in a cache.\nvar defCache = Object.create(null);\n\nfunction Def(typeName) {\n    var self = this;\n    assert.ok(self instanceof Def);\n\n    Object.defineProperties(self, {\n        typeName: { value: typeName },\n        baseNames: { value: [] },\n        ownFields: { value: Object.create(null) },\n\n        // These two are populated during finalization.\n        allSupertypes: { value: Object.create(null) }, // Includes own typeName.\n        supertypeList: { value: [] }, // Linear inheritance hierarchy.\n        allFields: { value: Object.create(null) }, // Includes inherited fields.\n        fieldNames: { value: [] }, // Non-hidden keys of allFields.\n\n        type: {\n            value: new Type(function(value, deep) {\n                return self.check(value, deep);\n            }, typeName)\n        }\n    });\n}\n\nDef.fromValue = function(value) {\n    if (value && typeof value === \"object\") {\n        var type = value.type;\n        if (typeof type === \"string\" &&\n            hasOwn.call(defCache, type)) {\n            var d = defCache[type];\n            if (d.finalized) {\n                return d;\n            }\n        }\n    }\n\n    return null;\n};\n\nvar Dp = Def.prototype;\n\nDp.isSupertypeOf = function(that) {\n    if (that instanceof Def) {\n        assert.strictEqual(this.finalized, true);\n        assert.strictEqual(that.finalized, true);\n        return hasOwn.call(that.allSupertypes, this.typeName);\n    } else {\n        assert.ok(false, that + \" is not a Def\");\n    }\n};\n\n// Note that the list returned by this function is a copy of the internal\n// supertypeList, *without* the typeName itself as the first element.\nexports.getSupertypeNames = function(typeName) {\n    assert.ok(hasOwn.call(defCache, typeName));\n    var d = defCache[typeName];\n    assert.strictEqual(d.finalized, true);\n    return d.supertypeList.slice(1);\n};\n\n// Returns an object mapping from every known type in the defCache to the\n// most specific supertype whose name is an own property of the candidates\n// object.\nexports.computeSupertypeLookupTable = function(candidates) {\n    var table = {};\n    var typeNames = Object.keys(defCache);\n    var typeNameCount = typeNames.length;\n\n    for (var i = 0; i < typeNameCount; ++i) {\n        var typeName = typeNames[i];\n        var d = defCache[typeName];\n        assert.strictEqual(d.finalized, true);\n        for (var j = 0; j < d.supertypeList.length; ++j) {\n            var superTypeName = d.supertypeList[j];\n            if (hasOwn.call(candidates, superTypeName)) {\n                table[typeName] = superTypeName;\n                break;\n            }\n        }\n    }\n\n    return table;\n};\n\nDp.checkAllFields = function(value, deep) {\n    var allFields = this.allFields;\n    assert.strictEqual(this.finalized, true);\n\n    function checkFieldByName(name) {\n        var field = allFields[name];\n        var type = field.type;\n        var child = field.getValue(value);\n        return type.check(child, deep);\n    }\n\n    return isObject.check(value)\n        && Object.keys(allFields).every(checkFieldByName);\n};\n\nDp.check = function(value, deep) {\n    assert.strictEqual(\n        this.finalized, true,\n        \"prematurely checking unfinalized type \" + this.typeName);\n\n    // A Def type can only match an object value.\n    if (!isObject.check(value))\n        return false;\n\n    var vDef = Def.fromValue(value);\n    if (!vDef) {\n        // If we couldn't infer the Def associated with the given value,\n        // and we expected it to be a SourceLocation or a Position, it was\n        // probably just missing a \"type\" field (because Esprima does not\n        // assign a type property to such nodes). Be optimistic and let\n        // this.checkAllFields make the final decision.\n        if (this.typeName === \"SourceLocation\" ||\n            this.typeName === \"Position\") {\n            return this.checkAllFields(value, deep);\n        }\n\n        // Calling this.checkAllFields for any other type of node is both\n        // bad for performance and way too forgiving.\n        return false;\n    }\n\n    // If checking deeply and vDef === this, then we only need to call\n    // checkAllFields once. Calling checkAllFields is too strict when deep\n    // is false, because then we only care about this.isSupertypeOf(vDef).\n    if (deep && vDef === this)\n        return this.checkAllFields(value, deep);\n\n    // In most cases we rely exclusively on isSupertypeOf to make O(1)\n    // subtyping determinations. This suffices in most situations outside\n    // of unit tests, since interface conformance is checked whenever new\n    // instances are created using builder functions.\n    if (!this.isSupertypeOf(vDef))\n        return false;\n\n    // The exception is when deep is true; then, we recursively check all\n    // fields.\n    if (!deep)\n        return true;\n\n    // Use the more specific Def (vDef) to perform the deep check, but\n    // shallow-check fields defined by the less specific Def (this).\n    return vDef.checkAllFields(value, deep)\n        && this.checkAllFields(value, false);\n};\n\nDp.bases = function() {\n    var bases = this.baseNames;\n\n    assert.strictEqual(this.finalized, false);\n\n    each.call(arguments, function(baseName) {\n        isString.assert(baseName);\n\n        // This indexOf lookup may be O(n), but the typical number of base\n        // names is very small, and indexOf is a native Array method.\n        if (bases.indexOf(baseName) < 0)\n            bases.push(baseName);\n    });\n\n    return this; // For chaining.\n};\n\n// False by default until .build(...) is called on an instance.\nObject.defineProperty(Dp, \"buildable\", { value: false });\n\nvar builders = {};\nexports.builders = builders;\n\n// This object is used as prototype for any node created by a builder.\nvar nodePrototype = {};\n\n// Call this function to define a new method to be shared by all AST\n// nodes. The replaced method (if any) is returned for easy wrapping.\nexports.defineMethod = function(name, func) {\n    var old = nodePrototype[name];\n\n    // Pass undefined as func to delete nodePrototype[name].\n    if (isUndefined.check(func)) {\n        delete nodePrototype[name];\n\n    } else {\n        isFunction.assert(func);\n\n        Object.defineProperty(nodePrototype, name, {\n            enumerable: true, // For discoverability.\n            configurable: true, // For delete proto[name].\n            value: func\n        });\n    }\n\n    return old;\n};\n\n// Calling the .build method of a Def simultaneously marks the type as\n// buildable (by defining builders[getBuilderName(typeName)]) and\n// specifies the order of arguments that should be passed to the builder\n// function to create an instance of the type.\nDp.build = function(/* param1, param2, ... */) {\n    var self = this;\n\n    // Calling Def.prototype.build multiple times has the effect of merely\n    // redefining this property.\n    Object.defineProperty(self, \"buildParams\", {\n        value: slice.call(arguments),\n        writable: false,\n        enumerable: false,\n        configurable: true\n    });\n\n    assert.strictEqual(self.finalized, false);\n    isString.arrayOf().assert(self.buildParams);\n\n    if (self.buildable) {\n        // If this Def is already buildable, update self.buildParams and\n        // continue using the old builder function.\n        return self;\n    }\n\n    // Every buildable type will have its \"type\" field filled in\n    // automatically. This includes types that are not subtypes of Node,\n    // like SourceLocation, but that seems harmless (TODO?).\n    self.field(\"type\", self.typeName, function() { return self.typeName });\n\n    // Override Dp.buildable for this Def instance.\n    Object.defineProperty(self, \"buildable\", { value: true });\n\n    Object.defineProperty(builders, getBuilderName(self.typeName), {\n        enumerable: true,\n\n        value: function() {\n            var args = arguments;\n            var argc = args.length;\n            var built = Object.create(nodePrototype);\n\n            assert.ok(\n                self.finalized,\n                \"attempting to instantiate unfinalized type \" + self.typeName);\n\n            function add(param, i) {\n                if (hasOwn.call(built, param))\n                    return;\n\n                var all = self.allFields;\n                assert.ok(hasOwn.call(all, param), param);\n\n                var field = all[param];\n                var type = field.type;\n                var value;\n\n                if (isNumber.check(i) && i < argc) {\n                    value = args[i];\n                } else if (field.defaultFn) {\n                    // Expose the partially-built object to the default\n                    // function as its `this` object.\n                    value = field.defaultFn.call(built);\n                } else {\n                    var message = \"no value or default function given for field \" +\n                        JSON.stringify(param) + \" of \" + self.typeName + \"(\" +\n                            self.buildParams.map(function(name) {\n                                return all[name];\n                            }).join(\", \") + \")\";\n                    assert.ok(false, message);\n                }\n\n                if (!type.check(value)) {\n                    assert.ok(\n                        false,\n                        shallowStringify(value) +\n                            \" does not match field \" + field +\n                            \" of type \" + self.typeName\n                    );\n                }\n\n                // TODO Could attach getters and setters here to enforce\n                // dynamic type safety.\n                built[param] = value;\n            }\n\n            self.buildParams.forEach(function(param, i) {\n                add(param, i);\n            });\n\n            Object.keys(self.allFields).forEach(function(param) {\n                add(param); // Use the default value.\n            });\n\n            // Make sure that the \"type\" field was filled automatically.\n            assert.strictEqual(built.type, self.typeName);\n\n            return built;\n        }\n    });\n\n    return self; // For chaining.\n};\n\nfunction getBuilderName(typeName) {\n    return typeName.replace(/^[A-Z]+/, function(upperCasePrefix) {\n        var len = upperCasePrefix.length;\n        switch (len) {\n        case 0: return \"\";\n        // If there's only one initial capital letter, just lower-case it.\n        case 1: return upperCasePrefix.toLowerCase();\n        default:\n            // If there's more than one initial capital letter, lower-case\n            // all but the last one, so that XMLDefaultDeclaration (for\n            // example) becomes xmlDefaultDeclaration.\n            return upperCasePrefix.slice(\n                0, len - 1).toLowerCase() +\n                upperCasePrefix.charAt(len - 1);\n        }\n    });\n}\n\n// The reason fields are specified using .field(...) instead of an object\n// literal syntax is somewhat subtle: the object literal syntax would\n// support only one key and one value, but with .field(...) we can pass\n// any number of arguments to specify the field.\nDp.field = function(name, type, defaultFn, hidden) {\n    assert.strictEqual(this.finalized, false);\n    this.ownFields[name] = new Field(name, type, defaultFn, hidden);\n    return this; // For chaining.\n};\n\nvar namedTypes = {};\nexports.namedTypes = namedTypes;\n\n// Like Object.keys, but aware of what fields each AST type should have.\nfunction getFieldNames(object) {\n    var d = Def.fromValue(object);\n    if (d) {\n        return d.fieldNames.slice(0);\n    }\n\n    if (\"type\" in object) {\n        assert.ok(\n            false,\n            \"did not recognize object of type \" +\n                JSON.stringify(object.type)\n        );\n    }\n\n    return Object.keys(object);\n}\nexports.getFieldNames = getFieldNames;\n\n// Get the value of an object property, taking object.type and default\n// functions into account.\nfunction getFieldValue(object, fieldName) {\n    var d = Def.fromValue(object);\n    if (d) {\n        var field = d.allFields[fieldName];\n        if (field) {\n            return field.getValue(object);\n        }\n    }\n\n    return object[fieldName];\n}\nexports.getFieldValue = getFieldValue;\n\n// Iterate over all defined fields of an object, including those missing\n// or undefined, passing each field name and effective value (as returned\n// by getFieldValue) to the callback. If the object has no corresponding\n// Def, the callback will never be called.\nexports.eachField = function(object, callback, context) {\n    getFieldNames(object).forEach(function(name) {\n        callback.call(this, name, getFieldValue(object, name));\n    }, context);\n};\n\n// Similar to eachField, except that iteration stops as soon as the\n// callback returns a truthy value. Like Array.prototype.some, the final\n// result is either true or false to indicates whether the callback\n// returned true for any element or not.\nexports.someField = function(object, callback, context) {\n    return getFieldNames(object).some(function(name) {\n        return callback.call(this, name, getFieldValue(object, name));\n    }, context);\n};\n\n// This property will be overridden as true by individual Def instances\n// when they are finalized.\nObject.defineProperty(Dp, \"finalized\", { value: false });\n\nDp.finalize = function() {\n    // It's not an error to finalize a type more than once, but only the\n    // first call to .finalize does anything.\n    if (!this.finalized) {\n        var allFields = this.allFields;\n        var allSupertypes = this.allSupertypes;\n\n        this.baseNames.forEach(function(name) {\n            var def = defCache[name];\n            def.finalize();\n            extend(allFields, def.allFields);\n            extend(allSupertypes, def.allSupertypes);\n        });\n\n        // TODO Warn if fields are overridden with incompatible types.\n        extend(allFields, this.ownFields);\n        allSupertypes[this.typeName] = this;\n\n        this.fieldNames.length = 0;\n        for (var fieldName in allFields) {\n            if (hasOwn.call(allFields, fieldName) &&\n                !allFields[fieldName].hidden) {\n                this.fieldNames.push(fieldName);\n            }\n        }\n\n        // Types are exported only once they have been finalized.\n        Object.defineProperty(namedTypes, this.typeName, {\n            enumerable: true,\n            value: this.type\n        });\n\n        Object.defineProperty(this, \"finalized\", { value: true });\n\n        // A linearization of the inheritance hierarchy.\n        populateSupertypeList(this.typeName, this.supertypeList);\n    }\n};\n\nfunction populateSupertypeList(typeName, list) {\n    list.length = 0;\n    list.push(typeName);\n\n    var lastSeen = Object.create(null);\n\n    for (var pos = 0; pos < list.length; ++pos) {\n        typeName = list[pos];\n        var d = defCache[typeName];\n        assert.strictEqual(d.finalized, true);\n\n        // If we saw typeName earlier in the breadth-first traversal,\n        // delete the last-seen occurrence.\n        if (hasOwn.call(lastSeen, typeName)) {\n            delete list[lastSeen[typeName]];\n        }\n\n        // Record the new index of the last-seen occurrence of typeName.\n        lastSeen[typeName] = pos;\n\n        // Enqueue the base names of this type.\n        list.push.apply(list, d.baseNames);\n    }\n\n    // Compaction loop to remove array holes.\n    for (var to = 0, from = to, len = list.length; from < len; ++from) {\n        if (hasOwn.call(list, from)) {\n            list[to++] = list[from];\n        }\n    }\n\n    list.length = to;\n}\n\nfunction extend(into, from) {\n    Object.keys(from).forEach(function(name) {\n        into[name] = from[name];\n    });\n\n    return into;\n};\n\nexports.finalize = function() {\n    Object.keys(defCache).forEach(function(name) {\n        defCache[name].finalize();\n    });\n};\n","var types = require(\"./lib/types\");\n\n// This core module of AST types captures ES5 as it is parsed today by\n// git://github.com/ariya/esprima.git#master.\nrequire(\"./def/core\");\n\n// Feel free to add to or remove from this list of extension modules to\n// configure the precise type hierarchy that you need.\nrequire(\"./def/es6\");\nrequire(\"./def/es7\");\nrequire(\"./def/mozilla\");\nrequire(\"./def/e4x\");\nrequire(\"./def/fb-harmony\");\n\ntypes.finalize();\n\nexports.Type = types.Type;\nexports.builtInTypes = types.builtInTypes;\nexports.namedTypes = types.namedTypes;\nexports.builders = types.builders;\nexports.defineMethod = types.defineMethod;\nexports.getFieldNames = types.getFieldNames;\nexports.getFieldValue = types.getFieldValue;\nexports.eachField = types.eachField;\nexports.someField = types.someField;\nexports.getSupertypeNames = types.getSupertypeNames;\nexports.astNodesAreEquivalent = require(\"./lib/equiv\");\nexports.finalize = types.finalize;\nexports.NodePath = require(\"./lib/node-path\");\nexports.PathVisitor = require(\"./lib/path-visitor\");\nexports.visit = exports.PathVisitor.visit;\n","/**\n * Core.js 0.3.3\n * https://github.com/zloirock/core-js\n * License: http://rock.mit-license.org\n * © 2014 Denis Pushkarev\n */\n!function(returnThis, framework, undefined){\n'use strict';\n\n/******************************************************************************\n * Module : common                                                            *\n ******************************************************************************/\n\nvar global          = returnThis()\r\n  // Shortcuts for [[Class]] & property names\r\n  , OBJECT          = 'Object'\r\n  , FUNCTION        = 'Function'\r\n  , ARRAY           = 'Array'\r\n  , STRING          = 'String'\r\n  , NUMBER          = 'Number'\r\n  , REGEXP          = 'RegExp'\r\n  , DATE            = 'Date'\r\n  , MAP             = 'Map'\r\n  , SET             = 'Set'\r\n  , WEAKMAP         = 'WeakMap'\r\n  , WEAKSET         = 'WeakSet'\r\n  , SYMBOL          = 'Symbol'\r\n  , PROMISE         = 'Promise'\r\n  , MATH            = 'Math'\r\n  , ARGUMENTS       = 'Arguments'\r\n  , PROTOTYPE       = 'prototype'\r\n  , CONSTRUCTOR     = 'constructor'\r\n  , TO_STRING       = 'toString'\r\n  , TO_STRING_TAG   = TO_STRING + 'Tag'\r\n  , TO_LOCALE       = 'toLocaleString'\r\n  , HAS_OWN         = 'hasOwnProperty'\r\n  , FOR_EACH        = 'forEach'\r\n  , ITERATOR        = 'iterator'\r\n  , FF_ITERATOR     = '@@' + ITERATOR\r\n  , PROCESS         = 'process'\r\n  , CREATE_ELEMENT  = 'createElement'\r\n  // Aliases global objects and prototypes\r\n  , Function        = global[FUNCTION]\r\n  , Object          = global[OBJECT]\r\n  , Array           = global[ARRAY]\r\n  , String          = global[STRING]\r\n  , Number          = global[NUMBER]\r\n  , RegExp          = global[REGEXP]\r\n  , Date            = global[DATE]\r\n  , Map             = global[MAP]\r\n  , Set             = global[SET]\r\n  , WeakMap         = global[WEAKMAP]\r\n  , WeakSet         = global[WEAKSET]\r\n  , Symbol          = global[SYMBOL]\r\n  , Math            = global[MATH]\r\n  , TypeError       = global.TypeError\r\n  , setTimeout      = global.setTimeout\r\n  , setImmediate    = global.setImmediate\r\n  , clearImmediate  = global.clearImmediate\r\n  , process         = global[PROCESS]\r\n  , nextTick        = process && process.nextTick\r\n  , document        = global.document\r\n  , html            = document && document.documentElement\r\n  , navigator       = global.navigator\r\n  , define          = global.define\r\n  , ArrayProto      = Array[PROTOTYPE]\r\n  , ObjectProto     = Object[PROTOTYPE]\r\n  , FunctionProto   = Function[PROTOTYPE]\r\n  , Infinity        = 1 / 0\r\n  , DOT             = '.';\r\n\r\n// http://jsperf.com/core-js-isobject\r\nfunction isObject(it){\r\n  return it != null && (typeof it == 'object' || typeof it == 'function');\r\n}\r\nfunction isFunction(it){\r\n  return typeof it == 'function';\r\n}\r\n// Native function?\r\nvar isNative = ctx(/./.test, /\\[native code\\]\\s*\\}\\s*$/, 1);\r\n\r\n// Object internal [[Class]] or toStringTag\r\n// http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring\r\nvar buildIn = {\r\n  Undefined: 1, Null: 1, Array: 1, String: 1, Arguments: 1,\r\n  Function: 1, Error: 1, Boolean: 1, Number: 1, Date: 1, RegExp:1 \r\n} , toString = ObjectProto[TO_STRING];\r\nfunction setToStringTag(it, tag, stat){\r\n  if(it)has(it = stat ? it : it[PROTOTYPE], SYMBOL_TAG) || hidden(it, SYMBOL_TAG, tag);\r\n}\r\nfunction cof(it){\r\n  return it == undefined ? it === undefined\r\n    ? 'Undefined' : 'Null' : toString.call(it).slice(8, -1);\r\n}\r\nfunction classof(it){\r\n  var klass = cof(it), tag;\r\n  return klass == OBJECT && (tag = it[SYMBOL_TAG]) ? has(buildIn, tag) ? '~' + tag : tag : klass;\r\n}\r\n\r\n// Function\r\nvar call = FunctionProto.call\r\n  , REFERENCE_GET;\r\n// Partial apply\r\nfunction part(/* ...args */){\r\n  var length = arguments.length\r\n    , args   = Array(length)\r\n    , i      = 0\r\n    , _      = path._\r\n    , holder = false;\r\n  while(length > i)if((args[i] = arguments[i++]) === _)holder = true;\r\n  return partial(this, args, length, holder, _, false);\r\n}\r\n// Internal partial application & context binding\r\nfunction partial(fn, argsPart, lengthPart, holder, _, bind, context){\r\n  assertFunction(fn);\r\n  return function(/* ...args */){\r\n    var that   = bind ? context : this\r\n      , length = arguments.length\r\n      , i = 0, j = 0, args;\r\n    if(!holder && !length)return invoke(fn, argsPart, that);\r\n    args = argsPart.slice();\r\n    if(holder)for(;lengthPart > i; i++)if(args[i] === _)args[i] = arguments[j++];\r\n    while(length > j)args.push(arguments[j++]);\r\n    return invoke(fn, args, that);\r\n  }\r\n}\r\n// Optional / simple context binding\r\nfunction ctx(fn, that, length){\r\n  assertFunction(fn);\r\n  if(~length && that === undefined)return fn;\r\n  switch(length){\r\n    case 1: return function(a){\r\n      return fn.call(that, a);\r\n    }\r\n    case 2: return function(a, b){\r\n      return fn.call(that, a, b);\r\n    }\r\n    case 3: return function(a, b, c){\r\n      return fn.call(that, a, b, c);\r\n    }\r\n  } return function(/* ...args */){\r\n      return fn.apply(that, arguments);\r\n  }\r\n}\r\n// Fast apply\r\n// http://jsperf.lnkit.com/fast-apply/5\r\nfunction invoke(fn, args, that){\r\n  var un = that === undefined;\r\n  switch(args.length | 0){\r\n    case 0: return un ? fn()\r\n                      : fn.call(that);\r\n    case 1: return un ? fn(args[0])\r\n                      : fn.call(that, args[0]);\r\n    case 2: return un ? fn(args[0], args[1])\r\n                      : fn.call(that, args[0], args[1]);\r\n    case 3: return un ? fn(args[0], args[1], args[2])\r\n                      : fn.call(that, args[0], args[1], args[2]);\r\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\r\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\r\n    case 5: return un ? fn(args[0], args[1], args[2], args[3], args[4])\r\n                      : fn.call(that, args[0], args[1], args[2], args[3], args[4]);\r\n  } return              fn.apply(that, args);\r\n}\r\n\r\n// Object:\r\nvar create           = Object.create\r\n  , getPrototypeOf   = Object.getPrototypeOf\r\n  , defineProperty   = Object.defineProperty\r\n  , defineProperties = Object.defineProperties\r\n  , getOwnDescriptor = Object.getOwnPropertyDescriptor\r\n  , getKeys          = Object.keys\r\n  , getNames         = Object.getOwnPropertyNames\r\n  , getSymbols       = Object.getOwnPropertySymbols\r\n  , has              = ctx(call, ObjectProto[HAS_OWN], 2)\r\n  // Dummy, fix for not array-like ES3 string in es5 module\r\n  , ES5Object        = Object;\r\nfunction get(object, key){\r\n  if(has(object, key))return object[key];\r\n}\r\nfunction ownKeys(it){\r\n  return getSymbols ? getNames(it).concat(getSymbols(it)) : getNames(it);\r\n}\r\n// 19.1.2.1 Object.assign(target, source, ...)\r\nvar assign = Object.assign || function(target, source){\r\n  var T = Object(assertDefined(target))\r\n    , l = arguments.length\r\n    , i = 1;\r\n  while(l > i){\r\n    var S      = ES5Object(arguments[i++])\r\n      , keys   = getKeys(S)\r\n      , length = keys.length\r\n      , j      = 0\r\n      , key;\r\n    while(length > j)T[key = keys[j++]] = S[key];\r\n  }\r\n  return T;\r\n}\r\nfunction keyOf(object, el){\r\n  var O      = ES5Object(object)\r\n    , keys   = getKeys(O)\r\n    , length = keys.length\r\n    , index  = 0\r\n    , key;\r\n  while(length > index)if(O[key = keys[index++]] === el)return key;\r\n}\r\n\r\n// Array\r\n// array('str1,str2,str3') => ['str1', 'str2', 'str3']\r\nfunction array(it){\r\n  return String(it).split(',');\r\n}\r\nvar push    = ArrayProto.push\r\n  , unshift = ArrayProto.unshift\r\n  , slice   = ArrayProto.slice\r\n  , splice  = ArrayProto.splice\r\n  , indexOf = ArrayProto.indexOf\r\n  , forEach = ArrayProto[FOR_EACH];\r\n/*\r\n * 0 -> forEach\r\n * 1 -> map\r\n * 2 -> filter\r\n * 3 -> some\r\n * 4 -> every\r\n * 5 -> find\r\n * 6 -> findIndex\r\n */\r\nfunction createArrayMethod(type){\r\n  var isMap       = type == 1\r\n    , isFilter    = type == 2\r\n    , isSome      = type == 3\r\n    , isEvery     = type == 4\r\n    , isFindIndex = type == 6\r\n    , noholes     = type == 5 || isFindIndex;\r\n  return function(callbackfn, that /* = undefined */){\r\n    var O      = Object(assertDefined(this))\r\n      , self   = ES5Object(O)\r\n      , f      = ctx(callbackfn, that, 3)\r\n      , length = toLength(self.length)\r\n      , index  = 0\r\n      , result = isMap ? Array(length) : isFilter ? [] : undefined\r\n      , val, res;\r\n    for(;length > index; index++)if(noholes || index in self){\r\n      val = self[index];\r\n      res = f(val, index, O);\r\n      if(type){\r\n        if(isMap)result[index] = res;             // map\r\n        else if(res)switch(type){\r\n          case 3: return true;                    // some\r\n          case 5: return val;                     // find\r\n          case 6: return index;                   // findIndex\r\n          case 2: result.push(val);               // filter\r\n        } else if(isEvery)return false;           // every\r\n      }\r\n    }\r\n    return isFindIndex ? -1 : isSome || isEvery ? isEvery : result;\r\n  }\r\n}\r\nfunction createArrayContains(isContains){\r\n  return function(el, fromIndex /* = 0 */){\r\n    var O      = ES5Object(assertDefined(this))\r\n      , length = toLength(O.length)\r\n      , index  = toIndex(fromIndex, length);\r\n    if(isContains && el != el){\r\n      for(;length > index; index++)if(sameNaN(O[index]))return isContains || index;\r\n    } else for(;length > index; index++)if(isContains || index in O){\r\n      if(O[index] === el)return isContains || index;\r\n    } return !isContains && -1;\r\n  }\r\n}\r\n// Simple reduce to object\r\nfunction turn(mapfn, target /* = [] */){\r\n  assertFunction(mapfn);\r\n  var memo   = target == undefined ? [] : Object(target)\r\n    , O      = ES5Object(this)\r\n    , length = toLength(O.length)\r\n    , index  = 0;\r\n  for(;length > index; index++){\r\n    if(mapfn(memo, O[index], index, this) === false)break;\r\n  }\r\n  return memo;\r\n}\r\nfunction generic(A, B){\r\n  // strange IE quirks mode bug -> use typeof vs isFunction\r\n  return typeof A == 'function' ? A : B;\r\n}\r\n\r\n// Math\r\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff // pow(2, 53) - 1 == 9007199254740991\r\n  , ceil   = Math.ceil\r\n  , floor  = Math.floor\r\n  , max    = Math.max\r\n  , min    = Math.min\r\n  , random = Math.random\r\n  , trunc  = Math.trunc || function(it){\r\n      return (it > 0 ? floor : ceil)(it);\r\n    }\r\n// 20.1.2.4 Number.isNaN(number)\r\nfunction sameNaN(number){\r\n  return number != number;\r\n}\r\n// 7.1.4 ToInteger\r\nfunction toInteger(it){\r\n  return isNaN(it) ? 0 : trunc(it);\r\n}\r\n// 7.1.15 ToLength\r\nfunction toLength(it){\r\n  return it > 0 ? min(toInteger(it), MAX_SAFE_INTEGER) : 0;\r\n}\r\nfunction toIndex(index, length){\r\n  var index = toInteger(index);\r\n  return index < 0 ? max(index + length, 0) : min(index, length);\r\n}\r\n\r\nfunction createReplacer(regExp, replace, isStatic){\r\n  var replacer = isObject(replace) ? function(part){\r\n    return replace[part];\r\n  } : replace;\r\n  return function(it){\r\n    return String(isStatic ? it : this).replace(regExp, replacer);\r\n  }\r\n}\r\nfunction createPointAt(toString){\r\n  return function(pos){\r\n    var s = String(assertDefined(this))\r\n      , i = toInteger(pos)\r\n      , l = s.length\r\n      , a, b;\r\n    if(i < 0 || i >= l)return toString ? '' : undefined;\r\n    a = s.charCodeAt(i);\r\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\r\n      ? toString ? s.charAt(i) : a\r\n      : toString ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\r\n  }\r\n}\r\n\r\n// Assertion & errors\r\nvar REDUCE_ERROR = 'Reduce of empty object with no initial value';\r\nfunction assert(condition, msg1, msg2){\r\n  if(!condition)throw TypeError(msg2 ? msg1 + msg2 : msg1);\r\n}\r\nfunction assertDefined(it){\r\n  if(it == undefined)throw TypeError('Function called on null or undefined');\r\n  return it;\r\n}\r\nfunction assertFunction(it){\r\n  assert(isFunction(it), it, ' is not a function!');\r\n  return it;\r\n}\r\nfunction assertObject(it){\r\n  assert(isObject(it), it, ' is not an object!');\r\n  return it;\r\n}\r\nfunction assertInstance(it, Constructor, name){\r\n  assert(it instanceof Constructor, name, \": use the 'new' operator!\");\r\n}\r\n\r\n// Property descriptors & Symbol\r\nfunction descriptor(bitmap, value){\r\n  return {\r\n    enumerable  : !(bitmap & 1),\r\n    configurable: !(bitmap & 2),\r\n    writable    : !(bitmap & 4),\r\n    value       : value\r\n  }\r\n}\r\nfunction simpleSet(object, key, value){\r\n  object[key] = value;\r\n  return object;\r\n}\r\nfunction createDefiner(bitmap){\r\n  return DESC ? function(object, key, value){\r\n    return defineProperty(object, key, descriptor(bitmap, value));\r\n  } : simpleSet;\r\n}\r\nfunction uid(key){\r\n  return SYMBOL + '(' + key + ')_' + (++sid + random())[TO_STRING](36);\r\n}\r\nfunction getWellKnownSymbol(name, setter){\r\n  return (Symbol && Symbol[name]) || (setter ? Symbol : safeSymbol)(SYMBOL + DOT + name);\r\n}\r\n// The engine works fine with descriptors? Thank's IE8 for his funny defineProperty.\r\nvar DESC   = !!function(){try{return defineProperty({}, 0, ObjectProto)}catch(e){}}()\r\n  , sid    = 0\r\n  , hidden = createDefiner(1)\r\n  , set    = Symbol ? simpleSet : hidden\r\n  , safeSymbol = Symbol || uid;\r\nfunction assignHidden(target, src){\r\n  for(var key in src)hidden(target, key, src[key]);\r\n  return target;\r\n}\r\n\r\n// Iterators\r\nvar SYMBOL_ITERATOR = getWellKnownSymbol(ITERATOR)\r\n  , SYMBOL_TAG      = getWellKnownSymbol(TO_STRING_TAG)\r\n  , SUPPORT_FF_ITER = FF_ITERATOR in ArrayProto\r\n  , ITER  = safeSymbol('iter')\r\n  , KEY   = 1\r\n  , VALUE = 2\r\n  , Iterators = {}\r\n  , IteratorPrototype = {}\r\n  , NATIVE_ITERATORS = SYMBOL_ITERATOR in ArrayProto\r\n    // Safari define byggy iterators w/o `next`\r\n  , BUGGY_ITERATORS = 'keys' in ArrayProto && !('next' in [].keys());\r\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\r\nsetIterator(IteratorPrototype, returnThis);\r\nfunction setIterator(O, value){\r\n  hidden(O, SYMBOL_ITERATOR, value);\r\n  // Add iterator for FF iterator protocol\r\n  SUPPORT_FF_ITER && hidden(O, FF_ITERATOR, value);\r\n}\r\nfunction createIterator(Constructor, NAME, next, proto){\r\n  Constructor[PROTOTYPE] = create(proto || IteratorPrototype, {next: descriptor(1, next)});\r\n  setToStringTag(Constructor, NAME + ' Iterator');\r\n}\r\nfunction defineIterator(Constructor, NAME, value, DEFAULT){\r\n  var proto = Constructor[PROTOTYPE]\r\n    , iter  = get(proto, SYMBOL_ITERATOR) || get(proto, FF_ITERATOR) || (DEFAULT && get(proto, DEFAULT)) || value;\r\n  if(framework){\r\n    // Define iterator\r\n    setIterator(proto, iter);\r\n    if(iter !== value){\r\n      var iterProto = getPrototypeOf(iter.call(new Constructor));\r\n      // Set @@toStringTag to native iterators\r\n      setToStringTag(iterProto, NAME + ' Iterator', true);\r\n      // FF fix\r\n      has(proto, FF_ITERATOR) && setIterator(iterProto, returnThis);\r\n    }\r\n  }\r\n  // Plug for library\r\n  Iterators[NAME] = iter;\r\n  // FF & v8 fix\r\n  Iterators[NAME + ' Iterator'] = returnThis;\r\n}\r\nfunction defineStdIterators(Base, NAME, Constructor, next, DEFAULT){\r\n  function createIter(kind){\r\n    return function(){\r\n      return new Constructor(this, kind);\r\n    }\r\n  }\r\n  createIterator(Constructor, NAME, next);\r\n  defineIterator(Base, NAME, createIter(DEFAULT), DEFAULT == VALUE ? 'values' : 'entries');\r\n  DEFAULT && $define(PROTO + FORCED * BUGGY_ITERATORS, NAME, {\r\n    entries: createIter(KEY+VALUE),\r\n    keys:    createIter(KEY),\r\n    values:  createIter(VALUE)\r\n  });\r\n}\r\nfunction iterResult(done, value){\r\n  return {value: value, done: !!done};\r\n}\r\nfunction isIterable(it){\r\n  var O = Object(it);\r\n  return SYMBOL_ITERATOR in O || has(Iterators, classof(O));\r\n}\r\nfunction getIterator(it){\r\n  return assertObject((it[SYMBOL_ITERATOR] || Iterators[classof(it)]).call(it));\r\n}\r\nfunction stepCall(fn, value, entries){\r\n  return entries ? invoke(fn, value) : fn(value);\r\n}\r\nfunction forOf(iterable, entries, fn, that){\r\n  var iterator = getIterator(iterable)\r\n    , f        = ctx(fn, that, entries ? 2 : 1)\r\n    , step;\r\n  while(!(step = iterator.next()).done)if(stepCall(f, step.value, entries) === false)return;\r\n}\r\n\r\n// core\r\nvar NODE = cof(process) == PROCESS\r\n  , core = {}\r\n  , path = framework ? global : core\r\n  , old  = global.core\r\n  // type bitmap\r\n  , FORCED = 1\r\n  , GLOBAL = 2\r\n  , STATIC = 4\r\n  , PROTO  = 8\r\n  , BIND   = 16\r\n  , WRAP   = 32;\r\nfunction $define(type, name, source){\r\n  var key, own, out, exp\r\n    , isGlobal = type & GLOBAL\r\n    , target   = isGlobal ? global : (type & STATIC)\r\n        ? global[name] : (global[name] || ObjectProto)[PROTOTYPE]\r\n    , exports  = isGlobal ? core : core[name] || (core[name] = {});\r\n  if(isGlobal)source = name;\r\n  for(key in source){\r\n    // there is a similar native\r\n    own = !(type & FORCED) && target && key in target\r\n      && (!isFunction(target[key]) || isNative(target[key]));\r\n    // export native or passed\r\n    out = (own ? target : source)[key];\r\n    // bind timers to global for call from export context\r\n    if(type & BIND && own)exp = ctx(out, global);\r\n    // wrap global constructors for prevent change them in library\r\n    else if(type & WRAP && !framework && target[key] == out){\r\n      exp = function(param){\r\n        return this instanceof out ? new out(param) : out(param);\r\n      }\r\n      exp[PROTOTYPE] = out[PROTOTYPE];\r\n    } else exp = type & PROTO && isFunction(out) ? ctx(call, out) : out;\r\n    // export\r\n    if(exports[key] != out)hidden(exports, key, exp);\r\n    // extend global\r\n    if(framework && target && !own){\r\n      if(isGlobal)target[key] = out;\r\n      else delete target[key] && hidden(target, key, out);\r\n    }\r\n  }\r\n}\r\n// CommonJS export\r\nif(NODE)module.exports = core;\r\n// RequireJS export\r\nif(isFunction(define) && define.amd)define(function(){return core});\r\n// Export to global object\r\nif(!NODE || framework){\r\n  core.noConflict = function(){\r\n    global.core = old;\r\n    return core;\r\n  }\r\n  global.core = core;\r\n}\n\n/******************************************************************************\n * Module : global                                                            *\n ******************************************************************************/\n\n$define(GLOBAL + FORCED, {global: global});\n\n/******************************************************************************\n * Module : es6_symbol                                                        *\n ******************************************************************************/\n\n// ECMAScript 6 symbols shim\r\n!function(TAG, SymbolRegistry, setter){\r\n  // 19.4.1.1 Symbol([description])\r\n  if(!isNative(Symbol)){\r\n    Symbol = function(description){\r\n      assert(!(this instanceof Symbol), SYMBOL + ' is not a ' + CONSTRUCTOR);\r\n      var tag = uid(description);\r\n      setter && defineProperty(ObjectProto, tag, {\r\n        configurable: true,\r\n        set: function(value){\r\n          hidden(this, tag, value);\r\n        }\r\n      });\r\n      return set(create(Symbol[PROTOTYPE]), TAG, tag);\r\n    }\r\n    hidden(Symbol[PROTOTYPE], TO_STRING, function(){\r\n      return this[TAG];\r\n    });\r\n  }\r\n  $define(GLOBAL + WRAP, {Symbol: Symbol});\r\n  \r\n  var symbolStatics = {\r\n    // 19.4.2.1 Symbol.for(key)\r\n    'for': function(key){\r\n      return has(SymbolRegistry, key += '')\r\n        ? SymbolRegistry[key]\r\n        : SymbolRegistry[key] = Symbol(key);\r\n    },\r\n    // 19.4.2.4 Symbol.iterator\r\n    iterator: SYMBOL_ITERATOR,\r\n    // 19.4.2.5 Symbol.keyFor(sym)\r\n    keyFor: part.call(keyOf, SymbolRegistry),\r\n    // 19.4.2.13 Symbol.toStringTag\r\n    toStringTag: SYMBOL_TAG = getWellKnownSymbol(TO_STRING_TAG, true),\r\n    pure: safeSymbol,\r\n    set: set,\r\n    useSetter: function(){setter = true},\r\n    useSimple: function(){setter = false}\r\n  };\r\n  // 19.4.2.2 Symbol.hasInstance\r\n  // 19.4.2.3 Symbol.isConcatSpreadable\r\n  // 19.4.2.6 Symbol.match\r\n  // 19.4.2.8 Symbol.replace\r\n  // 19.4.2.9 Symbol.search\r\n  // 19.4.2.10 Symbol.species\r\n  // 19.4.2.11 Symbol.split\r\n  // 19.4.2.12 Symbol.toPrimitive\r\n  // 19.4.2.14 Symbol.unscopables\r\n  forEach.call(array('hasInstance,isConcatSpreadable,match,replace,search,' +\r\n    'species,split,toPrimitive,unscopables'), function(it){\r\n      symbolStatics[it] = getWellKnownSymbol(it);\r\n    }\r\n  );\r\n  $define(STATIC, SYMBOL, symbolStatics);\r\n  \r\n  setToStringTag(Symbol, SYMBOL);\r\n  \r\n  // 26.1.11 Reflect.ownKeys(target)\r\n  $define(GLOBAL, {Reflect: {ownKeys: ownKeys}});\r\n}(safeSymbol('tag'), {}, true);\n\n/******************************************************************************\n * Module : es6                                                               *\n ******************************************************************************/\n\n// ECMAScript 6 shim\r\n!function(isFinite, tmp){\r\n  var RangeError = global.RangeError\r\n      // 20.1.2.3 Number.isInteger(number)\r\n    , isInteger = Number.isInteger || function(it){\r\n        return !isObject(it) && isFinite(it) && floor(it) === it;\r\n      }\r\n      // 20.2.2.28 Math.sign(x)\r\n    , sign = Math.sign || function sign(it){\r\n        return (it = +it) == 0 || it != it ? it : it < 0 ? -1 : 1;\r\n      }\r\n    , pow  = Math.pow\r\n    , abs  = Math.abs\r\n    , exp  = Math.exp\r\n    , log  = Math.log\r\n    , sqrt = Math.sqrt\r\n    , fcc  = String.fromCharCode\r\n    , at   = createPointAt(true);\r\n  \r\n  var objectStatic = {\r\n    // 19.1.3.1 Object.assign(target, source)\r\n    assign: assign,\r\n    // 19.1.3.10 Object.is(value1, value2)\r\n    is: function(x, y){\r\n      return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\r\n    }\r\n  };\r\n  // 19.1.3.19 Object.setPrototypeOf(O, proto)\r\n  // Works with __proto__ only. Old v8 can't works with null proto objects.\r\n  '__proto__' in ObjectProto && function(buggy, set){\r\n    try {\r\n      set = ctx(call, getOwnDescriptor(ObjectProto, '__proto__').set, 2);\r\n      set({}, ArrayProto);\r\n    } catch(e){ buggy = true }\r\n    objectStatic.setPrototypeOf = function(O, proto){\r\n      assertObject(O);\r\n      assert(proto === null || isObject(proto), proto, \": can't set as prototype!\");\r\n      if(buggy)O.__proto__ = proto;\r\n      else set(O, proto);\r\n      return O;\r\n    }\r\n  }();\r\n  $define(STATIC, OBJECT, objectStatic);\r\n  \r\n  // 20.2.2.5 Math.asinh(x)\r\n  function asinh(x){\r\n    return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : log(x + sqrt(x * x + 1));\r\n  }\r\n  \r\n  $define(STATIC, NUMBER, {\r\n    // 20.1.2.1 Number.EPSILON\r\n    EPSILON: pow(2, -52),\r\n    // 20.1.2.2 Number.isFinite(number)\r\n    isFinite: function(it){\r\n      return typeof it == 'number' && isFinite(it);\r\n    },\r\n    // 20.1.2.3 Number.isInteger(number)\r\n    isInteger: isInteger,\r\n    // 20.1.2.4 Number.isNaN(number)\r\n    isNaN: sameNaN,\r\n    // 20.1.2.5 Number.isSafeInteger(number)\r\n    isSafeInteger: function(number){\r\n      return isInteger(number) && abs(number) <= MAX_SAFE_INTEGER;\r\n    },\r\n    // 20.1.2.6 Number.MAX_SAFE_INTEGER\r\n    MAX_SAFE_INTEGER: MAX_SAFE_INTEGER,\r\n    // 20.1.2.10 Number.MIN_SAFE_INTEGER\r\n    MIN_SAFE_INTEGER: -MAX_SAFE_INTEGER,\r\n    // 20.1.2.12 Number.parseFloat(string)\r\n    parseFloat: parseFloat,\r\n    // 20.1.2.13 Number.parseInt(string, radix)\r\n    parseInt: parseInt\r\n  });\r\n  \r\n  $define(STATIC, MATH, {\r\n    // 20.2.2.3 Math.acosh(x)\r\n    acosh: function(x){\r\n      return x < 1 ? NaN : log(x + sqrt(x * x - 1));\r\n    },\r\n    // 20.2.2.5 Math.asinh(x)\r\n    asinh: asinh,\r\n    // 20.2.2.7 Math.atanh(x)\r\n    atanh: function(x){\r\n      return x == 0 ? +x : log((1 + +x) / (1 - x)) / 2;\r\n    },\r\n    // 20.2.2.9 Math.cbrt(x)\r\n    cbrt: function(x){\r\n      return sign(x) * pow(abs(x), 1 / 3);\r\n    },\r\n    // 20.2.2.11 Math.clz32 (x)\r\n    clz32: function(x){\r\n      return (x >>>= 0) ? 32 - x[TO_STRING](2).length : 32;\r\n    },\r\n    // 20.2.2.12 Math.cosh(x)\r\n    cosh: function(x){\r\n      return (exp(x) + exp(-x)) / 2;\r\n    },\r\n    // 20.2.2.14 Math.expm1(x)\r\n    expm1: function(x){\r\n      return x == 0 ? +x : x > -1e-6 && x < 1e-6 ? +x + x * x / 2 : exp(x) - 1;\r\n    },\r\n    // 20.2.2.16 Math.fround(x)\r\n    // TODO: fallback for IE9-\r\n    fround: function(x){\r\n      return new Float32Array([x])[0];\r\n    },\r\n    // 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\r\n    // TODO: work with very large & small numbers\r\n    hypot: function(value1, value2){\r\n      var sum    = 0\r\n        , length = arguments.length\r\n        , value;\r\n      while(length--){\r\n        value = +arguments[length];\r\n        if(value == Infinity || value == -Infinity)return Infinity;\r\n        sum += value * value;\r\n      }\r\n      return sqrt(sum);\r\n    },\r\n    // 20.2.2.18 Math.imul(x, y)\r\n    imul: function(x, y){\r\n      var UInt16 = 0xffff\r\n        , xl = UInt16 & x\r\n        , yl = UInt16 & y;\r\n      return 0 | xl * yl + ((UInt16 & x >>> 16) * yl + xl * (UInt16 & y >>> 16) << 16 >>> 0);\r\n    },\r\n    // 20.2.2.20 Math.log1p(x)\r\n    log1p: function(x){\r\n      return x > -1e-8 && x < 1e-8 ? x - x * x / 2 : log(1 + +x);\r\n    },\r\n    // 20.2.2.21 Math.log10(x)\r\n    log10: function(x){\r\n      return log(x) / Math.LN10;\r\n    },\r\n    // 20.2.2.22 Math.log2(x)\r\n    log2: function(x){\r\n      return log(x) / Math.LN2;\r\n    },\r\n    // 20.2.2.28 Math.sign(x)\r\n    sign: sign,\r\n    // 20.2.2.30 Math.sinh(x)\r\n    sinh: function(x){\r\n      return x == 0 ? +x : (exp(x) - exp(-x)) / 2;\r\n    },\r\n    // 20.2.2.33 Math.tanh(x)\r\n    tanh: function(x){\r\n      return isFinite(x) ? x == 0 ? +x : (exp(x) - exp(-x)) / (exp(x) + exp(-x)) : sign(x);\r\n    },\r\n    // 20.2.2.34 Math.trunc(x)\r\n    trunc: trunc\r\n  });\r\n  // 20.2.1.9 Math[@@toStringTag]\r\n  setToStringTag(Math, MATH, true);\r\n  \r\n  function assertNotRegExp(it){\r\n    if(isObject(it) && it instanceof RegExp)throw TypeError();\r\n  }\r\n  $define(STATIC, STRING, {\r\n    // 21.1.2.2 String.fromCodePoint(...codePoints)\r\n    fromCodePoint: function(){\r\n      var res = []\r\n        , len = arguments.length\r\n        , i   = 0\r\n        , code\r\n      while(len > i){\r\n        code = +arguments[i++];\r\n        if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');\r\n        res.push(code < 0x10000\r\n          ? fcc(code)\r\n          : fcc(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\r\n        );\r\n      } return res.join('');\r\n    },\r\n    // 21.1.2.4 String.raw(callSite, ...substitutions)\r\n    raw: function(callSite){\r\n      var raw = ES5Object(assertDefined(callSite.raw))\r\n        , len = toLength(raw.length)\r\n        , sln = arguments.length\r\n        , res = []\r\n        , i   = 0;\r\n      while(len > i){\r\n        res.push(String(raw[i++]));\r\n        if(i < sln)res.push(String(arguments[i]));\r\n      } return res.join('');\r\n    }\r\n  });\r\n  $define(PROTO, STRING, {\r\n    // 21.1.3.3 String.prototype.codePointAt(pos)\r\n    codePointAt: createPointAt(false),\r\n    // 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\r\n    endsWith: function(searchString, endPosition /* = @length */){\r\n      assertNotRegExp(searchString);\r\n      var len = this.length\r\n        , end = endPosition === undefined ? len : min(toLength(endPosition), len);\r\n      searchString += '';\r\n      return String(this).slice(end - searchString.length, end) === searchString;\r\n    },\r\n    // 21.1.3.7 String.prototype.includes(searchString, position = 0)\r\n    includes: function(searchString, position /* = 0 */){\r\n      return !!~String(assertDefined(this)).indexOf(searchString, position);\r\n    },\r\n    // 21.1.3.13 String.prototype.repeat(count)\r\n    repeat: function(count){\r\n      var str = String(assertDefined(this))\r\n        , res = ''\r\n        , n   = toInteger(count);\r\n      if(0 > n || n == Infinity)throw RangeError(\"Count can't be negative\");\r\n      for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;\r\n      return res;\r\n    },\r\n    // 21.1.3.18 String.prototype.startsWith(searchString [, position ])\r\n    startsWith: function(searchString, position /* = 0 */){\r\n      assertNotRegExp(searchString);\r\n      var index = toLength(min(position, this.length));\r\n      searchString += '';\r\n      return String(this).slice(index, index + searchString.length) === searchString;\r\n    }\r\n  });\r\n  // 21.1.3.27 String.prototype[@@iterator]()\r\n  defineStdIterators(String, STRING, function(iterated){\r\n    set(this, ITER, {o: String(iterated), i: 0});\r\n  // 21.1.5.2.1 %StringIteratorPrototype%.next()\r\n  }, function(){\r\n    var iter  = this[ITER]\r\n      , O     = iter.o\r\n      , index = iter.i\r\n      , point;\r\n    if(index >= O.length)return iterResult(1);\r\n    point = at.call(O, index);\r\n    iter.i += point.length;\r\n    return iterResult(0, point);\r\n  });\r\n  \r\n  $define(STATIC, ARRAY, {\r\n    // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\r\n    from: function(arrayLike, mapfn /* -> it */, that /* = undefind */){\r\n      var O       = Object(assertDefined(arrayLike))\r\n        , result  = new (generic(this, Array))\r\n        , mapping = mapfn !== undefined\r\n        , f       = mapping ? ctx(mapfn, that, 2) : undefined\r\n        , index   = 0\r\n        , length;\r\n      if(isIterable(O))for(var iter = getIterator(O), step; !(step = iter.next()).done; index++){\r\n        result[index] = mapping ? f(step.value, index) : step.value;\r\n      } else for(length = toLength(O.length); length > index; index++){\r\n        result[index] = mapping ? f(O[index], index) : O[index];\r\n      }\r\n      result.length = index;\r\n      return result;\r\n    },\r\n    // 22.1.2.3 Array.of( ...items)\r\n    of: function(/* ...args */){\r\n      var index  = 0\r\n        , length = arguments.length\r\n        , result = new (generic(this, Array))(length);\r\n      while(length > index)result[index] = arguments[index++];\r\n      result.length = length;\r\n      return result;\r\n    }\r\n  });\r\n  $define(PROTO, ARRAY, {\r\n    // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\r\n    copyWithin: function(target /* = 0 */, start /* = 0 */, end /* = @length */){\r\n      var O     = Object(assertDefined(this))\r\n        , len   = toLength(O.length)\r\n        , to    = toIndex(target, len)\r\n        , from  = toIndex(start, len)\r\n        , fin   = end === undefined ? len : toIndex(end, len)\r\n        , count = min(fin - from, len - to)\r\n        , inc   = 1;\r\n      if(from < to && to < from + count){\r\n        inc  = -1;\r\n        from = from + count - 1;\r\n        to   = to + count - 1;\r\n      }\r\n      while(count-- > 0){\r\n        if(from in O)O[to] = O[from];\r\n        else delete O[to];\r\n        to += inc;\r\n        from += inc;\r\n      } return O;\r\n    },\r\n    // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\r\n    fill: function(value, start /* = 0 */, end /* = @length */){\r\n      var O      = Object(assertDefined(this))\r\n        , length = toLength(O.length)\r\n        , index  = toIndex(start, length)\r\n        , endPos = end === undefined ? length : toIndex(end, length);\r\n      while(endPos > index)O[index++] = value;\r\n      return O;\r\n    },\r\n    // 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\r\n    find: createArrayMethod(5),\r\n    // 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\r\n    findIndex: createArrayMethod(6)\r\n  });\r\n  // 22.1.3.4 Array.prototype.entries()\r\n  // 22.1.3.13 Array.prototype.keys()\r\n  // 22.1.3.29 Array.prototype.values()\r\n  // 22.1.3.30 Array.prototype[@@iterator]()\r\n  defineStdIterators(Array, ARRAY, function(iterated, kind){\r\n    set(this, ITER, {o: ES5Object(iterated), i: 0, k: kind});\r\n  // 22.1.5.2.1 %ArrayIteratorPrototype%.next()\r\n  }, function(){\r\n    var iter  = this[ITER]\r\n      , O     = iter.o\r\n      , kind  = iter.k\r\n      , index = iter.i++;\r\n    if(!O || index >= O.length)return iter.o = undefined, iterResult(1);\r\n    if(kind == KEY)  return iterResult(0, index);\r\n    if(kind == VALUE)return iterResult(0, O[index]);\r\n                     return iterResult(0, [index, O[index]]);\r\n  }, VALUE);\r\n  \r\n  // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\r\n  Iterators[ARGUMENTS] = Iterators[ARRAY];\r\n  \r\n  // 24.3.3 JSON[@@toStringTag]\r\n  setToStringTag(global.JSON, 'JSON', true);\r\n  \r\n  if(framework){\r\n    // 19.1.3.6 Object.prototype.toString()\r\n    tmp[SYMBOL_TAG] = DOT;\r\n    if(cof(tmp) != DOT)hidden(ObjectProto, TO_STRING, function(){\r\n      return '[object ' + classof(this) + ']';\r\n    });\r\n    \r\n    // 21.2.5.3 get RegExp.prototype.flags()\r\n    if(/./g.flags != 'g')defineProperty(RegExp[PROTOTYPE], 'flags', {\r\n      configurable: true,\r\n      get: createReplacer(/^.*\\/(\\w*)$/, '$1')\r\n    });\r\n  }\r\n}(isFinite, {});\n\n/******************************************************************************\n * Module : immediate                                                         *\n ******************************************************************************/\n\n// setImmediate shim\r\n// Node.js 0.9+ & IE10+ has setImmediate, else:\r\nisFunction(setImmediate) && isFunction(clearImmediate) || function(ONREADYSTATECHANGE){\r\n  var postMessage      = global.postMessage\r\n    , addEventListener = global.addEventListener\r\n    , MessageChannel   = global.MessageChannel\r\n    , counter          = 0\r\n    , queue            = {}\r\n    , defer, channel, port;\r\n  setImmediate = function(fn){\r\n    var args = [], i = 1;\r\n    while(arguments.length > i)args.push(arguments[i++]);\r\n    queue[++counter] = function(){\r\n      invoke(isFunction(fn) ? fn : Function(fn), args);\r\n    }\r\n    defer(counter);\r\n    return counter;\r\n  }\r\n  clearImmediate = function(id){\r\n    delete queue[id];\r\n  }\r\n  function run(id){\r\n    if(has(queue, id)){\r\n      var fn = queue[id];\r\n      delete queue[id];\r\n      fn();\r\n    }\r\n  }\r\n  function listner(event){\r\n    run(event.data);\r\n  }\r\n  // Node.js 0.8-\r\n  if(NODE){\r\n    defer = function(id){\r\n      nextTick(part.call(run, id));\r\n    }\r\n  // Modern browsers, skip implementation for WebWorkers\r\n  // IE8 has postMessage, but it's sync & typeof its postMessage is object\r\n  } else if(addEventListener && isFunction(postMessage) && !global.importScripts){\r\n    defer = function(id){\r\n      postMessage(id, '*');\r\n    }\r\n    addEventListener('message', listner, false);\r\n  // WebWorkers\r\n  } else if(isFunction(MessageChannel)){\r\n    channel = new MessageChannel;\r\n    port    = channel.port2;\r\n    channel.port1.onmessage = listner;\r\n    defer = ctx(port.postMessage, port, 1);\r\n  // IE8-\r\n  } else if(document && ONREADYSTATECHANGE in document[CREATE_ELEMENT]('script')){\r\n    defer = function(id){\r\n      html.appendChild(document[CREATE_ELEMENT]('script'))[ONREADYSTATECHANGE] = function(){\r\n        html.removeChild(this);\r\n        run(id);\r\n      }\r\n    }\r\n  // Rest old browsers\r\n  } else {\r\n    defer = function(id){\r\n      setTimeout(part.call(run, id), 0);\r\n    }\r\n  }\r\n}('onreadystatechange');\r\n$define(GLOBAL + BIND, {\r\n  setImmediate:   setImmediate,\r\n  clearImmediate: clearImmediate\r\n});\n\n/******************************************************************************\n * Module : es6_promise                                                       *\n ******************************************************************************/\n\n// ES6 promises shim\r\n// Based on https://github.com/getify/native-promise-only/\r\n!function(Promise, test){\r\n  isFunction(Promise) && isFunction(Promise.resolve)\r\n  && Promise.resolve(test = new Promise(Function())) == test\r\n  || function(asap, DEF){\r\n    function isThenable(o){\r\n      var then;\r\n      if(isObject(o))then = o.then;\r\n      return isFunction(then) ? then : false;\r\n    }\r\n    function notify(def){\r\n      var chain = def.chain;\r\n      chain.length && asap(function(){\r\n        var msg = def.msg\r\n          , ok  = def.state == 1\r\n          , i   = 0;\r\n        while(chain.length > i)!function(react){\r\n          var cb = ok ? react.ok : react.fail\r\n            , ret, then;\r\n          try {\r\n            if(cb){\r\n              ret = cb === true ? msg : cb(msg);\r\n              if(ret === react.P){\r\n                react.rej(TypeError(PROMISE + '-chain cycle'));\r\n              } else if(then = isThenable(ret)){\r\n                then.call(ret, react.res, react.rej);\r\n              } else react.res(ret);\r\n            } else react.rej(msg);\r\n          } catch(err){\r\n            react.rej(err);\r\n          }\r\n        }(chain[i++]);\r\n        chain.length = 0;\r\n      });\r\n    }\r\n    function resolve(msg){\r\n      var def = this\r\n        , then, wrapper;\r\n      if(def.done)return;\r\n      def.done = true;\r\n      def = def.def || def; // unwrap\r\n      try {\r\n        if(then = isThenable(msg)){\r\n          wrapper = {def: def, done: false}; // wrap\r\n          then.call(msg, ctx(resolve, wrapper, 1), ctx(reject, wrapper, 1));\r\n        } else {\r\n          def.msg = msg;\r\n          def.state = 1;\r\n          notify(def);\r\n        }\r\n      } catch(err){\r\n        reject.call(wrapper || {def: def, done: false}, err); // wrap\r\n      }\r\n    }\r\n    function reject(msg){\r\n      var def = this;\r\n      if(def.done)return;\r\n      def.done = true;\r\n      def = def.def || def; // unwrap\r\n      def.msg = msg;\r\n      def.state = 2;\r\n      notify(def);\r\n    }\r\n    // 25.4.3.1 Promise(executor)\r\n    Promise = function(executor){\r\n      assertFunction(executor);\r\n      assertInstance(this, Promise, PROMISE);\r\n      var def = {chain: [], state: 0, done: false, msg: undefined};\r\n      hidden(this, DEF, def);\r\n      try {\r\n        executor(ctx(resolve, def, 1), ctx(reject, def, 1));\r\n      } catch(err){\r\n        reject.call(def, err);\r\n      }\r\n    }\r\n    assignHidden(Promise[PROTOTYPE], {\r\n      // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\r\n      then: function(onFulfilled, onRejected){\r\n        var react = {\r\n          ok:   isFunction(onFulfilled) ? onFulfilled : true,\r\n          fail: isFunction(onRejected)  ? onRejected  : false\r\n        } , P = react.P = new this[CONSTRUCTOR](function(resolve, reject){\r\n          react.res = assertFunction(resolve);\r\n          react.rej = assertFunction(reject);\r\n        }), def = this[DEF];\r\n        def.chain.push(react);\r\n        def.state && notify(def);\r\n        return P;\r\n      },\r\n      // 25.4.5.1 Promise.prototype.catch(onRejected)\r\n      'catch': function(onRejected){\r\n        return this.then(undefined, onRejected);\r\n      }\r\n    });\r\n    assignHidden(Promise, {\r\n      // 25.4.4.1 Promise.all(iterable)\r\n      all: function(iterable){\r\n        var Promise = this\r\n          , values  = [];\r\n        return new Promise(function(resolve, reject){\r\n          forOf(iterable, false, push, values);\r\n          var remaining = values.length\r\n            , results   = Array(remaining);\r\n          if(remaining)forEach.call(values, function(promise, index){\r\n            Promise.resolve(promise).then(function(value){\r\n              results[index] = value;\r\n              --remaining || resolve(results);\r\n            }, reject);\r\n          });\r\n          else resolve(results);\r\n        });\r\n      },\r\n      // 25.4.4.4 Promise.race(iterable)\r\n      race: function(iterable){\r\n        var Promise = this;\r\n        return new Promise(function(resolve, reject){\r\n          forOf(iterable, false, function(promise){\r\n            Promise.resolve(promise).then(resolve, reject);\r\n          });\r\n        });\r\n      },\r\n      // 25.4.4.5 Promise.reject(r)\r\n      reject: function(r){\r\n        return new this(function(resolve, reject){\r\n          reject(r);\r\n        });\r\n      },\r\n      // 25.4.4.6 Promise.resolve(x)\r\n      resolve: function(x){\r\n        return isObject(x) && getPrototypeOf(x) === this[PROTOTYPE]\r\n          ? x : new this(function(resolve, reject){\r\n            resolve(x);\r\n          });\r\n      }\r\n    });\r\n  }(nextTick || setImmediate, safeSymbol('def'));\r\n  setToStringTag(Promise, PROMISE);\r\n  $define(GLOBAL + FORCED * !isNative(Promise), {Promise: Promise});\r\n}(global[PROMISE]);\n\n/******************************************************************************\n * Module : es6_collections                                                   *\n ******************************************************************************/\n\n// ECMAScript 6 collections shim\r\n!function(){\r\n  var UID   = safeSymbol('uid')\r\n    , DATA  = safeSymbol('data')\r\n    , WEAK  = safeSymbol('weak')\r\n    , LAST  = safeSymbol('last')\r\n    , FIRST = safeSymbol('first')\r\n    , SIZE  = DESC ? safeSymbol('size') : 'size'\r\n    , uid   = 0;\r\n  \r\n  function getCollection(C, NAME, methods, commonMethods, isMap, isWeak){\r\n    var ADDER = isMap ? 'set' : 'add'\r\n      , proto = C && C[PROTOTYPE]\r\n      , O     = {};\r\n    function initFromIterable(that, iterable){\r\n      if(iterable != undefined)forOf(iterable, isMap, that[ADDER], that);\r\n      return that;\r\n    }\r\n    function fixSVZ(key, chain){\r\n      var method = proto[key];\r\n      framework && hidden(proto, key, function(a, b){\r\n        var result = method.call(this, a === 0 ? 0 : a, b);\r\n        return chain ? this : result;\r\n      });\r\n    }\r\n    if(!isNative(C) || !(isWeak || (!BUGGY_ITERATORS && has(proto, 'entries')))){\r\n      // create collection constructor\r\n      C = isWeak\r\n        ? function(iterable){\r\n            assertInstance(this, C, NAME);\r\n            set(this, UID, uid++);\r\n            initFromIterable(this, iterable);\r\n          }\r\n        : function(iterable){\r\n            var that = this;\r\n            assertInstance(that, C, NAME);\r\n            set(that, DATA, create(null));\r\n            set(that, SIZE, 0);\r\n            set(that, LAST, undefined);\r\n            set(that, FIRST, undefined);\r\n            initFromIterable(that, iterable);\r\n          };\r\n      assignHidden(assignHidden(C[PROTOTYPE], methods), commonMethods);\r\n      isWeak || defineProperty(C[PROTOTYPE], 'size', {get: function(){\r\n        return assertDefined(this[SIZE]);\r\n      }});\r\n    } else {\r\n      var Native = C\r\n        , inst   = new C\r\n        , chain  = inst[ADDER](isWeak ? {} : -0, 1)\r\n        , buggyZero;\r\n      // wrap to init collections from iterable\r\n      if(!NATIVE_ITERATORS || !C.length){\r\n        C = function(iterable){\r\n          assertInstance(this, C, NAME);\r\n          return initFromIterable(new Native, iterable);\r\n        }\r\n        C[PROTOTYPE] = proto;\r\n      }\r\n      isWeak || inst[FOR_EACH](function(val, key){\r\n        buggyZero = 1 / key === -Infinity;\r\n      });\r\n      // fix converting -0 key to +0\r\n      if(buggyZero){\r\n        fixSVZ('delete');\r\n        fixSVZ('has');\r\n        isMap && fixSVZ('get');\r\n      }\r\n      // + fix .add & .set for chaining\r\n      if(buggyZero || chain !== inst)fixSVZ(ADDER, true);\r\n    }\r\n    setToStringTag(C, NAME);\r\n    \r\n    O[NAME] = C;\r\n    $define(GLOBAL + WRAP + FORCED * !isNative(C), O);\r\n    \r\n    // add .keys, .values, .entries, [@@iterator]\r\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\r\n    isWeak || defineStdIterators(C, NAME, function(iterated, kind){\r\n      set(this, ITER, {o: iterated, k: kind});\r\n    }, function(){\r\n      var iter  = this[ITER]\r\n        , O     = iter.o\r\n        , kind  = iter.k\r\n        , entry = iter.l;\r\n      while(entry && entry.r)entry = entry.p;\r\n      if(!O || !(iter.l = entry = entry ? entry.n : O[FIRST]))return iter.o = undefined, iterResult(1);\r\n      if(kind == KEY)  return iterResult(0, entry.k);\r\n      if(kind == VALUE)return iterResult(0, entry.v);\r\n                       return iterResult(0, [entry.k, entry.v]);   \r\n    }, isMap ? KEY+VALUE : VALUE);\r\n    \r\n    return C;\r\n  }\r\n  \r\n  function fastKey(it, create){\r\n    // return it with 'S' prefix if it's string or with 'P' prefix for over primitives\r\n    if(!isObject(it))return (typeof it == 'string' ? 'S' : 'P') + it;\r\n    // if it hasn't object id - add next\r\n    if(!has(it, UID)){\r\n      if(create)hidden(it, UID, ++uid);\r\n      else return '';\r\n    }\r\n    // return object id with 'O' prefix\r\n    return 'O' + it[UID];\r\n  }\r\n  \r\n  function def(that, key, value){\r\n    var index = fastKey(key, true)\r\n      , data  = that[DATA]\r\n      , last  = that[LAST]\r\n      , entry;\r\n    if(index in data)data[index].v = value;\r\n    else {\r\n      entry = data[index] = {k: key, v: value, p: last};\r\n      if(!that[FIRST])that[FIRST] = entry;\r\n      if(last)last.n = entry;\r\n      that[LAST] = entry;\r\n      that[SIZE]++;\r\n    } return that;\r\n  }\r\n  function del(that, index){\r\n    var data  = that[DATA]\r\n      , entry = data[index]\r\n      , next  = entry.n\r\n      , prev  = entry.p;\r\n    delete data[index];\r\n    entry.r = true;\r\n    if(prev)prev.n = next;\r\n    if(next)next.p = prev;\r\n    if(that[FIRST] == entry)that[FIRST] = next;\r\n    if(that[LAST] == entry)that[LAST] = prev;\r\n    that[SIZE]--;\r\n  }\r\n\r\n  var collectionMethods = {\r\n    // 23.1.3.1 Map.prototype.clear()\r\n    // 23.2.3.2 Set.prototype.clear()\r\n    clear: function(){\r\n      for(var index in this[DATA])del(this, index);\r\n    },\r\n    // 23.1.3.3 Map.prototype.delete(key)\r\n    // 23.2.3.4 Set.prototype.delete(value)\r\n    'delete': function(key){\r\n      var index    = fastKey(key)\r\n        , contains = index in this[DATA];\r\n      if(contains)del(this, index);\r\n      return contains;\r\n    },\r\n    // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\r\n    // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\r\n    forEach: function(callbackfn, that /* = undefined */){\r\n      var f = ctx(callbackfn, that, 3)\r\n        , entry;\r\n      while(entry = entry ? entry.n : this[FIRST]){\r\n        f(entry.v, entry.k, this);\r\n        while(entry && entry.r)entry = entry.p;\r\n      }\r\n    },\r\n    // 23.1.3.7 Map.prototype.has(key)\r\n    // 23.2.3.7 Set.prototype.has(value)\r\n    has: function(key){\r\n      return fastKey(key) in this[DATA];\r\n    }\r\n  }\r\n  \r\n  // 23.1 Map Objects\r\n  Map = getCollection(Map, MAP, {\r\n    // 23.1.3.6 Map.prototype.get(key)\r\n    get: function(key){\r\n      var entry = this[DATA][fastKey(key)];\r\n      return entry && entry.v;\r\n    },\r\n    // 23.1.3.9 Map.prototype.set(key, value)\r\n    set: function(key, value){\r\n      return def(this, key === 0 ? 0 : key, value);\r\n    }\r\n  }, collectionMethods, true);\r\n  \r\n  // 23.2 Set Objects\r\n  Set = getCollection(Set, SET, {\r\n    // 23.2.3.1 Set.prototype.add(value)\r\n    add: function(value){\r\n      return def(this, value = value === 0 ? 0 : value, value);\r\n    }\r\n  }, collectionMethods);\r\n  \r\n  function setWeak(that, key, value){\r\n    has(assertObject(key), WEAK) || hidden(key, WEAK, {});\r\n    key[WEAK][that[UID]] = value;\r\n    return that;\r\n  }\r\n  function hasWeak(key){\r\n    return isObject(key) && has(key, WEAK) && has(key[WEAK], this[UID]);\r\n  }\r\n  var weakMethods = {\r\n    // 23.3.3.2 WeakMap.prototype.delete(key)\r\n    // 23.4.3.3 WeakSet.prototype.delete(value)\r\n    'delete': function(key){\r\n      return hasWeak.call(this, key) && delete key[WEAK][this[UID]];\r\n    },\r\n    // 23.3.3.4 WeakMap.prototype.has(key)\r\n    // 23.4.3.4 WeakSet.prototype.has(value)\r\n    has: hasWeak\r\n  };\r\n  \r\n  // 23.3 WeakMap Objects\r\n  WeakMap = getCollection(WeakMap, WEAKMAP, {\r\n    // 23.3.3.3 WeakMap.prototype.get(key)\r\n    get: function(key){\r\n      if(isObject(key) && has(key, WEAK))return key[WEAK][this[UID]];\r\n    },\r\n    // 23.3.3.5 WeakMap.prototype.set(key, value)\r\n    set: function(key, value){\r\n      return setWeak(this, key, value);\r\n    }\r\n  }, weakMethods, true, true);\r\n  \r\n  // 23.4 WeakSet Objects\r\n  WeakSet = getCollection(WeakSet, WEAKSET, {\r\n    // 23.4.3.1 WeakSet.prototype.add(value)\r\n    add: function(value){\r\n      return setWeak(this, value, true);\r\n    }\r\n  }, weakMethods, false, true);\r\n}();\n\n/******************************************************************************\n * Module : es7                                                               *\n ******************************************************************************/\n\n!function(){\r\n  $define(PROTO, ARRAY, {\r\n    // https://github.com/domenic/Array.prototype.includes\r\n    includes: createArrayContains(true)\r\n  });\r\n  $define(PROTO, STRING, {\r\n    // https://github.com/mathiasbynens/String.prototype.at\r\n    at: createPointAt(true)\r\n  });\r\n  \r\n  function createObjectToArray(isEntries){\r\n    return function(object){\r\n      var O      = ES5Object(object)\r\n        , keys   = getKeys(object)\r\n        , length = keys.length\r\n        , i      = 0\r\n        , result = Array(length)\r\n        , key;\r\n      if(isEntries)while(length > i)result[i] = [key = keys[i++], O[key]];\r\n      else while(length > i)result[i] = O[keys[i++]];\r\n      return result;\r\n    }\r\n  }\r\n  $define(STATIC, OBJECT, {\r\n    // https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-04/apr-9.md#51-objectentries-objectvalues\r\n    values: createObjectToArray(false),\r\n    entries: createObjectToArray(true)\r\n  });\r\n  $define(STATIC, REGEXP, {\r\n    // https://gist.github.com/kangax/9698100\r\n    escape: createReplacer(/([\\\\\\-[\\]{}()*+?.,^$|])/g, '\\\\$1', true)\r\n  });\r\n}();\n\n/******************************************************************************\n * Module : es7_refs                                                          *\n ******************************************************************************/\n\n// https://github.com/zenparsing/es-abstract-refs\r\n!function(REFERENCE){\r\n  REFERENCE_GET = getWellKnownSymbol(REFERENCE+'Get', true);\r\n  var REFERENCE_SET = getWellKnownSymbol(REFERENCE+SET, true)\r\n    , REFERENCE_DELETE = getWellKnownSymbol(REFERENCE+'Delete', true);\r\n  \r\n  $define(STATIC, SYMBOL, {\r\n    referenceGet: REFERENCE_GET,\r\n    referenceSet: REFERENCE_SET,\r\n    referenceDelete: REFERENCE_DELETE\r\n  });\r\n  \r\n  hidden(FunctionProto, REFERENCE_GET, returnThis);\r\n  \r\n  function setMapMethods(Constructor){\r\n    if(Constructor){\r\n      var MapProto = Constructor[PROTOTYPE];\r\n      hidden(MapProto, REFERENCE_GET, MapProto.get);\r\n      hidden(MapProto, REFERENCE_SET, MapProto.set);\r\n      hidden(MapProto, REFERENCE_DELETE, MapProto['delete']);\r\n    }\r\n  }\r\n  setMapMethods(Map);\r\n  setMapMethods(WeakMap);\r\n}('reference');\n\n/******************************************************************************\n * Module : array_statics                                                     *\n ******************************************************************************/\n\n// JavaScript 1.6 / Strawman array statics shim\r\n!function(){\r\n  function setArrayStatics(keys, length){\r\n    $define(STATIC, ARRAY, turn.call(\r\n      array(keys),\r\n      function(memo, key){\r\n        if(key in ArrayProto)memo[key] = ctx(call, ArrayProto[key], length);\r\n      }, {}\r\n    ));\r\n  }\r\n  setArrayStatics('pop,reverse,shift,keys,values,entries', 1);\r\n  setArrayStatics('indexOf,every,some,forEach,map,filter,find,findIndex,includes', 3);\r\n  setArrayStatics('join,slice,concat,push,splice,unshift,sort,lastIndexOf,' +\r\n                  'reduce,reduceRight,copyWithin,fill,turn');\r\n}();\n}(Function('return this'), true);","/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true, define:true*/\n(function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n    // and plain browser loading,\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.estraverse = {}));\n    }\n}(this, function (exports) {\n    'use strict';\n\n    var Syntax,\n        isArray,\n        VisitorOption,\n        VisitorKeys,\n        objectCreate,\n        objectKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function ignoreJSHintError() { }\n\n    isArray = Array.isArray;\n    if (!isArray) {\n        isArray = function isArray(array) {\n            return Object.prototype.toString.call(array) === '[object Array]';\n        };\n    }\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    function shallowCopy(obj) {\n        var ret = {}, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    ignoreJSHintError(shallowCopy);\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    function lowerBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                i = current + 1;\n                len -= diff + 1;\n            } else {\n                len = diff;\n            }\n        }\n        return i;\n    }\n    ignoreJSHintError(lowerBound);\n\n    objectCreate = Object.create || (function () {\n        function F() { }\n\n        return function (o) {\n            F.prototype = o;\n            return new F();\n        };\n    })();\n\n    objectKeys = Object.keys || function (o) {\n        var keys = [], key;\n        for (key in o) {\n            keys.push(key);\n        }\n        return keys;\n    };\n\n    function extend(to, from) {\n        objectKeys(from).forEach(function (key) {\n            to[key] = from[key];\n        });\n        return to;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportBatchSpecifier: 'ExportBatchSpecifier',\n        ExportDeclaration: 'ExportDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'defaults', 'rest', 'body'],\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'body', 'superClass'],\n        ClassExpression: ['id', 'body', 'superClass'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportBatchSpecifier: [],\n        ExportDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['id', 'name'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'defaults', 'rest', 'body'],\n        FunctionExpression: ['id', 'params', 'defaults', 'rest', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['id'],\n        ImportNamespaceSpecifier: ['id'],\n        ImportSpecifier: ['id', 'name'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handlers', 'handler', 'guardedHandlers', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = visitor.fallback === 'iteration';\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = extend(objectCreate(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = element.wrap || node.type;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = objectKeys(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = element.wrap || node.type;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = objectKeys(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.version = '1.8.0';\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n}));\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    function isExpression(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'ArrayExpression':\n            case 'AssignmentExpression':\n            case 'BinaryExpression':\n            case 'CallExpression':\n            case 'ConditionalExpression':\n            case 'FunctionExpression':\n            case 'Identifier':\n            case 'Literal':\n            case 'LogicalExpression':\n            case 'MemberExpression':\n            case 'NewExpression':\n            case 'ObjectExpression':\n            case 'SequenceExpression':\n            case 'ThisExpression':\n            case 'UnaryExpression':\n            case 'UpdateExpression':\n                return true;\n        }\n        return false;\n    }\n\n    function isIterationStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'DoWhileStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'WhileStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'BlockStatement':\n            case 'BreakStatement':\n            case 'ContinueStatement':\n            case 'DebuggerStatement':\n            case 'DoWhileStatement':\n            case 'EmptyStatement':\n            case 'ExpressionStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'IfStatement':\n            case 'LabeledStatement':\n            case 'ReturnStatement':\n            case 'SwitchStatement':\n            case 'ThrowStatement':\n            case 'TryStatement':\n            case 'VariableDeclaration':\n            case 'WhileStatement':\n            case 'WithStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isSourceElement(node) {\n      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';\n    }\n\n    function trailingStatement(node) {\n        switch (node.type) {\n        case 'IfStatement':\n            if (node.alternate != null) {\n                return node.alternate;\n            }\n            return node.consequent;\n\n        case 'LabeledStatement':\n        case 'ForStatement':\n        case 'ForInStatement':\n        case 'WhileStatement':\n        case 'WithStatement':\n            return node.body;\n        }\n        return null;\n    }\n\n    function isProblematicIfStatement(node) {\n        var current;\n\n        if (node.type !== 'IfStatement') {\n            return false;\n        }\n        if (node.alternate == null) {\n            return false;\n        }\n        current = node.consequent;\n        do {\n            if (current.type === 'IfStatement') {\n                if (current.alternate == null)  {\n                    return true;\n                }\n            }\n            current = trailingStatement(current);\n        } while (current);\n\n        return false;\n    }\n\n    module.exports = {\n        isExpression: isExpression,\n        isStatement: isStatement,\n        isIterationStatement: isIterationStatement,\n        isSourceElement: isSourceElement,\n        isProblematicIfStatement: isProblematicIfStatement,\n\n        trailingStatement: trailingStatement\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var Regex, NON_ASCII_WHITESPACES;\n\n    // See `tools/generate-identifier-regex.js`.\n    Regex = {\n        NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n        NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08FE\\u0900-\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1D00-\\u1DE6\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA697\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7B\\uAA80-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE26\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n    };\n\n    function isDecimalDigit(ch) {\n        return (ch >= 48 && ch <= 57);   // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return isDecimalDigit(ch) ||    // 0..9\n            (97 <= ch && ch <= 102) ||  // a..f\n            (65 <= ch && ch <= 70);     // A..F\n    }\n\n    function isOctalDigit(ch) {\n        return (ch >= 48 && ch <= 55);   // 0..7\n    }\n\n    // 7.2 White Space\n\n    NON_ASCII_WHITESPACES = [\n        0x1680, 0x180E,\n        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,\n        0x202F, 0x205F,\n        0x3000,\n        0xFEFF\n    ];\n\n    function isWhiteSpace(ch) {\n        return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n            (ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0);\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function isIdentifierStart(ch) {\n        return (ch >= 97 && ch <= 122) ||     // a..z\n            (ch >= 65 && ch <= 90) ||         // A..Z\n            (ch === 36) || (ch === 95) ||     // $ (dollar) and _ (underscore)\n            (ch === 92) ||                    // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n    }\n\n    function isIdentifierPart(ch) {\n        return (ch >= 97 && ch <= 122) ||     // a..z\n            (ch >= 65 && ch <= 90) ||         // A..Z\n            (ch >= 48 && ch <= 57) ||         // 0..9\n            (ch === 36) || (ch === 95) ||     // $ (dollar) and _ (underscore)\n            (ch === 92) ||                    // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n    }\n\n    module.exports = {\n        isDecimalDigit: isDecimalDigit,\n        isHexDigit: isHexDigit,\n        isOctalDigit: isOctalDigit,\n        isWhiteSpace: isWhiteSpace,\n        isLineTerminator: isLineTerminator,\n        isIdentifierStart: isIdentifierStart,\n        isIdentifierPart: isIdentifierPart\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var code = require('./code');\n\n    function isStrictModeReservedWordES6(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isKeywordES5(id, strict) {\n        // yield should not be treated as keyword under non-strict mode.\n        if (!strict && id === 'yield') {\n            return false;\n        }\n        return isKeywordES6(id, strict);\n    }\n\n    function isKeywordES6(id, strict) {\n        if (strict && isStrictModeReservedWordES6(id)) {\n            return true;\n        }\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    function isReservedWordES5(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);\n    }\n\n    function isReservedWordES6(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    function isIdentifierName(id) {\n        var i, iz, ch;\n\n        if (id.length === 0) {\n            return false;\n        }\n\n        ch = id.charCodeAt(0);\n        if (!code.isIdentifierStart(ch) || ch === 92) {  // \\ (backslash)\n            return false;\n        }\n\n        for (i = 1, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (!code.isIdentifierPart(ch) || ch === 92) {  // \\ (backslash)\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function isIdentifierES5(id, strict) {\n        return isIdentifierName(id) && !isReservedWordES5(id, strict);\n    }\n\n    function isIdentifierES6(id, strict) {\n        return isIdentifierName(id) && !isReservedWordES6(id, strict);\n    }\n\n    module.exports = {\n        isKeywordES5: isKeywordES5,\n        isKeywordES6: isKeywordES6,\n        isReservedWordES5: isReservedWordES5,\n        isReservedWordES6: isReservedWordES6,\n        isRestrictedWord: isRestrictedWord,\n        isIdentifierName: isIdentifierName,\n        isIdentifierES5: isIdentifierES5,\n        isIdentifierES6: isIdentifierES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\n(function () {\n    'use strict';\n\n    exports.ast = require('./ast');\n    exports.code = require('./code');\n    exports.keyword = require('./keyword');\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","// jshint -W001\n\n\"use strict\";\n\n// Identifiers provided by the ECMAScript standard.\n\nexports.reservedVars = {\n  arguments : false,\n  NaN       : false\n};\n\nexports.ecmaIdentifiers = {\n  Array              : false,\n  Boolean            : false,\n  Date               : false,\n  decodeURI          : false,\n  decodeURIComponent : false,\n  encodeURI          : false,\n  encodeURIComponent : false,\n  Error              : false,\n  \"eval\"             : false,\n  EvalError          : false,\n  Function           : false,\n  hasOwnProperty     : false,\n  isFinite           : false,\n  isNaN              : false,\n  JSON               : false,\n  Map                : false,\n  Math               : false,\n  Number             : false,\n  Object             : false,\n  Proxy              : false,\n  Promise            : false,\n  parseInt           : false,\n  parseFloat         : false,\n  RangeError         : false,\n  ReferenceError     : false,\n  RegExp             : false,\n  Set                : false,\n  String             : false,\n  SyntaxError        : false,\n  TypeError          : false,\n  URIError           : false,\n  WeakMap            : false,\n  WeakSet            : false\n};\n\nexports.newEcmaIdentifiers = {\n  Set     : false,\n  Map     : false,\n  WeakMap : false,\n  WeakSet : false,\n  Proxy   : false,\n  Promise : false,\n  Reflect : false,\n  Symbol  : false,\n  System  : false\n};\n\n// Global variables commonly provided by a web browser environment.\n\nexports.browser = {\n  Audio                : false,\n  Blob                 : false,\n  addEventListener     : false,\n  applicationCache     : false,\n  atob                 : false,\n  blur                 : false,\n  btoa                 : false,\n  cancelAnimationFrame : false,\n  CanvasGradient       : false,\n  CanvasPattern        : false,\n  CanvasRenderingContext2D: false,\n  CSS                  : false,\n  clearInterval        : false,\n  clearTimeout         : false,\n  close                : false,\n  closed               : false,\n  CustomEvent          : false,\n  DOMParser            : false,\n  defaultStatus        : false,\n  Document             : false,\n  document             : false,\n  Element              : false,\n  ElementTimeControl   : false,\n  Event                : false,\n  event                : false,\n  FileReader           : false,\n  FormData             : false,\n  focus                : false,\n  frames               : false,\n  getComputedStyle     : false,\n  HTMLElement          : false,\n  HTMLAnchorElement    : false,\n  HTMLBaseElement      : false,\n  HTMLBlockquoteElement: false,\n  HTMLBodyElement      : false,\n  HTMLBRElement        : false,\n  HTMLButtonElement    : false,\n  HTMLCanvasElement    : false,\n  HTMLDirectoryElement : false,\n  HTMLDivElement       : false,\n  HTMLDListElement     : false,\n  HTMLFieldSetElement  : false,\n  HTMLFontElement      : false,\n  HTMLFormElement      : false,\n  HTMLFrameElement     : false,\n  HTMLFrameSetElement  : false,\n  HTMLHeadElement      : false,\n  HTMLHeadingElement   : false,\n  HTMLHRElement        : false,\n  HTMLHtmlElement      : false,\n  HTMLIFrameElement    : false,\n  HTMLImageElement     : false,\n  HTMLInputElement     : false,\n  HTMLIsIndexElement   : false,\n  HTMLLabelElement     : false,\n  HTMLLayerElement     : false,\n  HTMLLegendElement    : false,\n  HTMLLIElement        : false,\n  HTMLLinkElement      : false,\n  HTMLMapElement       : false,\n  HTMLMenuElement      : false,\n  HTMLMetaElement      : false,\n  HTMLModElement       : false,\n  HTMLObjectElement    : false,\n  HTMLOListElement     : false,\n  HTMLOptGroupElement  : false,\n  HTMLOptionElement    : false,\n  HTMLParagraphElement : false,\n  HTMLParamElement     : false,\n  HTMLPreElement       : false,\n  HTMLQuoteElement     : false,\n  HTMLScriptElement    : false,\n  HTMLSelectElement    : false,\n  HTMLStyleElement     : false,\n  HTMLTableCaptionElement: false,\n  HTMLTableCellElement : false,\n  HTMLTableColElement  : false,\n  HTMLTableElement     : false,\n  HTMLTableRowElement  : false,\n  HTMLTableSectionElement: false,\n  HTMLTextAreaElement  : false,\n  HTMLTitleElement     : false,\n  HTMLUListElement     : false,\n  HTMLVideoElement     : false,\n  history              : false,\n  Image                : false,\n  Intl                 : false,\n  length               : false,\n  localStorage         : false,\n  location             : false,\n  matchMedia           : false,\n  MessageChannel       : false,\n  MessageEvent         : false,\n  MessagePort          : false,\n  MouseEvent           : false,\n  moveBy               : false,\n  moveTo               : false,\n  MutationObserver     : false,\n  name                 : false,\n  Node                 : false,\n  NodeFilter           : false,\n  NodeList             : false,\n  navigator            : false,\n  onbeforeunload       : true,\n  onblur               : true,\n  onerror              : true,\n  onfocus              : true,\n  onload               : true,\n  onresize             : true,\n  onunload             : true,\n  open                 : false,\n  openDatabase         : false,\n  opener               : false,\n  Option               : false,\n  parent               : false,\n  print                : false,\n  requestAnimationFrame : false,\n  removeEventListener  : false,\n  resizeBy             : false,\n  resizeTo             : false,\n  screen               : false,\n  scroll               : false,\n  scrollBy             : false,\n  scrollTo             : false,\n  sessionStorage       : false,\n  setInterval          : false,\n  setTimeout           : false,\n  SharedWorker         : false,\n  status               : false,\n  SVGAElement          : false,\n  SVGAltGlyphDefElement: false,\n  SVGAltGlyphElement   : false,\n  SVGAltGlyphItemElement: false,\n  SVGAngle             : false,\n  SVGAnimateColorElement: false,\n  SVGAnimateElement    : false,\n  SVGAnimateMotionElement: false,\n  SVGAnimateTransformElement: false,\n  SVGAnimatedAngle     : false,\n  SVGAnimatedBoolean   : false,\n  SVGAnimatedEnumeration: false,\n  SVGAnimatedInteger   : false,\n  SVGAnimatedLength    : false,\n  SVGAnimatedLengthList: false,\n  SVGAnimatedNumber    : false,\n  SVGAnimatedNumberList: false,\n  SVGAnimatedPathData  : false,\n  SVGAnimatedPoints    : false,\n  SVGAnimatedPreserveAspectRatio: false,\n  SVGAnimatedRect      : false,\n  SVGAnimatedString    : false,\n  SVGAnimatedTransformList: false,\n  SVGAnimationElement  : false,\n  SVGCSSRule           : false,\n  SVGCircleElement     : false,\n  SVGClipPathElement   : false,\n  SVGColor             : false,\n  SVGColorProfileElement: false,\n  SVGColorProfileRule  : false,\n  SVGComponentTransferFunctionElement: false,\n  SVGCursorElement     : false,\n  SVGDefsElement       : false,\n  SVGDescElement       : false,\n  SVGDocument          : false,\n  SVGElement           : false,\n  SVGElementInstance   : false,\n  SVGElementInstanceList: false,\n  SVGEllipseElement    : false,\n  SVGExternalResourcesRequired: false,\n  SVGFEBlendElement    : false,\n  SVGFEColorMatrixElement: false,\n  SVGFEComponentTransferElement: false,\n  SVGFECompositeElement: false,\n  SVGFEConvolveMatrixElement: false,\n  SVGFEDiffuseLightingElement: false,\n  SVGFEDisplacementMapElement: false,\n  SVGFEDistantLightElement: false,\n  SVGFEFloodElement    : false,\n  SVGFEFuncAElement    : false,\n  SVGFEFuncBElement    : false,\n  SVGFEFuncGElement    : false,\n  SVGFEFuncRElement    : false,\n  SVGFEGaussianBlurElement: false,\n  SVGFEImageElement    : false,\n  SVGFEMergeElement    : false,\n  SVGFEMergeNodeElement: false,\n  SVGFEMorphologyElement: false,\n  SVGFEOffsetElement   : false,\n  SVGFEPointLightElement: false,\n  SVGFESpecularLightingElement: false,\n  SVGFESpotLightElement: false,\n  SVGFETileElement     : false,\n  SVGFETurbulenceElement: false,\n  SVGFilterElement     : false,\n  SVGFilterPrimitiveStandardAttributes: false,\n  SVGFitToViewBox      : false,\n  SVGFontElement       : false,\n  SVGFontFaceElement   : false,\n  SVGFontFaceFormatElement: false,\n  SVGFontFaceNameElement: false,\n  SVGFontFaceSrcElement: false,\n  SVGFontFaceUriElement: false,\n  SVGForeignObjectElement: false,\n  SVGGElement          : false,\n  SVGGlyphElement      : false,\n  SVGGlyphRefElement   : false,\n  SVGGradientElement   : false,\n  SVGHKernElement      : false,\n  SVGICCColor          : false,\n  SVGImageElement      : false,\n  SVGLangSpace         : false,\n  SVGLength            : false,\n  SVGLengthList        : false,\n  SVGLineElement       : false,\n  SVGLinearGradientElement: false,\n  SVGLocatable         : false,\n  SVGMPathElement      : false,\n  SVGMarkerElement     : false,\n  SVGMaskElement       : false,\n  SVGMatrix            : false,\n  SVGMetadataElement   : false,\n  SVGMissingGlyphElement: false,\n  SVGNumber            : false,\n  SVGNumberList        : false,\n  SVGPaint             : false,\n  SVGPathElement       : false,\n  SVGPathSeg           : false,\n  SVGPathSegArcAbs     : false,\n  SVGPathSegArcRel     : false,\n  SVGPathSegClosePath  : false,\n  SVGPathSegCurvetoCubicAbs: false,\n  SVGPathSegCurvetoCubicRel: false,\n  SVGPathSegCurvetoCubicSmoothAbs: false,\n  SVGPathSegCurvetoCubicSmoothRel: false,\n  SVGPathSegCurvetoQuadraticAbs: false,\n  SVGPathSegCurvetoQuadraticRel: false,\n  SVGPathSegCurvetoQuadraticSmoothAbs: false,\n  SVGPathSegCurvetoQuadraticSmoothRel: false,\n  SVGPathSegLinetoAbs  : false,\n  SVGPathSegLinetoHorizontalAbs: false,\n  SVGPathSegLinetoHorizontalRel: false,\n  SVGPathSegLinetoRel  : false,\n  SVGPathSegLinetoVerticalAbs: false,\n  SVGPathSegLinetoVerticalRel: false,\n  SVGPathSegList       : false,\n  SVGPathSegMovetoAbs  : false,\n  SVGPathSegMovetoRel  : false,\n  SVGPatternElement    : false,\n  SVGPoint             : false,\n  SVGPointList         : false,\n  SVGPolygonElement    : false,\n  SVGPolylineElement   : false,\n  SVGPreserveAspectRatio: false,\n  SVGRadialGradientElement: false,\n  SVGRect              : false,\n  SVGRectElement       : false,\n  SVGRenderingIntent   : false,\n  SVGSVGElement        : false,\n  SVGScriptElement     : false,\n  SVGSetElement        : false,\n  SVGStopElement       : false,\n  SVGStringList        : false,\n  SVGStylable          : false,\n  SVGStyleElement      : false,\n  SVGSwitchElement     : false,\n  SVGSymbolElement     : false,\n  SVGTRefElement       : false,\n  SVGTSpanElement      : false,\n  SVGTests             : false,\n  SVGTextContentElement: false,\n  SVGTextElement       : false,\n  SVGTextPathElement   : false,\n  SVGTextPositioningElement: false,\n  SVGTitleElement      : false,\n  SVGTransform         : false,\n  SVGTransformList     : false,\n  SVGTransformable     : false,\n  SVGURIReference      : false,\n  SVGUnitTypes         : false,\n  SVGUseElement        : false,\n  SVGVKernElement      : false,\n  SVGViewElement       : false,\n  SVGViewSpec          : false,\n  SVGZoomAndPan        : false,\n  TextDecoder          : false,\n  TextEncoder          : false,\n  TimeEvent            : false,\n  top                  : false,\n  URL                  : false,\n  WebGLActiveInfo      : false,\n  WebGLBuffer          : false,\n  WebGLContextEvent    : false,\n  WebGLFramebuffer     : false,\n  WebGLProgram         : false,\n  WebGLRenderbuffer    : false,\n  WebGLRenderingContext: false,\n  WebGLShader          : false,\n  WebGLShaderPrecisionFormat: false,\n  WebGLTexture         : false,\n  WebGLUniformLocation : false,\n  WebSocket            : false,\n  window               : false,\n  Worker               : false,\n  XDomainRequest       : false,\n  XMLHttpRequest       : false,\n  XMLSerializer        : false,\n  XPathEvaluator       : false,\n  XPathException       : false,\n  XPathExpression      : false,\n  XPathNamespace       : false,\n  XPathNSResolver      : false,\n  XPathResult          : false\n};\n\nexports.devel = {\n  alert  : false,\n  confirm: false,\n  console: false,\n  Debug  : false,\n  opera  : false,\n  prompt : false\n};\n\nexports.worker = {\n  importScripts  : true,\n  postMessage    : true,\n  self           : true,\n  FileReaderSync : true\n};\n\n// Widely adopted global names that are not part of ECMAScript standard\nexports.nonstandard = {\n  escape  : false,\n  unescape: false\n};\n\n// Globals provided by popular JavaScript environments.\n\nexports.couch = {\n  \"require\" : false,\n  respond   : false,\n  getRow    : false,\n  emit      : false,\n  send      : false,\n  start     : false,\n  sum       : false,\n  log       : false,\n  exports   : false,\n  module    : false,\n  provides  : false\n};\n\nexports.node = {\n  __filename    : false,\n  __dirname     : false,\n  GLOBAL        : false,\n  global        : false,\n  module        : false,\n  require       : false,\n\n  // These globals are writeable because Node allows the following\n  // usage pattern: var Buffer = require(\"buffer\").Buffer;\n\n  Buffer        : true,\n  console       : true,\n  exports       : true,\n  process       : true,\n  setTimeout    : true,\n  clearTimeout  : true,\n  setInterval   : true,\n  clearInterval : true,\n  setImmediate  : true, // v0.9.1+\n  clearImmediate: true  // v0.9.1+\n};\n\nexports.browserify = {\n  __filename    : false,\n  __dirname     : false,\n  global        : false,\n  module        : false,\n  require       : false,\n  Buffer        : true,\n  exports       : true,\n  process       : true\n};\n\nexports.phantom = {\n  phantom      : true,\n  require      : true,\n  WebPage      : true,\n  console      : true, // in examples, but undocumented\n  exports      : true  // v1.7+\n};\n\nexports.qunit = {\n  asyncTest      : false,\n  deepEqual      : false,\n  equal          : false,\n  expect         : false,\n  module         : false,\n  notDeepEqual   : false,\n  notEqual       : false,\n  notPropEqual   : false,\n  notStrictEqual : false,\n  ok             : false,\n  propEqual      : false,\n  QUnit          : false,\n  raises         : false,\n  start          : false,\n  stop           : false,\n  strictEqual    : false,\n  test           : false,\n  \"throws\"       : false\n};\n\nexports.rhino = {\n  defineClass  : false,\n  deserialize  : false,\n  gc           : false,\n  help         : false,\n  importClass  : false,\n  importPackage: false,\n  \"java\"       : false,\n  load         : false,\n  loadClass    : false,\n  Packages     : false,\n  print        : false,\n  quit         : false,\n  readFile     : false,\n  readUrl      : false,\n  runCommand   : false,\n  seal         : false,\n  serialize    : false,\n  spawn        : false,\n  sync         : false,\n  toint32      : false,\n  version      : false\n};\n\nexports.shelljs = {\n  target       : false,\n  echo         : false,\n  exit         : false,\n  cd           : false,\n  pwd          : false,\n  ls           : false,\n  find         : false,\n  cp           : false,\n  rm           : false,\n  mv           : false,\n  mkdir        : false,\n  test         : false,\n  cat          : false,\n  sed          : false,\n  grep         : false,\n  which        : false,\n  dirs         : false,\n  pushd        : false,\n  popd         : false,\n  env          : false,\n  exec         : false,\n  chmod        : false,\n  config       : false,\n  error        : false,\n  tempdir      : false\n};\n\nexports.typed = {\n  ArrayBuffer         : false,\n  ArrayBufferView     : false,\n  DataView            : false,\n  Float32Array        : false,\n  Float64Array        : false,\n  Int16Array          : false,\n  Int32Array          : false,\n  Int8Array           : false,\n  Uint16Array         : false,\n  Uint32Array         : false,\n  Uint8Array          : false,\n  Uint8ClampedArray   : false\n};\n\nexports.wsh = {\n  ActiveXObject            : true,\n  Enumerator               : true,\n  GetObject                : true,\n  ScriptEngine             : true,\n  ScriptEngineBuildVersion : true,\n  ScriptEngineMajorVersion : true,\n  ScriptEngineMinorVersion : true,\n  VBArray                  : true,\n  WSH                      : true,\n  WScript                  : true,\n  XDomainRequest           : true\n};\n\n// Globals provided by popular JavaScript libraries.\n\nexports.dojo = {\n  dojo     : false,\n  dijit    : false,\n  dojox    : false,\n  define   : false,\n  \"require\": false\n};\n\nexports.jquery = {\n  \"$\"    : false,\n  jQuery : false\n};\n\nexports.mootools = {\n  \"$\"           : false,\n  \"$$\"          : false,\n  Asset         : false,\n  Browser       : false,\n  Chain         : false,\n  Class         : false,\n  Color         : false,\n  Cookie        : false,\n  Core          : false,\n  Document      : false,\n  DomReady      : false,\n  DOMEvent      : false,\n  DOMReady      : false,\n  Drag          : false,\n  Element       : false,\n  Elements      : false,\n  Event         : false,\n  Events        : false,\n  Fx            : false,\n  Group         : false,\n  Hash          : false,\n  HtmlTable     : false,\n  IFrame        : false,\n  IframeShim    : false,\n  InputValidator: false,\n  instanceOf    : false,\n  Keyboard      : false,\n  Locale        : false,\n  Mask          : false,\n  MooTools      : false,\n  Native        : false,\n  Options       : false,\n  OverText      : false,\n  Request       : false,\n  Scroller      : false,\n  Slick         : false,\n  Slider        : false,\n  Sortables     : false,\n  Spinner       : false,\n  Swiff         : false,\n  Tips          : false,\n  Type          : false,\n  typeOf        : false,\n  URI           : false,\n  Window        : false\n};\n\nexports.prototypejs = {\n  \"$\"               : false,\n  \"$$\"              : false,\n  \"$A\"              : false,\n  \"$F\"              : false,\n  \"$H\"              : false,\n  \"$R\"              : false,\n  \"$break\"          : false,\n  \"$continue\"       : false,\n  \"$w\"              : false,\n  Abstract          : false,\n  Ajax              : false,\n  Class             : false,\n  Enumerable        : false,\n  Element           : false,\n  Event             : false,\n  Field             : false,\n  Form              : false,\n  Hash              : false,\n  Insertion         : false,\n  ObjectRange       : false,\n  PeriodicalExecuter: false,\n  Position          : false,\n  Prototype         : false,\n  Selector          : false,\n  Template          : false,\n  Toggle            : false,\n  Try               : false,\n  Autocompleter     : false,\n  Builder           : false,\n  Control           : false,\n  Draggable         : false,\n  Draggables        : false,\n  Droppables        : false,\n  Effect            : false,\n  Sortable          : false,\n  SortableObserver  : false,\n  Sound             : false,\n  Scriptaculous     : false\n};\n\nexports.yui = {\n  YUI       : false,\n  Y         : false,\n  YUI_config: false\n};\n\nexports.mocha = {\n  // BDD\n  describe    : false,\n  it          : false,\n  before      : false,\n  after       : false,\n  beforeEach  : false,\n  afterEach   : false,\n  // TDD\n  suite       : false,\n  test        : false,\n  setup       : false,\n  teardown    : false\n};\n\nexports.jasmine = {\n  jasmine     : false,\n  describe    : false,\n  it          : false,\n  xit         : false,\n  beforeEach  : false,\n  afterEach   : false,\n  setFixtures : false,\n  loadFixtures: false,\n  spyOn       : false,\n  expect      : false,\n  // Jasmine 1.3\n  runs        : false,\n  waitsFor    : false,\n  waits       : false\n};\n","\"use strict\";\n\nvar originalObject = Object;\nvar originalDefProp = Object.defineProperty;\nvar originalCreate = Object.create;\n\nfunction defProp(obj, name, value) {\n  if (originalDefProp) try {\n    originalDefProp.call(originalObject, obj, name, { value: value });\n  } catch (definePropertyIsBrokenInIE8) {\n    obj[name] = value;\n  } else {\n    obj[name] = value;\n  }\n}\n\n// For functions that will be invoked using .call or .apply, we need to\n// define those methods on the function objects themselves, rather than\n// inheriting them from Function.prototype, so that a malicious or clumsy\n// third party cannot interfere with the functionality of this module by\n// redefining Function.prototype.call or .apply.\nfunction makeSafeToCall(fun) {\n  if (fun) {\n    defProp(fun, \"call\", fun.call);\n    defProp(fun, \"apply\", fun.apply);\n  }\n  return fun;\n}\n\nmakeSafeToCall(originalDefProp);\nmakeSafeToCall(originalCreate);\n\nvar hasOwn = makeSafeToCall(Object.prototype.hasOwnProperty);\nvar numToStr = makeSafeToCall(Number.prototype.toString);\nvar strSlice = makeSafeToCall(String.prototype.slice);\n\nvar cloner = function(){};\nfunction create(prototype) {\n  if (originalCreate) {\n    return originalCreate.call(originalObject, prototype);\n  }\n  cloner.prototype = prototype || null;\n  return new cloner;\n}\n\nvar rand = Math.random;\nvar uniqueKeys = create(null);\n\nfunction makeUniqueKey() {\n  // Collisions are highly unlikely, but this module is in the business of\n  // making guarantees rather than safe bets.\n  do var uniqueKey = internString(strSlice.call(numToStr.call(rand(), 36), 2));\n  while (hasOwn.call(uniqueKeys, uniqueKey));\n  return uniqueKeys[uniqueKey] = uniqueKey;\n}\n\nfunction internString(str) {\n  var obj = {};\n  obj[str] = true;\n  return Object.keys(obj)[0];\n}\n\n// External users might find this function useful, but it is not necessary\n// for the typical use of this module.\ndefProp(exports, \"makeUniqueKey\", makeUniqueKey);\n\n// Object.getOwnPropertyNames is the only way to enumerate non-enumerable\n// properties, so if we wrap it to ignore our secret keys, there should be\n// no way (except guessing) to access those properties.\nvar originalGetOPNs = Object.getOwnPropertyNames;\nObject.getOwnPropertyNames = function getOwnPropertyNames(object) {\n  for (var names = originalGetOPNs(object),\n           src = 0,\n           dst = 0,\n           len = names.length;\n       src < len;\n       ++src) {\n    if (!hasOwn.call(uniqueKeys, names[src])) {\n      if (src > dst) {\n        names[dst] = names[src];\n      }\n      ++dst;\n    }\n  }\n  names.length = dst;\n  return names;\n};\n\nfunction defaultCreatorFn(object) {\n  return create(null);\n}\n\nfunction makeAccessor(secretCreatorFn) {\n  var brand = makeUniqueKey();\n  var passkey = create(null);\n\n  secretCreatorFn = secretCreatorFn || defaultCreatorFn;\n\n  function register(object) {\n    var secret; // Created lazily.\n\n    function vault(key, forget) {\n      // Only code that has access to the passkey can retrieve (or forget)\n      // the secret object.\n      if (key === passkey) {\n        return forget\n          ? secret = null\n          : secret || (secret = secretCreatorFn(object));\n      }\n    }\n\n    defProp(object, brand, vault);\n  }\n\n  function accessor(object) {\n    if (!hasOwn.call(object, brand))\n      register(object);\n    return object[brand](passkey);\n  }\n\n  accessor.forget = function(object) {\n    if (hasOwn.call(object, brand))\n      object[brand](passkey, true);\n  };\n\n  return accessor;\n}\n\ndefProp(exports, \"makeAccessor\", makeAccessor);\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\nvar assert = require(\"assert\");\nvar types = require(\"recast\").types;\nvar isArray = types.builtInTypes.array;\nvar b = types.builders;\nvar n = types.namedTypes;\nvar leap = require(\"./leap\");\nvar meta = require(\"./meta\");\nvar util = require(\"./util\");\nvar runtimeKeysMethod = util.runtimeProperty(\"keys\");\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction Emitter(contextId) {\n  assert.ok(this instanceof Emitter);\n  n.Identifier.assert(contextId);\n\n  Object.defineProperties(this, {\n    // In order to make sure the context object does not collide with\n    // anything in the local scope, we might have to rename it, so we\n    // refer to it symbolically instead of just assuming that it will be\n    // called \"context\".\n    contextId: { value: contextId },\n\n    // An append-only list of Statements that grows each time this.emit is\n    // called.\n    listing: { value: [] },\n\n    // A sparse array whose keys correspond to locations in this.listing\n    // that have been marked as branch/jump targets.\n    marked: { value: [true] },\n\n    // The last location will be marked when this.getDispatchLoop is\n    // called.\n    finalLoc: { value: loc() },\n\n    // A list of all leap.TryEntry statements emitted.\n    tryEntries: { value: [] }\n  });\n\n  // The .leapManager property needs to be defined by a separate\n  // defineProperties call so that .finalLoc will be visible to the\n  // leap.LeapManager constructor.\n  Object.defineProperties(this, {\n    // Each time we evaluate the body of a loop, we tell this.leapManager\n    // to enter a nested loop context that determines the meaning of break\n    // and continue statements therein.\n    leapManager: { value: new leap.LeapManager(this) }\n  });\n}\n\nvar Ep = Emitter.prototype;\nexports.Emitter = Emitter;\n\n// Offsets into this.listing that could be used as targets for branches or\n// jumps are represented as numeric Literal nodes. This representation has\n// the amazingly convenient benefit of allowing the exact value of the\n// location to be determined at any time, even after generating code that\n// refers to the location.\nfunction loc() {\n  return b.literal(-1);\n}\n\n// Sets the exact value of the given location to the offset of the next\n// Statement emitted.\nEp.mark = function(loc) {\n  n.Literal.assert(loc);\n  var index = this.listing.length;\n  if (loc.value === -1) {\n    loc.value = index;\n  } else {\n    // Locations can be marked redundantly, but their values cannot change\n    // once set the first time.\n    assert.strictEqual(loc.value, index);\n  }\n  this.marked[index] = true;\n  return loc;\n};\n\nEp.emit = function(node) {\n  if (n.Expression.check(node))\n    node = b.expressionStatement(node);\n  n.Statement.assert(node);\n  this.listing.push(node);\n};\n\n// Shorthand for emitting assignment statements. This will come in handy\n// for assignments to temporary variables.\nEp.emitAssign = function(lhs, rhs) {\n  this.emit(this.assign(lhs, rhs));\n  return lhs;\n};\n\n// Shorthand for an assignment statement.\nEp.assign = function(lhs, rhs) {\n  return b.expressionStatement(\n    b.assignmentExpression(\"=\", lhs, rhs));\n};\n\n// Convenience function for generating expressions like context.next,\n// context.sent, and context.rval.\nEp.contextProperty = function(name, computed) {\n  return b.memberExpression(\n    this.contextId,\n    computed ? b.literal(name) : b.identifier(name),\n    !!computed\n  );\n};\n\nvar volatileContextPropertyNames = {\n  prev: true,\n  next: true,\n  sent: true,\n  rval: true\n};\n\n// A \"volatile\" context property is a MemberExpression like context.sent\n// that should probably be stored in a temporary variable when there's a\n// possibility the property will get overwritten.\nEp.isVolatileContextProperty = function(expr) {\n  if (n.MemberExpression.check(expr)) {\n    if (expr.computed) {\n      // If it's a computed property such as context[couldBeAnything],\n      // assume the worst in terms of volatility.\n      return true;\n    }\n\n    if (n.Identifier.check(expr.object) &&\n        n.Identifier.check(expr.property) &&\n        expr.object.name === this.contextId.name &&\n        hasOwn.call(volatileContextPropertyNames,\n                    expr.property.name)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n// Shorthand for setting context.rval and jumping to `context.stop()`.\nEp.stop = function(rval) {\n  if (rval) {\n    this.setReturnValue(rval);\n  }\n\n  this.jump(this.finalLoc);\n};\n\nEp.setReturnValue = function(valuePath) {\n  n.Expression.assert(valuePath.value);\n\n  this.emitAssign(\n    this.contextProperty(\"rval\"),\n    this.explodeExpression(valuePath)\n  );\n};\n\nEp.clearPendingException = function(tryLoc, assignee) {\n  n.Literal.assert(tryLoc);\n\n  var catchCall = b.callExpression(\n    this.contextProperty(\"catch\", true),\n    [tryLoc]\n  );\n\n  if (assignee) {\n    this.emitAssign(assignee, catchCall);\n  } else {\n    this.emit(catchCall);\n  }\n};\n\n// Emits code for an unconditional jump to the given location, even if the\n// exact value of the location is not yet known.\nEp.jump = function(toLoc) {\n  this.emitAssign(this.contextProperty(\"next\"), toLoc);\n  this.emit(b.breakStatement());\n};\n\n// Conditional jump.\nEp.jumpIf = function(test, toLoc) {\n  n.Expression.assert(test);\n  n.Literal.assert(toLoc);\n\n  this.emit(b.ifStatement(\n    test,\n    b.blockStatement([\n      this.assign(this.contextProperty(\"next\"), toLoc),\n      b.breakStatement()\n    ])\n  ));\n};\n\n// Conditional jump, with the condition negated.\nEp.jumpIfNot = function(test, toLoc) {\n  n.Expression.assert(test);\n  n.Literal.assert(toLoc);\n\n  var negatedTest;\n  if (n.UnaryExpression.check(test) &&\n      test.operator === \"!\") {\n    // Avoid double negation.\n    negatedTest = test.argument;\n  } else {\n    negatedTest = b.unaryExpression(\"!\", test);\n  }\n\n  this.emit(b.ifStatement(\n    negatedTest,\n    b.blockStatement([\n      this.assign(this.contextProperty(\"next\"), toLoc),\n      b.breakStatement()\n    ])\n  ));\n};\n\n// Returns a unique MemberExpression that can be used to store and\n// retrieve temporary values. Since the object of the member expression is\n// the context object, which is presumed to coexist peacefully with all\n// other local variables, and since we just increment `nextTempId`\n// monotonically, uniqueness is assured.\nvar nextTempId = 0;\nEp.makeTempVar = function() {\n  return this.contextProperty(\"t\" + nextTempId++);\n};\n\nEp.getContextFunction = function(id) {\n  return b.functionExpression(\n    id || null/*Anonymous*/,\n    [this.contextId],\n    b.blockStatement([this.getDispatchLoop()]),\n    false, // Not a generator anymore!\n    false // Nor an expression.\n  );\n};\n\n// Turns this.listing into a loop of the form\n//\n//   while (1) switch (context.next) {\n//   case 0:\n//   ...\n//   case n:\n//     return context.stop();\n//   }\n//\n// Each marked location in this.listing will correspond to one generated\n// case statement.\nEp.getDispatchLoop = function() {\n  var self = this;\n  var cases = [];\n  var current;\n\n  // If we encounter a break, continue, or return statement in a switch\n  // case, we can skip the rest of the statements until the next case.\n  var alreadyEnded = false;\n\n  self.listing.forEach(function(stmt, i) {\n    if (self.marked.hasOwnProperty(i)) {\n      cases.push(b.switchCase(\n        b.literal(i),\n        current = []));\n      alreadyEnded = false;\n    }\n\n    if (!alreadyEnded) {\n      current.push(stmt);\n      if (isSwitchCaseEnder(stmt))\n        alreadyEnded = true;\n    }\n  });\n\n  // Now that we know how many statements there will be in this.listing,\n  // we can finally resolve this.finalLoc.value.\n  this.finalLoc.value = this.listing.length;\n\n  cases.push(\n    b.switchCase(this.finalLoc, [\n      // Intentionally fall through to the \"end\" case...\n    ]),\n\n    // So that the runtime can jump to the final location without having\n    // to know its offset, we provide the \"end\" case as a synonym.\n    b.switchCase(b.literal(\"end\"), [\n      // This will check/clear both context.thrown and context.rval.\n      b.returnStatement(\n        b.callExpression(this.contextProperty(\"stop\"), [])\n      )\n    ])\n  );\n\n  return b.whileStatement(\n    b.literal(1),\n    b.switchStatement(\n      b.assignmentExpression(\n        \"=\",\n        this.contextProperty(\"prev\"),\n        this.contextProperty(\"next\")\n      ),\n      cases\n    )\n  );\n};\n\n// See comment above re: alreadyEnded.\nfunction isSwitchCaseEnder(stmt) {\n  return n.BreakStatement.check(stmt)\n      || n.ContinueStatement.check(stmt)\n      || n.ReturnStatement.check(stmt)\n      || n.ThrowStatement.check(stmt);\n}\n\nEp.getTryEntryList = function() {\n  if (this.tryEntries.length === 0) {\n    // To avoid adding a needless [] to the majority of runtime.wrap\n    // argument lists, force the caller to handle this case specially.\n    return null;\n  }\n\n  var lastLocValue = 0;\n\n  return b.arrayExpression(\n    this.tryEntries.map(function(tryEntry) {\n      var thisLocValue = tryEntry.firstLoc.value;\n      assert.ok(thisLocValue >= lastLocValue, \"try entries out of order\");\n      lastLocValue = thisLocValue;\n\n      var ce = tryEntry.catchEntry;\n      var fe = tryEntry.finallyEntry;\n\n      var triple = [\n        tryEntry.firstLoc,\n        // The null here makes a hole in the array.\n        ce ? ce.firstLoc : null\n      ];\n\n      if (fe) {\n        triple[2] = fe.firstLoc;\n      }\n\n      return b.arrayExpression(triple);\n    })\n  );\n};\n\n// All side effects must be realized in order.\n\n// If any subexpression harbors a leap, all subexpressions must be\n// neutered of side effects.\n\n// No destructive modification of AST nodes.\n\nEp.explode = function(path, ignoreResult) {\n  assert.ok(path instanceof types.NodePath);\n\n  var node = path.value;\n  var self = this;\n\n  n.Node.assert(node);\n\n  if (n.Statement.check(node))\n    return self.explodeStatement(path);\n\n  if (n.Expression.check(node))\n    return self.explodeExpression(path, ignoreResult);\n\n  if (n.Declaration.check(node))\n    throw getDeclError(node);\n\n  switch (node.type) {\n  case \"Program\":\n    return path.get(\"body\").map(\n      self.explodeStatement,\n      self\n    );\n\n  case \"VariableDeclarator\":\n    throw getDeclError(node);\n\n  // These node types should be handled by their parent nodes\n  // (ObjectExpression, SwitchStatement, and TryStatement, respectively).\n  case \"Property\":\n  case \"SwitchCase\":\n  case \"CatchClause\":\n    throw new Error(\n      node.type + \" nodes should be handled by their parents\");\n\n  default:\n    throw new Error(\n      \"unknown Node of type \" +\n        JSON.stringify(node.type));\n  }\n};\n\nfunction getDeclError(node) {\n  return new Error(\n    \"all declarations should have been transformed into \" +\n    \"assignments before the Exploder began its work: \" +\n    JSON.stringify(node));\n}\n\nEp.explodeStatement = function(path, labelId) {\n  assert.ok(path instanceof types.NodePath);\n\n  var stmt = path.value;\n  var self = this;\n\n  n.Statement.assert(stmt);\n\n  if (labelId) {\n    n.Identifier.assert(labelId);\n  } else {\n    labelId = null;\n  }\n\n  // Explode BlockStatement nodes even if they do not contain a yield,\n  // because we don't want or need the curly braces.\n  if (n.BlockStatement.check(stmt)) {\n    return path.get(\"body\").each(\n      self.explodeStatement,\n      self\n    );\n  }\n\n  if (!meta.containsLeap(stmt)) {\n    // Technically we should be able to avoid emitting the statement\n    // altogether if !meta.hasSideEffects(stmt), but that leads to\n    // confusing generated code (for instance, `while (true) {}` just\n    // disappears) and is probably a more appropriate job for a dedicated\n    // dead code elimination pass.\n    self.emit(stmt);\n    return;\n  }\n\n  switch (stmt.type) {\n  case \"ExpressionStatement\":\n    self.explodeExpression(path.get(\"expression\"), true);\n    break;\n\n  case \"LabeledStatement\":\n    self.explodeStatement(path.get(\"body\"), stmt.label);\n    break;\n\n  case \"WhileStatement\":\n    var before = loc();\n    var after = loc();\n\n    self.mark(before);\n    self.jumpIfNot(self.explodeExpression(path.get(\"test\")), after);\n    self.leapManager.withEntry(\n      new leap.LoopEntry(after, before, labelId),\n      function() { self.explodeStatement(path.get(\"body\")); }\n    );\n    self.jump(before);\n    self.mark(after);\n\n    break;\n\n  case \"DoWhileStatement\":\n    var first = loc();\n    var test = loc();\n    var after = loc();\n\n    self.mark(first);\n    self.leapManager.withEntry(\n      new leap.LoopEntry(after, test, labelId),\n      function() { self.explode(path.get(\"body\")); }\n    );\n    self.mark(test);\n    self.jumpIf(self.explodeExpression(path.get(\"test\")), first);\n    self.mark(after);\n\n    break;\n\n  case \"ForStatement\":\n    var head = loc();\n    var update = loc();\n    var after = loc();\n\n    if (stmt.init) {\n      // We pass true here to indicate that if stmt.init is an expression\n      // then we do not care about its result.\n      self.explode(path.get(\"init\"), true);\n    }\n\n    self.mark(head);\n\n    if (stmt.test) {\n      self.jumpIfNot(self.explodeExpression(path.get(\"test\")), after);\n    } else {\n      // No test means continue unconditionally.\n    }\n\n    self.leapManager.withEntry(\n      new leap.LoopEntry(after, update, labelId),\n      function() { self.explodeStatement(path.get(\"body\")); }\n    );\n\n    self.mark(update);\n\n    if (stmt.update) {\n      // We pass true here to indicate that if stmt.update is an\n      // expression then we do not care about its result.\n      self.explode(path.get(\"update\"), true);\n    }\n\n    self.jump(head);\n\n    self.mark(after);\n\n    break;\n\n  case \"ForInStatement\":\n    n.Identifier.assert(stmt.left);\n\n    var head = loc();\n    var after = loc();\n\n    var keyIterNextFn = self.makeTempVar();\n    self.emitAssign(\n      keyIterNextFn,\n      b.callExpression(\n        runtimeKeysMethod,\n        [self.explodeExpression(path.get(\"right\"))]\n      )\n    );\n\n    self.mark(head);\n\n    var keyInfoTmpVar = self.makeTempVar();\n    self.jumpIf(\n      b.memberExpression(\n        b.assignmentExpression(\n          \"=\",\n          keyInfoTmpVar,\n          b.callExpression(keyIterNextFn, [])\n        ),\n        b.identifier(\"done\"),\n        false\n      ),\n      after\n    );\n\n    self.emitAssign(\n      stmt.left,\n      b.memberExpression(\n        keyInfoTmpVar,\n        b.identifier(\"value\"),\n        false\n      )\n    );\n\n    self.leapManager.withEntry(\n      new leap.LoopEntry(after, head, labelId),\n      function() { self.explodeStatement(path.get(\"body\")); }\n    );\n\n    self.jump(head);\n\n    self.mark(after);\n\n    break;\n\n  case \"BreakStatement\":\n    self.emitAbruptCompletion({\n      type: \"break\",\n      target: self.leapManager.getBreakLoc(stmt.label)\n    });\n\n    break;\n\n  case \"ContinueStatement\":\n    self.emitAbruptCompletion({\n      type: \"continue\",\n      target: self.leapManager.getContinueLoc(stmt.label)\n    });\n\n    break;\n\n  case \"SwitchStatement\":\n    // Always save the discriminant into a temporary variable in case the\n    // test expressions overwrite values like context.sent.\n    var disc = self.emitAssign(\n      self.makeTempVar(),\n      self.explodeExpression(path.get(\"discriminant\"))\n    );\n\n    var after = loc();\n    var defaultLoc = loc();\n    var condition = defaultLoc;\n    var caseLocs = [];\n\n    // If there are no cases, .cases might be undefined.\n    var cases = stmt.cases || [];\n\n    for (var i = cases.length - 1; i >= 0; --i) {\n      var c = cases[i];\n      n.SwitchCase.assert(c);\n\n      if (c.test) {\n        condition = b.conditionalExpression(\n          b.binaryExpression(\"===\", disc, c.test),\n          caseLocs[i] = loc(),\n          condition\n        );\n      } else {\n        caseLocs[i] = defaultLoc;\n      }\n    }\n\n    self.jump(self.explodeExpression(\n      new types.NodePath(condition, path, \"discriminant\")\n    ));\n\n    self.leapManager.withEntry(\n      new leap.SwitchEntry(after),\n      function() {\n        path.get(\"cases\").each(function(casePath) {\n          var c = casePath.value;\n          var i = casePath.name;\n\n          self.mark(caseLocs[i]);\n\n          casePath.get(\"consequent\").each(\n            self.explodeStatement,\n            self\n          );\n        });\n      }\n    );\n\n    self.mark(after);\n    if (defaultLoc.value === -1) {\n      self.mark(defaultLoc);\n      assert.strictEqual(after.value, defaultLoc.value);\n    }\n\n    break;\n\n  case \"IfStatement\":\n    var elseLoc = stmt.alternate && loc();\n    var after = loc();\n\n    self.jumpIfNot(\n      self.explodeExpression(path.get(\"test\")),\n      elseLoc || after\n    );\n\n    self.explodeStatement(path.get(\"consequent\"));\n\n    if (elseLoc) {\n      self.jump(after);\n      self.mark(elseLoc);\n      self.explodeStatement(path.get(\"alternate\"));\n    }\n\n    self.mark(after);\n\n    break;\n\n  case \"ReturnStatement\":\n    self.emitAbruptCompletion({\n      type: \"return\",\n      value: self.explodeExpression(path.get(\"argument\"))\n    });\n\n    break;\n\n  case \"WithStatement\":\n    throw new Error(\n      node.type + \" not supported in generator functions.\");\n\n  case \"TryStatement\":\n    var after = loc();\n\n    var handler = stmt.handler;\n    if (!handler && stmt.handlers) {\n      handler = stmt.handlers[0] || null;\n    }\n\n    var catchLoc = handler && loc();\n    var catchEntry = catchLoc && new leap.CatchEntry(\n      catchLoc,\n      handler.param\n    );\n\n    var finallyLoc = stmt.finalizer && loc();\n    var finallyEntry = finallyLoc && new leap.FinallyEntry(finallyLoc);\n\n    var tryEntry = new leap.TryEntry(\n      self.getUnmarkedCurrentLoc(),\n      catchEntry,\n      finallyEntry\n    );\n\n    self.tryEntries.push(tryEntry);\n    self.updateContextPrevLoc(tryEntry.firstLoc);\n\n    self.leapManager.withEntry(tryEntry, function() {\n      self.explodeStatement(path.get(\"block\"));\n\n      if (catchLoc) {\n        if (finallyLoc) {\n          // If we have both a catch block and a finally block, then\n          // because we emit the catch block first, we need to jump over\n          // it to the finally block.\n          self.jump(finallyLoc);\n\n        } else {\n          // If there is no finally block, then we need to jump over the\n          // catch block to the fall-through location.\n          self.jump(after);\n        }\n\n        self.updateContextPrevLoc(self.mark(catchLoc));\n\n        var bodyPath = path.get(\"handler\", \"body\");\n        var safeParam = self.makeTempVar();\n        self.clearPendingException(tryEntry.firstLoc, safeParam);\n\n        var catchScope = bodyPath.scope;\n        var catchParamName = handler.param.name;\n        n.CatchClause.assert(catchScope.node);\n        assert.strictEqual(catchScope.lookup(catchParamName), catchScope);\n\n        types.visit(bodyPath, {\n          visitIdentifier: function(path) {\n            if (util.isReference(path, catchParamName) &&\n                path.scope.lookup(catchParamName) === catchScope) {\n              return safeParam;\n            }\n\n            this.traverse(path);\n          },\n\n          visitFunction: function(path) {\n            if (path.scope.declares(catchParamName)) {\n              // Don't descend into nested scopes that shadow the catch\n              // parameter with their own declarations. This isn't\n              // logically necessary because of the path.scope.lookup we\n              // do in visitIdentifier, but it saves time.\n              return false;\n            }\n\n            this.traverse(path);\n          }\n        });\n\n        self.leapManager.withEntry(catchEntry, function() {\n          self.explodeStatement(bodyPath);\n        });\n      }\n\n      if (finallyLoc) {\n        self.updateContextPrevLoc(self.mark(finallyLoc));\n\n        self.leapManager.withEntry(finallyEntry, function() {\n          self.explodeStatement(path.get(\"finalizer\"));\n        });\n\n        self.emit(b.callExpression(\n          self.contextProperty(\"finish\"),\n          [finallyEntry.firstLoc]\n        ));\n      }\n    });\n\n    self.mark(after);\n\n    break;\n\n  case \"ThrowStatement\":\n    self.emit(b.throwStatement(\n      self.explodeExpression(path.get(\"argument\"))\n    ));\n\n    break;\n\n  default:\n    throw new Error(\n      \"unknown Statement of type \" +\n        JSON.stringify(stmt.type));\n  }\n};\n\nEp.emitAbruptCompletion = function(record) {\n  if (!isValidCompletion(record)) {\n    assert.ok(\n      false,\n      \"invalid completion record: \" +\n        JSON.stringify(record)\n    );\n  }\n\n  assert.notStrictEqual(\n    record.type, \"normal\",\n    \"normal completions are not abrupt\"\n  );\n\n  var abruptArgs = [b.literal(record.type)];\n\n  if (record.type === \"break\" ||\n      record.type === \"continue\") {\n    n.Literal.assert(record.target);\n    abruptArgs[1] = record.target;\n  } else if (record.type === \"return\" ||\n             record.type === \"throw\") {\n    if (record.value) {\n      n.Expression.assert(record.value);\n      abruptArgs[1] = record.value;\n    }\n  }\n\n  this.emit(\n    b.returnStatement(\n      b.callExpression(\n        this.contextProperty(\"abrupt\"),\n        abruptArgs\n      )\n    )\n  );\n};\n\nfunction isValidCompletion(record) {\n  var type = record.type;\n\n  if (type === \"normal\") {\n    return !hasOwn.call(record, \"target\");\n  }\n\n  if (type === \"break\" ||\n      type === \"continue\") {\n    return !hasOwn.call(record, \"value\")\n        && n.Literal.check(record.target);\n  }\n\n  if (type === \"return\" ||\n      type === \"throw\") {\n    return hasOwn.call(record, \"value\")\n        && !hasOwn.call(record, \"target\");\n  }\n\n  return false;\n}\n\n\n// Not all offsets into emitter.listing are potential jump targets. For\n// example, execution typically falls into the beginning of a try block\n// without jumping directly there. This method returns the current offset\n// without marking it, so that a switch case will not necessarily be\n// generated for this offset (I say \"not necessarily\" because the same\n// location might end up being marked in the process of emitting other\n// statements). There's no logical harm in marking such locations as jump\n// targets, but minimizing the number of switch cases keeps the generated\n// code shorter.\nEp.getUnmarkedCurrentLoc = function() {\n  return b.literal(this.listing.length);\n};\n\n// The context.prev property takes the value of context.next whenever we\n// evaluate the switch statement discriminant, which is generally good\n// enough for tracking the last location we jumped to, but sometimes\n// context.prev needs to be more precise, such as when we fall\n// successfully out of a try block and into a finally block without\n// jumping. This method exists to update context.prev to the freshest\n// available location. If we were implementing a full interpreter, we\n// would know the location of the current instruction with complete\n// precision at all times, but we don't have that luxury here, as it would\n// be costly and verbose to set context.prev before every statement.\nEp.updateContextPrevLoc = function(loc) {\n  if (loc) {\n    n.Literal.assert(loc);\n\n    if (loc.value === -1) {\n      // If an uninitialized location literal was passed in, set its value\n      // to the current this.listing.length.\n      loc.value = this.listing.length;\n    } else {\n      // Otherwise assert that the location matches the current offset.\n      assert.strictEqual(loc.value, this.listing.length);\n    }\n\n  } else {\n    loc = this.getUnmarkedCurrentLoc();\n  }\n\n  // Make sure context.prev is up to date in case we fell into this try\n  // statement without jumping to it. TODO Consider avoiding this\n  // assignment when we know control must have jumped here.\n  this.emitAssign(this.contextProperty(\"prev\"), loc);\n};\n\nEp.explodeExpression = function(path, ignoreResult) {\n  assert.ok(path instanceof types.NodePath);\n\n  var expr = path.value;\n  if (expr) {\n    n.Expression.assert(expr);\n  } else {\n    return expr;\n  }\n\n  var self = this;\n  var result; // Used optionally by several cases below.\n\n  function finish(expr) {\n    n.Expression.assert(expr);\n    if (ignoreResult) {\n      self.emit(expr);\n    } else {\n      return expr;\n    }\n  }\n\n  // If the expression does not contain a leap, then we either emit the\n  // expression as a standalone statement or return it whole.\n  if (!meta.containsLeap(expr)) {\n    return finish(expr);\n  }\n\n  // If any child contains a leap (such as a yield or labeled continue or\n  // break statement), then any sibling subexpressions will almost\n  // certainly have to be exploded in order to maintain the order of their\n  // side effects relative to the leaping child(ren).\n  var hasLeapingChildren = meta.containsLeap.onlyChildren(expr);\n\n  // In order to save the rest of explodeExpression from a combinatorial\n  // trainwreck of special cases, explodeViaTempVar is responsible for\n  // deciding when a subexpression needs to be \"exploded,\" which is my\n  // very technical term for emitting the subexpression as an assignment\n  // to a temporary variable and the substituting the temporary variable\n  // for the original subexpression. Think of exploded view diagrams, not\n  // Michael Bay movies. The point of exploding subexpressions is to\n  // control the precise order in which the generated code realizes the\n  // side effects of those subexpressions.\n  function explodeViaTempVar(tempVar, childPath, ignoreChildResult) {\n    assert.ok(childPath instanceof types.NodePath);\n\n    assert.ok(\n      !ignoreChildResult || !tempVar,\n      \"Ignoring the result of a child expression but forcing it to \" +\n        \"be assigned to a temporary variable?\"\n    );\n\n    var result = self.explodeExpression(childPath, ignoreChildResult);\n\n    if (ignoreChildResult) {\n      // Side effects already emitted above.\n\n    } else if (tempVar || (hasLeapingChildren &&\n                           (self.isVolatileContextProperty(result) ||\n                            meta.hasSideEffects(result)))) {\n      // If tempVar was provided, then the result will always be assigned\n      // to it, even if the result does not otherwise need to be assigned\n      // to a temporary variable.  When no tempVar is provided, we have\n      // the flexibility to decide whether a temporary variable is really\n      // necessary.  In general, temporary assignment is required only\n      // when some other child contains a leap and the child in question\n      // is a context property like $ctx.sent that might get overwritten\n      // or an expression with side effects that need to occur in proper\n      // sequence relative to the leap.\n      result = self.emitAssign(\n        tempVar || self.makeTempVar(),\n        result\n      );\n    }\n    return result;\n  }\n\n  // If ignoreResult is true, then we must take full responsibility for\n  // emitting the expression with all its side effects, and we should not\n  // return a result.\n\n  switch (expr.type) {\n  case \"MemberExpression\":\n    return finish(b.memberExpression(\n      self.explodeExpression(path.get(\"object\")),\n      expr.computed\n        ? explodeViaTempVar(null, path.get(\"property\"))\n        : expr.property,\n      expr.computed\n    ));\n\n  case \"CallExpression\":\n    var oldCalleePath = path.get(\"callee\");\n    var newCallee = self.explodeExpression(oldCalleePath);\n\n    // If the callee was not previously a MemberExpression, then the\n    // CallExpression was \"unqualified,\" meaning its `this` object should\n    // be the global object. If the exploded expression has become a\n    // MemberExpression, then we need to force it to be unqualified by\n    // using the (0, object.property)(...) trick; otherwise, it will\n    // receive the object of the MemberExpression as its `this` object.\n    if (!n.MemberExpression.check(oldCalleePath.node) &&\n        n.MemberExpression.check(newCallee)) {\n      newCallee = b.sequenceExpression([\n        b.literal(0),\n        newCallee\n      ]);\n    }\n\n    return finish(b.callExpression(\n      newCallee,\n      path.get(\"arguments\").map(function(argPath) {\n        return explodeViaTempVar(null, argPath);\n      })\n    ));\n\n  case \"NewExpression\":\n    return finish(b.newExpression(\n      explodeViaTempVar(null, path.get(\"callee\")),\n      path.get(\"arguments\").map(function(argPath) {\n        return explodeViaTempVar(null, argPath);\n      })\n    ));\n\n  case \"ObjectExpression\":\n    return finish(b.objectExpression(\n      path.get(\"properties\").map(function(propPath) {\n        return b.property(\n          propPath.value.kind,\n          propPath.value.key,\n          explodeViaTempVar(null, propPath.get(\"value\"))\n        );\n      })\n    ));\n\n  case \"ArrayExpression\":\n    return finish(b.arrayExpression(\n      path.get(\"elements\").map(function(elemPath) {\n        return explodeViaTempVar(null, elemPath);\n      })\n    ));\n\n  case \"SequenceExpression\":\n    var lastIndex = expr.expressions.length - 1;\n\n    path.get(\"expressions\").each(function(exprPath) {\n      if (exprPath.name === lastIndex) {\n        result = self.explodeExpression(exprPath, ignoreResult);\n      } else {\n        self.explodeExpression(exprPath, true);\n      }\n    });\n\n    return result;\n\n  case \"LogicalExpression\":\n    var after = loc();\n\n    if (!ignoreResult) {\n      result = self.makeTempVar();\n    }\n\n    var left = explodeViaTempVar(result, path.get(\"left\"));\n\n    if (expr.operator === \"&&\") {\n      self.jumpIfNot(left, after);\n    } else {\n      assert.strictEqual(expr.operator, \"||\");\n      self.jumpIf(left, after);\n    }\n\n    explodeViaTempVar(result, path.get(\"right\"), ignoreResult);\n\n    self.mark(after);\n\n    return result;\n\n  case \"ConditionalExpression\":\n    var elseLoc = loc();\n    var after = loc();\n    var test = self.explodeExpression(path.get(\"test\"));\n\n    self.jumpIfNot(test, elseLoc);\n\n    if (!ignoreResult) {\n      result = self.makeTempVar();\n    }\n\n    explodeViaTempVar(result, path.get(\"consequent\"), ignoreResult);\n    self.jump(after);\n\n    self.mark(elseLoc);\n    explodeViaTempVar(result, path.get(\"alternate\"), ignoreResult);\n\n    self.mark(after);\n\n    return result;\n\n  case \"UnaryExpression\":\n    return finish(b.unaryExpression(\n      expr.operator,\n      // Can't (and don't need to) break up the syntax of the argument.\n      // Think about delete a[b].\n      self.explodeExpression(path.get(\"argument\")),\n      !!expr.prefix\n    ));\n\n  case \"BinaryExpression\":\n    return finish(b.binaryExpression(\n      expr.operator,\n      explodeViaTempVar(null, path.get(\"left\")),\n      explodeViaTempVar(null, path.get(\"right\"))\n    ));\n\n  case \"AssignmentExpression\":\n    return finish(b.assignmentExpression(\n      expr.operator,\n      self.explodeExpression(path.get(\"left\")),\n      self.explodeExpression(path.get(\"right\"))\n    ));\n\n  case \"UpdateExpression\":\n    return finish(b.updateExpression(\n      expr.operator,\n      self.explodeExpression(path.get(\"argument\")),\n      expr.prefix\n    ));\n\n  case \"YieldExpression\":\n    var after = loc();\n    var arg = expr.argument && self.explodeExpression(path.get(\"argument\"));\n\n    if (arg && expr.delegate) {\n      var result = self.makeTempVar();\n\n      self.emit(b.returnStatement(b.callExpression(\n        self.contextProperty(\"delegateYield\"), [\n          arg,\n          b.literal(result.property.name),\n          after\n        ]\n      )));\n\n      self.mark(after);\n\n      return result;\n    }\n\n    self.emitAssign(self.contextProperty(\"next\"), after);\n    self.emit(b.returnStatement(arg || null));\n    self.mark(after);\n\n    return self.contextProperty(\"sent\");\n\n  default:\n    throw new Error(\n      \"unknown Expression of type \" +\n        JSON.stringify(expr.type));\n  }\n};\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\nvar assert = require(\"assert\");\nvar types = require(\"recast\").types;\nvar n = types.namedTypes;\nvar b = types.builders;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n// The hoist function takes a FunctionExpression or FunctionDeclaration\n// and replaces any Declaration nodes in its body with assignments, then\n// returns a VariableDeclaration containing just the names of the removed\n// declarations.\nexports.hoist = function(funPath) {\n  assert.ok(funPath instanceof types.NodePath);\n  n.Function.assert(funPath.value);\n\n  var vars = {};\n\n  function varDeclToExpr(vdec, includeIdentifiers) {\n    n.VariableDeclaration.assert(vdec);\n    var exprs = [];\n\n    vdec.declarations.forEach(function(dec) {\n      vars[dec.id.name] = dec.id;\n\n      if (dec.init) {\n        exprs.push(b.assignmentExpression(\n          \"=\", dec.id, dec.init\n        ));\n      } else if (includeIdentifiers) {\n        exprs.push(dec.id);\n      }\n    });\n\n    if (exprs.length === 0)\n      return null;\n\n    if (exprs.length === 1)\n      return exprs[0];\n\n    return b.sequenceExpression(exprs);\n  }\n\n  types.visit(funPath.get(\"body\"), {\n    visitVariableDeclaration: function(path) {\n      var expr = varDeclToExpr(path.value, false);\n      if (expr === null) {\n        path.replace();\n      } else {\n        // We don't need to traverse this expression any further because\n        // there can't be any new declarations inside an expression.\n        return b.expressionStatement(expr);\n      }\n\n      // Since the original node has been either removed or replaced,\n      // avoid traversing it any further.\n      return false;\n    },\n\n    visitForStatement: function(path) {\n      var init = path.value.init;\n      if (n.VariableDeclaration.check(init)) {\n        path.get(\"init\").replace(varDeclToExpr(init, false));\n      }\n      this.traverse(path);\n    },\n\n    visitForInStatement: function(path) {\n      var left = path.value.left;\n      if (n.VariableDeclaration.check(left)) {\n        path.get(\"left\").replace(varDeclToExpr(left, true));\n      }\n      this.traverse(path);\n    },\n\n    visitFunctionDeclaration: function(path) {\n      var node = path.value;\n      vars[node.id.name] = node.id;\n\n      var parentNode = path.parent.node;\n      var assignment = b.expressionStatement(\n        b.assignmentExpression(\n          \"=\",\n          node.id,\n          b.functionExpression(\n            node.id,\n            node.params,\n            node.body,\n            node.generator,\n            node.expression\n          )\n        )\n      );\n\n      if (n.BlockStatement.check(path.parent.node)) {\n        // Insert the assignment form before the first statement in the\n        // enclosing block.\n        path.parent.get(\"body\").unshift(assignment);\n\n        // Remove the function declaration now that we've inserted the\n        // equivalent assignment form at the beginning of the block.\n        path.replace();\n\n      } else {\n        // If the parent node is not a block statement, then we can just\n        // replace the declaration with the equivalent assignment form\n        // without worrying about hoisting it.\n        path.replace(assignment);\n      }\n\n      // Don't hoist variables out of inner functions.\n      return false;\n    },\n\n    visitFunctionExpression: function(path) {\n      // Don't descend into nested function expressions.\n      return false;\n    }\n  });\n\n  var paramNames = {};\n  funPath.get(\"params\").each(function(paramPath) {\n    var param = paramPath.value;\n    if (n.Identifier.check(param)) {\n      paramNames[param.name] = param;\n    } else {\n      // Variables declared by destructuring parameter patterns will be\n      // harmlessly re-declared.\n    }\n  });\n\n  var declarations = [];\n\n  Object.keys(vars).forEach(function(name) {\n    if (!hasOwn.call(paramNames, name)) {\n      declarations.push(b.variableDeclarator(vars[name], null));\n    }\n  });\n\n  if (declarations.length === 0) {\n    return null; // Be sure to handle this case!\n  }\n\n  return b.variableDeclaration(\"var\", declarations);\n};\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\nvar assert = require(\"assert\");\nvar types = require(\"recast\").types;\nvar n = types.namedTypes;\nvar b = types.builders;\nvar inherits = require(\"util\").inherits;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction Entry() {\n  assert.ok(this instanceof Entry);\n}\n\nfunction FunctionEntry(returnLoc) {\n  Entry.call(this);\n\n  n.Literal.assert(returnLoc);\n\n  Object.defineProperties(this, {\n    returnLoc: { value: returnLoc }\n  });\n}\n\ninherits(FunctionEntry, Entry);\nexports.FunctionEntry = FunctionEntry;\n\nfunction LoopEntry(breakLoc, continueLoc, label) {\n  Entry.call(this);\n\n  n.Literal.assert(breakLoc);\n  n.Literal.assert(continueLoc);\n\n  if (label) {\n    n.Identifier.assert(label);\n  } else {\n    label = null;\n  }\n\n  Object.defineProperties(this, {\n    breakLoc: { value: breakLoc },\n    continueLoc: { value: continueLoc },\n    label: { value: label }\n  });\n}\n\ninherits(LoopEntry, Entry);\nexports.LoopEntry = LoopEntry;\n\nfunction SwitchEntry(breakLoc) {\n  Entry.call(this);\n\n  n.Literal.assert(breakLoc);\n\n  Object.defineProperties(this, {\n    breakLoc: { value: breakLoc }\n  });\n}\n\ninherits(SwitchEntry, Entry);\nexports.SwitchEntry = SwitchEntry;\n\nfunction TryEntry(firstLoc, catchEntry, finallyEntry) {\n  Entry.call(this);\n\n  n.Literal.assert(firstLoc);\n\n  if (catchEntry) {\n    assert.ok(catchEntry instanceof CatchEntry);\n  } else {\n    catchEntry = null;\n  }\n\n  if (finallyEntry) {\n    assert.ok(finallyEntry instanceof FinallyEntry);\n  } else {\n    finallyEntry = null;\n  }\n\n  // Have to have one or the other (or both).\n  assert.ok(catchEntry || finallyEntry);\n\n  Object.defineProperties(this, {\n    firstLoc: { value: firstLoc },\n    catchEntry: { value: catchEntry },\n    finallyEntry: { value: finallyEntry }\n  });\n}\n\ninherits(TryEntry, Entry);\nexports.TryEntry = TryEntry;\n\nfunction CatchEntry(firstLoc, paramId) {\n  Entry.call(this);\n\n  n.Literal.assert(firstLoc);\n  n.Identifier.assert(paramId);\n\n  Object.defineProperties(this, {\n    firstLoc: { value: firstLoc },\n    paramId: { value: paramId }\n  });\n}\n\ninherits(CatchEntry, Entry);\nexports.CatchEntry = CatchEntry;\n\nfunction FinallyEntry(firstLoc) {\n  Entry.call(this);\n\n  n.Literal.assert(firstLoc);\n\n  Object.defineProperties(this, {\n    firstLoc: { value: firstLoc }\n  });\n}\n\ninherits(FinallyEntry, Entry);\nexports.FinallyEntry = FinallyEntry;\n\nfunction LeapManager(emitter) {\n  assert.ok(this instanceof LeapManager);\n\n  var Emitter = require(\"./emit\").Emitter;\n  assert.ok(emitter instanceof Emitter);\n\n  Object.defineProperties(this, {\n    emitter: { value: emitter },\n    entryStack: {\n      value: [new FunctionEntry(emitter.finalLoc)]\n    }\n  });\n}\n\nvar LMp = LeapManager.prototype;\nexports.LeapManager = LeapManager;\n\nLMp.withEntry = function(entry, callback) {\n  assert.ok(entry instanceof Entry);\n  this.entryStack.push(entry);\n  try {\n    callback.call(this.emitter);\n  } finally {\n    var popped = this.entryStack.pop();\n    assert.strictEqual(popped, entry);\n  }\n};\n\nLMp._findLeapLocation = function(property, label) {\n  for (var i = this.entryStack.length - 1; i >= 0; --i) {\n    var entry = this.entryStack[i];\n    var loc = entry[property];\n    if (loc) {\n      if (label) {\n        if (entry.label &&\n            entry.label.name === label.name) {\n          return loc;\n        }\n      } else {\n        return loc;\n      }\n    }\n  }\n\n  return null;\n};\n\nLMp.getBreakLoc = function(label) {\n  return this._findLeapLocation(\"breakLoc\", label);\n};\n\nLMp.getContinueLoc = function(label) {\n  return this._findLeapLocation(\"continueLoc\", label);\n};\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\nvar assert = require(\"assert\");\nvar m = require(\"private\").makeAccessor();\nvar types = require(\"recast\").types;\nvar isArray = types.builtInTypes.array;\nvar n = types.namedTypes;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction makePredicate(propertyName, knownTypes) {\n  function onlyChildren(node) {\n    n.Node.assert(node);\n\n    // Assume no side effects until we find out otherwise.\n    var result = false;\n\n    function check(child) {\n      if (result) {\n        // Do nothing.\n      } else if (isArray.check(child)) {\n        child.some(check);\n      } else if (n.Node.check(child)) {\n        assert.strictEqual(result, false);\n        result = predicate(child);\n      }\n      return result;\n    }\n\n    types.eachField(node, function(name, child) {\n      check(child);\n    });\n\n    return result;\n  }\n\n  function predicate(node) {\n    n.Node.assert(node);\n\n    var meta = m(node);\n    if (hasOwn.call(meta, propertyName))\n      return meta[propertyName];\n\n    // Certain types are \"opaque,\" which means they have no side\n    // effects or leaps and we don't care about their subexpressions.\n    if (hasOwn.call(opaqueTypes, node.type))\n      return meta[propertyName] = false;\n\n    if (hasOwn.call(knownTypes, node.type))\n      return meta[propertyName] = true;\n\n    return meta[propertyName] = onlyChildren(node);\n  }\n\n  predicate.onlyChildren = onlyChildren;\n\n  return predicate;\n}\n\nvar opaqueTypes = {\n  FunctionExpression: true\n};\n\n// These types potentially have side effects regardless of what side\n// effects their subexpressions have.\nvar sideEffectTypes = {\n  CallExpression: true, // Anything could happen!\n  ForInStatement: true, // Modifies the key variable.\n  UnaryExpression: true, // Think delete.\n  BinaryExpression: true, // Might invoke .toString() or .valueOf().\n  AssignmentExpression: true, // Side-effecting by definition.\n  UpdateExpression: true, // Updates are essentially assignments.\n  NewExpression: true // Similar to CallExpression.\n};\n\n// These types are the direct cause of all leaps in control flow.\nvar leapTypes = {\n  YieldExpression: true,\n  BreakStatement: true,\n  ContinueStatement: true,\n  ReturnStatement: true,\n  ThrowStatement: true\n};\n\n// All leap types are also side effect types.\nfor (var type in leapTypes) {\n  if (hasOwn.call(leapTypes, type)) {\n    sideEffectTypes[type] = leapTypes[type];\n  }\n}\n\nexports.hasSideEffects = makePredicate(\"hasSideEffects\", sideEffectTypes);\nexports.containsLeap = makePredicate(\"containsLeap\", leapTypes);\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\nvar assert = require(\"assert\");\nvar types = require(\"recast\").types;\nvar n = types.namedTypes;\nvar b = types.builders;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nexports.defaults = function(obj) {\n  var len = arguments.length;\n  var extension;\n\n  for (var i = 1; i < len; ++i) {\n    if ((extension = arguments[i])) {\n      for (var key in extension) {\n        if (hasOwn.call(extension, key) && !hasOwn.call(obj, key)) {\n          obj[key] = extension[key];\n        }\n      }\n    }\n  }\n\n  return obj;\n};\n\nexports.runtimeProperty = function(name) {\n  return b.memberExpression(\n    b.identifier(\"regeneratorRuntime\"),\n    b.identifier(name),\n    false\n  );\n};\n\n// Inspired by the isReference function from ast-util:\n// https://github.com/eventualbuddha/ast-util/blob/9bf91c5ce8/lib/index.js#L466-L506\nexports.isReference = function(path, name) {\n  var node = path.value;\n\n  if (!n.Identifier.check(node)) {\n    return false;\n  }\n\n  if (name && node.name !== name) {\n    return false;\n  }\n\n  var parent = path.parent.value;\n\n  switch (parent.type) {\n  case \"VariableDeclarator\":\n    return path.name === \"init\";\n\n  case \"MemberExpression\":\n    return path.name === \"object\" || (\n      parent.computed && path.name === \"property\"\n    );\n\n  case \"FunctionExpression\":\n  case \"FunctionDeclaration\":\n  case \"ArrowFunctionExpression\":\n    if (path.name === \"id\") {\n      return false;\n    }\n\n    if (parent.params === path.parentPath &&\n        parent.params[path.name] === node) {\n      return false;\n    }\n\n    return true;\n\n  case \"ClassDeclaration\":\n  case \"ClassExpression\":\n    return path.name !== \"id\";\n\n  case \"CatchClause\":\n    return path.name !== \"param\";\n\n  case \"Property\":\n  case \"MethodDefinition\":\n    return path.name !== \"key\";\n\n  case \"ImportSpecifier\":\n  case \"ImportDefaultSpecifier\":\n  case \"ImportNamespaceSpecifier\":\n  case \"LabeledStatement\":\n    return false;\n\n  default:\n    return true;\n  }\n};\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\nvar assert = require(\"assert\");\nvar fs = require(\"fs\");\nvar recast = require(\"recast\");\nvar types = recast.types;\nvar n = types.namedTypes;\nvar b = types.builders;\nvar isArray = types.builtInTypes.array;\nvar isObject = types.builtInTypes.object;\nvar NodePath = types.NodePath;\nvar hoist = require(\"./hoist\").hoist;\nvar Emitter = require(\"./emit\").Emitter;\nvar runtimeProperty = require(\"./util\").runtimeProperty;\nvar runtimeWrapMethod = runtimeProperty(\"wrap\");\nvar runtimeMarkMethod = runtimeProperty(\"mark\");\nvar runtimeValuesMethod = runtimeProperty(\"values\");\nvar runtimeAsyncMethod = runtimeProperty(\"async\");\n\nexports.transform = function transform(node, options) {\n  options = options || {};\n\n  node = recast.visit(node, visitor);\n\n  if (options.includeRuntime === true ||\n      (options.includeRuntime === 'if used' && visitor.wasChangeReported())) {\n    injectRuntime(n.File.check(node) ? node.program : node);\n  }\n\n  options.madeChanges = visitor.wasChangeReported();\n\n  return node;\n};\n\nfunction injectRuntime(program) {\n  n.Program.assert(program);\n\n  // Include the runtime by modifying the AST rather than by concatenating\n  // strings. This technique will allow for more accurate source mapping.\n  var runtimePath = require(\"..\").runtime.path;\n  var runtime = fs.readFileSync(runtimePath, \"utf8\");\n  var runtimeBody = recast.parse(runtime, {\n    sourceFileName: runtimePath\n  }).program.body;\n\n  var body = program.body;\n  body.unshift.apply(body, runtimeBody);\n}\n\nvar visitor = types.PathVisitor.fromMethodsObject({\n  visitFunction: function(path) {\n    // Calling this.traverse(path) first makes for a post-order traversal.\n    this.traverse(path);\n\n    var node = path.value;\n\n    if (!node.generator && !node.async) {\n      return;\n    }\n\n    this.reportChanged();\n\n    node.generator = false;\n\n    if (node.expression) {\n      // Transform expression lambdas into normal functions.\n      node.expression = false;\n      node.body = b.blockStatement([\n        b.returnStatement(node.body)\n      ]);\n    }\n\n    if (node.async) {\n      awaitVisitor.visit(path.get(\"body\"));\n    }\n\n    var outerFnId = node.id || (\n      node.id = path.scope.parent.declareTemporary(\"callee$\")\n    );\n\n    var innerFnId = b.identifier(node.id.name + \"$\");\n    var contextId = path.scope.declareTemporary(\"context$\");\n    var argsId = path.scope.declareTemporary(\"args$\");\n    var shouldAliasArguments = renameArguments(path, argsId);\n    var vars = hoist(path);\n\n    if (shouldAliasArguments) {\n      vars = vars || b.variableDeclaration(\"var\", []);\n      vars.declarations.push(b.variableDeclarator(\n        argsId, b.identifier(\"arguments\")\n      ));\n    }\n\n    var emitter = new Emitter(contextId);\n    emitter.explode(path.get(\"body\"));\n\n    var outerBody = [];\n\n    if (vars && vars.declarations.length > 0) {\n      outerBody.push(vars);\n    }\n\n    var wrapArgs = [\n      emitter.getContextFunction(innerFnId),\n      // Async functions don't care about the outer function because they\n      // don't need it to be marked and don't inherit from its .prototype.\n      node.async ? b.literal(null) : outerFnId,\n      b.thisExpression()\n    ];\n\n    var tryEntryList = emitter.getTryEntryList();\n    if (tryEntryList) {\n      wrapArgs.push(tryEntryList);\n    }\n\n    var wrapCall = b.callExpression(\n      node.async ? runtimeAsyncMethod : runtimeWrapMethod,\n      wrapArgs\n    );\n\n    outerBody.push(b.returnStatement(wrapCall));\n    node.body = b.blockStatement(outerBody);\n\n    if (node.async) {\n      node.async = false;\n      return;\n    }\n\n    if (n.FunctionDeclaration.check(node)) {\n      var pp = path.parent;\n\n      while (pp && !(n.BlockStatement.check(pp.value) ||\n                     n.Program.check(pp.value))) {\n        pp = pp.parent;\n      }\n\n      if (!pp) {\n        return;\n      }\n\n      // Here we turn the FunctionDeclaration into a named\n      // FunctionExpression that will be assigned to a variable of the\n      // same name at the top of the enclosing block. This is important\n      // for a very subtle reason: named function expressions can refer to\n      // themselves by name without fear that the binding may change due\n      // to code executing outside the function, whereas function\n      // declarations are vulnerable to the following rebinding:\n      //\n      //   function f() { return f }\n      //   var g = f;\n      //   f = \"asdf\";\n      //   g(); // \"asdf\"\n      //\n      // One way to prevent the problem illustrated above is to transform\n      // the function declaration thus:\n      //\n      //   var f = function f() { return f };\n      //   var g = f;\n      //   f = \"asdf\";\n      //   g(); // f\n      //   g()()()()(); // f\n      //\n      // In the code below, we transform generator function declarations\n      // in the following way:\n      //\n      //   gen().next(); // { value: gen, done: true }\n      //   function *gen() {\n      //     return gen;\n      //   }\n      //\n      // becomes something like\n      //\n      //   var gen = runtime.mark(function *gen() {\n      //     return gen;\n      //   });\n      //   gen().next(); // { value: gen, done: true }\n      //\n      // which ensures that the generator body can always reliably refer\n      // to gen by name.\n\n      // Remove the FunctionDeclaration so that we can add it back as a\n      // FunctionExpression passed to runtime.mark.\n      path.replace();\n\n      // Change the type of the function to be an expression instead of a\n      // declaration. Note that all the other fields are the same.\n      node.type = \"FunctionExpression\";\n\n      var varDecl = b.variableDeclaration(\"var\", [\n        b.variableDeclarator(\n          node.id,\n          b.callExpression(runtimeMarkMethod, [node])\n        )\n      ]);\n\n      if (node.comments) {\n        // Copy any comments preceding the function declaration to the\n        // variable declaration, to avoid weird formatting consequences.\n        varDecl.comments = node.comments;\n        node.comments = null;\n      }\n\n      var bodyPath = pp.get(\"body\");\n      var bodyLen = bodyPath.value.length;\n\n      for (var i = 0; i < bodyLen; ++i) {\n        var firstStmtPath = bodyPath.get(i);\n        if (!shouldNotHoistAbove(firstStmtPath)) {\n          firstStmtPath.insertBefore(varDecl);\n          return;\n        }\n      }\n\n      bodyPath.push(varDecl);\n\n    } else {\n      n.FunctionExpression.assert(node);\n      return b.callExpression(runtimeMarkMethod, [node]);\n    }\n  },\n\n  visitForOfStatement: function(path) {\n    this.traverse(path);\n\n    var node = path.value;\n    var tempIterId = path.scope.declareTemporary(\"t$\");\n    var tempIterDecl = b.variableDeclarator(\n      tempIterId,\n      b.callExpression(\n        runtimeValuesMethod,\n        [node.right]\n      )\n    );\n\n    var tempInfoId = path.scope.declareTemporary(\"t$\");\n    var tempInfoDecl = b.variableDeclarator(tempInfoId, null);\n\n    var init = node.left;\n    var loopId;\n    if (n.VariableDeclaration.check(init)) {\n      loopId = init.declarations[0].id;\n      init.declarations.push(tempIterDecl, tempInfoDecl);\n    } else {\n      loopId = init;\n      init = b.variableDeclaration(\"var\", [\n        tempIterDecl,\n        tempInfoDecl\n      ]);\n    }\n    n.Identifier.assert(loopId);\n\n    var loopIdAssignExprStmt = b.expressionStatement(\n      b.assignmentExpression(\n        \"=\",\n        loopId,\n        b.memberExpression(\n          tempInfoId,\n          b.identifier(\"value\"),\n          false\n        )\n      )\n    );\n\n    if (n.BlockStatement.check(node.body)) {\n      node.body.body.unshift(loopIdAssignExprStmt);\n    } else {\n      node.body = b.blockStatement([\n        loopIdAssignExprStmt,\n        node.body\n      ]);\n    }\n\n    return b.forStatement(\n      init,\n      b.unaryExpression(\n        \"!\",\n        b.memberExpression(\n          b.assignmentExpression(\n            \"=\",\n            tempInfoId,\n            b.callExpression(\n              b.memberExpression(\n                tempIterId,\n                b.identifier(\"next\"),\n                false\n              ),\n              []\n            )\n          ),\n          b.identifier(\"done\"),\n          false\n        )\n      ),\n      null,\n      node.body\n    );\n  }\n});\n\nfunction shouldNotHoistAbove(stmtPath) {\n  var value = stmtPath.value;\n  n.Statement.assert(value);\n\n  // If the first statement is a \"use strict\" declaration, make sure to\n  // insert hoisted declarations afterwards.\n  if (n.ExpressionStatement.check(value) &&\n      n.Literal.check(value.expression) &&\n      value.expression.value === \"use strict\") {\n    return true;\n  }\n\n  if (n.VariableDeclaration.check(value)) {\n    for (var i = 0; i < value.declarations.length; ++i) {\n      var decl = value.declarations[i];\n      if (n.CallExpression.check(decl.init) &&\n          types.astNodesAreEquivalent(decl.init.callee,\n                                      runtimeMarkMethod)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction renameArguments(funcPath, argsId) {\n  assert.ok(funcPath instanceof types.NodePath);\n  var func = funcPath.value;\n  var didReplaceArguments = false;\n  var hasImplicitArguments = false;\n\n  recast.visit(funcPath, {\n    visitFunction: function(path) {\n      if (path.value === func) {\n        hasImplicitArguments = !path.scope.lookup(\"arguments\");\n        this.traverse(path);\n      } else {\n        return false;\n      }\n    },\n\n    visitIdentifier: function(path) {\n      if (path.value.name === \"arguments\") {\n        var isMemberProperty =\n          n.MemberExpression.check(path.parent.node) &&\n          path.name === \"property\" &&\n          !path.parent.node.computed;\n\n        if (!isMemberProperty) {\n          path.replace(argsId);\n          didReplaceArguments = true;\n          return false;\n        }\n      }\n\n      this.traverse(path);\n    }\n  });\n\n  // If the traversal replaced any arguments identifiers, and those\n  // identifiers were free variables, then we need to alias the outer\n  // function's arguments object to the variable named by argsId.\n  return didReplaceArguments && hasImplicitArguments;\n}\n\nvar awaitVisitor = types.PathVisitor.fromMethodsObject({\n  visitFunction: function(path) {\n    return false; // Don't descend into nested function scopes.\n  },\n\n  visitAwaitExpression: function(path) {\n    // Convert await expressions to yield expressions.\n    return b.yieldExpression(path.value.argument, false);\n  }\n});\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\nvar assert = require(\"assert\");\nvar path = require(\"path\");\nvar fs = require(\"fs\");\nvar through = require(\"through\");\nvar transform = require(\"./lib/visit\").transform;\nvar utils = require(\"./lib/util\");\nvar recast = require(\"recast\");\nvar types = recast.types;\nvar genOrAsyncFunExp = /\\bfunction\\s*\\*|\\basync\\b/;\nvar blockBindingExp = /\\b(let|const)\\s+/;\n\nfunction exports(file, options) {\n  var data = [];\n  return through(write, end);\n\n  function write(buf) {\n    data.push(buf);\n  }\n\n  function end() {\n    this.queue(compile(data.join(\"\"), options).code);\n    this.queue(null);\n  }\n}\n\n// To get a writable stream for use as a browserify transform, call\n// require(\"regenerator\")().\nmodule.exports = exports;\n\n// To include the runtime globally in the current node process, call\n// require(\"regenerator\").runtime().\nfunction runtime() {\n  require(\"./runtime\");\n}\nexports.runtime = runtime;\nruntime.path = path.join(__dirname, \"runtime.js\");\n\nfunction compile(source, options) {\n  options = normalizeOptions(options);\n\n  if (!genOrAsyncFunExp.test(source)) {\n    return {\n      // Shortcut: no generators or async functions to transform.\n      code: (options.includeRuntime === true ? fs.readFileSync(\n        runtime.path, \"utf-8\"\n      ) + \"\\n\" : \"\") + source\n    };\n  }\n\n  var recastOptions = getRecastOptions(options);\n  var ast = recast.parse(source, recastOptions);\n  var path = new types.NodePath(ast);\n  var programPath = path.get(\"program\");\n\n  if (shouldVarify(source, options)) {\n    // Transpile let/const into var declarations.\n    varifyAst(programPath.node);\n  }\n\n  transform(programPath, options);\n\n  return recast.print(path, recastOptions);\n}\n\nfunction normalizeOptions(options) {\n  options = utils.defaults(options || {}, {\n    includeRuntime: false,\n    supportBlockBinding: true\n  });\n\n  if (!options.esprima) {\n    options.esprima = require(\"esprima-fb\");\n  }\n\n  assert.ok(\n    /harmony/.test(options.esprima.version),\n    \"Bad esprima version: \" + options.esprima.version\n  );\n\n  return options;\n}\n\nfunction getRecastOptions(options) {\n  var recastOptions = {\n    range: true\n  };\n\n  function copy(name) {\n    if (name in options) {\n      recastOptions[name] = options[name];\n    }\n  }\n\n  copy(\"esprima\");\n  copy(\"sourceFileName\");\n  copy(\"sourceMapName\");\n  copy(\"inputSourceMap\");\n  copy(\"sourceRoot\");\n\n  return recastOptions;\n}\n\nfunction shouldVarify(source, options) {\n  var supportBlockBinding = !!options.supportBlockBinding;\n  if (supportBlockBinding) {\n    if (!blockBindingExp.test(source)) {\n      supportBlockBinding = false;\n    }\n  }\n\n  return supportBlockBinding;\n}\n\nfunction varify(source, options) {\n  var recastOptions = getRecastOptions(normalizeOptions(options));\n  var ast = recast.parse(source, recastOptions);\n  varifyAst(ast.program);\n  return recast.print(ast, recastOptions).code;\n}\n\nfunction varifyAst(ast) {\n  types.namedTypes.Program.assert(ast);\n\n  var defsResult = require(\"defs\")(ast, {\n    ast: true,\n    disallowUnknownReferences: false,\n    disallowDuplicated: false,\n    disallowVars: false,\n    loopClosures: \"iife\"\n  });\n\n  if (defsResult.errors) {\n    throw new Error(defsResult.errors.join(\"\\n\"))\n  }\n\n  return ast;\n}\n\n// Convenience for just translating let/const to var declarations.\nexports.varify = varify;\n\n// Transforms a string of source code, returning the { code, map? } result\n// from recast.print.\nexports.compile = compile;\n\n// To modify an AST directly, call require(\"regenerator\").transform(ast).\nexports.transform = transform;\n","\"use strict\";\n\nvar assert = require(\"assert\");\nvar is = require(\"simple-is\");\nvar fmt = require(\"simple-fmt\");\nvar stringmap = require(\"stringmap\");\nvar stringset = require(\"stringset\");\nvar alter = require(\"alter\");\nvar traverse = require(\"ast-traverse\");\nvar breakable = require(\"breakable\");\nvar Scope = require(\"./scope\");\nvar error = require(\"./error\");\nvar getline = error.getline;\nvar options = require(\"./options\");\nvar Stats = require(\"./stats\");\nvar jshint_vars = require(\"./jshint_globals/vars.js\");\n\n\nfunction isConstLet(kind) {\n    return is.someof(kind, [\"const\", \"let\"]);\n}\n\nfunction isVarConstLet(kind) {\n    return is.someof(kind, [\"var\", \"const\", \"let\"]);\n}\n\nfunction isNonFunctionBlock(node) {\n    return node.type === \"BlockStatement\" && is.noneof(node.$parent.type, [\"FunctionDeclaration\", \"FunctionExpression\"]);\n}\n\nfunction isForWithConstLet(node) {\n    return node.type === \"ForStatement\" && node.init && node.init.type === \"VariableDeclaration\" && isConstLet(node.init.kind);\n}\n\nfunction isForInOfWithConstLet(node) {\n    return isForInOf(node) && node.left.type === \"VariableDeclaration\" && isConstLet(node.left.kind);\n}\n\nfunction isForInOf(node) {\n    return is.someof(node.type, [\"ForInStatement\", \"ForOfStatement\"]);\n}\n\nfunction isFunction(node) {\n    return is.someof(node.type, [\"FunctionDeclaration\", \"FunctionExpression\"]);\n}\n\nfunction isLoop(node) {\n    return is.someof(node.type, [\"ForStatement\", \"ForInStatement\", \"ForOfStatement\", \"WhileStatement\", \"DoWhileStatement\"]);\n}\n\nfunction isReference(node) {\n    var parent = node.$parent;\n    return node.$refToScope ||\n        node.type === \"Identifier\" &&\n        !(parent.type === \"VariableDeclarator\" && parent.id === node) && // var|let|const $\n        !(parent.type === \"MemberExpression\" && parent.computed === false && parent.property === node) && // obj.$\n        !(parent.type === \"Property\" && parent.key === node) && // {$: ...}\n        !(parent.type === \"LabeledStatement\" && parent.label === node) && // $: ...\n        !(parent.type === \"CatchClause\" && parent.param === node) && // catch($)\n        !(isFunction(parent) && parent.id === node) && // function $(..\n        !(isFunction(parent) && is.someof(node, parent.params)) && // function f($)..\n        true;\n}\n\nfunction isLvalue(node) {\n    return isReference(node) &&\n        ((node.$parent.type === \"AssignmentExpression\" && node.$parent.left === node) ||\n            (node.$parent.type === \"UpdateExpression\" && node.$parent.argument === node));\n}\n\nfunction createScopes(node, parent) {\n    assert(!node.$scope);\n\n    node.$parent = parent;\n    node.$scope = node.$parent ? node.$parent.$scope : null; // may be overridden\n\n    if (node.type === \"Program\") {\n        // Top-level program is a scope\n        // There's no block-scope under it\n        node.$scope = new Scope({\n            kind: \"hoist\",\n            node: node,\n            parent: null,\n        });\n\n    } else if (isFunction(node)) {\n        // Function is a scope, with params in it\n        // There's no block-scope under it\n\n        node.$scope = new Scope({\n            kind: \"hoist\",\n            node: node,\n            parent: node.$parent.$scope,\n        });\n\n        // function has a name\n        if (node.id) {\n            assert(node.id.type === \"Identifier\");\n\n            if (node.type === \"FunctionDeclaration\") {\n                // Function name goes in parent scope for declared functions\n                node.$parent.$scope.add(node.id.name, \"fun\", node.id, null);\n            } else if (node.type === \"FunctionExpression\") {\n                // Function name goes in function's scope for named function expressions\n                node.$scope.add(node.id.name, \"fun\", node.id, null);\n            } else {\n                assert(false);\n            }\n        }\n\n        node.params.forEach(function(param) {\n            node.$scope.add(param.name, \"param\", param, null);\n        });\n\n    } else if (node.type === \"VariableDeclaration\") {\n        // Variable declarations names goes in current scope\n        assert(isVarConstLet(node.kind));\n        node.declarations.forEach(function(declarator) {\n            assert(declarator.type === \"VariableDeclarator\");\n            var name = declarator.id.name;\n            if (options.disallowVars && node.kind === \"var\") {\n                error(getline(declarator), \"var {0} is not allowed (use let or const)\", name);\n            }\n            node.$scope.add(name, node.kind, declarator.id, declarator.range[1]);\n        });\n\n    } else if (isForWithConstLet(node) || isForInOfWithConstLet(node)) {\n        // For(In/Of) loop with const|let declaration is a scope, with declaration in it\n        // There may be a block-scope under it\n        node.$scope = new Scope({\n            kind: \"block\",\n            node: node,\n            parent: node.$parent.$scope,\n        });\n\n    } else if (isNonFunctionBlock(node)) {\n        // A block node is a scope unless parent is a function\n        node.$scope = new Scope({\n            kind: \"block\",\n            node: node,\n            parent: node.$parent.$scope,\n        });\n\n    } else if (node.type === \"CatchClause\") {\n        var identifier = node.param;\n\n        node.$scope = new Scope({\n            kind: \"catch-block\",\n            node: node,\n            parent: node.$parent.$scope,\n        });\n        node.$scope.add(identifier.name, \"caught\", identifier, null);\n\n        // All hoist-scope keeps track of which variables that are propagated through,\n        // i.e. an reference inside the scope points to a declaration outside the scope.\n        // This is used to mark \"taint\" the name since adding a new variable in the scope,\n        // with a propagated name, would change the meaning of the existing references.\n        //\n        // catch(e) is special because even though e is a variable in its own scope,\n        // we want to make sure that catch(e){let e} is never transformed to\n        // catch(e){var e} (but rather var e$0). For that reason we taint the use of e\n        // in the closest hoist-scope, i.e. where var e$0 belongs.\n        node.$scope.closestHoistScope().markPropagates(identifier.name);\n    }\n}\n\nfunction createTopScope(programScope, environments, globals) {\n    function inject(obj) {\n        for (var name in obj) {\n            var writeable = obj[name];\n            var kind = (writeable ? \"var\" : \"const\");\n            if (topScope.hasOwn(name)) {\n                topScope.remove(name);\n            }\n            topScope.add(name, kind, {loc: {start: {line: -1}}}, -1);\n        }\n    }\n\n    var topScope = new Scope({\n        kind: \"hoist\",\n        node: {},\n        parent: null,\n    });\n\n    var complementary = {\n        undefined: false,\n        Infinity: false,\n        console: false,\n    };\n\n    inject(complementary);\n    inject(jshint_vars.reservedVars);\n    inject(jshint_vars.ecmaIdentifiers);\n    if (environments) {\n        environments.forEach(function(env) {\n            if (!jshint_vars[env]) {\n                error(-1, 'environment \"{0}\" not found', env);\n            } else {\n                inject(jshint_vars[env]);\n            }\n        });\n    }\n    if (globals) {\n        inject(globals);\n    }\n\n    // link it in\n    programScope.parent = topScope;\n    topScope.children.push(programScope);\n\n    return topScope;\n}\n\nfunction setupReferences(ast, allIdentifiers, opts) {\n    var analyze = (is.own(opts, \"analyze\") ? opts.analyze : true);\n\n    function visit(node) {\n        if (!isReference(node)) {\n            return;\n        }\n        allIdentifiers.add(node.name);\n\n        var scope = node.$scope.lookup(node.name);\n        if (analyze && !scope && options.disallowUnknownReferences) {\n            error(getline(node), \"reference to unknown global variable {0}\", node.name);\n        }\n        // check const and let for referenced-before-declaration\n        if (analyze && scope && is.someof(scope.getKind(node.name), [\"const\", \"let\"])) {\n            var allowedFromPos = scope.getFromPos(node.name);\n            var referencedAtPos = node.range[0];\n            assert(is.finitenumber(allowedFromPos));\n            assert(is.finitenumber(referencedAtPos));\n            if (referencedAtPos < allowedFromPos) {\n                if (!node.$scope.hasFunctionScopeBetween(scope)) {\n                    error(getline(node), \"{0} is referenced before its declaration\", node.name);\n                }\n            }\n        }\n        node.$refToScope = scope;\n    }\n\n    traverse(ast, {pre: visit});\n}\n\n// TODO for loops init and body props are parallel to each other but init scope is outer that of body\n// TODO is this a problem?\n\nfunction varify(ast, stats, allIdentifiers, changes) {\n    function unique(name) {\n        assert(allIdentifiers.has(name));\n        for (var cnt = 0; ; cnt++) {\n            var genName = name + \"$\" + String(cnt);\n            if (!allIdentifiers.has(genName)) {\n                return genName;\n            }\n        }\n    }\n\n    function renameDeclarations(node) {\n        if (node.type === \"VariableDeclaration\" && isConstLet(node.kind)) {\n            var hoistScope = node.$scope.closestHoistScope();\n            var origScope = node.$scope;\n\n            // text change const|let => var\n            changes.push({\n                start: node.range[0],\n                end: node.range[0] + node.kind.length,\n                str: \"var\",\n            });\n\n            node.declarations.forEach(function(declarator) {\n                assert(declarator.type === \"VariableDeclarator\");\n                var name = declarator.id.name;\n\n                stats.declarator(node.kind);\n\n                // rename if\n                // 1) name already exists in hoistScope, or\n                // 2) name is already propagated (passed) through hoistScope or manually tainted\n                var rename = (origScope !== hoistScope &&\n                    (hoistScope.hasOwn(name) || hoistScope.doesPropagate(name)));\n\n                var newName = (rename ? unique(name) : name);\n\n                origScope.remove(name);\n                hoistScope.add(newName, \"var\", declarator.id, declarator.range[1]);\n\n                origScope.moves = origScope.moves || stringmap();\n                origScope.moves.set(name, {\n                    name: newName,\n                    scope: hoistScope,\n                });\n\n                allIdentifiers.add(newName);\n\n                if (newName !== name) {\n                    stats.rename(name, newName, getline(declarator));\n\n                    declarator.id.originalName = name;\n                    declarator.id.name = newName;\n\n                    // textchange var x => var x$1\n                    changes.push({\n                        start: declarator.id.range[0],\n                        end: declarator.id.range[1],\n                        str: newName,\n                    });\n                }\n            });\n\n            // ast change const|let => var\n            node.kind = \"var\";\n        }\n    }\n\n    function renameReferences(node) {\n        if (!node.$refToScope) {\n            return;\n        }\n        var move = node.$refToScope.moves && node.$refToScope.moves.get(node.name);\n        if (!move) {\n            return;\n        }\n        node.$refToScope = move.scope;\n\n        if (node.name !== move.name) {\n            node.originalName = node.name;\n            node.name = move.name;\n\n            if (node.alterop) {\n                // node has no range because it is the result of another alter operation\n                var existingOp = null;\n                for (var i = 0; i < changes.length; i++) {\n                    var op = changes[i];\n                    if (op.node === node) {\n                        existingOp = op;\n                        break;\n                    }\n                }\n                assert(existingOp);\n\n                // modify op\n                existingOp.str = move.name;\n            } else {\n                changes.push({\n                    start: node.range[0],\n                    end: node.range[1],\n                    str: move.name,\n                });\n            }\n        }\n    }\n\n    traverse(ast, {pre: renameDeclarations});\n    traverse(ast, {pre: renameReferences});\n    ast.$scope.traverse({pre: function(scope) {\n        delete scope.moves;\n    }});\n}\n\n\nfunction detectLoopClosures(ast) {\n    traverse(ast, {pre: visit});\n\n    function detectIifyBodyBlockers(body, node) {\n        return breakable(function(brk) {\n            traverse(body, {pre: function(n) {\n                // if we hit an inner function of the loop body, don't traverse further\n                if (isFunction(n)) {\n                    return false;\n                }\n\n                var err = true; // reset to false in else-statement below\n                var msg = \"loop-variable {0} is captured by a loop-closure that can't be transformed due to use of {1} at line {2}\";\n                if (n.type === \"BreakStatement\") {\n                    error(getline(node), msg, node.name, \"break\", getline(n));\n                } else if (n.type === \"ContinueStatement\") {\n                    error(getline(node), msg, node.name, \"continue\", getline(n));\n                } else if (n.type === \"ReturnStatement\") {\n                    error(getline(node), msg, node.name, \"return\", getline(n));\n                } else if (n.type === \"YieldExpression\") {\n                    error(getline(node), msg, node.name, \"yield\", getline(n));\n                } else if (n.type === \"Identifier\" && n.name === \"arguments\") {\n                    error(getline(node), msg, node.name, \"arguments\", getline(n));\n                } else if (n.type === \"VariableDeclaration\" && n.kind === \"var\") {\n                    error(getline(node), msg, node.name, \"var\", getline(n));\n                } else {\n                    err = false;\n                }\n                if (err) {\n                    brk(true); // break traversal\n                }\n            }});\n            return false;\n        });\n    }\n\n    function visit(node) {\n        // forbidden pattern:\n        // <any>* <loop> <non-fn>* <constlet-def> <any>* <fn> <any>* <constlet-ref>\n        var loopNode = null;\n        if (isReference(node) && node.$refToScope && isConstLet(node.$refToScope.getKind(node.name))) {\n            // traverse nodes up towards root from constlet-def\n            // if we hit a function (before a loop) - ok!\n            // if we hit a loop - maybe-ouch\n            // if we reach root - ok!\n            for (var n = node.$refToScope.node; ; ) {\n                if (isFunction(n)) {\n                    // we're ok (function-local)\n                    return;\n                } else if (isLoop(n)) {\n                    loopNode = n;\n                    // maybe not ok (between loop and function)\n                    break;\n                }\n                n = n.$parent;\n                if (!n) {\n                    // ok (reached root)\n                    return;\n                }\n            }\n\n            assert(isLoop(loopNode));\n\n            // traverse scopes from reference-scope up towards definition-scope\n            // if we hit a function, ouch!\n            var defScope = node.$refToScope;\n            var generateIIFE = (options.loopClosures === \"iife\");\n\n            for (var s = node.$scope; s; s = s.parent) {\n                if (s === defScope) {\n                    // we're ok\n                    return;\n                } else if (isFunction(s.node)) {\n                    // not ok (there's a function between the reference and definition)\n                    // may be transformable via IIFE\n\n                    if (!generateIIFE) {\n                        var msg = \"loop-variable {0} is captured by a loop-closure. Tried \\\"loopClosures\\\": \\\"iife\\\" in defs-config.json?\";\n                        return error(getline(node), msg, node.name);\n                    }\n\n                    // here be dragons\n                    // for (let x = ..; .. ; ..) { (function(){x})() } is forbidden because of current\n                    // spec and VM status\n                    if (loopNode.type === \"ForStatement\" && defScope.node === loopNode) {\n                        var declarationNode = defScope.getNode(node.name);\n                        return error(getline(declarationNode), \"Not yet specced ES6 feature. {0} is declared in for-loop header and then captured in loop closure\", declarationNode.name);\n                    }\n\n                    // speak now or forever hold your peace\n                    if (detectIifyBodyBlockers(loopNode.body, node)) {\n                        // error already generated\n                        return;\n                    }\n\n                    // mark loop for IIFE-insertion\n                    loopNode.$iify = true;\n                }\n            }\n        }\n    }\n}\n\nfunction transformLoopClosures(root, ops, options) {\n    function insertOp(pos, str, node) {\n        var op = {\n            start: pos,\n            end: pos,\n            str: str,\n        }\n        if (node) {\n            op.node = node;\n        }\n        ops.push(op);\n    }\n\n    traverse(root, {pre: function(node) {\n        if (!node.$iify) {\n            return;\n        }\n\n        var hasBlock = (node.body.type === \"BlockStatement\");\n\n        var insertHead = (hasBlock ?\n            node.body.range[0] + 1 : // just after body {\n            node.body.range[0]); // just before existing expression\n        var insertFoot = (hasBlock ?\n            node.body.range[1] - 1 : // just before body }\n            node.body.range[1]);  // just after existing expression\n\n        var forInName = (isForInOf(node) && node.left.declarations[0].id.name);;\n        var iifeHead = fmt(\"(function({0}){\", forInName ? forInName : \"\");\n        var iifeTail = fmt(\"}).call(this{0});\", forInName ? \", \" + forInName : \"\");\n\n        // modify AST\n        var iifeFragment = options.parse(iifeHead + iifeTail);\n        var iifeExpressionStatement = iifeFragment.body[0];\n        var iifeBlockStatement = iifeExpressionStatement.expression.callee.object.body;\n\n        if (hasBlock) {\n            var forBlockStatement = node.body;\n            var tmp = forBlockStatement.body;\n            forBlockStatement.body = [iifeExpressionStatement];\n            iifeBlockStatement.body = tmp;\n        } else {\n            var tmp$0 = node.body;\n            node.body = iifeExpressionStatement;\n            iifeBlockStatement.body[0] = tmp$0;\n        }\n\n        // create ops\n        insertOp(insertHead, iifeHead);\n\n        if (forInName) {\n            insertOp(insertFoot, \"}).call(this, \");\n\n            var args = iifeExpressionStatement.expression.arguments;\n            var iifeArgumentIdentifier = args[1];\n            iifeArgumentIdentifier.alterop = true;\n            insertOp(insertFoot, forInName, iifeArgumentIdentifier);\n\n            insertOp(insertFoot, \");\");\n        } else {\n            insertOp(insertFoot, iifeTail);\n        }\n    }});\n}\n\nfunction detectConstAssignment(ast) {\n    traverse(ast, {pre: function(node) {\n        if (isLvalue(node)) {\n            var scope = node.$scope.lookup(node.name);\n            if (scope && scope.getKind(node.name) === \"const\") {\n                error(getline(node), \"can't assign to const variable {0}\", node.name);\n            }\n        }\n    }});\n}\n\nfunction detectConstantLets(ast) {\n    traverse(ast, {pre: function(node) {\n        if (isLvalue(node)) {\n            var scope = node.$scope.lookup(node.name);\n            if (scope) {\n                scope.markWrite(node.name);\n            }\n        }\n    }});\n\n    ast.$scope.detectUnmodifiedLets();\n}\n\nfunction setupScopeAndReferences(root, opts) {\n    // setup scopes\n    traverse(root, {pre: createScopes});\n    var topScope = createTopScope(root.$scope, options.environments, options.globals);\n\n    // allIdentifiers contains all declared and referenced vars\n    // collect all declaration names (including those in topScope)\n    var allIdentifiers = stringset();\n    topScope.traverse({pre: function(scope) {\n        allIdentifiers.addMany(scope.decls.keys());\n    }});\n\n    // setup node.$refToScope, check for errors.\n    // also collects all referenced names to allIdentifiers\n    setupReferences(root, allIdentifiers, opts);\n    return allIdentifiers;\n}\n\nfunction cleanupTree(root) {\n    traverse(root, {pre: function(node) {\n        for (var prop in node) {\n            if (prop[0] === \"$\") {\n                delete node[prop];\n            }\n        }\n    }});\n}\n\nfunction run(src, config) {\n    // alter the options singleton with user configuration\n    for (var key in config) {\n        options[key] = config[key];\n    }\n\n    var parsed;\n\n    if (is.object(src)) {\n        if (!options.ast) {\n            return {\n                errors: [\n                    \"Can't produce string output when input is an AST. \" +\n                    \"Did you forget to set options.ast = true?\"\n                ],\n            };\n        }\n\n        // Received an AST object as src, so no need to parse it.\n        parsed = src;\n\n    } else if (is.string(src)) {\n        try {\n            parsed = options.parse(src, {\n                loc: true,\n                range: true,\n            });\n        } catch (e) {\n            return {\n                errors: [\n                    fmt(\"line {0} column {1}: Error during input file parsing\\n{2}\\n{3}\",\n                        e.lineNumber,\n                        e.column,\n                        src.split(\"\\n\")[e.lineNumber - 1],\n                        fmt.repeat(\" \", e.column - 1) + \"^\")\n                ],\n            };\n        }\n\n    } else {\n        return {\n            errors: [\"Input was neither an AST object nor a string.\"],\n        };\n    }\n\n    var ast = parsed;\n\n    // TODO detect unused variables (never read)\n    error.reset();\n\n    var allIdentifiers = setupScopeAndReferences(ast, {});\n\n    // static analysis passes\n    detectLoopClosures(ast);\n    detectConstAssignment(ast);\n    //detectConstantLets(ast);\n\n    var changes = [];\n    transformLoopClosures(ast, changes, options);\n\n    //ast.$scope.print(); process.exit(-1);\n\n    if (error.errors.length >= 1) {\n        return {\n            errors: error.errors,\n        };\n    }\n\n    if (changes.length > 0) {\n        cleanupTree(ast);\n        allIdentifiers = setupScopeAndReferences(ast, {analyze: false});\n    }\n    assert(error.errors.length === 0);\n\n    // change constlet declarations to var, renamed if needed\n    // varify modifies the scopes and AST accordingly and\n    // returns a list of change fragments (to use with alter)\n    var stats = new Stats();\n    varify(ast, stats, allIdentifiers, changes);\n\n    if (options.ast) {\n        // return the modified AST instead of src code\n        // get rid of all added $ properties first, such as $parent and $scope\n        cleanupTree(ast);\n        return {\n            stats: stats,\n            ast: ast,\n        };\n    } else {\n        // apply changes produced by varify and return the transformed src\n        var transformedSrc = alter(src, changes);\n        return {\n            stats: stats,\n            src: transformedSrc,\n        };\n    }\n}\n\nmodule.exports = run;\n","\"use strict\";\n\nvar fmt = require(\"simple-fmt\");\nvar assert = require(\"assert\");\n\nfunction error(line, var_args) {\n    assert(arguments.length >= 2);\n\n    var msg = (arguments.length === 2 ?\n        String(var_args) : fmt.apply(fmt, Array.prototype.slice.call(arguments, 1)));\n\n    error.errors.push(line === -1 ? msg : fmt(\"line {0}: {1}\", line, msg));\n}\n\nerror.reset = function() {\n    error.errors = [];\n};\n\nerror.getline = function(node) {\n    if (node && node.loc && node.loc.start) {\n        return node.loc.start.line;\n    }\n    return -1;\n};\n\nerror.reset();\n\nmodule.exports = error;\n","// jshint -W001\n\n\"use strict\";\n\n// Identifiers provided by the ECMAScript standard.\n\nexports.reservedVars = {\n\targuments : false,\n\tNaN       : false\n};\n\nexports.ecmaIdentifiers = {\n\tArray              : false,\n\tBoolean            : false,\n\tDate               : false,\n\tdecodeURI          : false,\n\tdecodeURIComponent : false,\n\tencodeURI          : false,\n\tencodeURIComponent : false,\n\tError              : false,\n\t\"eval\"             : false,\n\tEvalError          : false,\n\tFunction           : false,\n\thasOwnProperty     : false,\n\tisFinite           : false,\n\tisNaN              : false,\n\tJSON               : false,\n\tMath               : false,\n\tMap                : false,\n\tNumber             : false,\n\tObject             : false,\n\tparseInt           : false,\n\tparseFloat         : false,\n\tRangeError         : false,\n\tReferenceError     : false,\n\tRegExp             : false,\n\tSet                : false,\n\tString             : false,\n\tSyntaxError        : false,\n\tTypeError          : false,\n\tURIError           : false,\n\tWeakMap            : false\n};\n\n// Global variables commonly provided by a web browser environment.\n\nexports.browser = {\n\tArrayBuffer          : false,\n\tArrayBufferView      : false,\n\tAudio                : false,\n\tBlob                 : false,\n\taddEventListener     : false,\n\tapplicationCache     : false,\n\tatob                 : false,\n\tblur                 : false,\n\tbtoa                 : false,\n\tclearInterval        : false,\n\tclearTimeout         : false,\n\tclose                : false,\n\tclosed               : false,\n\tDataView             : false,\n\tDOMParser            : false,\n\tdefaultStatus        : false,\n\tdocument             : false,\n\tElement              : false,\n\tevent                : false,\n\tFileReader           : false,\n\tFloat32Array         : false,\n\tFloat64Array         : false,\n\tFormData             : false,\n\tfocus                : false,\n\tframes               : false,\n\tgetComputedStyle     : false,\n\tHTMLElement          : false,\n\tHTMLAnchorElement    : false,\n\tHTMLBaseElement      : false,\n\tHTMLBlockquoteElement: false,\n\tHTMLBodyElement      : false,\n\tHTMLBRElement        : false,\n\tHTMLButtonElement    : false,\n\tHTMLCanvasElement    : false,\n\tHTMLDirectoryElement : false,\n\tHTMLDivElement       : false,\n\tHTMLDListElement     : false,\n\tHTMLFieldSetElement  : false,\n\tHTMLFontElement      : false,\n\tHTMLFormElement      : false,\n\tHTMLFrameElement     : false,\n\tHTMLFrameSetElement  : false,\n\tHTMLHeadElement      : false,\n\tHTMLHeadingElement   : false,\n\tHTMLHRElement        : false,\n\tHTMLHtmlElement      : false,\n\tHTMLIFrameElement    : false,\n\tHTMLImageElement     : false,\n\tHTMLInputElement     : false,\n\tHTMLIsIndexElement   : false,\n\tHTMLLabelElement     : false,\n\tHTMLLayerElement     : false,\n\tHTMLLegendElement    : false,\n\tHTMLLIElement        : false,\n\tHTMLLinkElement      : false,\n\tHTMLMapElement       : false,\n\tHTMLMenuElement      : false,\n\tHTMLMetaElement      : false,\n\tHTMLModElement       : false,\n\tHTMLObjectElement    : false,\n\tHTMLOListElement     : false,\n\tHTMLOptGroupElement  : false,\n\tHTMLOptionElement    : false,\n\tHTMLParagraphElement : false,\n\tHTMLParamElement     : false,\n\tHTMLPreElement       : false,\n\tHTMLQuoteElement     : false,\n\tHTMLScriptElement    : false,\n\tHTMLSelectElement    : false,\n\tHTMLStyleElement     : false,\n\tHTMLTableCaptionElement: false,\n\tHTMLTableCellElement : false,\n\tHTMLTableColElement  : false,\n\tHTMLTableElement     : false,\n\tHTMLTableRowElement  : false,\n\tHTMLTableSectionElement: false,\n\tHTMLTextAreaElement  : false,\n\tHTMLTitleElement     : false,\n\tHTMLUListElement     : false,\n\tHTMLVideoElement     : false,\n\thistory              : false,\n\tInt16Array           : false,\n\tInt32Array           : false,\n\tInt8Array            : false,\n\tImage                : false,\n\tlength               : false,\n\tlocalStorage         : false,\n\tlocation             : false,\n\tMessageChannel       : false,\n\tMessageEvent         : false,\n\tMessagePort          : false,\n\tmoveBy               : false,\n\tmoveTo               : false,\n\tMutationObserver     : false,\n\tname                 : false,\n\tNode                 : false,\n\tNodeFilter           : false,\n\tnavigator            : false,\n\tonbeforeunload       : true,\n\tonblur               : true,\n\tonerror              : true,\n\tonfocus              : true,\n\tonload               : true,\n\tonresize             : true,\n\tonunload             : true,\n\topen                 : false,\n\topenDatabase         : false,\n\topener               : false,\n\tOption               : false,\n\tparent               : false,\n\tprint                : false,\n\tremoveEventListener  : false,\n\tresizeBy             : false,\n\tresizeTo             : false,\n\tscreen               : false,\n\tscroll               : false,\n\tscrollBy             : false,\n\tscrollTo             : false,\n\tsessionStorage       : false,\n\tsetInterval          : false,\n\tsetTimeout           : false,\n\tSharedWorker         : false,\n\tstatus               : false,\n\ttop                  : false,\n\tUint16Array          : false,\n\tUint32Array          : false,\n\tUint8Array           : false,\n\tUint8ClampedArray    : false,\n\tWebSocket            : false,\n\twindow               : false,\n\tWorker               : false,\n\tXMLHttpRequest       : false,\n\tXMLSerializer        : false,\n\tXPathEvaluator       : false,\n\tXPathException       : false,\n\tXPathExpression      : false,\n\tXPathNamespace       : false,\n\tXPathNSResolver      : false,\n\tXPathResult          : false\n};\n\nexports.devel = {\n\talert  : false,\n\tconfirm: false,\n\tconsole: false,\n\tDebug  : false,\n\topera  : false,\n\tprompt : false\n};\n\nexports.worker = {\n\timportScripts: true,\n\tpostMessage  : true,\n\tself         : true\n};\n\n// Widely adopted global names that are not part of ECMAScript standard\nexports.nonstandard = {\n\tescape  : false,\n\tunescape: false\n};\n\n// Globals provided by popular JavaScript environments.\n\nexports.couch = {\n\t\"require\" : false,\n\trespond   : false,\n\tgetRow    : false,\n\temit      : false,\n\tsend      : false,\n\tstart     : false,\n\tsum       : false,\n\tlog       : false,\n\texports   : false,\n\tmodule    : false,\n\tprovides  : false\n};\n\nexports.node = {\n\t__filename   : false,\n\t__dirname    : false,\n\tBuffer       : false,\n\tDataView     : false,\n\tconsole      : false,\n\texports      : true,  // In Node it is ok to exports = module.exports = foo();\n\tGLOBAL       : false,\n\tglobal       : false,\n\tmodule       : false,\n\tprocess      : false,\n\trequire      : false,\n\tsetTimeout   : false,\n\tclearTimeout : false,\n\tsetInterval  : false,\n\tclearInterval: false\n};\n\nexports.phantom = {\n\tphantom      : true,\n\trequire      : true,\n\tWebPage      : true\n};\n\nexports.rhino = {\n\tdefineClass  : false,\n\tdeserialize  : false,\n\tgc           : false,\n\thelp         : false,\n\timportPackage: false,\n\t\"java\"       : false,\n\tload         : false,\n\tloadClass    : false,\n\tprint        : false,\n\tquit         : false,\n\treadFile     : false,\n\treadUrl      : false,\n\trunCommand   : false,\n\tseal         : false,\n\tserialize    : false,\n\tspawn        : false,\n\tsync         : false,\n\ttoint32      : false,\n\tversion      : false\n};\n\nexports.wsh = {\n\tActiveXObject            : true,\n\tEnumerator               : true,\n\tGetObject                : true,\n\tScriptEngine             : true,\n\tScriptEngineBuildVersion : true,\n\tScriptEngineMajorVersion : true,\n\tScriptEngineMinorVersion : true,\n\tVBArray                  : true,\n\tWSH                      : true,\n\tWScript                  : true,\n\tXDomainRequest           : true\n};\n\n// Globals provided by popular JavaScript libraries.\n\nexports.dojo = {\n\tdojo     : false,\n\tdijit    : false,\n\tdojox    : false,\n\tdefine\t : false,\n\t\"require\": false\n};\n\nexports.jquery = {\n\t\"$\"    : false,\n\tjQuery : false\n};\n\nexports.mootools = {\n\t\"$\"           : false,\n\t\"$$\"          : false,\n\tAsset         : false,\n\tBrowser       : false,\n\tChain         : false,\n\tClass         : false,\n\tColor         : false,\n\tCookie        : false,\n\tCore          : false,\n\tDocument      : false,\n\tDomReady      : false,\n\tDOMEvent      : false,\n\tDOMReady      : false,\n\tDrag          : false,\n\tElement       : false,\n\tElements      : false,\n\tEvent         : false,\n\tEvents        : false,\n\tFx            : false,\n\tGroup         : false,\n\tHash          : false,\n\tHtmlTable     : false,\n\tIframe        : false,\n\tIframeShim    : false,\n\tInputValidator: false,\n\tinstanceOf    : false,\n\tKeyboard      : false,\n\tLocale        : false,\n\tMask          : false,\n\tMooTools      : false,\n\tNative        : false,\n\tOptions       : false,\n\tOverText      : false,\n\tRequest       : false,\n\tScroller      : false,\n\tSlick         : false,\n\tSlider        : false,\n\tSortables     : false,\n\tSpinner       : false,\n\tSwiff         : false,\n\tTips          : false,\n\tType          : false,\n\ttypeOf        : false,\n\tURI           : false,\n\tWindow        : false\n};\n\nexports.prototypejs = {\n\t\"$\"               : false,\n\t\"$$\"              : false,\n\t\"$A\"              : false,\n\t\"$F\"              : false,\n\t\"$H\"              : false,\n\t\"$R\"              : false,\n\t\"$break\"          : false,\n\t\"$continue\"       : false,\n\t\"$w\"              : false,\n\tAbstract          : false,\n\tAjax              : false,\n\tClass             : false,\n\tEnumerable        : false,\n\tElement           : false,\n\tEvent             : false,\n\tField             : false,\n\tForm              : false,\n\tHash              : false,\n\tInsertion         : false,\n\tObjectRange       : false,\n\tPeriodicalExecuter: false,\n\tPosition          : false,\n\tPrototype         : false,\n\tSelector          : false,\n\tTemplate          : false,\n\tToggle            : false,\n\tTry               : false,\n\tAutocompleter     : false,\n\tBuilder           : false,\n\tControl           : false,\n\tDraggable         : false,\n\tDraggables        : false,\n\tDroppables        : false,\n\tEffect            : false,\n\tSortable          : false,\n\tSortableObserver  : false,\n\tSound             : false,\n\tScriptaculous     : false\n};\n\nexports.yui = {\n\tYUI       : false,\n\tY         : false,\n\tYUI_config: false\n};\n\n","// default configuration\n\nmodule.exports = {\n    disallowVars: false,\n    disallowDuplicated: true,\n    disallowUnknownReferences: true,\n    parse: require(\"esprima-fb\").parse,\n};\n","\"use strict\";\n\nvar assert = require(\"assert\");\nvar stringmap = require(\"stringmap\");\nvar stringset = require(\"stringset\");\nvar is = require(\"simple-is\");\nvar fmt = require(\"simple-fmt\");\nvar error = require(\"./error\");\nvar getline = error.getline;\nvar options = require(\"./options\");\n\nfunction Scope(args) {\n    assert(is.someof(args.kind, [\"hoist\", \"block\", \"catch-block\"]));\n    assert(is.object(args.node));\n    assert(args.parent === null || is.object(args.parent));\n\n    // kind === \"hoist\": function scopes, program scope, injected globals\n    // kind === \"block\": ES6 block scopes\n    // kind === \"catch-block\": catch block scopes\n    this.kind = args.kind;\n\n    // the AST node the block corresponds to\n    this.node = args.node;\n\n    // parent scope\n    this.parent = args.parent;\n\n    // children scopes for easier traversal (populated internally)\n    this.children = [];\n\n    // scope declarations. decls[variable_name] = {\n    //     kind: \"fun\" for functions,\n    //           \"param\" for function parameters,\n    //           \"caught\" for catch parameter\n    //           \"var\",\n    //           \"const\",\n    //           \"let\"\n    //     node: the AST node the declaration corresponds to\n    //     from: source code index from which it is visible at earliest\n    //           (only stored for \"const\", \"let\" [and \"var\"] nodes)\n    // }\n    this.decls = stringmap();\n\n    // names of all declarations within this scope that was ever written\n    // TODO move to decls.w?\n    // TODO create corresponding read?\n    this.written = stringset();\n\n    // names of all variables declared outside this hoist scope but\n    // referenced in this scope (immediately or in child).\n    // only stored on hoist scopes for efficiency\n    // (because we currently generate lots of empty block scopes)\n    this.propagates = (this.kind === \"hoist\" ? stringset() : null);\n\n    // scopes register themselves with their parents for easier traversal\n    if (this.parent) {\n        this.parent.children.push(this);\n    }\n}\n\nScope.prototype.print = function(indent) {\n    indent = indent || 0;\n    var scope = this;\n    var names = this.decls.keys().map(function(name) {\n        return fmt(\"{0} [{1}]\", name, scope.decls.get(name).kind);\n    }).join(\", \");\n    var propagates = this.propagates ? this.propagates.items().join(\", \") : \"\";\n    console.log(fmt(\"{0}{1}: {2}. propagates: {3}\", fmt.repeat(\" \", indent), this.node.type, names, propagates));\n    this.children.forEach(function(c) {\n        c.print(indent + 2);\n    });\n};\n\nScope.prototype.add = function(name, kind, node, referableFromPos) {\n    assert(is.someof(kind, [\"fun\", \"param\", \"var\", \"caught\", \"const\", \"let\"]));\n\n    function isConstLet(kind) {\n        return is.someof(kind, [\"const\", \"let\"]);\n    }\n\n    var scope = this;\n\n    // search nearest hoist-scope for fun, param and var's\n    // const, let and caught variables go directly in the scope (which may be hoist, block or catch-block)\n    if (is.someof(kind, [\"fun\", \"param\", \"var\"])) {\n        while (scope.kind !== \"hoist\") {\n            if (scope.decls.has(name) && isConstLet(scope.decls.get(name).kind)) { // could be caught\n                return error(getline(node), \"{0} is already declared\", name);\n            }\n            scope = scope.parent;\n        }\n    }\n    // name exists in scope and either new or existing kind is const|let => error\n    if (scope.decls.has(name) && (options.disallowDuplicated || isConstLet(scope.decls.get(name).kind) || isConstLet(kind))) {\n        return error(getline(node), \"{0} is already declared\", name);\n    }\n\n    var declaration = {\n        kind: kind,\n        node: node,\n    };\n    if (referableFromPos) {\n        assert(is.someof(kind, [\"var\", \"const\", \"let\"]));\n        declaration.from = referableFromPos;\n    }\n    scope.decls.set(name, declaration);\n};\n\nScope.prototype.getKind = function(name) {\n    assert(is.string(name));\n    var decl = this.decls.get(name);\n    return decl ? decl.kind : null;\n};\n\nScope.prototype.getNode = function(name) {\n    assert(is.string(name));\n    var decl = this.decls.get(name);\n    return decl ? decl.node : null;\n};\n\nScope.prototype.getFromPos = function(name) {\n    assert(is.string(name));\n    var decl = this.decls.get(name);\n    return decl ? decl.from : null;\n};\n\nScope.prototype.hasOwn = function(name) {\n    return this.decls.has(name);\n};\n\nScope.prototype.remove = function(name) {\n    return this.decls.remove(name);\n};\n\nScope.prototype.doesPropagate = function(name) {\n    return this.propagates.has(name);\n};\n\nScope.prototype.markPropagates = function(name) {\n    this.propagates.add(name);\n};\n\nScope.prototype.closestHoistScope = function() {\n    var scope = this;\n    while (scope.kind !== \"hoist\") {\n        scope = scope.parent;\n    }\n    return scope;\n};\n\nScope.prototype.hasFunctionScopeBetween = function(outer) {\n    function isFunction(node) {\n        return is.someof(node.type, [\"FunctionDeclaration\", \"FunctionExpression\"]);\n    }\n\n    for (var scope = this; scope; scope = scope.parent) {\n        if (scope === outer) {\n            return false;\n        }\n        if (isFunction(scope.node)) {\n            return true;\n        }\n    }\n\n    throw new Error(\"wasn't inner scope of outer\");\n};\n\nScope.prototype.lookup = function(name) {\n    for (var scope = this; scope; scope = scope.parent) {\n        if (scope.decls.has(name)) {\n            return scope;\n        } else if (scope.kind === \"hoist\") {\n            scope.propagates.add(name);\n        }\n    }\n    return null;\n};\n\nScope.prototype.markWrite = function(name) {\n    assert(is.string(name));\n    this.written.add(name);\n};\n\n// detects let variables that are never modified (ignores top-level)\nScope.prototype.detectUnmodifiedLets = function() {\n    var outmost = this;\n\n    function detect(scope) {\n        if (scope !== outmost) {\n            scope.decls.keys().forEach(function(name) {\n                if (scope.getKind(name) === \"let\" && !scope.written.has(name)) {\n                    return error(getline(scope.getNode(name)), \"{0} is declared as let but never modified so could be const\", name);\n                }\n            });\n        }\n\n        scope.children.forEach(function(childScope) {\n            detect(childScope);\n        });\n    }\n    detect(this);\n};\n\nScope.prototype.traverse = function(options) {\n    options = options || {};\n    var pre = options.pre;\n    var post = options.post;\n\n    function visit(scope) {\n        if (pre) {\n            pre(scope);\n        }\n        scope.children.forEach(function(childScope) {\n            visit(childScope);\n        });\n        if (post) {\n            post(scope);\n        }\n    }\n\n    visit(this);\n};\n\nmodule.exports = Scope;\n","var fmt = require(\"simple-fmt\");\nvar is = require(\"simple-is\");\nvar assert = require(\"assert\");\n\nfunction Stats() {\n    this.lets = 0;\n    this.consts = 0;\n    this.renames = [];\n}\n\nStats.prototype.declarator = function(kind) {\n    assert(is.someof(kind, [\"const\", \"let\"]));\n    if (kind === \"const\") {\n        this.consts++;\n    } else {\n        this.lets++;\n    }\n};\n\nStats.prototype.rename = function(oldName, newName, line) {\n    this.renames.push({\n        oldName: oldName,\n        newName: newName,\n        line: line,\n    });\n};\n\nStats.prototype.toString = function() {\n//    console.log(\"defs.js stats for file {0}:\", filename)\n\n    var renames = this.renames.map(function(r) {\n        return r;\n    }).sort(function(a, b) {\n            return a.line - b.line;\n        }); // sort a copy of renames\n\n    var renameStr = renames.map(function(rename) {\n        return fmt(\"\\nline {0}: {1} => {2}\", rename.line, rename.oldName, rename.newName);\n    }).join(\"\");\n\n    var sum = this.consts + this.lets;\n    var constlets = (sum === 0 ?\n        \"can't calculate const coverage (0 consts, 0 lets)\" :\n        fmt(\"{0}% const coverage ({1} consts, {2} lets)\",\n            Math.floor(100 * this.consts / sum), this.consts, this.lets));\n\n    return constlets + renameStr + \"\\n\";\n};\n\nmodule.exports = Stats;\n","// alter.js\n// MIT licensed, see LICENSE file\n// Copyright (c) 2013 Olov Lassus <olov.lassus@gmail.com>\n\nvar assert = require(\"assert\");\nvar stableSort = require(\"stable\");\n\n// fragments is a list of {start: index, end: index, str: string to replace with}\nfunction alter(str, fragments) {\n    \"use strict\";\n\n    var isArray = Array.isArray || function(v) {\n        return Object.prototype.toString.call(v) === \"[object Array]\";\n    };;\n\n    assert(typeof str === \"string\");\n    assert(isArray(fragments));\n\n    // stableSort isn't in-place so no need to copy array first\n    var sortedFragments = stableSort(fragments, function(a, b) {\n        return a.start - b.start;\n    });\n\n    var outs = [];\n\n    var pos = 0;\n    for (var i = 0; i < sortedFragments.length; i++) {\n        var frag = sortedFragments[i];\n\n        assert(pos <= frag.start);\n        assert(frag.start <= frag.end);\n        outs.push(str.slice(pos, frag.start));\n        outs.push(frag.str);\n        pos = frag.end;\n    }\n    if (pos < str.length) {\n        outs.push(str.slice(pos));\n    }\n\n    return outs.join(\"\");\n}\n\nif (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n    module.exports = alter;\n}\n","//! stable.js 0.1.5, https://github.com/Two-Screen/stable\n//! © 2014 Angry Bytes and contributors. MIT licensed.\n\n(function() {\n\n// A stable array sort, because `Array#sort()` is not guaranteed stable.\n// This is an implementation of merge sort, without recursion.\n\nvar stable = function(arr, comp) {\n    return exec(arr.slice(), comp);\n};\n\nstable.inplace = function(arr, comp) {\n    var result = exec(arr, comp);\n\n    // This simply copies back if the result isn't in the original array,\n    // which happens on an odd number of passes.\n    if (result !== arr) {\n        pass(result, null, arr.length, arr);\n    }\n\n    return arr;\n};\n\n// Execute the sort using the input array and a second buffer as work space.\n// Returns one of those two, containing the final result.\nfunction exec(arr, comp) {\n    if (typeof(comp) !== 'function') {\n        comp = function(a, b) {\n            return String(a).localeCompare(b);\n        };\n    }\n\n    // Short-circuit when there's nothing to sort.\n    var len = arr.length;\n    if (len <= 1) {\n        return arr;\n    }\n\n    // Rather than dividing input, simply iterate chunks of 1, 2, 4, 8, etc.\n    // Chunks are the size of the left or right hand in merge sort.\n    // Stop when the left-hand covers all of the array.\n    var buffer = new Array(len);\n    for (var chk = 1; chk < len; chk *= 2) {\n        pass(arr, comp, chk, buffer);\n\n        var tmp = arr;\n        arr = buffer;\n        buffer = tmp;\n    }\n\n    return arr;\n}\n\n// Run a single pass with the given chunk size.\nvar pass = function(arr, comp, chk, result) {\n    var len = arr.length;\n    var i = 0;\n    // Step size / double chunk size.\n    var dbl = chk * 2;\n    // Bounds of the left and right chunks.\n    var l, r, e;\n    // Iterators over the left and right chunk.\n    var li, ri;\n\n    // Iterate over pairs of chunks.\n    for (l = 0; l < len; l += dbl) {\n        r = l + chk;\n        e = r + chk;\n        if (r > len) r = len;\n        if (e > len) e = len;\n\n        // Iterate both chunks in parallel.\n        li = l;\n        ri = r;\n        while (true) {\n            // Compare the chunks.\n            if (li < r && ri < e) {\n                // This works for a regular `sort()` compatible comparator,\n                // but also for a simple comparator like: `a > b`\n                if (comp(arr[li], arr[ri]) <= 0) {\n                    result[i++] = arr[li++];\n                }\n                else {\n                    result[i++] = arr[ri++];\n                }\n            }\n            // Nothing to compare, just flush what's left.\n            else if (li < r) {\n                result[i++] = arr[li++];\n            }\n            else if (ri < e) {\n                result[i++] = arr[ri++];\n            }\n            // Both iterators are at the chunk ends.\n            else {\n                break;\n            }\n        }\n    }\n};\n\n// Export using CommonJS or to the window.\nif (typeof(module) !== 'undefined') {\n    module.exports = stable;\n}\nelse {\n    window.stable = stable;\n}\n\n})();\n","function traverse(root, options) {\n    \"use strict\";\n\n    options = options || {};\n    var pre = options.pre;\n    var post = options.post;\n    var skipProperty = options.skipProperty;\n\n    function visit(node, parent, prop, idx) {\n        if (!node || typeof node.type !== \"string\") {\n            return;\n        }\n\n        var res = undefined;\n        if (pre) {\n            res = pre(node, parent, prop, idx);\n        }\n\n        if (res !== false) {\n            for (var prop in node) {\n                if (skipProperty ? skipProperty(prop, node) : prop[0] === \"$\") {\n                    continue;\n                }\n\n                var child = node[prop];\n\n                if (Array.isArray(child)) {\n                    for (var i = 0; i < child.length; i++) {\n                        visit(child[i], node, prop, i);\n                    }\n                } else {\n                    visit(child, node, prop);\n                }\n            }\n        }\n\n        if (post) {\n            post(node, parent, prop, idx);\n        }\n    }\n\n    visit(root, null);\n};\n\nif (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n    module.exports = traverse;\n}\n","// breakable.js\n// MIT licensed, see LICENSE file\n// Copyright (c) 2013-2014 Olov Lassus <olov.lassus@gmail.com>\n\nvar breakable = (function() {\n    \"use strict\";\n\n    function Val(val, brk) {\n        this.val = val;\n        this.brk = brk;\n    }\n\n    function make_brk() {\n        return function brk(val) {\n            throw new Val(val, brk);\n        };\n    }\n\n    function breakable(fn) {\n        var brk = make_brk();\n        try {\n            return fn(brk);\n        } catch (e) {\n            if (e instanceof Val && e.brk === brk) {\n                return e.val;\n            }\n            throw e;\n        }\n    }\n\n    return breakable;\n})();\n\nif (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n    module.exports = breakable;\n}\n","// simple-fmt.js\n// MIT licensed, see LICENSE file\n// Copyright (c) 2013 Olov Lassus <olov.lassus@gmail.com>\n\nvar fmt = (function() {\n    \"use strict\";\n\n    function fmt(str, var_args) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return str.replace(/\\{(\\d+)\\}/g, function(s, match) {\n            return (match in args ? args[match] : s);\n        });\n    }\n\n    function obj(str, obj) {\n        return str.replace(/\\{([_$a-zA-Z0-9][_$a-zA-Z0-9]*)\\}/g, function(s, match) {\n            return (match in obj ? obj[match] : s);\n        });\n    }\n\n    function repeat(str, n) {\n        return (new Array(n + 1)).join(str);\n    }\n\n    fmt.fmt = fmt;\n    fmt.obj = obj;\n    fmt.repeat = repeat;\n    return fmt;\n})();\n\nif (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n    module.exports = fmt;\n}\n","// simple-is.js\n// MIT licensed, see LICENSE file\n// Copyright (c) 2013 Olov Lassus <olov.lassus@gmail.com>\n\nvar is = (function() {\n    \"use strict\";\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var toString = Object.prototype.toString;\n    var _undefined = void 0;\n\n    return {\n        nan: function(v) {\n            return v !== v;\n        },\n        boolean: function(v) {\n            return typeof v === \"boolean\";\n        },\n        number: function(v) {\n            return typeof v === \"number\";\n        },\n        string: function(v) {\n            return typeof v === \"string\";\n        },\n        fn: function(v) {\n            return typeof v === \"function\";\n        },\n        object: function(v) {\n            return v !== null && typeof v === \"object\";\n        },\n        primitive: function(v) {\n            var t = typeof v;\n            return v === null || v === _undefined ||\n                t === \"boolean\" || t === \"number\" || t === \"string\";\n        },\n        array: Array.isArray || function(v) {\n            return toString.call(v) === \"[object Array]\";\n        },\n        finitenumber: function(v) {\n            return typeof v === \"number\" && isFinite(v);\n        },\n        someof: function(v, values) {\n            return values.indexOf(v) >= 0;\n        },\n        noneof: function(v, values) {\n            return values.indexOf(v) === -1;\n        },\n        own: function(obj, prop) {\n            return hasOwnProperty.call(obj, prop);\n        },\n    };\n})();\n\nif (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n    module.exports = is;\n}\n","// stringmap.js\n// MIT licensed, see LICENSE file\n// Copyright (c) 2013 Olov Lassus <olov.lassus@gmail.com>\n\nvar StringMap = (function() {\n    \"use strict\";\n\n    // to save us a few characters\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    var create = (function() {\n        function hasOwnEnumerableProps(obj) {\n            for (var prop in obj) {\n                if (hasOwnProperty.call(obj, prop)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        // FF <= 3.6:\n        // o = {}; o.hasOwnProperty(\"__proto__\" or \"__count__\" or \"__parent__\") => true\n        // o = {\"__proto__\": null}; Object.prototype.hasOwnProperty.call(o, \"__proto__\" or \"__count__\" or \"__parent__\") => false\n        function hasOwnPollutedProps(obj) {\n            return hasOwnProperty.call(obj, \"__count__\") || hasOwnProperty.call(obj, \"__parent__\");\n        }\n\n        var useObjectCreate = false;\n        if (typeof Object.create === \"function\") {\n            if (!hasOwnEnumerableProps(Object.create(null))) {\n                useObjectCreate = true;\n            }\n        }\n        if (useObjectCreate === false) {\n            if (hasOwnEnumerableProps({})) {\n                throw new Error(\"StringMap environment error 0, please file a bug at https://github.com/olov/stringmap/issues\");\n            }\n        }\n        // no throw yet means we can create objects without own enumerable props (safe-guard against VMs and shims)\n\n        var o = (useObjectCreate ? Object.create(null) : {});\n        var useProtoClear = false;\n        if (hasOwnPollutedProps(o)) {\n            o.__proto__ = null;\n            if (hasOwnEnumerableProps(o) || hasOwnPollutedProps(o)) {\n                throw new Error(\"StringMap environment error 1, please file a bug at https://github.com/olov/stringmap/issues\");\n            }\n            useProtoClear = true;\n        }\n        // no throw yet means we can create objects without own polluted props (safe-guard against VMs and shims)\n\n        return function() {\n            var o = (useObjectCreate ? Object.create(null) : {});\n            if (useProtoClear) {\n                o.__proto__ = null;\n            }\n            return o;\n        };\n    })();\n\n    // stringmap ctor\n    function stringmap(optional_object) {\n        // use with or without new\n        if (!(this instanceof stringmap)) {\n            return new stringmap(optional_object);\n        }\n        this.obj = create();\n        this.hasProto = false; // false (no __proto__ key) or true (has __proto__ key)\n        this.proto = undefined; // value for __proto__ key when hasProto is true, undefined otherwise\n\n        if (optional_object) {\n            this.setMany(optional_object);\n        }\n    };\n\n    // primitive methods that deals with data representation\n    stringmap.prototype.has = function(key) {\n        // The type-check of key in has, get, set and delete is important because otherwise an object\n        // {toString: function() { return \"__proto__\"; }} can avoid the key === \"__proto__\" test.\n        // The alternative to type-checking would be to force string conversion, i.e. key = String(key);\n        if (typeof key !== \"string\") {\n            throw new Error(\"StringMap expected string key\");\n        }\n        return (key === \"__proto__\" ?\n            this.hasProto :\n            hasOwnProperty.call(this.obj, key));\n    };\n\n    stringmap.prototype.get = function(key) {\n        if (typeof key !== \"string\") {\n            throw new Error(\"StringMap expected string key\");\n        }\n        return (key === \"__proto__\" ?\n            this.proto :\n            (hasOwnProperty.call(this.obj, key) ? this.obj[key] : undefined));\n    };\n\n    stringmap.prototype.set = function(key, value) {\n        if (typeof key !== \"string\") {\n            throw new Error(\"StringMap expected string key\");\n        }\n        if (key === \"__proto__\") {\n            this.hasProto = true;\n            this.proto = value;\n        } else {\n            this.obj[key] = value;\n        }\n    };\n\n    stringmap.prototype.remove = function(key) {\n        if (typeof key !== \"string\") {\n            throw new Error(\"StringMap expected string key\");\n        }\n        var didExist = this.has(key);\n        if (key === \"__proto__\") {\n            this.hasProto = false;\n            this.proto = undefined;\n        } else {\n            delete this.obj[key];\n        }\n        return didExist;\n    };\n\n    // alias remove to delete but beware:\n    // sm.delete(\"key\"); // OK in ES5 and later\n    // sm['delete'](\"key\"); // OK in all ES versions\n    // sm.remove(\"key\"); // OK in all ES versions\n    stringmap.prototype['delete'] = stringmap.prototype.remove;\n\n    stringmap.prototype.isEmpty = function() {\n        for (var key in this.obj) {\n            if (hasOwnProperty.call(this.obj, key)) {\n                return false;\n            }\n        }\n        return !this.hasProto;\n    };\n\n    stringmap.prototype.size = function() {\n        var len = 0;\n        for (var key in this.obj) {\n            if (hasOwnProperty.call(this.obj, key)) {\n                ++len;\n            }\n        }\n        return (this.hasProto ? len + 1 : len);\n    };\n\n    stringmap.prototype.keys = function() {\n        var keys = [];\n        for (var key in this.obj) {\n            if (hasOwnProperty.call(this.obj, key)) {\n                keys.push(key);\n            }\n        }\n        if (this.hasProto) {\n            keys.push(\"__proto__\");\n        }\n        return keys;\n    };\n\n    stringmap.prototype.values = function() {\n        var values = [];\n        for (var key in this.obj) {\n            if (hasOwnProperty.call(this.obj, key)) {\n                values.push(this.obj[key]);\n            }\n        }\n        if (this.hasProto) {\n            values.push(this.proto);\n        }\n        return values;\n    };\n\n    stringmap.prototype.items = function() {\n        var items = [];\n        for (var key in this.obj) {\n            if (hasOwnProperty.call(this.obj, key)) {\n                items.push([key, this.obj[key]]);\n            }\n        }\n        if (this.hasProto) {\n            items.push([\"__proto__\", this.proto]);\n        }\n        return items;\n    };\n\n\n    // methods that rely on the above primitives\n    stringmap.prototype.setMany = function(object) {\n        if (object === null || (typeof object !== \"object\" && typeof object !== \"function\")) {\n            throw new Error(\"StringMap expected Object\");\n        }\n        for (var key in object) {\n            if (hasOwnProperty.call(object, key)) {\n                this.set(key, object[key]);\n            }\n        }\n        return this;\n    };\n\n    stringmap.prototype.merge = function(other) {\n        var keys = other.keys();\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            this.set(key, other.get(key));\n        }\n        return this;\n    };\n\n    stringmap.prototype.map = function(fn) {\n        var keys = this.keys();\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            keys[i] = fn(this.get(key), key); // re-use keys array for results\n        }\n        return keys;\n    };\n\n    stringmap.prototype.forEach = function(fn) {\n        var keys = this.keys();\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            fn(this.get(key), key);\n        }\n    };\n\n    stringmap.prototype.clone = function() {\n        var other = stringmap();\n        return other.merge(this);\n    };\n\n    stringmap.prototype.toString = function() {\n        var self = this;\n        return \"{\" + this.keys().map(function(key) {\n            return JSON.stringify(key) + \":\" + JSON.stringify(self.get(key));\n        }).join(\",\") + \"}\";\n    };\n\n    return stringmap;\n})();\n\nif (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n    module.exports = StringMap;\n}\n","// stringset.js\n// MIT licensed, see LICENSE file\n// Copyright (c) 2013 Olov Lassus <olov.lassus@gmail.com>\n\nvar StringSet = (function() {\n    \"use strict\";\n\n    // to save us a few characters\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    var create = (function() {\n        function hasOwnEnumerableProps(obj) {\n            for (var prop in obj) {\n                if (hasOwnProperty.call(obj, prop)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        // FF <= 3.6:\n        // o = {}; o.hasOwnProperty(\"__proto__\" or \"__count__\" or \"__parent__\") => true\n        // o = {\"__proto__\": null}; Object.prototype.hasOwnProperty.call(o, \"__proto__\" or \"__count__\" or \"__parent__\") => false\n        function hasOwnPollutedProps(obj) {\n            return hasOwnProperty.call(obj, \"__count__\") || hasOwnProperty.call(obj, \"__parent__\");\n        }\n\n        var useObjectCreate = false;\n        if (typeof Object.create === \"function\") {\n            if (!hasOwnEnumerableProps(Object.create(null))) {\n                useObjectCreate = true;\n            }\n        }\n        if (useObjectCreate === false) {\n            if (hasOwnEnumerableProps({})) {\n                throw new Error(\"StringSet environment error 0, please file a bug at https://github.com/olov/stringset/issues\");\n            }\n        }\n        // no throw yet means we can create objects without own enumerable props (safe-guard against VMs and shims)\n\n        var o = (useObjectCreate ? Object.create(null) : {});\n        var useProtoClear = false;\n        if (hasOwnPollutedProps(o)) {\n            o.__proto__ = null;\n            if (hasOwnEnumerableProps(o) || hasOwnPollutedProps(o)) {\n                throw new Error(\"StringSet environment error 1, please file a bug at https://github.com/olov/stringset/issues\");\n            }\n            useProtoClear = true;\n        }\n        // no throw yet means we can create objects without own polluted props (safe-guard against VMs and shims)\n\n        return function() {\n            var o = (useObjectCreate ? Object.create(null) : {});\n            if (useProtoClear) {\n                o.__proto__ = null;\n            }\n            return o;\n        };\n    })();\n\n    // stringset ctor\n    function stringset(optional_array) {\n        // use with or without new\n        if (!(this instanceof stringset)) {\n            return new stringset(optional_array);\n        }\n        this.obj = create();\n        this.hasProto = false; // false (no __proto__ item) or true (has __proto__ item)\n\n        if (optional_array) {\n            this.addMany(optional_array);\n        }\n    };\n\n    // primitive methods that deals with data representation\n    stringset.prototype.has = function(item) {\n        // The type-check of item in has, get, set and delete is important because otherwise an object\n        // {toString: function() { return \"__proto__\"; }} can avoid the item === \"__proto__\" test.\n        // The alternative to type-checking would be to force string conversion, i.e. item = String(item);\n        if (typeof item !== \"string\") {\n            throw new Error(\"StringSet expected string item\");\n        }\n        return (item === \"__proto__\" ?\n            this.hasProto :\n            hasOwnProperty.call(this.obj, item));\n    };\n\n    stringset.prototype.add = function(item) {\n        if (typeof item !== \"string\") {\n            throw new Error(\"StringSet expected string item\");\n        }\n        if (item === \"__proto__\") {\n            this.hasProto = true;\n        } else {\n            this.obj[item] = true;\n        }\n    };\n\n    stringset.prototype.remove = function(item) {\n        if (typeof item !== \"string\") {\n            throw new Error(\"StringSet expected string item\");\n        }\n        var didExist = this.has(item);\n        if (item === \"__proto__\") {\n            this.hasProto = false;\n        } else {\n            delete this.obj[item];\n        }\n        return didExist;\n    };\n\n    // alias remove to delete but beware:\n    // ss.delete(\"key\"); // OK in ES5 and later\n    // ss['delete'](\"key\"); // OK in all ES versions\n    // ss.remove(\"key\"); // OK in all ES versions\n    stringset.prototype['delete'] = stringset.prototype.remove;\n\n    stringset.prototype.isEmpty = function() {\n        for (var item in this.obj) {\n            if (hasOwnProperty.call(this.obj, item)) {\n                return false;\n            }\n        }\n        return !this.hasProto;\n    };\n\n    stringset.prototype.size = function() {\n        var len = 0;\n        for (var item in this.obj) {\n            if (hasOwnProperty.call(this.obj, item)) {\n                ++len;\n            }\n        }\n        return (this.hasProto ? len + 1 : len);\n    };\n\n    stringset.prototype.items = function() {\n        var items = [];\n        for (var item in this.obj) {\n            if (hasOwnProperty.call(this.obj, item)) {\n                items.push(item);\n            }\n        }\n        if (this.hasProto) {\n            items.push(\"__proto__\");\n        }\n        return items;\n    };\n\n\n    // methods that rely on the above primitives\n    stringset.prototype.addMany = function(items) {\n        if (!Array.isArray(items)) {\n            throw new Error(\"StringSet expected array\");\n        }\n        for (var i = 0; i < items.length; i++) {\n            this.add(items[i]);\n        }\n        return this;\n    };\n\n    stringset.prototype.merge = function(other) {\n        this.addMany(other.items());\n        return this;\n    };\n\n    stringset.prototype.clone = function() {\n        var other = stringset();\n        return other.merge(this);\n    };\n\n    stringset.prototype.toString = function() {\n        return \"{\" + this.items().map(JSON.stringify).join(\",\") + \"}\";\n    };\n\n    return stringset;\n})();\n\nif (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n    module.exports = StringSet;\n}\n","/*\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*jslint bitwise:true plusplus:true */\n/*global esprima:true, define:true, exports:true, window: true,\nthrowError: true, generateStatement: true, peek: true,\nparseAssignmentExpression: true, parseBlock: true,\nparseClassExpression: true, parseClassDeclaration: true, parseExpression: true,\nparseDeclareClass: true, parseDeclareFunction: true,\nparseDeclareModule: true, parseDeclareVariable: true,\nparseForStatement: true,\nparseFunctionDeclaration: true, parseFunctionExpression: true,\nparseFunctionSourceElements: true, parseVariableIdentifier: true,\nparseImportSpecifier: true, parseInterface: true,\nparseLeftHandSideExpression: true, parseParams: true, validateParam: true,\nparseSpreadOrAssignmentExpression: true,\nparseStatement: true, parseSourceElement: true, parseConciseBody: true,\nadvanceXJSChild: true, isXJSIdentifierStart: true, isXJSIdentifierPart: true,\nscanXJSStringLiteral: true, scanXJSIdentifier: true,\nparseXJSAttributeValue: true, parseXJSChild: true, parseXJSElement: true, parseXJSExpressionContainer: true, parseXJSEmptyExpression: true,\nparseFunctionTypeParam: true,\nparsePrimaryType: true,\nparseTypeAlias: true,\nparseType: true, parseTypeAnnotatableIdentifier: true, parseTypeAnnotation: true,\nparseYieldExpression: true, parseAwaitExpression: true\n*/\n\n(function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n    // Rhino, and plain browser loading.\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.esprima = {}));\n    }\n}(this, function (exports) {\n    'use strict';\n\n    var Token,\n        TokenName,\n        FnExprTokens,\n        Syntax,\n        PropertyKind,\n        Messages,\n        Regex,\n        SyntaxTreeDelegate,\n        XHTMLEntities,\n        ClassPropertyType,\n        source,\n        strict,\n        index,\n        lineNumber,\n        lineStart,\n        length,\n        delegate,\n        lookahead,\n        state,\n        extra;\n\n    Token = {\n        BooleanLiteral: 1,\n        EOF: 2,\n        Identifier: 3,\n        Keyword: 4,\n        NullLiteral: 5,\n        NumericLiteral: 6,\n        Punctuator: 7,\n        StringLiteral: 8,\n        RegularExpression: 9,\n        Template: 10,\n        XJSIdentifier: 11,\n        XJSText: 12\n    };\n\n    TokenName = {};\n    TokenName[Token.BooleanLiteral] = 'Boolean';\n    TokenName[Token.EOF] = '<end>';\n    TokenName[Token.Identifier] = 'Identifier';\n    TokenName[Token.Keyword] = 'Keyword';\n    TokenName[Token.NullLiteral] = 'Null';\n    TokenName[Token.NumericLiteral] = 'Numeric';\n    TokenName[Token.Punctuator] = 'Punctuator';\n    TokenName[Token.StringLiteral] = 'String';\n    TokenName[Token.XJSIdentifier] = 'XJSIdentifier';\n    TokenName[Token.XJSText] = 'XJSText';\n    TokenName[Token.RegularExpression] = 'RegularExpression';\n\n    // A function following one of those tokens is an expression.\n    FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n                    'return', 'case', 'delete', 'throw', 'void',\n                    // assignment operators\n                    '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=',\n                    '&=', '|=', '^=', ',',\n                    // binary/unary operators\n                    '+', '-', '*', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n                    '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n                    '<=', '<', '>', '!=', '!=='];\n\n    Syntax = {\n        AnyTypeAnnotation: 'AnyTypeAnnotation',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrayTypeAnnotation: 'ArrayTypeAnnotation',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AssignmentExpression: 'AssignmentExpression',\n        BinaryExpression: 'BinaryExpression',\n        BlockStatement: 'BlockStatement',\n        BooleanTypeAnnotation: 'BooleanTypeAnnotation',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ClassImplements: 'ClassImplements',\n        ClassProperty: 'ClassProperty',\n        ComprehensionBlock: 'ComprehensionBlock',\n        ComprehensionExpression: 'ComprehensionExpression',\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DeclareClass: 'DeclareClass',\n        DeclareFunction: 'DeclareFunction',\n        DeclareModule: 'DeclareModule',\n        DeclareVariable: 'DeclareVariable',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportDeclaration: 'ExportDeclaration',\n        ExportBatchSpecifier: 'ExportBatchSpecifier',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        ForStatement: 'ForStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        FunctionTypeAnnotation: 'FunctionTypeAnnotation',\n        FunctionTypeParam: 'FunctionTypeParam',\n        GenericTypeAnnotation: 'GenericTypeAnnotation',\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        InterfaceDeclaration: 'InterfaceDeclaration',\n        InterfaceExtends: 'InterfaceExtends',\n        IntersectionTypeAnnotation: 'IntersectionTypeAnnotation',\n        LabeledStatement: 'LabeledStatement',\n        Literal: 'Literal',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        NullableTypeAnnotation: 'NullableTypeAnnotation',\n        NumberTypeAnnotation: 'NumberTypeAnnotation',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        ObjectTypeAnnotation: 'ObjectTypeAnnotation',\n        ObjectTypeCallProperty: 'ObjectTypeCallProperty',\n        ObjectTypeIndexer: 'ObjectTypeIndexer',\n        ObjectTypeProperty: 'ObjectTypeProperty',\n        Program: 'Program',\n        Property: 'Property',\n        QualifiedTypeIdentifier: 'QualifiedTypeIdentifier',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        SpreadProperty: 'SpreadProperty',\n        StringLiteralTypeAnnotation: 'StringLiteralTypeAnnotation',\n        StringTypeAnnotation: 'StringTypeAnnotation',\n        SwitchCase: 'SwitchCase',\n        SwitchStatement: 'SwitchStatement',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TupleTypeAnnotation: 'TupleTypeAnnotation',\n        TryStatement: 'TryStatement',\n        TypeAlias: 'TypeAlias',\n        TypeAnnotation: 'TypeAnnotation',\n        TypeofTypeAnnotation: 'TypeofTypeAnnotation',\n        TypeParameterDeclaration: 'TypeParameterDeclaration',\n        TypeParameterInstantiation: 'TypeParameterInstantiation',\n        UnaryExpression: 'UnaryExpression',\n        UnionTypeAnnotation: 'UnionTypeAnnotation',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        VoidTypeAnnotation: 'VoidTypeAnnotation',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        XJSIdentifier: 'XJSIdentifier',\n        XJSNamespacedName: 'XJSNamespacedName',\n        XJSMemberExpression: 'XJSMemberExpression',\n        XJSEmptyExpression: 'XJSEmptyExpression',\n        XJSExpressionContainer: 'XJSExpressionContainer',\n        XJSElement: 'XJSElement',\n        XJSClosingElement: 'XJSClosingElement',\n        XJSOpeningElement: 'XJSOpeningElement',\n        XJSAttribute: 'XJSAttribute',\n        XJSSpreadAttribute: 'XJSSpreadAttribute',\n        XJSText: 'XJSText',\n        YieldExpression: 'YieldExpression',\n        AwaitExpression: 'AwaitExpression'\n    };\n\n    PropertyKind = {\n        Data: 1,\n        Get: 2,\n        Set: 4\n    };\n\n    ClassPropertyType = {\n        'static': 'static',\n        prototype: 'prototype'\n    };\n\n    // Error messages should be identical to V8.\n    Messages = {\n        UnexpectedToken:  'Unexpected token %0',\n        UnexpectedNumber:  'Unexpected number',\n        UnexpectedString:  'Unexpected string',\n        UnexpectedIdentifier:  'Unexpected identifier',\n        UnexpectedReserved:  'Unexpected reserved word',\n        UnexpectedTemplate:  'Unexpected quasi %0',\n        UnexpectedEOS:  'Unexpected end of input',\n        NewlineAfterThrow:  'Illegal newline after throw',\n        InvalidRegExp: 'Invalid regular expression',\n        UnterminatedRegExp:  'Invalid regular expression: missing /',\n        InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n        InvalidLHSInFormalsList:  'Invalid left-hand side in formals list',\n        InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n        MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n        NoCatchOrFinally:  'Missing catch or finally after try',\n        UnknownLabel: 'Undefined label \\'%0\\'',\n        Redeclaration: '%0 \\'%1\\' has already been declared',\n        IllegalContinue: 'Illegal continue statement',\n        IllegalBreak: 'Illegal break statement',\n        IllegalDuplicateClassProperty: 'Illegal duplicate property in class definition',\n        IllegalReturn: 'Illegal return statement',\n        IllegalSpread: 'Illegal spread element',\n        StrictModeWith:  'Strict mode code may not include a with statement',\n        StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n        StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n        StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n        StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n        ParameterAfterRestParameter: 'Rest parameter must be final parameter of an argument list',\n        DefaultRestParameter: 'Rest parameter can not have a default value',\n        ElementAfterSpreadElement: 'Spread must be the final element of an element list',\n        PropertyAfterSpreadProperty: 'A rest property must be the final property of an object literal',\n        ObjectPatternAsRestParameter: 'Invalid rest parameter',\n        ObjectPatternAsSpread: 'Invalid spread argument',\n        StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n        StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n        StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n        StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n        AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n        AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n        StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n        StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictReservedWord:  'Use of future reserved word in strict mode',\n        MissingFromClause: 'Missing from clause',\n        NoAsAfterImportNamespace: 'Missing as after import *',\n        InvalidModuleSpecifier: 'Invalid module specifier',\n        NoUnintializedConst: 'Const must be initialized',\n        ComprehensionRequiresBlock: 'Comprehension must have at least one block',\n        ComprehensionError:  'Comprehension Error',\n        EachNotAllowed:  'Each is not supported',\n        InvalidXJSAttributeValue: 'XJS value should be either an expression or a quoted XJS text',\n        ExpectedXJSClosingTag: 'Expected corresponding XJS closing tag for %0',\n        AdjacentXJSElements: 'Adjacent XJS elements must be wrapped in an enclosing tag',\n        ConfusedAboutFunctionType: 'Unexpected token =>. It looks like ' +\n            'you are trying to write a function type, but you ended up ' +\n            'writing a grouped type followed by an =>, which is a syntax ' +\n            'error. Remember, function type parameters are named so function ' +\n            'types look like (name1: type1, name2: type2) => returnType. You ' +\n            'probably wrote (type1) => returnType'\n    };\n\n    // See also tools/generate-unicode-regex.py.\n    Regex = {\n        NonAsciiIdentifierStart: new RegExp('[\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]'),\n        NonAsciiIdentifierPart: new RegExp('[\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0\\u08a2-\\u08ac\\u08e4-\\u08fe\\u0900-\\u0963\\u0966-\\u096f\\u0971-\\u0977\\u0979-\\u097f\\u0981-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1\\u0cf2\\u0d02\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1d00-\\u1de6\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u200c\\u200d\\u203f\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua697\\ua69f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua900-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a\\uaa7b\\uaa80-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]'),\n        LeadingZeros: new RegExp('^0+(?!$)')\n    };\n\n    // Ensure the condition is true, otherwise throw an error.\n    // This is only to have a better contract semantic, i.e. another safety net\n    // to catch a logic error. The condition shall be fulfilled in normal case.\n    // Do NOT use this to enforce a certain condition on any user input.\n\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error('ASSERT: ' + message);\n        }\n    }\n\n    function isDecimalDigit(ch) {\n        return (ch >= 48 && ch <= 57);   // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n    }\n\n    function isOctalDigit(ch) {\n        return '01234567'.indexOf(ch) >= 0;\n    }\n\n\n    // 7.2 White Space\n\n    function isWhiteSpace(ch) {\n        return (ch === 32) ||  // space\n            (ch === 9) ||      // tab\n            (ch === 0xB) ||\n            (ch === 0xC) ||\n            (ch === 0xA0) ||\n            (ch >= 0x1680 && '\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\uFEFF'.indexOf(String.fromCharCode(ch)) > 0);\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return (ch === 10) || (ch === 13) || (ch === 0x2028) || (ch === 0x2029);\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function isIdentifierStart(ch) {\n        return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)\n            (ch >= 65 && ch <= 90) ||         // A..Z\n            (ch >= 97 && ch <= 122) ||        // a..z\n            (ch === 92) ||                    // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n    }\n\n    function isIdentifierPart(ch) {\n        return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)\n            (ch >= 65 && ch <= 90) ||         // A..Z\n            (ch >= 97 && ch <= 122) ||        // a..z\n            (ch >= 48 && ch <= 57) ||         // 0..9\n            (ch === 92) ||                    // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n    }\n\n    // 7.6.1.2 Future Reserved Words\n\n    function isFutureReservedWord(id) {\n        switch (id) {\n        case 'class':\n        case 'enum':\n        case 'export':\n        case 'extends':\n        case 'import':\n        case 'super':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isStrictModeReservedWord(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'yield':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    // 7.6.1.1 Keywords\n\n    function isKeyword(id) {\n        if (strict && isStrictModeReservedWord(id)) {\n            return true;\n        }\n\n        // 'const' is specialized as Keyword in V8.\n        // 'yield' is only treated as a keyword in strict mode.\n        // 'let' is for compatiblity with SpiderMonkey and ES.next.\n        // Some others are from future reserved words.\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') ||\n                (id === 'try') || (id === 'let');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    // 7.4 Comments\n\n    function skipComment() {\n        var ch, blockComment, lineComment;\n\n        blockComment = false;\n        lineComment = false;\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n\n            if (lineComment) {\n                ++index;\n                if (isLineTerminator(ch)) {\n                    lineComment = false;\n                    if (ch === 13 && source.charCodeAt(index) === 10) {\n                        ++index;\n                    }\n                    ++lineNumber;\n                    lineStart = index;\n                }\n            } else if (blockComment) {\n                if (isLineTerminator(ch)) {\n                    if (ch === 13) {\n                        ++index;\n                    }\n                    if (ch !== 13 || source.charCodeAt(index) === 10) {\n                        ++lineNumber;\n                        ++index;\n                        lineStart = index;\n                        if (index >= length) {\n                            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                        }\n                    }\n                } else {\n                    ch = source.charCodeAt(index++);\n                    if (index >= length) {\n                        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                    }\n                    // Block comment ends with '*/' (char #42, char #47).\n                    if (ch === 42) {\n                        ch = source.charCodeAt(index);\n                        if (ch === 47) {\n                            ++index;\n                            blockComment = false;\n                        }\n                    }\n                }\n            } else if (ch === 47) {\n                ch = source.charCodeAt(index + 1);\n                // Line comment starts with '//' (char #47, char #47).\n                if (ch === 47) {\n                    index += 2;\n                    lineComment = true;\n                } else if (ch === 42) {\n                    // Block comment starts with '/*' (char #47, char #42).\n                    index += 2;\n                    blockComment = true;\n                    if (index >= length) {\n                        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                    }\n                } else {\n                    break;\n                }\n            } else if (isWhiteSpace(ch)) {\n                ++index;\n            } else if (isLineTerminator(ch)) {\n                ++index;\n                if (ch === 13 && source.charCodeAt(index) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n            } else {\n                break;\n            }\n        }\n    }\n\n    function scanHexEscape(prefix) {\n        var i, len, ch, code = 0;\n\n        len = (prefix === 'u') ? 4 : 2;\n        for (i = 0; i < len; ++i) {\n            if (index < length && isHexDigit(source[index])) {\n                ch = source[index++];\n                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n            } else {\n                return '';\n            }\n        }\n        return String.fromCharCode(code);\n    }\n\n    function scanUnicodeCodePointEscape() {\n        var ch, code, cu1, cu2;\n\n        ch = source[index];\n        code = 0;\n\n        // At least, one hex digit is required.\n        if (ch === '}') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        while (index < length) {\n            ch = source[index++];\n            if (!isHexDigit(ch)) {\n                break;\n            }\n            code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n        }\n\n        if (code > 0x10FFFF || ch !== '}') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        // UTF-16 Encoding\n        if (code <= 0xFFFF) {\n            return String.fromCharCode(code);\n        }\n        cu1 = ((code - 0x10000) >> 10) + 0xD800;\n        cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n        return String.fromCharCode(cu1, cu2);\n    }\n\n    function getEscapedIdentifier() {\n        var ch, id;\n\n        ch = source.charCodeAt(index++);\n        id = String.fromCharCode(ch);\n\n        // '\\u' (char #92, char #117) denotes an escaped character.\n        if (ch === 92) {\n            if (source.charCodeAt(index) !== 117) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            ++index;\n            ch = scanHexEscape('u');\n            if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            id = ch;\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (!isIdentifierPart(ch)) {\n                break;\n            }\n            ++index;\n            id += String.fromCharCode(ch);\n\n            // '\\u' (char #92, char #117) denotes an escaped character.\n            if (ch === 92) {\n                id = id.substr(0, id.length - 1);\n                if (source.charCodeAt(index) !== 117) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                ++index;\n                ch = scanHexEscape('u');\n                if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                id += ch;\n            }\n        }\n\n        return id;\n    }\n\n    function getIdentifier() {\n        var start, ch;\n\n        start = index++;\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (ch === 92) {\n                // Blackslash (char #92) marks Unicode escape sequence.\n                index = start;\n                return getEscapedIdentifier();\n            }\n            if (isIdentifierPart(ch)) {\n                ++index;\n            } else {\n                break;\n            }\n        }\n\n        return source.slice(start, index);\n    }\n\n    function scanIdentifier() {\n        var start, id, type;\n\n        start = index;\n\n        // Backslash (char #92) starts an escaped character.\n        id = (source.charCodeAt(index) === 92) ? getEscapedIdentifier() : getIdentifier();\n\n        // There is no keyword or literal with only one character.\n        // Thus, it must be an identifier.\n        if (id.length === 1) {\n            type = Token.Identifier;\n        } else if (isKeyword(id)) {\n            type = Token.Keyword;\n        } else if (id === 'null') {\n            type = Token.NullLiteral;\n        } else if (id === 'true' || id === 'false') {\n            type = Token.BooleanLiteral;\n        } else {\n            type = Token.Identifier;\n        }\n\n        return {\n            type: type,\n            value: id,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n\n    // 7.7 Punctuators\n\n    function scanPunctuator() {\n        var start = index,\n            code = source.charCodeAt(index),\n            code2,\n            ch1 = source[index],\n            ch2,\n            ch3,\n            ch4;\n\n        switch (code) {\n        // Check for most common single-character punctuators.\n        case 40:   // ( open bracket\n        case 41:   // ) close bracket\n        case 59:   // ; semicolon\n        case 44:   // , comma\n        case 123:  // { open curly brace\n        case 125:  // } close curly brace\n        case 91:   // [\n        case 93:   // ]\n        case 58:   // :\n        case 63:   // ?\n        case 126:  // ~\n            ++index;\n            if (extra.tokenize) {\n                if (code === 40) {\n                    extra.openParenToken = extra.tokens.length;\n                } else if (code === 123) {\n                    extra.openCurlyToken = extra.tokens.length;\n                }\n            }\n            return {\n                type: Token.Punctuator,\n                value: String.fromCharCode(code),\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n\n        default:\n            code2 = source.charCodeAt(index + 1);\n\n            // '=' (char #61) marks an assignment or comparison operator.\n            if (code2 === 61) {\n                switch (code) {\n                case 37:  // %\n                case 38:  // &\n                case 42:  // *:\n                case 43:  // +\n                case 45:  // -\n                case 47:  // /\n                case 60:  // <\n                case 62:  // >\n                case 94:  // ^\n                case 124: // |\n                    index += 2;\n                    return {\n                        type: Token.Punctuator,\n                        value: String.fromCharCode(code) + String.fromCharCode(code2),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        range: [start, index]\n                    };\n\n                case 33: // !\n                case 61: // =\n                    index += 2;\n\n                    // !== and ===\n                    if (source.charCodeAt(index) === 61) {\n                        ++index;\n                    }\n                    return {\n                        type: Token.Punctuator,\n                        value: source.slice(start, index),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        range: [start, index]\n                    };\n                default:\n                    break;\n                }\n            }\n            break;\n        }\n\n        // Peek more characters.\n\n        ch2 = source[index + 1];\n        ch3 = source[index + 2];\n        ch4 = source[index + 3];\n\n        // 4-character punctuator: >>>=\n\n        if (ch1 === '>' && ch2 === '>' && ch3 === '>') {\n            if (ch4 === '=') {\n                index += 4;\n                return {\n                    type: Token.Punctuator,\n                    value: '>>>=',\n                    lineNumber: lineNumber,\n                    lineStart: lineStart,\n                    range: [start, index]\n                };\n            }\n        }\n\n        // 3-character punctuators: === !== >>> <<= >>=\n\n        if (ch1 === '>' && ch2 === '>' && ch3 === '>') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: '>>>',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '<' && ch2 === '<' && ch3 === '=') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: '<<=',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '>' && ch2 === '>' && ch3 === '=') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: '>>=',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '.' && ch2 === '.' && ch3 === '.') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: '...',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        // Other 2-character punctuators: ++ -- << >> && ||\n\n        // Don't match these tokens if we're in a type, since they never can\n        // occur and can mess up types like Map<string, Array<string>>\n        if (ch1 === ch2 && ('+-<>&|'.indexOf(ch1) >= 0) && !state.inType) {\n            index += 2;\n            return {\n                type: Token.Punctuator,\n                value: ch1 + ch2,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '=' && ch2 === '>') {\n            index += 2;\n            return {\n                type: Token.Punctuator,\n                value: '=>',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n            ++index;\n            return {\n                type: Token.Punctuator,\n                value: ch1,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '.') {\n            ++index;\n            return {\n                type: Token.Punctuator,\n                value: ch1,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    // 7.8.3 Numeric Literals\n\n    function scanHexLiteral(start) {\n        var number = '';\n\n        while (index < length) {\n            if (!isHexDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (number.length === 0) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt('0x' + number, 16),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanOctalLiteral(prefix, start) {\n        var number, octal;\n\n        if (isOctalDigit(prefix)) {\n            octal = true;\n            number = '0' + source[index++];\n        } else {\n            octal = false;\n            ++index;\n            number = '';\n        }\n\n        while (index < length) {\n            if (!isOctalDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (!octal && number.length === 0) {\n            // only 0o or 0O\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt(number, 8),\n            octal: octal,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanNumericLiteral() {\n        var number, start, ch, octal;\n\n        ch = source[index];\n        assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n            'Numeric literal must start with a decimal digit or a decimal point');\n\n        start = index;\n        number = '';\n        if (ch !== '.') {\n            number = source[index++];\n            ch = source[index];\n\n            // Hex number starts with '0x'.\n            // Octal number starts with '0'.\n            // Octal number in ES6 starts with '0o'.\n            // Binary number in ES6 starts with '0b'.\n            if (number === '0') {\n                if (ch === 'x' || ch === 'X') {\n                    ++index;\n                    return scanHexLiteral(start);\n                }\n                if (ch === 'b' || ch === 'B') {\n                    ++index;\n                    number = '';\n\n                    while (index < length) {\n                        ch = source[index];\n                        if (ch !== '0' && ch !== '1') {\n                            break;\n                        }\n                        number += source[index++];\n                    }\n\n                    if (number.length === 0) {\n                        // only 0b or 0B\n                        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                    }\n\n                    if (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (isIdentifierStart(ch) || isDecimalDigit(ch)) {\n                            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                        }\n                    }\n                    return {\n                        type: Token.NumericLiteral,\n                        value: parseInt(number, 2),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        range: [start, index]\n                    };\n                }\n                if (ch === 'o' || ch === 'O' || isOctalDigit(ch)) {\n                    return scanOctalLiteral(ch, start);\n                }\n                // decimal number starts with '0' such as '09' is illegal.\n                if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            }\n\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === '.') {\n            number += source[index++];\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === 'e' || ch === 'E') {\n            number += source[index++];\n\n            ch = source[index];\n            if (ch === '+' || ch === '-') {\n                number += source[index++];\n            }\n            if (isDecimalDigit(source.charCodeAt(index))) {\n                while (isDecimalDigit(source.charCodeAt(index))) {\n                    number += source[index++];\n                }\n            } else {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseFloat(number),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    // 7.8.4 String Literals\n\n    function scanStringLiteral() {\n        var str = '', quote, start, ch, code, unescaped, restore, octal = false;\n\n        quote = source[index];\n        assert((quote === '\\'' || quote === '\"'),\n            'String literal must starts with a quote');\n\n        start = index;\n        ++index;\n\n        while (index < length) {\n            ch = source[index++];\n\n            if (ch === quote) {\n                quote = '';\n                break;\n            } else if (ch === '\\\\') {\n                ch = source[index++];\n                if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'n':\n                        str += '\\n';\n                        break;\n                    case 'r':\n                        str += '\\r';\n                        break;\n                    case 't':\n                        str += '\\t';\n                        break;\n                    case 'u':\n                    case 'x':\n                        if (source[index] === '{') {\n                            ++index;\n                            str += scanUnicodeCodePointEscape();\n                        } else {\n                            restore = index;\n                            unescaped = scanHexEscape(ch);\n                            if (unescaped) {\n                                str += unescaped;\n                            } else {\n                                index = restore;\n                                str += ch;\n                            }\n                        }\n                        break;\n                    case 'b':\n                        str += '\\b';\n                        break;\n                    case 'f':\n                        str += '\\f';\n                        break;\n                    case 'v':\n                        str += '\\x0B';\n                        break;\n\n                    default:\n                        if (isOctalDigit(ch)) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            if (code !== 0) {\n                                octal = true;\n                            }\n\n                            if (index < length && isOctalDigit(source[index])) {\n                                octal = true;\n                                code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        isOctalDigit(source[index])) {\n                                    code = code * 8 + '01234567'.indexOf(source[index++]);\n                                }\n                            }\n                            str += String.fromCharCode(code);\n                        } else {\n                            str += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    ++lineNumber;\n                    if (ch ===  '\\r' && source[index] === '\\n') {\n                        ++index;\n                    }\n                    lineStart = index;\n                }\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                break;\n            } else {\n                str += ch;\n            }\n        }\n\n        if (quote !== '') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.StringLiteral,\n            value: str,\n            octal: octal,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanTemplate() {\n        var cooked = '', ch, start, terminated, tail, restore, unescaped, code, octal;\n\n        terminated = false;\n        tail = false;\n        start = index;\n\n        ++index;\n\n        while (index < length) {\n            ch = source[index++];\n            if (ch === '`') {\n                tail = true;\n                terminated = true;\n                break;\n            } else if (ch === '$') {\n                if (source[index] === '{') {\n                    ++index;\n                    terminated = true;\n                    break;\n                }\n                cooked += ch;\n            } else if (ch === '\\\\') {\n                ch = source[index++];\n                if (!isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'n':\n                        cooked += '\\n';\n                        break;\n                    case 'r':\n                        cooked += '\\r';\n                        break;\n                    case 't':\n                        cooked += '\\t';\n                        break;\n                    case 'u':\n                    case 'x':\n                        if (source[index] === '{') {\n                            ++index;\n                            cooked += scanUnicodeCodePointEscape();\n                        } else {\n                            restore = index;\n                            unescaped = scanHexEscape(ch);\n                            if (unescaped) {\n                                cooked += unescaped;\n                            } else {\n                                index = restore;\n                                cooked += ch;\n                            }\n                        }\n                        break;\n                    case 'b':\n                        cooked += '\\b';\n                        break;\n                    case 'f':\n                        cooked += '\\f';\n                        break;\n                    case 'v':\n                        cooked += '\\v';\n                        break;\n\n                    default:\n                        if (isOctalDigit(ch)) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            if (code !== 0) {\n                                octal = true;\n                            }\n\n                            if (index < length && isOctalDigit(source[index])) {\n                                octal = true;\n                                code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        isOctalDigit(source[index])) {\n                                    code = code * 8 + '01234567'.indexOf(source[index++]);\n                                }\n                            }\n                            cooked += String.fromCharCode(code);\n                        } else {\n                            cooked += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    ++lineNumber;\n                    if (ch ===  '\\r' && source[index] === '\\n') {\n                        ++index;\n                    }\n                    lineStart = index;\n                }\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                ++lineNumber;\n                if (ch ===  '\\r' && source[index] === '\\n') {\n                    ++index;\n                }\n                lineStart = index;\n                cooked += '\\n';\n            } else {\n                cooked += ch;\n            }\n        }\n\n        if (!terminated) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.Template,\n            value: {\n                cooked: cooked,\n                raw: source.slice(start + 1, index - ((tail) ? 1 : 2))\n            },\n            tail: tail,\n            octal: octal,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanTemplateElement(option) {\n        var startsWith, template;\n\n        lookahead = null;\n        skipComment();\n\n        startsWith = (option.head) ? '`' : '}';\n\n        if (source[index] !== startsWith) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        template = scanTemplate();\n\n        peek();\n\n        return template;\n    }\n\n    function scanRegExp() {\n        var str, ch, start, pattern, flags, value, classMarker = false, restore, terminated = false, tmp;\n\n        lookahead = null;\n        skipComment();\n\n        start = index;\n        ch = source[index];\n        assert(ch === '/', 'Regular expression literal must start with a slash');\n        str = source[index++];\n\n        while (index < length) {\n            ch = source[index++];\n            str += ch;\n            if (classMarker) {\n                if (ch === ']') {\n                    classMarker = false;\n                }\n            } else {\n                if (ch === '\\\\') {\n                    ch = source[index++];\n                    // ECMA-262 7.8.5\n                    if (isLineTerminator(ch.charCodeAt(0))) {\n                        throwError({}, Messages.UnterminatedRegExp);\n                    }\n                    str += ch;\n                } else if (ch === '/') {\n                    terminated = true;\n                    break;\n                } else if (ch === '[') {\n                    classMarker = true;\n                } else if (isLineTerminator(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnterminatedRegExp);\n                }\n            }\n        }\n\n        if (!terminated) {\n            throwError({}, Messages.UnterminatedRegExp);\n        }\n\n        // Exclude leading and trailing slash.\n        pattern = str.substr(1, str.length - 2);\n\n        flags = '';\n        while (index < length) {\n            ch = source[index];\n            if (!isIdentifierPart(ch.charCodeAt(0))) {\n                break;\n            }\n\n            ++index;\n            if (ch === '\\\\' && index < length) {\n                ch = source[index];\n                if (ch === 'u') {\n                    ++index;\n                    restore = index;\n                    ch = scanHexEscape('u');\n                    if (ch) {\n                        flags += ch;\n                        for (str += '\\\\u'; restore < index; ++restore) {\n                            str += source[restore];\n                        }\n                    } else {\n                        index = restore;\n                        flags += 'u';\n                        str += '\\\\u';\n                    }\n                } else {\n                    str += '\\\\';\n                }\n            } else {\n                flags += ch;\n                str += ch;\n            }\n        }\n\n        tmp = pattern;\n        if (flags.indexOf('u') >= 0) {\n            // Replace each astral symbol and every Unicode code point\n            // escape sequence that represents such a symbol with a single\n            // ASCII symbol to avoid throwing on regular expressions that\n            // are only valid in combination with the `/u` flag.\n            tmp = tmp\n                .replace(/\\\\u\\{([0-9a-fA-F]{5,6})\\}/g, 'x')\n                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n        }\n\n        // First, detect invalid regular expressions.\n        try {\n            value = new RegExp(tmp);\n        } catch (e) {\n            throwError({}, Messages.InvalidRegExp);\n        }\n\n        // Return a regular expression object for this pattern-flag pair, or\n        // `null` in case the current environment doesn't support the flags it\n        // uses.\n        try {\n            value = new RegExp(pattern, flags);\n        } catch (exception) {\n            value = null;\n        }\n\n        peek();\n\n        if (extra.tokenize) {\n            return {\n                type: Token.RegularExpression,\n                value: value,\n                regex: {\n                    pattern: pattern,\n                    flags: flags\n                },\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n        return {\n            literal: str,\n            value: value,\n            regex: {\n                pattern: pattern,\n                flags: flags\n            },\n            range: [start, index]\n        };\n    }\n\n    function isIdentifierName(token) {\n        return token.type === Token.Identifier ||\n            token.type === Token.Keyword ||\n            token.type === Token.BooleanLiteral ||\n            token.type === Token.NullLiteral;\n    }\n\n    function advanceSlash() {\n        var prevToken,\n            checkToken;\n        // Using the following algorithm:\n        // https://github.com/mozilla/sweet.js/wiki/design\n        prevToken = extra.tokens[extra.tokens.length - 1];\n        if (!prevToken) {\n            // Nothing before that: it cannot be a division.\n            return scanRegExp();\n        }\n        if (prevToken.type === 'Punctuator') {\n            if (prevToken.value === ')') {\n                checkToken = extra.tokens[extra.openParenToken - 1];\n                if (checkToken &&\n                        checkToken.type === 'Keyword' &&\n                        (checkToken.value === 'if' ||\n                         checkToken.value === 'while' ||\n                         checkToken.value === 'for' ||\n                         checkToken.value === 'with')) {\n                    return scanRegExp();\n                }\n                return scanPunctuator();\n            }\n            if (prevToken.value === '}') {\n                // Dividing a function by anything makes little sense,\n                // but we have to check for that.\n                if (extra.tokens[extra.openCurlyToken - 3] &&\n                        extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                    // Anonymous function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 4];\n                    if (!checkToken) {\n                        return scanPunctuator();\n                    }\n                } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                        extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                    // Named function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 5];\n                    if (!checkToken) {\n                        return scanRegExp();\n                    }\n                } else {\n                    return scanPunctuator();\n                }\n                // checkToken determines whether the function is\n                // a declaration or an expression.\n                if (FnExprTokens.indexOf(checkToken.value) >= 0) {\n                    // It is an expression.\n                    return scanPunctuator();\n                }\n                // It is a declaration.\n                return scanRegExp();\n            }\n            return scanRegExp();\n        }\n        if (prevToken.type === 'Keyword') {\n            return scanRegExp();\n        }\n        return scanPunctuator();\n    }\n\n    function advance() {\n        var ch;\n\n        if (!state.inXJSChild) {\n            skipComment();\n        }\n\n        if (index >= length) {\n            return {\n                type: Token.EOF,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [index, index]\n            };\n        }\n\n        if (state.inXJSChild) {\n            return advanceXJSChild();\n        }\n\n        ch = source.charCodeAt(index);\n\n        // Very common: ( and ) and ;\n        if (ch === 40 || ch === 41 || ch === 58) {\n            return scanPunctuator();\n        }\n\n        // String literal starts with single quote (#39) or double quote (#34).\n        if (ch === 39 || ch === 34) {\n            if (state.inXJSTag) {\n                return scanXJSStringLiteral();\n            }\n            return scanStringLiteral();\n        }\n\n        if (state.inXJSTag && isXJSIdentifierStart(ch)) {\n            return scanXJSIdentifier();\n        }\n\n        if (ch === 96) {\n            return scanTemplate();\n        }\n        if (isIdentifierStart(ch)) {\n            return scanIdentifier();\n        }\n\n        // Dot (.) char #46 can also start a floating-point number, hence the need\n        // to check the next character.\n        if (ch === 46) {\n            if (isDecimalDigit(source.charCodeAt(index + 1))) {\n                return scanNumericLiteral();\n            }\n            return scanPunctuator();\n        }\n\n        if (isDecimalDigit(ch)) {\n            return scanNumericLiteral();\n        }\n\n        // Slash (/) char #47 can also start a regex.\n        if (extra.tokenize && ch === 47) {\n            return advanceSlash();\n        }\n\n        return scanPunctuator();\n    }\n\n    function lex() {\n        var token;\n\n        token = lookahead;\n        index = token.range[1];\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        lookahead = advance();\n\n        index = token.range[1];\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        return token;\n    }\n\n    function peek() {\n        var pos, line, start;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        lookahead = advance();\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n    }\n\n    function lookahead2() {\n        var adv, pos, line, start, result;\n\n        // If we are collecting the tokens, don't grab the next one yet.\n        adv = (typeof extra.advance === 'function') ? extra.advance : advance;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n\n        // Scan for the next immediate token.\n        if (lookahead === null) {\n            lookahead = adv();\n        }\n        index = lookahead.range[1];\n        lineNumber = lookahead.lineNumber;\n        lineStart = lookahead.lineStart;\n\n        // Grab the token right after.\n        result = adv();\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n\n        return result;\n    }\n\n    function rewind(token) {\n        index = token.range[0];\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n        lookahead = token;\n    }\n\n    function markerCreate() {\n        if (!extra.loc && !extra.range) {\n            return undefined;\n        }\n        skipComment();\n        return {offset: index, line: lineNumber, col: index - lineStart};\n    }\n\n    function markerCreatePreserveWhitespace() {\n        if (!extra.loc && !extra.range) {\n            return undefined;\n        }\n        return {offset: index, line: lineNumber, col: index - lineStart};\n    }\n\n    function processComment(node) {\n        var lastChild,\n            trailingComments,\n            bottomRight = extra.bottomRightStack,\n            last = bottomRight[bottomRight.length - 1];\n\n        if (node.type === Syntax.Program) {\n            if (node.body.length > 0) {\n                return;\n            }\n        }\n\n        if (extra.trailingComments.length > 0) {\n            if (extra.trailingComments[0].range[0] >= node.range[1]) {\n                trailingComments = extra.trailingComments;\n                extra.trailingComments = [];\n            } else {\n                extra.trailingComments.length = 0;\n            }\n        } else {\n            if (last && last.trailingComments && last.trailingComments[0].range[0] >= node.range[1]) {\n                trailingComments = last.trailingComments;\n                delete last.trailingComments;\n            }\n        }\n\n        // Eating the stack.\n        if (last) {\n            while (last && last.range[0] >= node.range[0]) {\n                lastChild = last;\n                last = bottomRight.pop();\n            }\n        }\n\n        if (lastChild) {\n            if (lastChild.leadingComments && lastChild.leadingComments[lastChild.leadingComments.length - 1].range[1] <= node.range[0]) {\n                node.leadingComments = lastChild.leadingComments;\n                delete lastChild.leadingComments;\n            }\n        } else if (extra.leadingComments.length > 0 && extra.leadingComments[extra.leadingComments.length - 1].range[1] <= node.range[0]) {\n            node.leadingComments = extra.leadingComments;\n            extra.leadingComments = [];\n        }\n\n        if (trailingComments) {\n            node.trailingComments = trailingComments;\n        }\n\n        bottomRight.push(node);\n    }\n\n    function markerApply(marker, node) {\n        if (extra.range) {\n            node.range = [marker.offset, index];\n        }\n        if (extra.loc) {\n            node.loc = {\n                start: {\n                    line: marker.line,\n                    column: marker.col\n                },\n                end: {\n                    line: lineNumber,\n                    column: index - lineStart\n                }\n            };\n            node = delegate.postProcess(node);\n        }\n        if (extra.attachComment) {\n            processComment(node);\n        }\n        return node;\n    }\n\n    SyntaxTreeDelegate = {\n\n        name: 'SyntaxTree',\n\n        postProcess: function (node) {\n            return node;\n        },\n\n        createArrayExpression: function (elements) {\n            return {\n                type: Syntax.ArrayExpression,\n                elements: elements\n            };\n        },\n\n        createAssignmentExpression: function (operator, left, right) {\n            return {\n                type: Syntax.AssignmentExpression,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBinaryExpression: function (operator, left, right) {\n            var type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression :\n                        Syntax.BinaryExpression;\n            return {\n                type: type,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBlockStatement: function (body) {\n            return {\n                type: Syntax.BlockStatement,\n                body: body\n            };\n        },\n\n        createBreakStatement: function (label) {\n            return {\n                type: Syntax.BreakStatement,\n                label: label\n            };\n        },\n\n        createCallExpression: function (callee, args) {\n            return {\n                type: Syntax.CallExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createCatchClause: function (param, body) {\n            return {\n                type: Syntax.CatchClause,\n                param: param,\n                body: body\n            };\n        },\n\n        createConditionalExpression: function (test, consequent, alternate) {\n            return {\n                type: Syntax.ConditionalExpression,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createContinueStatement: function (label) {\n            return {\n                type: Syntax.ContinueStatement,\n                label: label\n            };\n        },\n\n        createDebuggerStatement: function () {\n            return {\n                type: Syntax.DebuggerStatement\n            };\n        },\n\n        createDoWhileStatement: function (body, test) {\n            return {\n                type: Syntax.DoWhileStatement,\n                body: body,\n                test: test\n            };\n        },\n\n        createEmptyStatement: function () {\n            return {\n                type: Syntax.EmptyStatement\n            };\n        },\n\n        createExpressionStatement: function (expression) {\n            return {\n                type: Syntax.ExpressionStatement,\n                expression: expression\n            };\n        },\n\n        createForStatement: function (init, test, update, body) {\n            return {\n                type: Syntax.ForStatement,\n                init: init,\n                test: test,\n                update: update,\n                body: body\n            };\n        },\n\n        createForInStatement: function (left, right, body) {\n            return {\n                type: Syntax.ForInStatement,\n                left: left,\n                right: right,\n                body: body,\n                each: false\n            };\n        },\n\n        createForOfStatement: function (left, right, body) {\n            return {\n                type: Syntax.ForOfStatement,\n                left: left,\n                right: right,\n                body: body\n            };\n        },\n\n        createFunctionDeclaration: function (id, params, defaults, body, rest, generator, expression,\n                                             isAsync, returnType, typeParameters) {\n            var funDecl = {\n                type: Syntax.FunctionDeclaration,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: rest,\n                generator: generator,\n                expression: expression,\n                returnType: returnType,\n                typeParameters: typeParameters\n            };\n\n            if (isAsync) {\n                funDecl.async = true;\n            }\n\n            return funDecl;\n        },\n\n        createFunctionExpression: function (id, params, defaults, body, rest, generator, expression,\n                                            isAsync, returnType, typeParameters) {\n            var funExpr = {\n                type: Syntax.FunctionExpression,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: rest,\n                generator: generator,\n                expression: expression,\n                returnType: returnType,\n                typeParameters: typeParameters\n            };\n\n            if (isAsync) {\n                funExpr.async = true;\n            }\n\n            return funExpr;\n        },\n\n        createIdentifier: function (name) {\n            return {\n                type: Syntax.Identifier,\n                name: name,\n                // Only here to initialize the shape of the object to ensure\n                // that the 'typeAnnotation' key is ordered before others that\n                // are added later (like 'loc' and 'range'). This just helps\n                // keep the shape of Identifier nodes consistent with everything\n                // else.\n                typeAnnotation: undefined,\n                optional: undefined\n            };\n        },\n\n        createTypeAnnotation: function (typeAnnotation) {\n            return {\n                type: Syntax.TypeAnnotation,\n                typeAnnotation: typeAnnotation\n            };\n        },\n\n        createFunctionTypeAnnotation: function (params, returnType, rest, typeParameters) {\n            return {\n                type: Syntax.FunctionTypeAnnotation,\n                params: params,\n                returnType: returnType,\n                rest: rest,\n                typeParameters: typeParameters\n            };\n        },\n\n        createFunctionTypeParam: function (name, typeAnnotation, optional) {\n            return {\n                type: Syntax.FunctionTypeParam,\n                name: name,\n                typeAnnotation: typeAnnotation,\n                optional: optional\n            };\n        },\n\n        createNullableTypeAnnotation: function (typeAnnotation) {\n            return {\n                type: Syntax.NullableTypeAnnotation,\n                typeAnnotation: typeAnnotation\n            };\n        },\n\n        createArrayTypeAnnotation: function (elementType) {\n            return {\n                type: Syntax.ArrayTypeAnnotation,\n                elementType: elementType\n            };\n        },\n\n        createGenericTypeAnnotation: function (id, typeParameters) {\n            return {\n                type: Syntax.GenericTypeAnnotation,\n                id: id,\n                typeParameters: typeParameters\n            };\n        },\n\n        createQualifiedTypeIdentifier: function (qualification, id) {\n            return {\n                type: Syntax.QualifiedTypeIdentifier,\n                qualification: qualification,\n                id: id\n            };\n        },\n\n        createTypeParameterDeclaration: function (params) {\n            return {\n                type: Syntax.TypeParameterDeclaration,\n                params: params\n            };\n        },\n\n        createTypeParameterInstantiation: function (params) {\n            return {\n                type: Syntax.TypeParameterInstantiation,\n                params: params\n            };\n        },\n\n        createAnyTypeAnnotation: function () {\n            return {\n                type: Syntax.AnyTypeAnnotation\n            };\n        },\n\n        createBooleanTypeAnnotation: function () {\n            return {\n                type: Syntax.BooleanTypeAnnotation\n            };\n        },\n\n        createNumberTypeAnnotation: function () {\n            return {\n                type: Syntax.NumberTypeAnnotation\n            };\n        },\n\n        createStringTypeAnnotation: function () {\n            return {\n                type: Syntax.StringTypeAnnotation\n            };\n        },\n\n        createStringLiteralTypeAnnotation: function (token) {\n            return {\n                type: Syntax.StringLiteralTypeAnnotation,\n                value: token.value,\n                raw: source.slice(token.range[0], token.range[1])\n            };\n        },\n\n        createVoidTypeAnnotation: function () {\n            return {\n                type: Syntax.VoidTypeAnnotation\n            };\n        },\n\n        createTypeofTypeAnnotation: function (argument) {\n            return {\n                type: Syntax.TypeofTypeAnnotation,\n                argument: argument\n            };\n        },\n\n        createTupleTypeAnnotation: function (types) {\n            return {\n                type: Syntax.TupleTypeAnnotation,\n                types: types\n            };\n        },\n\n        createObjectTypeAnnotation: function (properties, indexers, callProperties) {\n            return {\n                type: Syntax.ObjectTypeAnnotation,\n                properties: properties,\n                indexers: indexers,\n                callProperties: callProperties\n            };\n        },\n\n        createObjectTypeIndexer: function (id, key, value, isStatic) {\n            return {\n                type: Syntax.ObjectTypeIndexer,\n                id: id,\n                key: key,\n                value: value,\n                static: isStatic\n            };\n        },\n\n        createObjectTypeCallProperty: function (value, isStatic) {\n            return {\n                type: Syntax.ObjectTypeCallProperty,\n                value: value,\n                static: isStatic\n            };\n        },\n\n        createObjectTypeProperty: function (key, value, optional, isStatic) {\n            return {\n                type: Syntax.ObjectTypeProperty,\n                key: key,\n                value: value,\n                optional: optional,\n                static: isStatic\n            };\n        },\n\n        createUnionTypeAnnotation: function (types) {\n            return {\n                type: Syntax.UnionTypeAnnotation,\n                types: types\n            };\n        },\n\n        createIntersectionTypeAnnotation: function (types) {\n            return {\n                type: Syntax.IntersectionTypeAnnotation,\n                types: types\n            };\n        },\n\n        createTypeAlias: function (id, typeParameters, right) {\n            return {\n                type: Syntax.TypeAlias,\n                id: id,\n                typeParameters: typeParameters,\n                right: right\n            };\n        },\n\n        createInterface: function (id, typeParameters, body, extended) {\n            return {\n                type: Syntax.InterfaceDeclaration,\n                id: id,\n                typeParameters: typeParameters,\n                body: body,\n                extends: extended\n            };\n        },\n\n        createInterfaceExtends: function (id, typeParameters) {\n            return {\n                type: Syntax.InterfaceExtends,\n                id: id,\n                typeParameters: typeParameters\n            };\n        },\n\n        createDeclareFunction: function (id) {\n            return {\n                type: Syntax.DeclareFunction,\n                id: id\n            };\n        },\n\n        createDeclareVariable: function (id) {\n            return {\n                type: Syntax.DeclareVariable,\n                id: id\n            };\n        },\n\n        createDeclareModule: function (id, body) {\n            return {\n                type: Syntax.DeclareModule,\n                id: id,\n                body: body\n            };\n        },\n\n        createXJSAttribute: function (name, value) {\n            return {\n                type: Syntax.XJSAttribute,\n                name: name,\n                value: value || null\n            };\n        },\n\n        createXJSSpreadAttribute: function (argument) {\n            return {\n                type: Syntax.XJSSpreadAttribute,\n                argument: argument\n            };\n        },\n\n        createXJSIdentifier: function (name) {\n            return {\n                type: Syntax.XJSIdentifier,\n                name: name\n            };\n        },\n\n        createXJSNamespacedName: function (namespace, name) {\n            return {\n                type: Syntax.XJSNamespacedName,\n                namespace: namespace,\n                name: name\n            };\n        },\n\n        createXJSMemberExpression: function (object, property) {\n            return {\n                type: Syntax.XJSMemberExpression,\n                object: object,\n                property: property\n            };\n        },\n\n        createXJSElement: function (openingElement, closingElement, children) {\n            return {\n                type: Syntax.XJSElement,\n                openingElement: openingElement,\n                closingElement: closingElement,\n                children: children\n            };\n        },\n\n        createXJSEmptyExpression: function () {\n            return {\n                type: Syntax.XJSEmptyExpression\n            };\n        },\n\n        createXJSExpressionContainer: function (expression) {\n            return {\n                type: Syntax.XJSExpressionContainer,\n                expression: expression\n            };\n        },\n\n        createXJSOpeningElement: function (name, attributes, selfClosing) {\n            return {\n                type: Syntax.XJSOpeningElement,\n                name: name,\n                selfClosing: selfClosing,\n                attributes: attributes\n            };\n        },\n\n        createXJSClosingElement: function (name) {\n            return {\n                type: Syntax.XJSClosingElement,\n                name: name\n            };\n        },\n\n        createIfStatement: function (test, consequent, alternate) {\n            return {\n                type: Syntax.IfStatement,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createLabeledStatement: function (label, body) {\n            return {\n                type: Syntax.LabeledStatement,\n                label: label,\n                body: body\n            };\n        },\n\n        createLiteral: function (token) {\n            var object = {\n                type: Syntax.Literal,\n                value: token.value,\n                raw: source.slice(token.range[0], token.range[1])\n            };\n            if (token.regex) {\n                object.regex = token.regex;\n            }\n            return object;\n        },\n\n        createMemberExpression: function (accessor, object, property) {\n            return {\n                type: Syntax.MemberExpression,\n                computed: accessor === '[',\n                object: object,\n                property: property\n            };\n        },\n\n        createNewExpression: function (callee, args) {\n            return {\n                type: Syntax.NewExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createObjectExpression: function (properties) {\n            return {\n                type: Syntax.ObjectExpression,\n                properties: properties\n            };\n        },\n\n        createPostfixExpression: function (operator, argument) {\n            return {\n                type: Syntax.UpdateExpression,\n                operator: operator,\n                argument: argument,\n                prefix: false\n            };\n        },\n\n        createProgram: function (body) {\n            return {\n                type: Syntax.Program,\n                body: body\n            };\n        },\n\n        createProperty: function (kind, key, value, method, shorthand, computed) {\n            return {\n                type: Syntax.Property,\n                key: key,\n                value: value,\n                kind: kind,\n                method: method,\n                shorthand: shorthand,\n                computed: computed\n            };\n        },\n\n        createReturnStatement: function (argument) {\n            return {\n                type: Syntax.ReturnStatement,\n                argument: argument\n            };\n        },\n\n        createSequenceExpression: function (expressions) {\n            return {\n                type: Syntax.SequenceExpression,\n                expressions: expressions\n            };\n        },\n\n        createSwitchCase: function (test, consequent) {\n            return {\n                type: Syntax.SwitchCase,\n                test: test,\n                consequent: consequent\n            };\n        },\n\n        createSwitchStatement: function (discriminant, cases) {\n            return {\n                type: Syntax.SwitchStatement,\n                discriminant: discriminant,\n                cases: cases\n            };\n        },\n\n        createThisExpression: function () {\n            return {\n                type: Syntax.ThisExpression\n            };\n        },\n\n        createThrowStatement: function (argument) {\n            return {\n                type: Syntax.ThrowStatement,\n                argument: argument\n            };\n        },\n\n        createTryStatement: function (block, guardedHandlers, handlers, finalizer) {\n            return {\n                type: Syntax.TryStatement,\n                block: block,\n                guardedHandlers: guardedHandlers,\n                handlers: handlers,\n                finalizer: finalizer\n            };\n        },\n\n        createUnaryExpression: function (operator, argument) {\n            if (operator === '++' || operator === '--') {\n                return {\n                    type: Syntax.UpdateExpression,\n                    operator: operator,\n                    argument: argument,\n                    prefix: true\n                };\n            }\n            return {\n                type: Syntax.UnaryExpression,\n                operator: operator,\n                argument: argument,\n                prefix: true\n            };\n        },\n\n        createVariableDeclaration: function (declarations, kind) {\n            return {\n                type: Syntax.VariableDeclaration,\n                declarations: declarations,\n                kind: kind\n            };\n        },\n\n        createVariableDeclarator: function (id, init) {\n            return {\n                type: Syntax.VariableDeclarator,\n                id: id,\n                init: init\n            };\n        },\n\n        createWhileStatement: function (test, body) {\n            return {\n                type: Syntax.WhileStatement,\n                test: test,\n                body: body\n            };\n        },\n\n        createWithStatement: function (object, body) {\n            return {\n                type: Syntax.WithStatement,\n                object: object,\n                body: body\n            };\n        },\n\n        createTemplateElement: function (value, tail) {\n            return {\n                type: Syntax.TemplateElement,\n                value: value,\n                tail: tail\n            };\n        },\n\n        createTemplateLiteral: function (quasis, expressions) {\n            return {\n                type: Syntax.TemplateLiteral,\n                quasis: quasis,\n                expressions: expressions\n            };\n        },\n\n        createSpreadElement: function (argument) {\n            return {\n                type: Syntax.SpreadElement,\n                argument: argument\n            };\n        },\n\n        createSpreadProperty: function (argument) {\n            return {\n                type: Syntax.SpreadProperty,\n                argument: argument\n            };\n        },\n\n        createTaggedTemplateExpression: function (tag, quasi) {\n            return {\n                type: Syntax.TaggedTemplateExpression,\n                tag: tag,\n                quasi: quasi\n            };\n        },\n\n        createArrowFunctionExpression: function (params, defaults, body, rest, expression, isAsync) {\n            var arrowExpr = {\n                type: Syntax.ArrowFunctionExpression,\n                id: null,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: rest,\n                generator: false,\n                expression: expression\n            };\n\n            if (isAsync) {\n                arrowExpr.async = true;\n            }\n\n            return arrowExpr;\n        },\n\n        createMethodDefinition: function (propertyType, kind, key, value) {\n            return {\n                type: Syntax.MethodDefinition,\n                key: key,\n                value: value,\n                kind: kind,\n                'static': propertyType === ClassPropertyType.static\n            };\n        },\n\n        createClassProperty: function (key, typeAnnotation, computed, isStatic) {\n            return {\n                type: Syntax.ClassProperty,\n                key: key,\n                typeAnnotation: typeAnnotation,\n                computed: computed,\n                static: isStatic\n            };\n        },\n\n        createClassBody: function (body) {\n            return {\n                type: Syntax.ClassBody,\n                body: body\n            };\n        },\n\n        createClassImplements: function (id, typeParameters) {\n            return {\n                type: Syntax.ClassImplements,\n                id: id,\n                typeParameters: typeParameters\n            };\n        },\n\n        createClassExpression: function (id, superClass, body, typeParameters, superTypeParameters, implemented) {\n            return {\n                type: Syntax.ClassExpression,\n                id: id,\n                superClass: superClass,\n                body: body,\n                typeParameters: typeParameters,\n                superTypeParameters: superTypeParameters,\n                implements: implemented\n            };\n        },\n\n        createClassDeclaration: function (id, superClass, body, typeParameters, superTypeParameters, implemented) {\n            return {\n                type: Syntax.ClassDeclaration,\n                id: id,\n                superClass: superClass,\n                body: body,\n                typeParameters: typeParameters,\n                superTypeParameters: superTypeParameters,\n                implements: implemented\n            };\n        },\n\n        createModuleSpecifier: function (token) {\n            return {\n                type: Syntax.ModuleSpecifier,\n                value: token.value,\n                raw: source.slice(token.range[0], token.range[1])\n            };\n        },\n\n        createExportSpecifier: function (id, name) {\n            return {\n                type: Syntax.ExportSpecifier,\n                id: id,\n                name: name\n            };\n        },\n\n        createExportBatchSpecifier: function () {\n            return {\n                type: Syntax.ExportBatchSpecifier\n            };\n        },\n\n        createImportDefaultSpecifier: function (id) {\n            return {\n                type: Syntax.ImportDefaultSpecifier,\n                id: id\n            };\n        },\n\n        createImportNamespaceSpecifier: function (id) {\n            return {\n                type: Syntax.ImportNamespaceSpecifier,\n                id: id\n            };\n        },\n\n        createExportDeclaration: function (isDefault, declaration, specifiers, source) {\n            return {\n                type: Syntax.ExportDeclaration,\n                'default': !!isDefault,\n                declaration: declaration,\n                specifiers: specifiers,\n                source: source\n            };\n        },\n\n        createImportSpecifier: function (id, name) {\n            return {\n                type: Syntax.ImportSpecifier,\n                id: id,\n                name: name\n            };\n        },\n\n        createImportDeclaration: function (specifiers, source) {\n            return {\n                type: Syntax.ImportDeclaration,\n                specifiers: specifiers,\n                source: source\n            };\n        },\n\n        createYieldExpression: function (argument, delegate) {\n            return {\n                type: Syntax.YieldExpression,\n                argument: argument,\n                delegate: delegate\n            };\n        },\n\n        createAwaitExpression: function (argument) {\n            return {\n                type: Syntax.AwaitExpression,\n                argument: argument\n            };\n        },\n\n        createComprehensionExpression: function (filter, blocks, body) {\n            return {\n                type: Syntax.ComprehensionExpression,\n                filter: filter,\n                blocks: blocks,\n                body: body\n            };\n        }\n\n    };\n\n    // Return true if there is a line terminator before the next token.\n\n    function peekLineTerminator() {\n        var pos, line, start, found;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        skipComment();\n        found = lineNumber !== line;\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n\n        return found;\n    }\n\n    // Throw an exception\n\n    function throwError(token, messageFormat) {\n        var error,\n            args = Array.prototype.slice.call(arguments, 2),\n            msg = messageFormat.replace(\n                /%(\\d)/g,\n                function (whole, index) {\n                    assert(index < args.length, 'Message reference must be in range');\n                    return args[index];\n                }\n            );\n\n        if (typeof token.lineNumber === 'number') {\n            error = new Error('Line ' + token.lineNumber + ': ' + msg);\n            error.index = token.range[0];\n            error.lineNumber = token.lineNumber;\n            error.column = token.range[0] - lineStart + 1;\n        } else {\n            error = new Error('Line ' + lineNumber + ': ' + msg);\n            error.index = index;\n            error.lineNumber = lineNumber;\n            error.column = index - lineStart + 1;\n        }\n\n        error.description = msg;\n        throw error;\n    }\n\n    function throwErrorTolerant() {\n        try {\n            throwError.apply(null, arguments);\n        } catch (e) {\n            if (extra.errors) {\n                extra.errors.push(e);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n\n    // Throw an exception because of the token.\n\n    function throwUnexpected(token) {\n        if (token.type === Token.EOF) {\n            throwError(token, Messages.UnexpectedEOS);\n        }\n\n        if (token.type === Token.NumericLiteral) {\n            throwError(token, Messages.UnexpectedNumber);\n        }\n\n        if (token.type === Token.StringLiteral || token.type === Token.XJSText) {\n            throwError(token, Messages.UnexpectedString);\n        }\n\n        if (token.type === Token.Identifier) {\n            throwError(token, Messages.UnexpectedIdentifier);\n        }\n\n        if (token.type === Token.Keyword) {\n            if (isFutureReservedWord(token.value)) {\n                throwError(token, Messages.UnexpectedReserved);\n            } else if (strict && isStrictModeReservedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictReservedWord);\n                return;\n            }\n            throwError(token, Messages.UnexpectedToken, token.value);\n        }\n\n        if (token.type === Token.Template) {\n            throwError(token, Messages.UnexpectedTemplate, token.value.raw);\n        }\n\n        // BooleanLiteral, NullLiteral, or Punctuator.\n        throwError(token, Messages.UnexpectedToken, token.value);\n    }\n\n    // Expect the next token to match the specified punctuator.\n    // If not, an exception will be thrown.\n\n    function expect(value) {\n        var token = lex();\n        if (token.type !== Token.Punctuator || token.value !== value) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Expect the next token to match the specified keyword.\n    // If not, an exception will be thrown.\n\n    function expectKeyword(keyword, contextual) {\n        var token = lex();\n        if (token.type !== (contextual ? Token.Identifier : Token.Keyword) ||\n                token.value !== keyword) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Expect the next token to match the specified contextual keyword.\n    // If not, an exception will be thrown.\n\n    function expectContextualKeyword(keyword) {\n        return expectKeyword(keyword, true);\n    }\n\n    // Return true if the next token matches the specified punctuator.\n\n    function match(value) {\n        return lookahead.type === Token.Punctuator && lookahead.value === value;\n    }\n\n    // Return true if the next token matches the specified keyword\n\n    function matchKeyword(keyword, contextual) {\n        var expectedType = contextual ? Token.Identifier : Token.Keyword;\n        return lookahead.type === expectedType && lookahead.value === keyword;\n    }\n\n    // Return true if the next token matches the specified contextual keyword\n\n    function matchContextualKeyword(keyword) {\n        return matchKeyword(keyword, true);\n    }\n\n    // Return true if the next token is an assignment operator\n\n    function matchAssign() {\n        var op;\n\n        if (lookahead.type !== Token.Punctuator) {\n            return false;\n        }\n        op = lookahead.value;\n        return op === '=' ||\n            op === '*=' ||\n            op === '/=' ||\n            op === '%=' ||\n            op === '+=' ||\n            op === '-=' ||\n            op === '<<=' ||\n            op === '>>=' ||\n            op === '>>>=' ||\n            op === '&=' ||\n            op === '^=' ||\n            op === '|=';\n    }\n\n    // Note that 'yield' is treated as a keyword in strict mode, but a\n    // contextual keyword (identifier) in non-strict mode, so we need to\n    // use matchKeyword('yield', false) and matchKeyword('yield', true)\n    // (i.e. matchContextualKeyword) appropriately.\n    function matchYield() {\n        return state.yieldAllowed && matchKeyword('yield', !strict);\n    }\n\n    function matchAsync() {\n        var backtrackToken = lookahead, matches = false;\n\n        if (matchContextualKeyword('async')) {\n            lex(); // Make sure peekLineTerminator() starts after 'async'.\n            matches = !peekLineTerminator();\n            rewind(backtrackToken); // Revert the lex().\n        }\n\n        return matches;\n    }\n\n    function matchAwait() {\n        return state.awaitAllowed && matchContextualKeyword('await');\n    }\n\n    function consumeSemicolon() {\n        var line, oldIndex = index, oldLineNumber = lineNumber,\n            oldLineStart = lineStart, oldLookahead = lookahead;\n\n        // Catch the very common case first: immediately a semicolon (char #59).\n        if (source.charCodeAt(index) === 59) {\n            lex();\n            return;\n        }\n\n        line = lineNumber;\n        skipComment();\n        if (lineNumber !== line) {\n            index = oldIndex;\n            lineNumber = oldLineNumber;\n            lineStart = oldLineStart;\n            lookahead = oldLookahead;\n            return;\n        }\n\n        if (match(';')) {\n            lex();\n            return;\n        }\n\n        if (lookahead.type !== Token.EOF && !match('}')) {\n            throwUnexpected(lookahead);\n        }\n    }\n\n    // Return true if provided expression is LeftHandSideExpression\n\n    function isLeftHandSide(expr) {\n        return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n    }\n\n    function isAssignableLeftHandSide(expr) {\n        return isLeftHandSide(expr) || expr.type === Syntax.ObjectPattern || expr.type === Syntax.ArrayPattern;\n    }\n\n    // 11.1.4 Array Initialiser\n\n    function parseArrayInitialiser() {\n        var elements = [], blocks = [], filter = null, tmp, possiblecomprehension = true, body,\n            marker = markerCreate();\n\n        expect('[');\n        while (!match(']')) {\n            if (lookahead.value === 'for' &&\n                    lookahead.type === Token.Keyword) {\n                if (!possiblecomprehension) {\n                    throwError({}, Messages.ComprehensionError);\n                }\n                matchKeyword('for');\n                tmp = parseForStatement({ignoreBody: true});\n                tmp.of = tmp.type === Syntax.ForOfStatement;\n                tmp.type = Syntax.ComprehensionBlock;\n                if (tmp.left.kind) { // can't be let or const\n                    throwError({}, Messages.ComprehensionError);\n                }\n                blocks.push(tmp);\n            } else if (lookahead.value === 'if' &&\n                           lookahead.type === Token.Keyword) {\n                if (!possiblecomprehension) {\n                    throwError({}, Messages.ComprehensionError);\n                }\n                expectKeyword('if');\n                expect('(');\n                filter = parseExpression();\n                expect(')');\n            } else if (lookahead.value === ',' &&\n                           lookahead.type === Token.Punctuator) {\n                possiblecomprehension = false; // no longer allowed.\n                lex();\n                elements.push(null);\n            } else {\n                tmp = parseSpreadOrAssignmentExpression();\n                elements.push(tmp);\n                if (tmp && tmp.type === Syntax.SpreadElement) {\n                    if (!match(']')) {\n                        throwError({}, Messages.ElementAfterSpreadElement);\n                    }\n                } else if (!(match(']') || matchKeyword('for') || matchKeyword('if'))) {\n                    expect(','); // this lexes.\n                    possiblecomprehension = false;\n                }\n            }\n        }\n\n        expect(']');\n\n        if (filter && !blocks.length) {\n            throwError({}, Messages.ComprehensionRequiresBlock);\n        }\n\n        if (blocks.length) {\n            if (elements.length !== 1) {\n                throwError({}, Messages.ComprehensionError);\n            }\n            return markerApply(marker, delegate.createComprehensionExpression(filter, blocks, elements[0]));\n        }\n        return markerApply(marker, delegate.createArrayExpression(elements));\n    }\n\n    // 11.1.5 Object Initialiser\n\n    function parsePropertyFunction(options) {\n        var previousStrict, previousYieldAllowed, previousAwaitAllowed,\n            params, defaults, body, marker = markerCreate();\n\n        previousStrict = strict;\n        previousYieldAllowed = state.yieldAllowed;\n        state.yieldAllowed = options.generator;\n        previousAwaitAllowed = state.awaitAllowed;\n        state.awaitAllowed = options.async;\n        params = options.params || [];\n        defaults = options.defaults || [];\n\n        body = parseConciseBody();\n        if (options.name && strict && isRestrictedWord(params[0].name)) {\n            throwErrorTolerant(options.name, Messages.StrictParamName);\n        }\n        strict = previousStrict;\n        state.yieldAllowed = previousYieldAllowed;\n        state.awaitAllowed = previousAwaitAllowed;\n\n        return markerApply(marker, delegate.createFunctionExpression(\n            null,\n            params,\n            defaults,\n            body,\n            options.rest || null,\n            options.generator,\n            body.type !== Syntax.BlockStatement,\n            options.async,\n            options.returnType,\n            options.typeParameters\n        ));\n    }\n\n\n    function parsePropertyMethodFunction(options) {\n        var previousStrict, tmp, method;\n\n        previousStrict = strict;\n        strict = true;\n\n        tmp = parseParams();\n\n        if (tmp.stricted) {\n            throwErrorTolerant(tmp.stricted, tmp.message);\n        }\n\n        method = parsePropertyFunction({\n            params: tmp.params,\n            defaults: tmp.defaults,\n            rest: tmp.rest,\n            generator: options.generator,\n            async: options.async,\n            returnType: tmp.returnType,\n            typeParameters: options.typeParameters\n        });\n\n        strict = previousStrict;\n\n        return method;\n    }\n\n\n    function parseObjectPropertyKey() {\n        var marker = markerCreate(),\n            token = lex(),\n            propertyKey,\n            result;\n\n        // Note: This function is called only from parseObjectProperty(), where\n        // EOF and Punctuator tokens are already filtered out.\n\n        if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n            if (strict && token.octal) {\n                throwErrorTolerant(token, Messages.StrictOctalLiteral);\n            }\n            return markerApply(marker, delegate.createLiteral(token));\n        }\n\n        if (token.type === Token.Punctuator && token.value === '[') {\n            // For computed properties we should skip the [ and ], and\n            // capture in marker only the assignment expression itself.\n            marker = markerCreate();\n            propertyKey = parseAssignmentExpression();\n            result = markerApply(marker, propertyKey);\n            expect(']');\n            return result;\n        }\n\n        return markerApply(marker, delegate.createIdentifier(token.value));\n    }\n\n    function parseObjectProperty() {\n        var token, key, id, value, param, expr, computed,\n            marker = markerCreate(), returnType;\n\n        token = lookahead;\n        computed = (token.value === '[');\n\n        if (token.type === Token.Identifier || computed || matchAsync()) {\n            id = parseObjectPropertyKey();\n\n            if (match(':')) {\n                lex();\n\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'init',\n                        id,\n                        parseAssignmentExpression(),\n                        false,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            if (match('(')) {\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'init',\n                        id,\n                        parsePropertyMethodFunction({\n                            generator: false,\n                            async: false\n                        }),\n                        true,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            // Property Assignment: Getter and Setter.\n\n            if (token.value === 'get') {\n                computed = (lookahead.value === '[');\n                key = parseObjectPropertyKey();\n\n                expect('(');\n                expect(')');\n                if (match(':')) {\n                    returnType = parseTypeAnnotation();\n                }\n\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'get',\n                        key,\n                        parsePropertyFunction({\n                            generator: false,\n                            async: false,\n                            returnType: returnType\n                        }),\n                        false,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            if (token.value === 'set') {\n                computed = (lookahead.value === '[');\n                key = parseObjectPropertyKey();\n\n                expect('(');\n                token = lookahead;\n                param = [ parseTypeAnnotatableIdentifier() ];\n                expect(')');\n                if (match(':')) {\n                    returnType = parseTypeAnnotation();\n                }\n\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'set',\n                        key,\n                        parsePropertyFunction({\n                            params: param,\n                            generator: false,\n                            async: false,\n                            name: token,\n                            returnType: returnType\n                        }),\n                        false,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            if (token.value === 'async') {\n                computed = (lookahead.value === '[');\n                key = parseObjectPropertyKey();\n\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'init',\n                        key,\n                        parsePropertyMethodFunction({\n                            generator: false,\n                            async: true\n                        }),\n                        true,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            if (computed) {\n                // Computed properties can only be used with full notation.\n                throwUnexpected(lookahead);\n            }\n\n            return markerApply(\n                marker,\n                delegate.createProperty('init', id, id, false, true, false)\n            );\n        }\n\n        if (token.type === Token.EOF || token.type === Token.Punctuator) {\n            if (!match('*')) {\n                throwUnexpected(token);\n            }\n            lex();\n\n            computed = (lookahead.type === Token.Punctuator && lookahead.value === '[');\n\n            id = parseObjectPropertyKey();\n\n            if (!match('(')) {\n                throwUnexpected(lex());\n            }\n\n            return markerApply(marker, delegate.createProperty('init', id, parsePropertyMethodFunction({ generator: true }), true, false, computed));\n        }\n        key = parseObjectPropertyKey();\n        if (match(':')) {\n            lex();\n            return markerApply(marker, delegate.createProperty('init', key, parseAssignmentExpression(), false, false, false));\n        }\n        if (match('(')) {\n            return markerApply(marker, delegate.createProperty('init', key, parsePropertyMethodFunction({ generator: false }), true, false, false));\n        }\n        throwUnexpected(lex());\n    }\n\n    function parseObjectSpreadProperty() {\n        var marker = markerCreate();\n        expect('...');\n        return markerApply(marker, delegate.createSpreadProperty(parseAssignmentExpression()));\n    }\n\n    function parseObjectInitialiser() {\n        var properties = [], property, name, key, kind, map = {}, toString = String,\n            marker = markerCreate();\n\n        expect('{');\n\n        while (!match('}')) {\n            if (match('...')) {\n                property = parseObjectSpreadProperty();\n            } else {\n                property = parseObjectProperty();\n\n                if (property.key.type === Syntax.Identifier) {\n                    name = property.key.name;\n                } else {\n                    name = toString(property.key.value);\n                }\n                kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n                key = '$' + name;\n                if (Object.prototype.hasOwnProperty.call(map, key)) {\n                    if (map[key] === PropertyKind.Data) {\n                        if (strict && kind === PropertyKind.Data) {\n                            throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                        } else if (kind !== PropertyKind.Data) {\n                            throwErrorTolerant({}, Messages.AccessorDataProperty);\n                        }\n                    } else {\n                        if (kind === PropertyKind.Data) {\n                            throwErrorTolerant({}, Messages.AccessorDataProperty);\n                        } else if (map[key] & kind) {\n                            throwErrorTolerant({}, Messages.AccessorGetSet);\n                        }\n                    }\n                    map[key] |= kind;\n                } else {\n                    map[key] = kind;\n                }\n            }\n\n            properties.push(property);\n\n            if (!match('}')) {\n                expect(',');\n            }\n        }\n\n        expect('}');\n\n        return markerApply(marker, delegate.createObjectExpression(properties));\n    }\n\n    function parseTemplateElement(option) {\n        var marker = markerCreate(),\n            token = scanTemplateElement(option);\n        if (strict && token.octal) {\n            throwError(token, Messages.StrictOctalLiteral);\n        }\n        return markerApply(marker, delegate.createTemplateElement({ raw: token.value.raw, cooked: token.value.cooked }, token.tail));\n    }\n\n    function parseTemplateLiteral() {\n        var quasi, quasis, expressions, marker = markerCreate();\n\n        quasi = parseTemplateElement({ head: true });\n        quasis = [ quasi ];\n        expressions = [];\n\n        while (!quasi.tail) {\n            expressions.push(parseExpression());\n            quasi = parseTemplateElement({ head: false });\n            quasis.push(quasi);\n        }\n\n        return markerApply(marker, delegate.createTemplateLiteral(quasis, expressions));\n    }\n\n    // 11.1.6 The Grouping Operator\n\n    function parseGroupExpression() {\n        var expr;\n\n        expect('(');\n\n        ++state.parenthesizedCount;\n\n        expr = parseExpression();\n\n        expect(')');\n\n        return expr;\n    }\n\n    function matchAsyncFuncExprOrDecl() {\n        var token;\n\n        if (matchAsync()) {\n            token = lookahead2();\n            if (token.type === Token.Keyword && token.value === 'function') {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // 11.1 Primary Expressions\n\n    function parsePrimaryExpression() {\n        var marker, type, token, expr;\n\n        type = lookahead.type;\n\n        if (type === Token.Identifier) {\n            marker = markerCreate();\n            return markerApply(marker, delegate.createIdentifier(lex().value));\n        }\n\n        if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n            if (strict && lookahead.octal) {\n                throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n            }\n            marker = markerCreate();\n            return markerApply(marker, delegate.createLiteral(lex()));\n        }\n\n        if (type === Token.Keyword) {\n            if (matchKeyword('this')) {\n                marker = markerCreate();\n                lex();\n                return markerApply(marker, delegate.createThisExpression());\n            }\n\n            if (matchKeyword('function')) {\n                return parseFunctionExpression();\n            }\n\n            if (matchKeyword('class')) {\n                return parseClassExpression();\n            }\n\n            if (matchKeyword('super')) {\n                marker = markerCreate();\n                lex();\n                return markerApply(marker, delegate.createIdentifier('super'));\n            }\n        }\n\n        if (type === Token.BooleanLiteral) {\n            marker = markerCreate();\n            token = lex();\n            token.value = (token.value === 'true');\n            return markerApply(marker, delegate.createLiteral(token));\n        }\n\n        if (type === Token.NullLiteral) {\n            marker = markerCreate();\n            token = lex();\n            token.value = null;\n            return markerApply(marker, delegate.createLiteral(token));\n        }\n\n        if (match('[')) {\n            return parseArrayInitialiser();\n        }\n\n        if (match('{')) {\n            return parseObjectInitialiser();\n        }\n\n        if (match('(')) {\n            return parseGroupExpression();\n        }\n\n        if (match('/') || match('/=')) {\n            marker = markerCreate();\n            return markerApply(marker, delegate.createLiteral(scanRegExp()));\n        }\n\n        if (type === Token.Template) {\n            return parseTemplateLiteral();\n        }\n\n        if (match('<')) {\n            return parseXJSElement();\n        }\n\n        throwUnexpected(lex());\n    }\n\n    // 11.2 Left-Hand-Side Expressions\n\n    function parseArguments() {\n        var args = [], arg;\n\n        expect('(');\n\n        if (!match(')')) {\n            while (index < length) {\n                arg = parseSpreadOrAssignmentExpression();\n                args.push(arg);\n\n                if (match(')')) {\n                    break;\n                } else if (arg.type === Syntax.SpreadElement) {\n                    throwError({}, Messages.ElementAfterSpreadElement);\n                }\n\n                expect(',');\n            }\n        }\n\n        expect(')');\n\n        return args;\n    }\n\n    function parseSpreadOrAssignmentExpression() {\n        if (match('...')) {\n            var marker = markerCreate();\n            lex();\n            return markerApply(marker, delegate.createSpreadElement(parseAssignmentExpression()));\n        }\n        return parseAssignmentExpression();\n    }\n\n    function parseNonComputedProperty() {\n        var marker = markerCreate(),\n            token = lex();\n\n        if (!isIdentifierName(token)) {\n            throwUnexpected(token);\n        }\n\n        return markerApply(marker, delegate.createIdentifier(token.value));\n    }\n\n    function parseNonComputedMember() {\n        expect('.');\n\n        return parseNonComputedProperty();\n    }\n\n    function parseComputedMember() {\n        var expr;\n\n        expect('[');\n\n        expr = parseExpression();\n\n        expect(']');\n\n        return expr;\n    }\n\n    function parseNewExpression() {\n        var callee, args, marker = markerCreate();\n\n        expectKeyword('new');\n        callee = parseLeftHandSideExpression();\n        args = match('(') ? parseArguments() : [];\n\n        return markerApply(marker, delegate.createNewExpression(callee, args));\n    }\n\n    function parseLeftHandSideExpressionAllowCall() {\n        var expr, args, marker = markerCreate();\n\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        while (match('.') || match('[') || match('(') || lookahead.type === Token.Template) {\n            if (match('(')) {\n                args = parseArguments();\n                expr = markerApply(marker, delegate.createCallExpression(expr, args));\n            } else if (match('[')) {\n                expr = markerApply(marker, delegate.createMemberExpression('[', expr, parseComputedMember()));\n            } else if (match('.')) {\n                expr = markerApply(marker, delegate.createMemberExpression('.', expr, parseNonComputedMember()));\n            } else {\n                expr = markerApply(marker, delegate.createTaggedTemplateExpression(expr, parseTemplateLiteral()));\n            }\n        }\n\n        return expr;\n    }\n\n    function parseLeftHandSideExpression() {\n        var expr, marker = markerCreate();\n\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        while (match('.') || match('[') || lookahead.type === Token.Template) {\n            if (match('[')) {\n                expr = markerApply(marker, delegate.createMemberExpression('[', expr, parseComputedMember()));\n            } else if (match('.')) {\n                expr = markerApply(marker, delegate.createMemberExpression('.', expr, parseNonComputedMember()));\n            } else {\n                expr = markerApply(marker, delegate.createTaggedTemplateExpression(expr, parseTemplateLiteral()));\n            }\n        }\n\n        return expr;\n    }\n\n    // 11.3 Postfix Expressions\n\n    function parsePostfixExpression() {\n        var marker = markerCreate(),\n            expr = parseLeftHandSideExpressionAllowCall(),\n            token;\n\n        if (lookahead.type !== Token.Punctuator) {\n            return expr;\n        }\n\n        if ((match('++') || match('--')) && !peekLineTerminator()) {\n            // 11.3.1, 11.3.2\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant({}, Messages.StrictLHSPostfix);\n            }\n\n            if (!isLeftHandSide(expr)) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n\n            token = lex();\n            expr = markerApply(marker, delegate.createPostfixExpression(token.value, expr));\n        }\n\n        return expr;\n    }\n\n    // 11.4 Unary Operators\n\n    function parseUnaryExpression() {\n        var marker, token, expr;\n\n        if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n            return parsePostfixExpression();\n        }\n\n        if (match('++') || match('--')) {\n            marker = markerCreate();\n            token = lex();\n            expr = parseUnaryExpression();\n            // 11.4.4, 11.4.5\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant({}, Messages.StrictLHSPrefix);\n            }\n\n            if (!isLeftHandSide(expr)) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n\n            return markerApply(marker, delegate.createUnaryExpression(token.value, expr));\n        }\n\n        if (match('+') || match('-') || match('~') || match('!')) {\n            marker = markerCreate();\n            token = lex();\n            expr = parseUnaryExpression();\n            return markerApply(marker, delegate.createUnaryExpression(token.value, expr));\n        }\n\n        if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n            marker = markerCreate();\n            token = lex();\n            expr = parseUnaryExpression();\n            expr = markerApply(marker, delegate.createUnaryExpression(token.value, expr));\n            if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {\n                throwErrorTolerant({}, Messages.StrictDelete);\n            }\n            return expr;\n        }\n\n        return parsePostfixExpression();\n    }\n\n    function binaryPrecedence(token, allowIn) {\n        var prec = 0;\n\n        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n            return 0;\n        }\n\n        switch (token.value) {\n        case '||':\n            prec = 1;\n            break;\n\n        case '&&':\n            prec = 2;\n            break;\n\n        case '|':\n            prec = 3;\n            break;\n\n        case '^':\n            prec = 4;\n            break;\n\n        case '&':\n            prec = 5;\n            break;\n\n        case '==':\n        case '!=':\n        case '===':\n        case '!==':\n            prec = 6;\n            break;\n\n        case '<':\n        case '>':\n        case '<=':\n        case '>=':\n        case 'instanceof':\n            prec = 7;\n            break;\n\n        case 'in':\n            prec = allowIn ? 7 : 0;\n            break;\n\n        case '<<':\n        case '>>':\n        case '>>>':\n            prec = 8;\n            break;\n\n        case '+':\n        case '-':\n            prec = 9;\n            break;\n\n        case '*':\n        case '/':\n        case '%':\n            prec = 11;\n            break;\n\n        default:\n            break;\n        }\n\n        return prec;\n    }\n\n    // 11.5 Multiplicative Operators\n    // 11.6 Additive Operators\n    // 11.7 Bitwise Shift Operators\n    // 11.8 Relational Operators\n    // 11.9 Equality Operators\n    // 11.10 Binary Bitwise Operators\n    // 11.11 Binary Logical Operators\n\n    function parseBinaryExpression() {\n        var expr, token, prec, previousAllowIn, stack, right, operator, left, i,\n            marker, markers;\n\n        previousAllowIn = state.allowIn;\n        state.allowIn = true;\n\n        marker = markerCreate();\n        left = parseUnaryExpression();\n\n        token = lookahead;\n        prec = binaryPrecedence(token, previousAllowIn);\n        if (prec === 0) {\n            return left;\n        }\n        token.prec = prec;\n        lex();\n\n        markers = [marker, markerCreate()];\n        right = parseUnaryExpression();\n\n        stack = [left, token, right];\n\n        while ((prec = binaryPrecedence(lookahead, previousAllowIn)) > 0) {\n\n            // Reduce: make a binary expression from the three topmost entries.\n            while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n                right = stack.pop();\n                operator = stack.pop().value;\n                left = stack.pop();\n                expr = delegate.createBinaryExpression(operator, left, right);\n                markers.pop();\n                marker = markers.pop();\n                markerApply(marker, expr);\n                stack.push(expr);\n                markers.push(marker);\n            }\n\n            // Shift.\n            token = lex();\n            token.prec = prec;\n            stack.push(token);\n            markers.push(markerCreate());\n            expr = parseUnaryExpression();\n            stack.push(expr);\n        }\n\n        state.allowIn = previousAllowIn;\n\n        // Final reduce to clean-up the stack.\n        i = stack.length - 1;\n        expr = stack[i];\n        markers.pop();\n        while (i > 1) {\n            expr = delegate.createBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n            i -= 2;\n            marker = markers.pop();\n            markerApply(marker, expr);\n        }\n\n        return expr;\n    }\n\n\n    // 11.12 Conditional Operator\n\n    function parseConditionalExpression() {\n        var expr, previousAllowIn, consequent, alternate, marker = markerCreate();\n        expr = parseBinaryExpression();\n\n        if (match('?')) {\n            lex();\n            previousAllowIn = state.allowIn;\n            state.allowIn = true;\n            consequent = parseAssignmentExpression();\n            state.allowIn = previousAllowIn;\n            expect(':');\n            alternate = parseAssignmentExpression();\n\n            expr = markerApply(marker, delegate.createConditionalExpression(expr, consequent, alternate));\n        }\n\n        return expr;\n    }\n\n    // 11.13 Assignment Operators\n\n    function reinterpretAsAssignmentBindingPattern(expr) {\n        var i, len, property, element;\n\n        if (expr.type === Syntax.ObjectExpression) {\n            expr.type = Syntax.ObjectPattern;\n            for (i = 0, len = expr.properties.length; i < len; i += 1) {\n                property = expr.properties[i];\n                if (property.type === Syntax.SpreadProperty) {\n                    if (i < len - 1) {\n                        throwError({}, Messages.PropertyAfterSpreadProperty);\n                    }\n                    reinterpretAsAssignmentBindingPattern(property.argument);\n                } else {\n                    if (property.kind !== 'init') {\n                        throwError({}, Messages.InvalidLHSInAssignment);\n                    }\n                    reinterpretAsAssignmentBindingPattern(property.value);\n                }\n            }\n        } else if (expr.type === Syntax.ArrayExpression) {\n            expr.type = Syntax.ArrayPattern;\n            for (i = 0, len = expr.elements.length; i < len; i += 1) {\n                element = expr.elements[i];\n                if (element) {\n                    reinterpretAsAssignmentBindingPattern(element);\n                }\n            }\n        } else if (expr.type === Syntax.Identifier) {\n            if (isRestrictedWord(expr.name)) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n        } else if (expr.type === Syntax.SpreadElement) {\n            reinterpretAsAssignmentBindingPattern(expr.argument);\n            if (expr.argument.type === Syntax.ObjectPattern) {\n                throwError({}, Messages.ObjectPatternAsSpread);\n            }\n        } else {\n            if (expr.type !== Syntax.MemberExpression && expr.type !== Syntax.CallExpression && expr.type !== Syntax.NewExpression) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n        }\n    }\n\n\n    function reinterpretAsDestructuredParameter(options, expr) {\n        var i, len, property, element;\n\n        if (expr.type === Syntax.ObjectExpression) {\n            expr.type = Syntax.ObjectPattern;\n            for (i = 0, len = expr.properties.length; i < len; i += 1) {\n                property = expr.properties[i];\n                if (property.type === Syntax.SpreadProperty) {\n                    if (i < len - 1) {\n                        throwError({}, Messages.PropertyAfterSpreadProperty);\n                    }\n                    reinterpretAsDestructuredParameter(options, property.argument);\n                } else {\n                    if (property.kind !== 'init') {\n                        throwError({}, Messages.InvalidLHSInFormalsList);\n                    }\n                    reinterpretAsDestructuredParameter(options, property.value);\n                }\n            }\n        } else if (expr.type === Syntax.ArrayExpression) {\n            expr.type = Syntax.ArrayPattern;\n            for (i = 0, len = expr.elements.length; i < len; i += 1) {\n                element = expr.elements[i];\n                if (element) {\n                    reinterpretAsDestructuredParameter(options, element);\n                }\n            }\n        } else if (expr.type === Syntax.Identifier) {\n            validateParam(options, expr, expr.name);\n        } else {\n            if (expr.type !== Syntax.MemberExpression) {\n                throwError({}, Messages.InvalidLHSInFormalsList);\n            }\n        }\n    }\n\n    function reinterpretAsCoverFormalsList(expressions) {\n        var i, len, param, params, defaults, defaultCount, options, rest;\n\n        params = [];\n        defaults = [];\n        defaultCount = 0;\n        rest = null;\n        options = {\n            paramSet: {}\n        };\n\n        for (i = 0, len = expressions.length; i < len; i += 1) {\n            param = expressions[i];\n            if (param.type === Syntax.Identifier) {\n                params.push(param);\n                defaults.push(null);\n                validateParam(options, param, param.name);\n            } else if (param.type === Syntax.ObjectExpression || param.type === Syntax.ArrayExpression) {\n                reinterpretAsDestructuredParameter(options, param);\n                params.push(param);\n                defaults.push(null);\n            } else if (param.type === Syntax.SpreadElement) {\n                assert(i === len - 1, 'It is guaranteed that SpreadElement is last element by parseExpression');\n                reinterpretAsDestructuredParameter(options, param.argument);\n                rest = param.argument;\n            } else if (param.type === Syntax.AssignmentExpression) {\n                params.push(param.left);\n                defaults.push(param.right);\n                ++defaultCount;\n                validateParam(options, param.left, param.left.name);\n            } else {\n                return null;\n            }\n        }\n\n        if (options.message === Messages.StrictParamDupe) {\n            throwError(\n                strict ? options.stricted : options.firstRestricted,\n                options.message\n            );\n        }\n\n        if (defaultCount === 0) {\n            defaults = [];\n        }\n\n        return {\n            params: params,\n            defaults: defaults,\n            rest: rest,\n            stricted: options.stricted,\n            firstRestricted: options.firstRestricted,\n            message: options.message\n        };\n    }\n\n    function parseArrowFunctionExpression(options, marker) {\n        var previousStrict, previousYieldAllowed, previousAwaitAllowed, body;\n\n        expect('=>');\n\n        previousStrict = strict;\n        previousYieldAllowed = state.yieldAllowed;\n        state.yieldAllowed = false;\n        previousAwaitAllowed = state.awaitAllowed;\n        state.awaitAllowed = !!options.async;\n        body = parseConciseBody();\n\n        if (strict && options.firstRestricted) {\n            throwError(options.firstRestricted, options.message);\n        }\n        if (strict && options.stricted) {\n            throwErrorTolerant(options.stricted, options.message);\n        }\n\n        strict = previousStrict;\n        state.yieldAllowed = previousYieldAllowed;\n        state.awaitAllowed = previousAwaitAllowed;\n\n        return markerApply(marker, delegate.createArrowFunctionExpression(\n            options.params,\n            options.defaults,\n            body,\n            options.rest,\n            body.type !== Syntax.BlockStatement,\n            !!options.async\n        ));\n    }\n\n    function parseAssignmentExpression() {\n        var marker, expr, token, params, oldParenthesizedCount,\n            backtrackToken = lookahead, possiblyAsync = false;\n\n        if (matchYield()) {\n            return parseYieldExpression();\n        }\n\n        if (matchAwait()) {\n            return parseAwaitExpression();\n        }\n\n        oldParenthesizedCount = state.parenthesizedCount;\n\n        marker = markerCreate();\n\n        if (matchAsyncFuncExprOrDecl()) {\n            return parseFunctionExpression();\n        }\n\n        if (matchAsync()) {\n            // We can't be completely sure that this 'async' token is\n            // actually a contextual keyword modifying a function\n            // expression, so we might have to un-lex() it later by\n            // calling rewind(backtrackToken).\n            possiblyAsync = true;\n            lex();\n        }\n\n        if (match('(')) {\n            token = lookahead2();\n            if ((token.type === Token.Punctuator && token.value === ')') || token.value === '...') {\n                params = parseParams();\n                if (!match('=>')) {\n                    throwUnexpected(lex());\n                }\n                params.async = possiblyAsync;\n                return parseArrowFunctionExpression(params, marker);\n            }\n        }\n\n        token = lookahead;\n\n        // If the 'async' keyword is not followed by a '(' character or an\n        // identifier, then it can't be an arrow function modifier, and we\n        // should interpret it as a normal identifer.\n        if (possiblyAsync && !match('(') && token.type !== Token.Identifier) {\n            possiblyAsync = false;\n            rewind(backtrackToken);\n        }\n\n        expr = parseConditionalExpression();\n\n        if (match('=>') &&\n                (state.parenthesizedCount === oldParenthesizedCount ||\n                state.parenthesizedCount === (oldParenthesizedCount + 1))) {\n            if (expr.type === Syntax.Identifier) {\n                params = reinterpretAsCoverFormalsList([ expr ]);\n            } else if (expr.type === Syntax.SequenceExpression) {\n                params = reinterpretAsCoverFormalsList(expr.expressions);\n            }\n            if (params) {\n                params.async = possiblyAsync;\n                return parseArrowFunctionExpression(params, marker);\n            }\n        }\n\n        // If we haven't returned by now, then the 'async' keyword was not\n        // a function modifier, and we should rewind and interpret it as a\n        // normal identifier.\n        if (possiblyAsync) {\n            possiblyAsync = false;\n            rewind(backtrackToken);\n            expr = parseConditionalExpression();\n        }\n\n        if (matchAssign()) {\n            // 11.13.1\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant(token, Messages.StrictLHSAssignment);\n            }\n\n            // ES.next draf 11.13 Runtime Semantics step 1\n            if (match('=') && (expr.type === Syntax.ObjectExpression || expr.type === Syntax.ArrayExpression)) {\n                reinterpretAsAssignmentBindingPattern(expr);\n            } else if (!isLeftHandSide(expr)) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n\n            expr = markerApply(marker, delegate.createAssignmentExpression(lex().value, expr, parseAssignmentExpression()));\n        }\n\n        return expr;\n    }\n\n    // 11.14 Comma Operator\n\n    function parseExpression() {\n        var marker, expr, expressions, sequence, coverFormalsList, spreadFound, oldParenthesizedCount;\n\n        oldParenthesizedCount = state.parenthesizedCount;\n\n        marker = markerCreate();\n        expr = parseAssignmentExpression();\n        expressions = [ expr ];\n\n        if (match(',')) {\n            while (index < length) {\n                if (!match(',')) {\n                    break;\n                }\n\n                lex();\n                expr = parseSpreadOrAssignmentExpression();\n                expressions.push(expr);\n\n                if (expr.type === Syntax.SpreadElement) {\n                    spreadFound = true;\n                    if (!match(')')) {\n                        throwError({}, Messages.ElementAfterSpreadElement);\n                    }\n                    break;\n                }\n            }\n\n            sequence = markerApply(marker, delegate.createSequenceExpression(expressions));\n        }\n\n        if (match('=>')) {\n            // Do not allow nested parentheses on the LHS of the =>.\n            if (state.parenthesizedCount === oldParenthesizedCount || state.parenthesizedCount === (oldParenthesizedCount + 1)) {\n                expr = expr.type === Syntax.SequenceExpression ? expr.expressions : expressions;\n                coverFormalsList = reinterpretAsCoverFormalsList(expr);\n                if (coverFormalsList) {\n                    return parseArrowFunctionExpression(coverFormalsList, marker);\n                }\n            }\n            throwUnexpected(lex());\n        }\n\n        if (spreadFound && lookahead2().value !== '=>') {\n            throwError({}, Messages.IllegalSpread);\n        }\n\n        return sequence || expr;\n    }\n\n    // 12.1 Block\n\n    function parseStatementList() {\n        var list = [],\n            statement;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            statement = parseSourceElement();\n            if (typeof statement === 'undefined') {\n                break;\n            }\n            list.push(statement);\n        }\n\n        return list;\n    }\n\n    function parseBlock() {\n        var block, marker = markerCreate();\n\n        expect('{');\n\n        block = parseStatementList();\n\n        expect('}');\n\n        return markerApply(marker, delegate.createBlockStatement(block));\n    }\n\n    // 12.2 Variable Statement\n\n    function parseTypeParameterDeclaration() {\n        var marker = markerCreate(), paramTypes = [];\n\n        expect('<');\n        while (!match('>')) {\n            paramTypes.push(parseVariableIdentifier());\n            if (!match('>')) {\n                expect(',');\n            }\n        }\n        expect('>');\n\n        return markerApply(marker, delegate.createTypeParameterDeclaration(\n            paramTypes\n        ));\n    }\n\n    function parseTypeParameterInstantiation() {\n        var marker = markerCreate(), oldInType = state.inType, paramTypes = [];\n\n        state.inType = true;\n\n        expect('<');\n        while (!match('>')) {\n            paramTypes.push(parseType());\n            if (!match('>')) {\n                expect(',');\n            }\n        }\n        expect('>');\n\n        state.inType = oldInType;\n\n        return markerApply(marker, delegate.createTypeParameterInstantiation(\n            paramTypes\n        ));\n    }\n\n    function parseObjectTypeIndexer(marker, isStatic) {\n        var id, key, value;\n\n        expect('[');\n        id = parseObjectPropertyKey();\n        expect(':');\n        key = parseType();\n        expect(']');\n        expect(':');\n        value = parseType();\n\n        return markerApply(marker, delegate.createObjectTypeIndexer(\n            id,\n            key,\n            value,\n            isStatic\n        ));\n    }\n\n    function parseObjectTypeMethodish(marker) {\n        var params = [], rest = null, returnType, typeParameters = null;\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        expect('(');\n        while (lookahead.type === Token.Identifier) {\n            params.push(parseFunctionTypeParam());\n            if (!match(')')) {\n                expect(',');\n            }\n        }\n\n        if (match('...')) {\n            lex();\n            rest = parseFunctionTypeParam();\n        }\n        expect(')');\n        expect(':');\n        returnType = parseType();\n\n        return markerApply(marker, delegate.createFunctionTypeAnnotation(\n            params,\n            returnType,\n            rest,\n            typeParameters\n        ));\n    }\n\n    function parseObjectTypeMethod(marker, isStatic, key) {\n        var optional = false, value;\n        value = parseObjectTypeMethodish(marker);\n\n        return markerApply(marker, delegate.createObjectTypeProperty(\n            key,\n            value,\n            optional,\n            isStatic\n        ));\n    }\n\n    function parseObjectTypeCallProperty(marker, isStatic) {\n        var valueMarker = markerCreate();\n        return markerApply(marker, delegate.createObjectTypeCallProperty(\n            parseObjectTypeMethodish(valueMarker),\n            isStatic\n        ));\n    }\n\n    function parseObjectType(allowStatic) {\n        var callProperties = [], indexers = [], marker, optional = false,\n            properties = [], property, propertyKey, propertyTypeAnnotation,\n            token, isStatic;\n\n        expect('{');\n\n        while (!match('}')) {\n            marker = markerCreate();\n            if (allowStatic && matchContextualKeyword('static')) {\n                token = lex();\n                isStatic = true;\n            }\n\n            if (match('[')) {\n                indexers.push(parseObjectTypeIndexer(marker, isStatic));\n            } else if (match('(') || match('<')) {\n                callProperties.push(parseObjectTypeCallProperty(marker, allowStatic));\n            } else {\n                if (isStatic && match(':')) {\n                    propertyKey = markerApply(marker, delegate.createIdentifier(token));\n                    throwErrorTolerant(token, Messages.StrictReservedWord);\n                } else {\n                    propertyKey = parseObjectPropertyKey();\n                }\n                if (match('<') || match('(')) {\n                    // This is a method property\n                    properties.push(parseObjectTypeMethod(marker, isStatic, propertyKey));\n                } else {\n                    if (match('?')) {\n                        lex();\n                        optional = true;\n                    }\n                    expect(':');\n                    propertyTypeAnnotation = parseType();\n                    properties.push(markerApply(marker, delegate.createObjectTypeProperty(\n                        propertyKey,\n                        propertyTypeAnnotation,\n                        optional,\n                        isStatic\n                    )));\n                }\n            }\n\n            if (match(';')) {\n                lex();\n            } else if (!match('}')) {\n                throwUnexpected(lookahead);\n            }\n        }\n\n        expect('}');\n\n        return delegate.createObjectTypeAnnotation(\n            properties,\n            indexers,\n            callProperties\n        );\n    }\n\n    function parseGenericType() {\n        var marker = markerCreate(), returnType = null,\n            typeParameters = null, typeIdentifier,\n            typeIdentifierMarker = markerCreate;\n\n        typeIdentifier = parseVariableIdentifier();\n\n        while (match('.')) {\n            expect('.');\n            typeIdentifier = markerApply(marker, delegate.createQualifiedTypeIdentifier(\n                typeIdentifier,\n                parseVariableIdentifier()\n            ));\n        }\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterInstantiation();\n        }\n\n        return markerApply(marker, delegate.createGenericTypeAnnotation(\n            typeIdentifier,\n            typeParameters\n        ));\n    }\n\n    function parseVoidType() {\n        var marker = markerCreate();\n        expectKeyword('void');\n        return markerApply(marker, delegate.createVoidTypeAnnotation());\n    }\n\n    function parseTypeofType() {\n        var argument, marker = markerCreate();\n        expectKeyword('typeof');\n        argument = parsePrimaryType();\n        return markerApply(marker, delegate.createTypeofTypeAnnotation(\n            argument\n        ));\n    }\n\n    function parseTupleType() {\n        var marker = markerCreate(), types = [];\n        expect('[');\n        // We allow trailing commas\n        while (index < length && !match(']')) {\n            types.push(parseType());\n            if (match(']')) {\n                break;\n            }\n            expect(',');\n        }\n        expect(']');\n        return markerApply(marker, delegate.createTupleTypeAnnotation(\n            types\n        ));\n    }\n\n    function parseFunctionTypeParam() {\n        var marker = markerCreate(), name, optional = false, typeAnnotation;\n        name = parseVariableIdentifier();\n        if (match('?')) {\n            lex();\n            optional = true;\n        }\n        expect(':');\n        typeAnnotation = parseType();\n        return markerApply(marker, delegate.createFunctionTypeParam(\n            name,\n            typeAnnotation,\n            optional\n        ));\n    }\n\n    function parseFunctionTypeParams() {\n        var ret = { params: [], rest: null };\n        while (lookahead.type === Token.Identifier) {\n            ret.params.push(parseFunctionTypeParam());\n            if (!match(')')) {\n                expect(',');\n            }\n        }\n\n        if (match('...')) {\n            lex();\n            ret.rest = parseFunctionTypeParam();\n        }\n        return ret;\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    function parsePrimaryType() {\n        var typeIdentifier = null, params = null, returnType = null,\n            marker = markerCreate(), rest = null, tmp,\n            typeParameters, token, type, isGroupedType = false;\n\n        switch (lookahead.type) {\n        case Token.Identifier:\n            switch (lookahead.value) {\n            case 'any':\n                lex();\n                return markerApply(marker, delegate.createAnyTypeAnnotation());\n            case 'bool':  // fallthrough\n            case 'boolean':\n                lex();\n                return markerApply(marker, delegate.createBooleanTypeAnnotation());\n            case 'number':\n                lex();\n                return markerApply(marker, delegate.createNumberTypeAnnotation());\n            case 'string':\n                lex();\n                return markerApply(marker, delegate.createStringTypeAnnotation());\n            }\n            return markerApply(marker, parseGenericType());\n        case Token.Punctuator:\n            switch (lookahead.value) {\n            case '{':\n                return markerApply(marker, parseObjectType());\n            case '[':\n                return parseTupleType();\n            case '<':\n                typeParameters = parseTypeParameterDeclaration();\n                expect('(');\n                tmp = parseFunctionTypeParams();\n                params = tmp.params;\n                rest = tmp.rest;\n                expect(')');\n\n                expect('=>');\n\n                returnType = parseType();\n\n                return markerApply(marker, delegate.createFunctionTypeAnnotation(\n                    params,\n                    returnType,\n                    rest,\n                    typeParameters\n                ));\n            case '(':\n                lex();\n                // Check to see if this is actually a grouped type\n                if (!match(')') && !match('...')) {\n                    if (lookahead.type === Token.Identifier) {\n                        token = lookahead2();\n                        isGroupedType = token.value !== '?' && token.value !== ':';\n                    } else {\n                        isGroupedType = true;\n                    }\n                }\n\n                if (isGroupedType) {\n                    type = parseType();\n                    expect(')');\n\n                    // If we see a => next then someone was probably confused about\n                    // function types, so we can provide a better error message\n                    if (match('=>')) {\n                        throwError({}, Messages.ConfusedAboutFunctionType);\n                    }\n\n                    return type;\n                }\n\n                tmp = parseFunctionTypeParams();\n                params = tmp.params;\n                rest = tmp.rest;\n\n                expect(')');\n\n                expect('=>');\n\n                returnType = parseType();\n\n                return markerApply(marker, delegate.createFunctionTypeAnnotation(\n                    params,\n                    returnType,\n                    rest,\n                    null /* typeParameters */\n                ));\n            }\n            break;\n        case Token.Keyword:\n            switch (lookahead.value) {\n            case 'void':\n                return markerApply(marker, parseVoidType());\n            case 'typeof':\n                return markerApply(marker, parseTypeofType());\n            }\n            break;\n        case Token.StringLiteral:\n            token = lex();\n            if (token.octal) {\n                throwError(token, Messages.StrictOctalLiteral);\n            }\n            return markerApply(marker, delegate.createStringLiteralTypeAnnotation(\n                token\n            ));\n        }\n\n        throwUnexpected(lookahead);\n    }\n\n    function parsePostfixType() {\n        var marker = markerCreate(), t = parsePrimaryType();\n        if (match('[')) {\n            expect('[');\n            expect(']');\n            return markerApply(marker, delegate.createArrayTypeAnnotation(t));\n        }\n        return t;\n    }\n\n    function parsePrefixType() {\n        var marker = markerCreate();\n        if (match('?')) {\n            lex();\n            return markerApply(marker, delegate.createNullableTypeAnnotation(\n                parsePrefixType()\n            ));\n        }\n        return parsePostfixType();\n    }\n\n\n    function parseIntersectionType() {\n        var marker = markerCreate(), type, types;\n        type = parsePrefixType();\n        types = [type];\n        while (match('&')) {\n            lex();\n            types.push(parsePrefixType());\n        }\n\n        return types.length === 1 ?\n                type :\n                markerApply(marker, delegate.createIntersectionTypeAnnotation(\n                    types\n                ));\n    }\n\n    function parseUnionType() {\n        var marker = markerCreate(), type, types;\n        type = parseIntersectionType();\n        types = [type];\n        while (match('|')) {\n            lex();\n            types.push(parseIntersectionType());\n        }\n        return types.length === 1 ?\n                type :\n                markerApply(marker, delegate.createUnionTypeAnnotation(\n                    types\n                ));\n    }\n\n    function parseType() {\n        var oldInType = state.inType, type;\n        state.inType = true;\n\n        type = parseUnionType();\n\n        state.inType = oldInType;\n        return type;\n    }\n\n    function parseTypeAnnotation() {\n        var marker = markerCreate(), type;\n\n        expect(':');\n        type = parseType();\n\n        return markerApply(marker, delegate.createTypeAnnotation(type));\n    }\n\n    function parseVariableIdentifier() {\n        var marker = markerCreate(),\n            token = lex();\n\n        if (token.type !== Token.Identifier) {\n            throwUnexpected(token);\n        }\n\n        return markerApply(marker, delegate.createIdentifier(token.value));\n    }\n\n    function parseTypeAnnotatableIdentifier(requireTypeAnnotation, canBeOptionalParam) {\n        var marker = markerCreate(),\n            ident = parseVariableIdentifier(),\n            isOptionalParam = false;\n\n        if (canBeOptionalParam && match('?')) {\n            expect('?');\n            isOptionalParam = true;\n        }\n\n        if (requireTypeAnnotation || match(':')) {\n            ident.typeAnnotation = parseTypeAnnotation();\n            ident = markerApply(marker, ident);\n        }\n\n        if (isOptionalParam) {\n            ident.optional = true;\n            ident = markerApply(marker, ident);\n        }\n\n        return ident;\n    }\n\n    function parseVariableDeclaration(kind) {\n        var id,\n            marker = markerCreate(),\n            init = null,\n            typeAnnotationMarker = markerCreate();\n        if (match('{')) {\n            id = parseObjectInitialiser();\n            reinterpretAsAssignmentBindingPattern(id);\n            if (match(':')) {\n                id.typeAnnotation = parseTypeAnnotation();\n                markerApply(typeAnnotationMarker, id);\n            }\n        } else if (match('[')) {\n            id = parseArrayInitialiser();\n            reinterpretAsAssignmentBindingPattern(id);\n            if (match(':')) {\n                id.typeAnnotation = parseTypeAnnotation();\n                markerApply(typeAnnotationMarker, id);\n            }\n        } else {\n            id = state.allowKeyword ? parseNonComputedProperty() : parseTypeAnnotatableIdentifier();\n            // 12.2.1\n            if (strict && isRestrictedWord(id.name)) {\n                throwErrorTolerant({}, Messages.StrictVarName);\n            }\n        }\n\n        if (kind === 'const') {\n            if (!match('=')) {\n                throwError({}, Messages.NoUnintializedConst);\n            }\n            expect('=');\n            init = parseAssignmentExpression();\n        } else if (match('=')) {\n            lex();\n            init = parseAssignmentExpression();\n        }\n\n        return markerApply(marker, delegate.createVariableDeclarator(id, init));\n    }\n\n    function parseVariableDeclarationList(kind) {\n        var list = [];\n\n        do {\n            list.push(parseVariableDeclaration(kind));\n            if (!match(',')) {\n                break;\n            }\n            lex();\n        } while (index < length);\n\n        return list;\n    }\n\n    function parseVariableStatement() {\n        var declarations, marker = markerCreate();\n\n        expectKeyword('var');\n\n        declarations = parseVariableDeclarationList();\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createVariableDeclaration(declarations, 'var'));\n    }\n\n    // kind may be `const` or `let`\n    // Both are experimental and not in the specification yet.\n    // see http://wiki.ecmascript.org/doku.php?id=harmony:const\n    // and http://wiki.ecmascript.org/doku.php?id=harmony:let\n    function parseConstLetDeclaration(kind) {\n        var declarations, marker = markerCreate();\n\n        expectKeyword(kind);\n\n        declarations = parseVariableDeclarationList(kind);\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createVariableDeclaration(declarations, kind));\n    }\n\n    // people.mozilla.org/~jorendorff/es6-draft.html\n\n    function parseModuleSpecifier() {\n        var marker = markerCreate(),\n            specifier;\n\n        if (lookahead.type !== Token.StringLiteral) {\n            throwError({}, Messages.InvalidModuleSpecifier);\n        }\n        specifier = delegate.createModuleSpecifier(lookahead);\n        lex();\n        return markerApply(marker, specifier);\n    }\n\n    function parseExportBatchSpecifier() {\n        var marker = markerCreate();\n        expect('*');\n        return markerApply(marker, delegate.createExportBatchSpecifier());\n    }\n\n    function parseExportSpecifier() {\n        var id, name = null, marker = markerCreate(), from;\n        if (matchKeyword('default')) {\n            lex();\n            id = markerApply(marker, delegate.createIdentifier('default'));\n            // export {default} from \"something\";\n        } else {\n            id = parseVariableIdentifier();\n        }\n        if (matchContextualKeyword('as')) {\n            lex();\n            name = parseNonComputedProperty();\n        }\n\n        return markerApply(marker, delegate.createExportSpecifier(id, name));\n    }\n\n    function parseExportDeclaration() {\n        var backtrackToken, id, previousAllowKeyword, declaration = null,\n            isExportFromIdentifier,\n            src = null, specifiers = [],\n            marker = markerCreate();\n\n        expectKeyword('export');\n\n        if (matchKeyword('default')) {\n            // covers:\n            // export default ...\n            lex();\n            if (matchKeyword('function') || matchKeyword('class')) {\n                backtrackToken = lookahead;\n                lex();\n                if (isIdentifierName(lookahead)) {\n                    // covers:\n                    // export default function foo () {}\n                    // export default class foo {}\n                    id = parseNonComputedProperty();\n                    rewind(backtrackToken);\n                    return markerApply(marker, delegate.createExportDeclaration(true, parseSourceElement(), [id], null));\n                }\n                // covers:\n                // export default function () {}\n                // export default class {}\n                rewind(backtrackToken);\n                switch (lookahead.value) {\n                case 'class':\n                    return markerApply(marker, delegate.createExportDeclaration(true, parseClassExpression(), [], null));\n                case 'function':\n                    return markerApply(marker, delegate.createExportDeclaration(true, parseFunctionExpression(), [], null));\n                }\n            }\n\n            if (matchContextualKeyword('from')) {\n                throwError({}, Messages.UnexpectedToken, lookahead.value);\n            }\n\n            // covers:\n            // export default {};\n            // export default [];\n            if (match('{')) {\n                declaration = parseObjectInitialiser();\n            } else if (match('[')) {\n                declaration = parseArrayInitialiser();\n            } else {\n                declaration = parseAssignmentExpression();\n            }\n            consumeSemicolon();\n            return markerApply(marker, delegate.createExportDeclaration(true, declaration, [], null));\n        }\n\n        // non-default export\n        if (lookahead.type === Token.Keyword) {\n            // covers:\n            // export var f = 1;\n            switch (lookahead.value) {\n            case 'let':\n            case 'const':\n            case 'var':\n            case 'class':\n            case 'function':\n                return markerApply(marker, delegate.createExportDeclaration(false, parseSourceElement(), specifiers, null));\n            }\n        }\n\n        if (match('*')) {\n            // covers:\n            // export * from \"foo\";\n            specifiers.push(parseExportBatchSpecifier());\n\n            if (!matchContextualKeyword('from')) {\n                throwError({}, lookahead.value ?\n                        Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);\n            }\n            lex();\n            src = parseModuleSpecifier();\n            consumeSemicolon();\n\n            return markerApply(marker, delegate.createExportDeclaration(false, null, specifiers, src));\n        }\n\n        expect('{');\n        do {\n            isExportFromIdentifier = isExportFromIdentifier || matchKeyword('default');\n            specifiers.push(parseExportSpecifier());\n        } while (match(',') && lex());\n        expect('}');\n\n        if (matchContextualKeyword('from')) {\n            // covering:\n            // export {default} from \"foo\";\n            // export {foo} from \"foo\";\n            lex();\n            src = parseModuleSpecifier();\n            consumeSemicolon();\n        } else if (isExportFromIdentifier) {\n            // covering:\n            // export {default}; // missing fromClause\n            throwError({}, lookahead.value ?\n                    Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);\n        } else {\n            // cover\n            // export {foo};\n            consumeSemicolon();\n        }\n        return markerApply(marker, delegate.createExportDeclaration(false, declaration, specifiers, src));\n    }\n\n\n    function parseImportSpecifier() {\n        // import {<foo as bar>} ...;\n        var id, name = null, marker = markerCreate();\n\n        id = parseNonComputedProperty();\n        if (matchContextualKeyword('as')) {\n            lex();\n            name = parseVariableIdentifier();\n        }\n\n        return markerApply(marker, delegate.createImportSpecifier(id, name));\n    }\n\n    function parseNamedImports() {\n        var specifiers = [];\n        // {foo, bar as bas}\n        expect('{');\n        do {\n            specifiers.push(parseImportSpecifier());\n        } while (match(',') && lex());\n        expect('}');\n        return specifiers;\n    }\n\n    function parseImportDefaultSpecifier() {\n        // import <foo> ...;\n        var id, marker = markerCreate();\n\n        id = parseNonComputedProperty();\n\n        return markerApply(marker, delegate.createImportDefaultSpecifier(id));\n    }\n\n    function parseImportNamespaceSpecifier() {\n        // import <* as foo> ...;\n        var id, marker = markerCreate();\n\n        expect('*');\n        if (!matchContextualKeyword('as')) {\n            throwError({}, Messages.NoAsAfterImportNamespace);\n        }\n        lex();\n        id = parseNonComputedProperty();\n\n        return markerApply(marker, delegate.createImportNamespaceSpecifier(id));\n    }\n\n    function parseImportDeclaration() {\n        var specifiers, src, marker = markerCreate();\n\n        expectKeyword('import');\n        specifiers = [];\n\n        if (lookahead.type === Token.StringLiteral) {\n            // covers:\n            // import \"foo\";\n            src = parseModuleSpecifier();\n            consumeSemicolon();\n            return markerApply(marker, delegate.createImportDeclaration(specifiers, src));\n        }\n\n        if (!matchKeyword('default') && isIdentifierName(lookahead)) {\n            // covers:\n            // import foo\n            // import foo, ...\n            specifiers.push(parseImportDefaultSpecifier());\n            if (match(',')) {\n                lex();\n            }\n        }\n        if (match('*')) {\n            // covers:\n            // import foo, * as foo\n            // import * as foo\n            specifiers.push(parseImportNamespaceSpecifier());\n        } else if (match('{')) {\n            // covers:\n            // import foo, {bar}\n            // import {bar}\n            specifiers = specifiers.concat(parseNamedImports());\n        }\n\n        if (!matchContextualKeyword('from')) {\n            throwError({}, lookahead.value ?\n                    Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);\n        }\n        lex();\n        src = parseModuleSpecifier();\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createImportDeclaration(specifiers, src));\n    }\n\n    // 12.3 Empty Statement\n\n    function parseEmptyStatement() {\n        var marker = markerCreate();\n        expect(';');\n        return markerApply(marker, delegate.createEmptyStatement());\n    }\n\n    // 12.4 Expression Statement\n\n    function parseExpressionStatement() {\n        var marker = markerCreate(), expr = parseExpression();\n        consumeSemicolon();\n        return markerApply(marker, delegate.createExpressionStatement(expr));\n    }\n\n    // 12.5 If statement\n\n    function parseIfStatement() {\n        var test, consequent, alternate, marker = markerCreate();\n\n        expectKeyword('if');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        consequent = parseStatement();\n\n        if (matchKeyword('else')) {\n            lex();\n            alternate = parseStatement();\n        } else {\n            alternate = null;\n        }\n\n        return markerApply(marker, delegate.createIfStatement(test, consequent, alternate));\n    }\n\n    // 12.6 Iteration Statements\n\n    function parseDoWhileStatement() {\n        var body, test, oldInIteration, marker = markerCreate();\n\n        expectKeyword('do');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        if (match(';')) {\n            lex();\n        }\n\n        return markerApply(marker, delegate.createDoWhileStatement(body, test));\n    }\n\n    function parseWhileStatement() {\n        var test, body, oldInIteration, marker = markerCreate();\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        return markerApply(marker, delegate.createWhileStatement(test, body));\n    }\n\n    function parseForVariableDeclaration() {\n        var marker = markerCreate(),\n            token = lex(),\n            declarations = parseVariableDeclarationList();\n\n        return markerApply(marker, delegate.createVariableDeclaration(declarations, token.value));\n    }\n\n    function parseForStatement(opts) {\n        var init, test, update, left, right, body, operator, oldInIteration,\n            marker = markerCreate();\n        init = test = update = null;\n        expectKeyword('for');\n\n        // http://wiki.ecmascript.org/doku.php?id=proposals:iterators_and_generators&s=each\n        if (matchContextualKeyword('each')) {\n            throwError({}, Messages.EachNotAllowed);\n        }\n\n        expect('(');\n\n        if (match(';')) {\n            lex();\n        } else {\n            if (matchKeyword('var') || matchKeyword('let') || matchKeyword('const')) {\n                state.allowIn = false;\n                init = parseForVariableDeclaration();\n                state.allowIn = true;\n\n                if (init.declarations.length === 1) {\n                    if (matchKeyword('in') || matchContextualKeyword('of')) {\n                        operator = lookahead;\n                        if (!((operator.value === 'in' || init.kind !== 'var') && init.declarations[0].init)) {\n                            lex();\n                            left = init;\n                            right = parseExpression();\n                            init = null;\n                        }\n                    }\n                }\n            } else {\n                state.allowIn = false;\n                init = parseExpression();\n                state.allowIn = true;\n\n                if (matchContextualKeyword('of')) {\n                    operator = lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                } else if (matchKeyword('in')) {\n                    // LeftHandSideExpression\n                    if (!isAssignableLeftHandSide(init)) {\n                        throwError({}, Messages.InvalidLHSInForIn);\n                    }\n                    operator = lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                }\n            }\n\n            if (typeof left === 'undefined') {\n                expect(';');\n            }\n        }\n\n        if (typeof left === 'undefined') {\n\n            if (!match(';')) {\n                test = parseExpression();\n            }\n            expect(';');\n\n            if (!match(')')) {\n                update = parseExpression();\n            }\n        }\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        if (!(opts !== undefined && opts.ignoreBody)) {\n            body = parseStatement();\n        }\n\n        state.inIteration = oldInIteration;\n\n        if (typeof left === 'undefined') {\n            return markerApply(marker, delegate.createForStatement(init, test, update, body));\n        }\n\n        if (operator.value === 'in') {\n            return markerApply(marker, delegate.createForInStatement(left, right, body));\n        }\n        return markerApply(marker, delegate.createForOfStatement(left, right, body));\n    }\n\n    // 12.7 The continue statement\n\n    function parseContinueStatement() {\n        var label = null, key, marker = markerCreate();\n\n        expectKeyword('continue');\n\n        // Optimize the most common form: 'continue;'.\n        if (source.charCodeAt(index) === 59) {\n            lex();\n\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return markerApply(marker, delegate.createContinueStatement(null));\n        }\n\n        if (peekLineTerminator()) {\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return markerApply(marker, delegate.createContinueStatement(null));\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            key = '$' + label.name;\n            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !state.inIteration) {\n            throwError({}, Messages.IllegalContinue);\n        }\n\n        return markerApply(marker, delegate.createContinueStatement(label));\n    }\n\n    // 12.8 The break statement\n\n    function parseBreakStatement() {\n        var label = null, key, marker = markerCreate();\n\n        expectKeyword('break');\n\n        // Catch the very common case first: immediately a semicolon (char #59).\n        if (source.charCodeAt(index) === 59) {\n            lex();\n\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return markerApply(marker, delegate.createBreakStatement(null));\n        }\n\n        if (peekLineTerminator()) {\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return markerApply(marker, delegate.createBreakStatement(null));\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            key = '$' + label.name;\n            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !(state.inIteration || state.inSwitch)) {\n            throwError({}, Messages.IllegalBreak);\n        }\n\n        return markerApply(marker, delegate.createBreakStatement(label));\n    }\n\n    // 12.9 The return statement\n\n    function parseReturnStatement() {\n        var argument = null, marker = markerCreate();\n\n        expectKeyword('return');\n\n        if (!state.inFunctionBody) {\n            throwErrorTolerant({}, Messages.IllegalReturn);\n        }\n\n        // 'return' followed by a space and an identifier is very common.\n        if (source.charCodeAt(index) === 32) {\n            if (isIdentifierStart(source.charCodeAt(index + 1))) {\n                argument = parseExpression();\n                consumeSemicolon();\n                return markerApply(marker, delegate.createReturnStatement(argument));\n            }\n        }\n\n        if (peekLineTerminator()) {\n            return markerApply(marker, delegate.createReturnStatement(null));\n        }\n\n        if (!match(';')) {\n            if (!match('}') && lookahead.type !== Token.EOF) {\n                argument = parseExpression();\n            }\n        }\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createReturnStatement(argument));\n    }\n\n    // 12.10 The with statement\n\n    function parseWithStatement() {\n        var object, body, marker = markerCreate();\n\n        if (strict) {\n            throwErrorTolerant({}, Messages.StrictModeWith);\n        }\n\n        expectKeyword('with');\n\n        expect('(');\n\n        object = parseExpression();\n\n        expect(')');\n\n        body = parseStatement();\n\n        return markerApply(marker, delegate.createWithStatement(object, body));\n    }\n\n    // 12.10 The swith statement\n\n    function parseSwitchCase() {\n        var test,\n            consequent = [],\n            sourceElement,\n            marker = markerCreate();\n\n        if (matchKeyword('default')) {\n            lex();\n            test = null;\n        } else {\n            expectKeyword('case');\n            test = parseExpression();\n        }\n        expect(':');\n\n        while (index < length) {\n            if (match('}') || matchKeyword('default') || matchKeyword('case')) {\n                break;\n            }\n            sourceElement = parseSourceElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            consequent.push(sourceElement);\n        }\n\n        return markerApply(marker, delegate.createSwitchCase(test, consequent));\n    }\n\n    function parseSwitchStatement() {\n        var discriminant, cases, clause, oldInSwitch, defaultFound, marker = markerCreate();\n\n        expectKeyword('switch');\n\n        expect('(');\n\n        discriminant = parseExpression();\n\n        expect(')');\n\n        expect('{');\n\n        cases = [];\n\n        if (match('}')) {\n            lex();\n            return markerApply(marker, delegate.createSwitchStatement(discriminant, cases));\n        }\n\n        oldInSwitch = state.inSwitch;\n        state.inSwitch = true;\n        defaultFound = false;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            clause = parseSwitchCase();\n            if (clause.test === null) {\n                if (defaultFound) {\n                    throwError({}, Messages.MultipleDefaultsInSwitch);\n                }\n                defaultFound = true;\n            }\n            cases.push(clause);\n        }\n\n        state.inSwitch = oldInSwitch;\n\n        expect('}');\n\n        return markerApply(marker, delegate.createSwitchStatement(discriminant, cases));\n    }\n\n    // 12.13 The throw statement\n\n    function parseThrowStatement() {\n        var argument, marker = markerCreate();\n\n        expectKeyword('throw');\n\n        if (peekLineTerminator()) {\n            throwError({}, Messages.NewlineAfterThrow);\n        }\n\n        argument = parseExpression();\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createThrowStatement(argument));\n    }\n\n    // 12.14 The try statement\n\n    function parseCatchClause() {\n        var param, body, marker = markerCreate();\n\n        expectKeyword('catch');\n\n        expect('(');\n        if (match(')')) {\n            throwUnexpected(lookahead);\n        }\n\n        param = parseExpression();\n        // 12.14.1\n        if (strict && param.type === Syntax.Identifier && isRestrictedWord(param.name)) {\n            throwErrorTolerant({}, Messages.StrictCatchVariable);\n        }\n\n        expect(')');\n        body = parseBlock();\n        return markerApply(marker, delegate.createCatchClause(param, body));\n    }\n\n    function parseTryStatement() {\n        var block, handlers = [], finalizer = null, marker = markerCreate();\n\n        expectKeyword('try');\n\n        block = parseBlock();\n\n        if (matchKeyword('catch')) {\n            handlers.push(parseCatchClause());\n        }\n\n        if (matchKeyword('finally')) {\n            lex();\n            finalizer = parseBlock();\n        }\n\n        if (handlers.length === 0 && !finalizer) {\n            throwError({}, Messages.NoCatchOrFinally);\n        }\n\n        return markerApply(marker, delegate.createTryStatement(block, [], handlers, finalizer));\n    }\n\n    // 12.15 The debugger statement\n\n    function parseDebuggerStatement() {\n        var marker = markerCreate();\n        expectKeyword('debugger');\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createDebuggerStatement());\n    }\n\n    // 12 Statements\n\n    function parseStatement() {\n        var type = lookahead.type,\n            marker,\n            expr,\n            labeledBody,\n            key;\n\n        if (type === Token.EOF) {\n            throwUnexpected(lookahead);\n        }\n\n        if (type === Token.Punctuator) {\n            switch (lookahead.value) {\n            case ';':\n                return parseEmptyStatement();\n            case '{':\n                return parseBlock();\n            case '(':\n                return parseExpressionStatement();\n            default:\n                break;\n            }\n        }\n\n        if (type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'break':\n                return parseBreakStatement();\n            case 'continue':\n                return parseContinueStatement();\n            case 'debugger':\n                return parseDebuggerStatement();\n            case 'do':\n                return parseDoWhileStatement();\n            case 'for':\n                return parseForStatement();\n            case 'function':\n                return parseFunctionDeclaration();\n            case 'class':\n                return parseClassDeclaration();\n            case 'if':\n                return parseIfStatement();\n            case 'return':\n                return parseReturnStatement();\n            case 'switch':\n                return parseSwitchStatement();\n            case 'throw':\n                return parseThrowStatement();\n            case 'try':\n                return parseTryStatement();\n            case 'var':\n                return parseVariableStatement();\n            case 'while':\n                return parseWhileStatement();\n            case 'with':\n                return parseWithStatement();\n            default:\n                break;\n            }\n        }\n\n        if (matchAsyncFuncExprOrDecl()) {\n            return parseFunctionDeclaration();\n        }\n\n        marker = markerCreate();\n        expr = parseExpression();\n\n        // 12.12 Labelled Statements\n        if ((expr.type === Syntax.Identifier) && match(':')) {\n            lex();\n\n            key = '$' + expr.name;\n            if (Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.Redeclaration, 'Label', expr.name);\n            }\n\n            state.labelSet[key] = true;\n            labeledBody = parseStatement();\n            delete state.labelSet[key];\n            return markerApply(marker, delegate.createLabeledStatement(expr, labeledBody));\n        }\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createExpressionStatement(expr));\n    }\n\n    // 13 Function Definition\n\n    function parseConciseBody() {\n        if (match('{')) {\n            return parseFunctionSourceElements();\n        }\n        return parseAssignmentExpression();\n    }\n\n    function parseFunctionSourceElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted,\n            oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody, oldParenthesizedCount,\n            marker = markerCreate();\n\n        expect('{');\n\n        while (index < length) {\n            if (lookahead.type !== Token.StringLiteral) {\n                break;\n            }\n            token = lookahead;\n\n            sourceElement = parseSourceElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.range[0] + 1, token.range[1] - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        oldLabelSet = state.labelSet;\n        oldInIteration = state.inIteration;\n        oldInSwitch = state.inSwitch;\n        oldInFunctionBody = state.inFunctionBody;\n        oldParenthesizedCount = state.parenthesizedCount;\n\n        state.labelSet = {};\n        state.inIteration = false;\n        state.inSwitch = false;\n        state.inFunctionBody = true;\n        state.parenthesizedCount = 0;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            sourceElement = parseSourceElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n\n        expect('}');\n\n        state.labelSet = oldLabelSet;\n        state.inIteration = oldInIteration;\n        state.inSwitch = oldInSwitch;\n        state.inFunctionBody = oldInFunctionBody;\n        state.parenthesizedCount = oldParenthesizedCount;\n\n        return markerApply(marker, delegate.createBlockStatement(sourceElements));\n    }\n\n    function validateParam(options, param, name) {\n        var key = '$' + name;\n        if (strict) {\n            if (isRestrictedWord(name)) {\n                options.stricted = param;\n                options.message = Messages.StrictParamName;\n            }\n            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n                options.stricted = param;\n                options.message = Messages.StrictParamDupe;\n            }\n        } else if (!options.firstRestricted) {\n            if (isRestrictedWord(name)) {\n                options.firstRestricted = param;\n                options.message = Messages.StrictParamName;\n            } else if (isStrictModeReservedWord(name)) {\n                options.firstRestricted = param;\n                options.message = Messages.StrictReservedWord;\n            } else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n                options.firstRestricted = param;\n                options.message = Messages.StrictParamDupe;\n            }\n        }\n        options.paramSet[key] = true;\n    }\n\n    function parseParam(options) {\n        var marker, token, rest, param, def;\n\n        token = lookahead;\n        if (token.value === '...') {\n            token = lex();\n            rest = true;\n        }\n\n        if (match('[')) {\n            marker = markerCreate();\n            param = parseArrayInitialiser();\n            reinterpretAsDestructuredParameter(options, param);\n            if (match(':')) {\n                param.typeAnnotation = parseTypeAnnotation();\n                markerApply(marker, param);\n            }\n        } else if (match('{')) {\n            marker = markerCreate();\n            if (rest) {\n                throwError({}, Messages.ObjectPatternAsRestParameter);\n            }\n            param = parseObjectInitialiser();\n            reinterpretAsDestructuredParameter(options, param);\n            if (match(':')) {\n                param.typeAnnotation = parseTypeAnnotation();\n                markerApply(marker, param);\n            }\n        } else {\n            param =\n                rest\n                ? parseTypeAnnotatableIdentifier(\n                    false, /* requireTypeAnnotation */\n                    false /* canBeOptionalParam */\n                )\n                : parseTypeAnnotatableIdentifier(\n                    false, /* requireTypeAnnotation */\n                    true /* canBeOptionalParam */\n                );\n\n            validateParam(options, token, token.value);\n        }\n\n        if (match('=')) {\n            if (rest) {\n                throwErrorTolerant(lookahead, Messages.DefaultRestParameter);\n            }\n            lex();\n            def = parseAssignmentExpression();\n            ++options.defaultCount;\n        }\n\n        if (rest) {\n            if (!match(')')) {\n                throwError({}, Messages.ParameterAfterRestParameter);\n            }\n            options.rest = param;\n            return false;\n        }\n\n        options.params.push(param);\n        options.defaults.push(def);\n        return !match(')');\n    }\n\n    function parseParams(firstRestricted) {\n        var options, marker = markerCreate();\n\n        options = {\n            params: [],\n            defaultCount: 0,\n            defaults: [],\n            rest: null,\n            firstRestricted: firstRestricted\n        };\n\n        expect('(');\n\n        if (!match(')')) {\n            options.paramSet = {};\n            while (index < length) {\n                if (!parseParam(options)) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        expect(')');\n\n        if (options.defaultCount === 0) {\n            options.defaults = [];\n        }\n\n        if (match(':')) {\n            options.returnType = parseTypeAnnotation();\n        }\n\n        return markerApply(marker, options);\n    }\n\n    function parseFunctionDeclaration() {\n        var id, body, token, tmp, firstRestricted, message, generator, isAsync,\n            previousStrict, previousYieldAllowed, previousAwaitAllowed,\n            marker = markerCreate(), typeParameters;\n\n        isAsync = false;\n        if (matchAsync()) {\n            lex();\n            isAsync = true;\n        }\n\n        expectKeyword('function');\n\n        generator = false;\n        if (match('*')) {\n            lex();\n            generator = true;\n        }\n\n        token = lookahead;\n\n        id = parseVariableIdentifier();\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        if (strict) {\n            if (isRestrictedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictFunctionName);\n            }\n        } else {\n            if (isRestrictedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictFunctionName;\n            } else if (isStrictModeReservedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictReservedWord;\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        previousYieldAllowed = state.yieldAllowed;\n        state.yieldAllowed = generator;\n        previousAwaitAllowed = state.awaitAllowed;\n        state.awaitAllowed = isAsync;\n\n        body = parseFunctionSourceElements();\n\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && tmp.stricted) {\n            throwErrorTolerant(tmp.stricted, message);\n        }\n        strict = previousStrict;\n        state.yieldAllowed = previousYieldAllowed;\n        state.awaitAllowed = previousAwaitAllowed;\n\n        return markerApply(\n            marker,\n            delegate.createFunctionDeclaration(\n                id,\n                tmp.params,\n                tmp.defaults,\n                body,\n                tmp.rest,\n                generator,\n                false,\n                isAsync,\n                tmp.returnType,\n                typeParameters\n            )\n        );\n    }\n\n    function parseFunctionExpression() {\n        var token, id = null, firstRestricted, message, tmp, body, generator, isAsync,\n            previousStrict, previousYieldAllowed, previousAwaitAllowed,\n            marker = markerCreate(), typeParameters;\n\n        isAsync = false;\n        if (matchAsync()) {\n            lex();\n            isAsync = true;\n        }\n\n        expectKeyword('function');\n\n        generator = false;\n\n        if (match('*')) {\n            lex();\n            generator = true;\n        }\n\n        if (!match('(')) {\n            if (!match('<')) {\n                token = lookahead;\n                id = parseVariableIdentifier();\n\n                if (strict) {\n                    if (isRestrictedWord(token.value)) {\n                        throwErrorTolerant(token, Messages.StrictFunctionName);\n                    }\n                } else {\n                    if (isRestrictedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictFunctionName;\n                    } else if (isStrictModeReservedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictReservedWord;\n                    }\n                }\n            }\n\n            if (match('<')) {\n                typeParameters = parseTypeParameterDeclaration();\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        previousYieldAllowed = state.yieldAllowed;\n        state.yieldAllowed = generator;\n        previousAwaitAllowed = state.awaitAllowed;\n        state.awaitAllowed = isAsync;\n\n        body = parseFunctionSourceElements();\n\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && tmp.stricted) {\n            throwErrorTolerant(tmp.stricted, message);\n        }\n        strict = previousStrict;\n        state.yieldAllowed = previousYieldAllowed;\n        state.awaitAllowed = previousAwaitAllowed;\n\n        return markerApply(\n            marker,\n            delegate.createFunctionExpression(\n                id,\n                tmp.params,\n                tmp.defaults,\n                body,\n                tmp.rest,\n                generator,\n                false,\n                isAsync,\n                tmp.returnType,\n                typeParameters\n            )\n        );\n    }\n\n    function parseYieldExpression() {\n        var delegateFlag, expr, marker = markerCreate();\n\n        expectKeyword('yield', !strict);\n\n        delegateFlag = false;\n        if (match('*')) {\n            lex();\n            delegateFlag = true;\n        }\n\n        expr = parseAssignmentExpression();\n\n        return markerApply(marker, delegate.createYieldExpression(expr, delegateFlag));\n    }\n\n    function parseAwaitExpression() {\n        var expr, marker = markerCreate();\n        expectContextualKeyword('await');\n        expr = parseAssignmentExpression();\n        return markerApply(marker, delegate.createAwaitExpression(expr));\n    }\n\n    // 14 Classes\n\n    function parseMethodDefinition(existingPropNames, key, isStatic, generator, computed) {\n        var token, param, propType, isValidDuplicateProp = false,\n            isAsync, typeParameters, tokenValue, returnType,\n            annotationMarker;\n\n        propType = isStatic ? ClassPropertyType.static : ClassPropertyType.prototype;\n\n        if (generator) {\n            return delegate.createMethodDefinition(\n                propType,\n                '',\n                key,\n                parsePropertyMethodFunction({ generator: true })\n            );\n        }\n\n        tokenValue = key.type === 'Identifier' && key.name;\n\n        if (tokenValue === 'get' && !match('(')) {\n            key = parseObjectPropertyKey();\n\n            // It is a syntax error if any other properties have a name\n            // duplicating this one unless they are a setter\n            if (existingPropNames[propType].hasOwnProperty(key.name)) {\n                isValidDuplicateProp =\n                    // There isn't already a getter for this prop\n                    existingPropNames[propType][key.name].get === undefined\n                    // There isn't already a data prop by this name\n                    && existingPropNames[propType][key.name].data === undefined\n                    // The only existing prop by this name is a setter\n                    && existingPropNames[propType][key.name].set !== undefined;\n                if (!isValidDuplicateProp) {\n                    throwError(key, Messages.IllegalDuplicateClassProperty);\n                }\n            } else {\n                existingPropNames[propType][key.name] = {};\n            }\n            existingPropNames[propType][key.name].get = true;\n\n            expect('(');\n            expect(')');\n            if (match(':')) {\n                returnType = parseTypeAnnotation();\n            }\n            return delegate.createMethodDefinition(\n                propType,\n                'get',\n                key,\n                parsePropertyFunction({ generator: false, returnType: returnType })\n            );\n        }\n        if (tokenValue === 'set' && !match('(')) {\n            key = parseObjectPropertyKey();\n\n            // It is a syntax error if any other properties have a name\n            // duplicating this one unless they are a getter\n            if (existingPropNames[propType].hasOwnProperty(key.name)) {\n                isValidDuplicateProp =\n                    // There isn't already a setter for this prop\n                    existingPropNames[propType][key.name].set === undefined\n                    // There isn't already a data prop by this name\n                    && existingPropNames[propType][key.name].data === undefined\n                    // The only existing prop by this name is a getter\n                    && existingPropNames[propType][key.name].get !== undefined;\n                if (!isValidDuplicateProp) {\n                    throwError(key, Messages.IllegalDuplicateClassProperty);\n                }\n            } else {\n                existingPropNames[propType][key.name] = {};\n            }\n            existingPropNames[propType][key.name].set = true;\n\n            expect('(');\n            token = lookahead;\n            param = [ parseTypeAnnotatableIdentifier() ];\n            expect(')');\n            if (match(':')) {\n                returnType = parseTypeAnnotation();\n            }\n            return delegate.createMethodDefinition(\n                propType,\n                'set',\n                key,\n                parsePropertyFunction({\n                    params: param,\n                    generator: false,\n                    name: token,\n                    returnType: returnType\n                })\n            );\n        }\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        isAsync = tokenValue === 'async' && !match('(');\n        if (isAsync) {\n            key = parseObjectPropertyKey();\n        }\n\n        // It is a syntax error if any other properties have the same name as a\n        // non-getter, non-setter method\n        if (existingPropNames[propType].hasOwnProperty(key.name)) {\n            throwError(key, Messages.IllegalDuplicateClassProperty);\n        } else {\n            existingPropNames[propType][key.name] = {};\n        }\n        existingPropNames[propType][key.name].data = true;\n\n        return delegate.createMethodDefinition(\n            propType,\n            '',\n            key,\n            parsePropertyMethodFunction({\n                generator: false,\n                async: isAsync,\n                typeParameters: typeParameters\n            })\n        );\n    }\n\n    function parseClassProperty(existingPropNames, key, computed, isStatic) {\n        var typeAnnotation;\n\n        typeAnnotation = parseTypeAnnotation();\n        expect(';');\n\n        return delegate.createClassProperty(\n            key,\n            typeAnnotation,\n            computed,\n            isStatic\n        );\n    }\n\n    function parseClassElement(existingProps) {\n        var computed, generator = false, key, marker = markerCreate(),\n            isStatic = false;\n        if (match(';')) {\n            lex();\n            return;\n        }\n\n        if (lookahead.value === 'static') {\n            lex();\n            isStatic = true;\n        }\n\n        if (match('*')) {\n            lex();\n            generator = true;\n        }\n\n        computed = (lookahead.value === '[');\n        key = parseObjectPropertyKey();\n\n        if (!generator && lookahead.value === ':') {\n            return markerApply(marker, parseClassProperty(existingProps, key, computed, isStatic));\n        }\n\n        return markerApply(marker, parseMethodDefinition(\n            existingProps,\n            key,\n            isStatic,\n            generator,\n            computed\n        ));\n    }\n\n    function parseClassBody() {\n        var classElement, classElements = [], existingProps = {}, marker = markerCreate();\n\n        existingProps[ClassPropertyType.static] = {};\n        existingProps[ClassPropertyType.prototype] = {};\n\n        expect('{');\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            classElement = parseClassElement(existingProps);\n\n            if (typeof classElement !== 'undefined') {\n                classElements.push(classElement);\n            }\n        }\n\n        expect('}');\n\n        return markerApply(marker, delegate.createClassBody(classElements));\n    }\n\n    function parseClassImplements() {\n        var id, implemented = [], marker, typeParameters;\n        expectContextualKeyword('implements');\n        while (index < length) {\n            marker = markerCreate();\n            id = parseVariableIdentifier();\n            if (match('<')) {\n                typeParameters = parseTypeParameterInstantiation();\n            } else {\n                typeParameters = null;\n            }\n            implemented.push(markerApply(marker, delegate.createClassImplements(\n                id,\n                typeParameters\n            )));\n            if (!match(',')) {\n                break;\n            }\n            expect(',');\n        }\n        return implemented;\n    }\n\n    function parseClassExpression() {\n        var id, implemented, previousYieldAllowed, superClass = null,\n            superTypeParameters, marker = markerCreate(), typeParameters;\n\n        expectKeyword('class');\n\n        if (!matchKeyword('extends') && !matchContextualKeyword('implements') && !match('{')) {\n            id = parseVariableIdentifier();\n        }\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        if (matchKeyword('extends')) {\n            expectKeyword('extends');\n            previousYieldAllowed = state.yieldAllowed;\n            state.yieldAllowed = false;\n            superClass = parseLeftHandSideExpressionAllowCall();\n            if (match('<')) {\n                superTypeParameters = parseTypeParameterInstantiation();\n            }\n            state.yieldAllowed = previousYieldAllowed;\n        }\n\n        if (matchContextualKeyword('implements')) {\n            implemented = parseClassImplements();\n        }\n\n        return markerApply(marker, delegate.createClassExpression(\n            id,\n            superClass,\n            parseClassBody(),\n            typeParameters,\n            superTypeParameters,\n            implemented\n        ));\n    }\n\n    function parseClassDeclaration() {\n        var id, implemented, previousYieldAllowed, superClass = null,\n            superTypeParameters, marker = markerCreate(), typeParameters;\n\n        expectKeyword('class');\n\n        id = parseVariableIdentifier();\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        if (matchKeyword('extends')) {\n            expectKeyword('extends');\n            previousYieldAllowed = state.yieldAllowed;\n            state.yieldAllowed = false;\n            superClass = parseLeftHandSideExpressionAllowCall();\n            if (match('<')) {\n                superTypeParameters = parseTypeParameterInstantiation();\n            }\n            state.yieldAllowed = previousYieldAllowed;\n        }\n\n        if (matchContextualKeyword('implements')) {\n            implemented = parseClassImplements();\n        }\n\n        return markerApply(marker, delegate.createClassDeclaration(\n            id,\n            superClass,\n            parseClassBody(),\n            typeParameters,\n            superTypeParameters,\n            implemented\n        ));\n    }\n\n    // 15 Program\n\n    function parseSourceElement() {\n        var token;\n        if (lookahead.type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'const':\n            case 'let':\n                return parseConstLetDeclaration(lookahead.value);\n            case 'function':\n                return parseFunctionDeclaration();\n            default:\n                return parseStatement();\n            }\n        }\n\n        if (matchContextualKeyword('type')\n                && lookahead2().type === Token.Identifier) {\n            return parseTypeAlias();\n        }\n\n        if (matchContextualKeyword('interface')\n                && lookahead2().type === Token.Identifier) {\n            return parseInterface();\n        }\n\n        if (matchContextualKeyword('declare')) {\n            token = lookahead2();\n            if (token.type === Token.Keyword) {\n                switch (token.value) {\n                case 'class':\n                    return parseDeclareClass();\n                case 'function':\n                    return parseDeclareFunction();\n                case 'var':\n                    return parseDeclareVariable();\n                }\n            } else if (token.type === Token.Identifier\n                    && token.value === 'module') {\n                return parseDeclareModule();\n            }\n        }\n\n        if (lookahead.type !== Token.EOF) {\n            return parseStatement();\n        }\n    }\n\n    function parseProgramElement() {\n        if (lookahead.type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'export':\n                return parseExportDeclaration();\n            case 'import':\n                return parseImportDeclaration();\n            }\n        }\n\n        return parseSourceElement();\n    }\n\n    function parseProgramElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n        while (index < length) {\n            token = lookahead;\n            if (token.type !== Token.StringLiteral) {\n                break;\n            }\n\n            sourceElement = parseProgramElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.range[0] + 1, token.range[1] - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        while (index < length) {\n            sourceElement = parseProgramElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n        return sourceElements;\n    }\n\n    function parseProgram() {\n        var body, marker = markerCreate();\n        strict = false;\n        peek();\n        body = parseProgramElements();\n        return markerApply(marker, delegate.createProgram(body));\n    }\n\n    // The following functions are needed only when the option to preserve\n    // the comments is active.\n\n    function addComment(type, value, start, end, loc) {\n        var comment;\n\n        assert(typeof start === 'number', 'Comment must have valid position');\n\n        // Because the way the actual token is scanned, often the comments\n        // (if any) are skipped twice during the lexical analysis.\n        // Thus, we need to skip adding a comment if the comment array already\n        // handled it.\n        if (state.lastCommentStart >= start) {\n            return;\n        }\n        state.lastCommentStart = start;\n\n        comment = {\n            type: type,\n            value: value\n        };\n        if (extra.range) {\n            comment.range = [start, end];\n        }\n        if (extra.loc) {\n            comment.loc = loc;\n        }\n        extra.comments.push(comment);\n        if (extra.attachComment) {\n            extra.leadingComments.push(comment);\n            extra.trailingComments.push(comment);\n        }\n    }\n\n    function scanComment() {\n        var comment, ch, loc, start, blockComment, lineComment;\n\n        comment = '';\n        blockComment = false;\n        lineComment = false;\n\n        while (index < length) {\n            ch = source[index];\n\n            if (lineComment) {\n                ch = source[index++];\n                if (isLineTerminator(ch.charCodeAt(0))) {\n                    loc.end = {\n                        line: lineNumber,\n                        column: index - lineStart - 1\n                    };\n                    lineComment = false;\n                    addComment('Line', comment, start, index - 1, loc);\n                    if (ch === '\\r' && source[index] === '\\n') {\n                        ++index;\n                    }\n                    ++lineNumber;\n                    lineStart = index;\n                    comment = '';\n                } else if (index >= length) {\n                    lineComment = false;\n                    comment += ch;\n                    loc.end = {\n                        line: lineNumber,\n                        column: length - lineStart\n                    };\n                    addComment('Line', comment, start, length, loc);\n                } else {\n                    comment += ch;\n                }\n            } else if (blockComment) {\n                if (isLineTerminator(ch.charCodeAt(0))) {\n                    if (ch === '\\r') {\n                        ++index;\n                        comment += '\\r';\n                    }\n                    if (ch !== '\\r' || source[index] === '\\n') {\n                        comment += source[index];\n                        ++lineNumber;\n                        ++index;\n                        lineStart = index;\n                        if (index >= length) {\n                            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                        }\n                    }\n                } else {\n                    ch = source[index++];\n                    if (index >= length) {\n                        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                    }\n                    comment += ch;\n                    if (ch === '*') {\n                        ch = source[index];\n                        if (ch === '/') {\n                            comment = comment.substr(0, comment.length - 1);\n                            blockComment = false;\n                            ++index;\n                            loc.end = {\n                                line: lineNumber,\n                                column: index - lineStart\n                            };\n                            addComment('Block', comment, start, index, loc);\n                            comment = '';\n                        }\n                    }\n                }\n            } else if (ch === '/') {\n                ch = source[index + 1];\n                if (ch === '/') {\n                    loc = {\n                        start: {\n                            line: lineNumber,\n                            column: index - lineStart\n                        }\n                    };\n                    start = index;\n                    index += 2;\n                    lineComment = true;\n                    if (index >= length) {\n                        loc.end = {\n                            line: lineNumber,\n                            column: index - lineStart\n                        };\n                        lineComment = false;\n                        addComment('Line', comment, start, index, loc);\n                    }\n                } else if (ch === '*') {\n                    start = index;\n                    index += 2;\n                    blockComment = true;\n                    loc = {\n                        start: {\n                            line: lineNumber,\n                            column: index - lineStart - 2\n                        }\n                    };\n                    if (index >= length) {\n                        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                    }\n                } else {\n                    break;\n                }\n            } else if (isWhiteSpace(ch.charCodeAt(0))) {\n                ++index;\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                ++index;\n                if (ch ===  '\\r' && source[index] === '\\n') {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n            } else {\n                break;\n            }\n        }\n    }\n\n    // 16 XJS\n\n    XHTMLEntities = {\n        quot: '\\u0022',\n        amp: '&',\n        apos: '\\u0027',\n        lt: '<',\n        gt: '>',\n        nbsp: '\\u00A0',\n        iexcl: '\\u00A1',\n        cent: '\\u00A2',\n        pound: '\\u00A3',\n        curren: '\\u00A4',\n        yen: '\\u00A5',\n        brvbar: '\\u00A6',\n        sect: '\\u00A7',\n        uml: '\\u00A8',\n        copy: '\\u00A9',\n        ordf: '\\u00AA',\n        laquo: '\\u00AB',\n        not: '\\u00AC',\n        shy: '\\u00AD',\n        reg: '\\u00AE',\n        macr: '\\u00AF',\n        deg: '\\u00B0',\n        plusmn: '\\u00B1',\n        sup2: '\\u00B2',\n        sup3: '\\u00B3',\n        acute: '\\u00B4',\n        micro: '\\u00B5',\n        para: '\\u00B6',\n        middot: '\\u00B7',\n        cedil: '\\u00B8',\n        sup1: '\\u00B9',\n        ordm: '\\u00BA',\n        raquo: '\\u00BB',\n        frac14: '\\u00BC',\n        frac12: '\\u00BD',\n        frac34: '\\u00BE',\n        iquest: '\\u00BF',\n        Agrave: '\\u00C0',\n        Aacute: '\\u00C1',\n        Acirc: '\\u00C2',\n        Atilde: '\\u00C3',\n        Auml: '\\u00C4',\n        Aring: '\\u00C5',\n        AElig: '\\u00C6',\n        Ccedil: '\\u00C7',\n        Egrave: '\\u00C8',\n        Eacute: '\\u00C9',\n        Ecirc: '\\u00CA',\n        Euml: '\\u00CB',\n        Igrave: '\\u00CC',\n        Iacute: '\\u00CD',\n        Icirc: '\\u00CE',\n        Iuml: '\\u00CF',\n        ETH: '\\u00D0',\n        Ntilde: '\\u00D1',\n        Ograve: '\\u00D2',\n        Oacute: '\\u00D3',\n        Ocirc: '\\u00D4',\n        Otilde: '\\u00D5',\n        Ouml: '\\u00D6',\n        times: '\\u00D7',\n        Oslash: '\\u00D8',\n        Ugrave: '\\u00D9',\n        Uacute: '\\u00DA',\n        Ucirc: '\\u00DB',\n        Uuml: '\\u00DC',\n        Yacute: '\\u00DD',\n        THORN: '\\u00DE',\n        szlig: '\\u00DF',\n        agrave: '\\u00E0',\n        aacute: '\\u00E1',\n        acirc: '\\u00E2',\n        atilde: '\\u00E3',\n        auml: '\\u00E4',\n        aring: '\\u00E5',\n        aelig: '\\u00E6',\n        ccedil: '\\u00E7',\n        egrave: '\\u00E8',\n        eacute: '\\u00E9',\n        ecirc: '\\u00EA',\n        euml: '\\u00EB',\n        igrave: '\\u00EC',\n        iacute: '\\u00ED',\n        icirc: '\\u00EE',\n        iuml: '\\u00EF',\n        eth: '\\u00F0',\n        ntilde: '\\u00F1',\n        ograve: '\\u00F2',\n        oacute: '\\u00F3',\n        ocirc: '\\u00F4',\n        otilde: '\\u00F5',\n        ouml: '\\u00F6',\n        divide: '\\u00F7',\n        oslash: '\\u00F8',\n        ugrave: '\\u00F9',\n        uacute: '\\u00FA',\n        ucirc: '\\u00FB',\n        uuml: '\\u00FC',\n        yacute: '\\u00FD',\n        thorn: '\\u00FE',\n        yuml: '\\u00FF',\n        OElig: '\\u0152',\n        oelig: '\\u0153',\n        Scaron: '\\u0160',\n        scaron: '\\u0161',\n        Yuml: '\\u0178',\n        fnof: '\\u0192',\n        circ: '\\u02C6',\n        tilde: '\\u02DC',\n        Alpha: '\\u0391',\n        Beta: '\\u0392',\n        Gamma: '\\u0393',\n        Delta: '\\u0394',\n        Epsilon: '\\u0395',\n        Zeta: '\\u0396',\n        Eta: '\\u0397',\n        Theta: '\\u0398',\n        Iota: '\\u0399',\n        Kappa: '\\u039A',\n        Lambda: '\\u039B',\n        Mu: '\\u039C',\n        Nu: '\\u039D',\n        Xi: '\\u039E',\n        Omicron: '\\u039F',\n        Pi: '\\u03A0',\n        Rho: '\\u03A1',\n        Sigma: '\\u03A3',\n        Tau: '\\u03A4',\n        Upsilon: '\\u03A5',\n        Phi: '\\u03A6',\n        Chi: '\\u03A7',\n        Psi: '\\u03A8',\n        Omega: '\\u03A9',\n        alpha: '\\u03B1',\n        beta: '\\u03B2',\n        gamma: '\\u03B3',\n        delta: '\\u03B4',\n        epsilon: '\\u03B5',\n        zeta: '\\u03B6',\n        eta: '\\u03B7',\n        theta: '\\u03B8',\n        iota: '\\u03B9',\n        kappa: '\\u03BA',\n        lambda: '\\u03BB',\n        mu: '\\u03BC',\n        nu: '\\u03BD',\n        xi: '\\u03BE',\n        omicron: '\\u03BF',\n        pi: '\\u03C0',\n        rho: '\\u03C1',\n        sigmaf: '\\u03C2',\n        sigma: '\\u03C3',\n        tau: '\\u03C4',\n        upsilon: '\\u03C5',\n        phi: '\\u03C6',\n        chi: '\\u03C7',\n        psi: '\\u03C8',\n        omega: '\\u03C9',\n        thetasym: '\\u03D1',\n        upsih: '\\u03D2',\n        piv: '\\u03D6',\n        ensp: '\\u2002',\n        emsp: '\\u2003',\n        thinsp: '\\u2009',\n        zwnj: '\\u200C',\n        zwj: '\\u200D',\n        lrm: '\\u200E',\n        rlm: '\\u200F',\n        ndash: '\\u2013',\n        mdash: '\\u2014',\n        lsquo: '\\u2018',\n        rsquo: '\\u2019',\n        sbquo: '\\u201A',\n        ldquo: '\\u201C',\n        rdquo: '\\u201D',\n        bdquo: '\\u201E',\n        dagger: '\\u2020',\n        Dagger: '\\u2021',\n        bull: '\\u2022',\n        hellip: '\\u2026',\n        permil: '\\u2030',\n        prime: '\\u2032',\n        Prime: '\\u2033',\n        lsaquo: '\\u2039',\n        rsaquo: '\\u203A',\n        oline: '\\u203E',\n        frasl: '\\u2044',\n        euro: '\\u20AC',\n        image: '\\u2111',\n        weierp: '\\u2118',\n        real: '\\u211C',\n        trade: '\\u2122',\n        alefsym: '\\u2135',\n        larr: '\\u2190',\n        uarr: '\\u2191',\n        rarr: '\\u2192',\n        darr: '\\u2193',\n        harr: '\\u2194',\n        crarr: '\\u21B5',\n        lArr: '\\u21D0',\n        uArr: '\\u21D1',\n        rArr: '\\u21D2',\n        dArr: '\\u21D3',\n        hArr: '\\u21D4',\n        forall: '\\u2200',\n        part: '\\u2202',\n        exist: '\\u2203',\n        empty: '\\u2205',\n        nabla: '\\u2207',\n        isin: '\\u2208',\n        notin: '\\u2209',\n        ni: '\\u220B',\n        prod: '\\u220F',\n        sum: '\\u2211',\n        minus: '\\u2212',\n        lowast: '\\u2217',\n        radic: '\\u221A',\n        prop: '\\u221D',\n        infin: '\\u221E',\n        ang: '\\u2220',\n        and: '\\u2227',\n        or: '\\u2228',\n        cap: '\\u2229',\n        cup: '\\u222A',\n        'int': '\\u222B',\n        there4: '\\u2234',\n        sim: '\\u223C',\n        cong: '\\u2245',\n        asymp: '\\u2248',\n        ne: '\\u2260',\n        equiv: '\\u2261',\n        le: '\\u2264',\n        ge: '\\u2265',\n        sub: '\\u2282',\n        sup: '\\u2283',\n        nsub: '\\u2284',\n        sube: '\\u2286',\n        supe: '\\u2287',\n        oplus: '\\u2295',\n        otimes: '\\u2297',\n        perp: '\\u22A5',\n        sdot: '\\u22C5',\n        lceil: '\\u2308',\n        rceil: '\\u2309',\n        lfloor: '\\u230A',\n        rfloor: '\\u230B',\n        lang: '\\u2329',\n        rang: '\\u232A',\n        loz: '\\u25CA',\n        spades: '\\u2660',\n        clubs: '\\u2663',\n        hearts: '\\u2665',\n        diams: '\\u2666'\n    };\n\n    function getQualifiedXJSName(object) {\n        if (object.type === Syntax.XJSIdentifier) {\n            return object.name;\n        }\n        if (object.type === Syntax.XJSNamespacedName) {\n            return object.namespace.name + ':' + object.name.name;\n        }\n        if (object.type === Syntax.XJSMemberExpression) {\n            return (\n                getQualifiedXJSName(object.object) + '.' +\n                getQualifiedXJSName(object.property)\n            );\n        }\n    }\n\n    function isXJSIdentifierStart(ch) {\n        // exclude backslash (\\)\n        return (ch !== 92) && isIdentifierStart(ch);\n    }\n\n    function isXJSIdentifierPart(ch) {\n        // exclude backslash (\\) and add hyphen (-)\n        return (ch !== 92) && (ch === 45 || isIdentifierPart(ch));\n    }\n\n    function scanXJSIdentifier() {\n        var ch, start, value = '';\n\n        start = index;\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (!isXJSIdentifierPart(ch)) {\n                break;\n            }\n            value += source[index++];\n        }\n\n        return {\n            type: Token.XJSIdentifier,\n            value: value,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanXJSEntity() {\n        var ch, str = '', start = index, count = 0, code;\n        ch = source[index];\n        assert(ch === '&', 'Entity must start with an ampersand');\n        index++;\n        while (index < length && count++ < 10) {\n            ch = source[index++];\n            if (ch === ';') {\n                break;\n            }\n            str += ch;\n        }\n\n        // Well-formed entity (ending was found).\n        if (ch === ';') {\n            // Numeric entity.\n            if (str[0] === '#') {\n                if (str[1] === 'x') {\n                    code = +('0' + str.substr(1));\n                } else {\n                    // Removing leading zeros in order to avoid treating as octal in old browsers.\n                    code = +str.substr(1).replace(Regex.LeadingZeros, '');\n                }\n\n                if (!isNaN(code)) {\n                    return String.fromCharCode(code);\n                }\n            } else if (XHTMLEntities[str]) {\n                return XHTMLEntities[str];\n            }\n        }\n\n        // Treat non-entity sequences as regular text.\n        index = start + 1;\n        return '&';\n    }\n\n    function scanXJSText(stopChars) {\n        var ch, str = '', start;\n        start = index;\n        while (index < length) {\n            ch = source[index];\n            if (stopChars.indexOf(ch) !== -1) {\n                break;\n            }\n            if (ch === '&') {\n                str += scanXJSEntity();\n            } else {\n                index++;\n                if (ch === '\\r' && source[index] === '\\n') {\n                    str += ch;\n                    ch = source[index];\n                    index++;\n                }\n                if (isLineTerminator(ch.charCodeAt(0))) {\n                    ++lineNumber;\n                    lineStart = index;\n                }\n                str += ch;\n            }\n        }\n        return {\n            type: Token.XJSText,\n            value: str,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanXJSStringLiteral() {\n        var innerToken, quote, start;\n\n        quote = source[index];\n        assert((quote === '\\'' || quote === '\"'),\n            'String literal must starts with a quote');\n\n        start = index;\n        ++index;\n\n        innerToken = scanXJSText([quote]);\n\n        if (quote !== source[index]) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        ++index;\n\n        innerToken.range = [start, index];\n\n        return innerToken;\n    }\n\n    /**\n     * Between XJS opening and closing tags (e.g. <foo>HERE</foo>), anything that\n     * is not another XJS tag and is not an expression wrapped by {} is text.\n     */\n    function advanceXJSChild() {\n        var ch = source.charCodeAt(index);\n\n        // { (123) and < (60)\n        if (ch !== 123 && ch !== 60) {\n            return scanXJSText(['<', '{']);\n        }\n\n        return scanPunctuator();\n    }\n\n    function parseXJSIdentifier() {\n        var token, marker = markerCreate();\n\n        if (lookahead.type !== Token.XJSIdentifier) {\n            throwUnexpected(lookahead);\n        }\n\n        token = lex();\n        return markerApply(marker, delegate.createXJSIdentifier(token.value));\n    }\n\n    function parseXJSNamespacedName() {\n        var namespace, name, marker = markerCreate();\n\n        namespace = parseXJSIdentifier();\n        expect(':');\n        name = parseXJSIdentifier();\n\n        return markerApply(marker, delegate.createXJSNamespacedName(namespace, name));\n    }\n\n    function parseXJSMemberExpression() {\n        var marker = markerCreate(),\n            expr = parseXJSIdentifier();\n\n        while (match('.')) {\n            lex();\n            expr = markerApply(marker, delegate.createXJSMemberExpression(expr, parseXJSIdentifier()));\n        }\n\n        return expr;\n    }\n\n    function parseXJSElementName() {\n        if (lookahead2().value === ':') {\n            return parseXJSNamespacedName();\n        }\n        if (lookahead2().value === '.') {\n            return parseXJSMemberExpression();\n        }\n\n        return parseXJSIdentifier();\n    }\n\n    function parseXJSAttributeName() {\n        if (lookahead2().value === ':') {\n            return parseXJSNamespacedName();\n        }\n\n        return parseXJSIdentifier();\n    }\n\n    function parseXJSAttributeValue() {\n        var value, marker;\n        if (match('{')) {\n            value = parseXJSExpressionContainer();\n            if (value.expression.type === Syntax.XJSEmptyExpression) {\n                throwError(\n                    value,\n                    'XJS attributes must only be assigned a non-empty ' +\n                        'expression'\n                );\n            }\n        } else if (match('<')) {\n            value = parseXJSElement();\n        } else if (lookahead.type === Token.XJSText) {\n            marker = markerCreate();\n            value = markerApply(marker, delegate.createLiteral(lex()));\n        } else {\n            throwError({}, Messages.InvalidXJSAttributeValue);\n        }\n        return value;\n    }\n\n    function parseXJSEmptyExpression() {\n        var marker = markerCreatePreserveWhitespace();\n        while (source.charAt(index) !== '}') {\n            index++;\n        }\n        return markerApply(marker, delegate.createXJSEmptyExpression());\n    }\n\n    function parseXJSExpressionContainer() {\n        var expression, origInXJSChild, origInXJSTag, marker = markerCreate();\n\n        origInXJSChild = state.inXJSChild;\n        origInXJSTag = state.inXJSTag;\n        state.inXJSChild = false;\n        state.inXJSTag = false;\n\n        expect('{');\n\n        if (match('}')) {\n            expression = parseXJSEmptyExpression();\n        } else {\n            expression = parseExpression();\n        }\n\n        state.inXJSChild = origInXJSChild;\n        state.inXJSTag = origInXJSTag;\n\n        expect('}');\n\n        return markerApply(marker, delegate.createXJSExpressionContainer(expression));\n    }\n\n    function parseXJSSpreadAttribute() {\n        var expression, origInXJSChild, origInXJSTag, marker = markerCreate();\n\n        origInXJSChild = state.inXJSChild;\n        origInXJSTag = state.inXJSTag;\n        state.inXJSChild = false;\n        state.inXJSTag = false;\n\n        expect('{');\n        expect('...');\n\n        expression = parseAssignmentExpression();\n\n        state.inXJSChild = origInXJSChild;\n        state.inXJSTag = origInXJSTag;\n\n        expect('}');\n\n        return markerApply(marker, delegate.createXJSSpreadAttribute(expression));\n    }\n\n    function parseXJSAttribute() {\n        var name, marker;\n\n        if (match('{')) {\n            return parseXJSSpreadAttribute();\n        }\n\n        marker = markerCreate();\n\n        name = parseXJSAttributeName();\n\n        // HTML empty attribute\n        if (match('=')) {\n            lex();\n            return markerApply(marker, delegate.createXJSAttribute(name, parseXJSAttributeValue()));\n        }\n\n        return markerApply(marker, delegate.createXJSAttribute(name));\n    }\n\n    function parseXJSChild() {\n        var token, marker;\n        if (match('{')) {\n            token = parseXJSExpressionContainer();\n        } else if (lookahead.type === Token.XJSText) {\n            marker = markerCreatePreserveWhitespace();\n            token = markerApply(marker, delegate.createLiteral(lex()));\n        } else {\n            token = parseXJSElement();\n        }\n        return token;\n    }\n\n    function parseXJSClosingElement() {\n        var name, origInXJSChild, origInXJSTag, marker = markerCreate();\n        origInXJSChild = state.inXJSChild;\n        origInXJSTag = state.inXJSTag;\n        state.inXJSChild = false;\n        state.inXJSTag = true;\n        expect('<');\n        expect('/');\n        name = parseXJSElementName();\n        // Because advance() (called by lex() called by expect()) expects there\n        // to be a valid token after >, it needs to know whether to look for a\n        // standard JS token or an XJS text node\n        state.inXJSChild = origInXJSChild;\n        state.inXJSTag = origInXJSTag;\n        expect('>');\n        return markerApply(marker, delegate.createXJSClosingElement(name));\n    }\n\n    function parseXJSOpeningElement() {\n        var name, attribute, attributes = [], selfClosing = false, origInXJSChild, origInXJSTag, marker = markerCreate();\n\n        origInXJSChild = state.inXJSChild;\n        origInXJSTag = state.inXJSTag;\n        state.inXJSChild = false;\n        state.inXJSTag = true;\n\n        expect('<');\n\n        name = parseXJSElementName();\n\n        while (index < length &&\n                lookahead.value !== '/' &&\n                lookahead.value !== '>') {\n            attributes.push(parseXJSAttribute());\n        }\n\n        state.inXJSTag = origInXJSTag;\n\n        if (lookahead.value === '/') {\n            expect('/');\n            // Because advance() (called by lex() called by expect()) expects\n            // there to be a valid token after >, it needs to know whether to\n            // look for a standard JS token or an XJS text node\n            state.inXJSChild = origInXJSChild;\n            expect('>');\n            selfClosing = true;\n        } else {\n            state.inXJSChild = true;\n            expect('>');\n        }\n        return markerApply(marker, delegate.createXJSOpeningElement(name, attributes, selfClosing));\n    }\n\n    function parseXJSElement() {\n        var openingElement, closingElement = null, children = [], origInXJSChild, origInXJSTag, marker = markerCreate();\n\n        origInXJSChild = state.inXJSChild;\n        origInXJSTag = state.inXJSTag;\n        openingElement = parseXJSOpeningElement();\n\n        if (!openingElement.selfClosing) {\n            while (index < length) {\n                state.inXJSChild = false; // Call lookahead2() with inXJSChild = false because </ should not be considered in the child\n                if (lookahead.value === '<' && lookahead2().value === '/') {\n                    break;\n                }\n                state.inXJSChild = true;\n                children.push(parseXJSChild());\n            }\n            state.inXJSChild = origInXJSChild;\n            state.inXJSTag = origInXJSTag;\n            closingElement = parseXJSClosingElement();\n            if (getQualifiedXJSName(closingElement.name) !== getQualifiedXJSName(openingElement.name)) {\n                throwError({}, Messages.ExpectedXJSClosingTag, getQualifiedXJSName(openingElement.name));\n            }\n        }\n\n        // When (erroneously) writing two adjacent tags like\n        //\n        //     var x = <div>one</div><div>two</div>;\n        //\n        // the default error message is a bit incomprehensible. Since it's\n        // rarely (never?) useful to write a less-than sign after an XJS\n        // element, we disallow it here in the parser in order to provide a\n        // better error message. (In the rare case that the less-than operator\n        // was intended, the left tag can be wrapped in parentheses.)\n        if (!origInXJSChild && match('<')) {\n            throwError(lookahead, Messages.AdjacentXJSElements);\n        }\n\n        return markerApply(marker, delegate.createXJSElement(openingElement, closingElement, children));\n    }\n\n    function parseTypeAlias() {\n        var id, marker = markerCreate(), typeParameters = null, right;\n        expectContextualKeyword('type');\n        id = parseVariableIdentifier();\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n        expect('=');\n        right = parseType();\n        consumeSemicolon();\n        return markerApply(marker, delegate.createTypeAlias(id, typeParameters, right));\n    }\n\n    function parseInterfaceExtends() {\n        var marker = markerCreate(), id, typeParameters = null;\n\n        id = parseVariableIdentifier();\n        if (match('<')) {\n            typeParameters = parseTypeParameterInstantiation();\n        }\n\n        return markerApply(marker, delegate.createInterfaceExtends(\n            id,\n            typeParameters\n        ));\n    }\n\n    function parseInterfaceish(marker, allowStatic) {\n        var body, bodyMarker, extended = [], id,\n            typeParameters = null;\n\n        id = parseVariableIdentifier();\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        if (matchKeyword('extends')) {\n            expectKeyword('extends');\n\n            while (index < length) {\n                extended.push(parseInterfaceExtends());\n                if (!match(',')) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        bodyMarker = markerCreate();\n        body = markerApply(bodyMarker, parseObjectType(allowStatic));\n\n        return markerApply(marker, delegate.createInterface(\n            id,\n            typeParameters,\n            body,\n            extended\n        ));\n    }\n\n    function parseInterface() {\n        var body, bodyMarker, extended = [], id, marker = markerCreate(),\n            typeParameters = null;\n\n        expectContextualKeyword('interface');\n        return parseInterfaceish(marker, /* allowStatic */false);\n    }\n\n    function parseDeclareClass() {\n        var marker = markerCreate(), ret;\n        expectContextualKeyword('declare');\n        expectKeyword('class');\n\n        ret = parseInterfaceish(marker, /* allowStatic */true);\n        ret.type = Syntax.DeclareClass;\n        return ret;\n    }\n\n    function parseDeclareFunction() {\n        var id, idMarker,\n            marker = markerCreate(), params, returnType, rest, tmp,\n            typeParameters = null, value, valueMarker;\n\n        expectContextualKeyword('declare');\n        expectKeyword('function');\n        idMarker = markerCreate();\n        id = parseVariableIdentifier();\n\n        valueMarker = markerCreate();\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n        expect('(');\n        tmp = parseFunctionTypeParams();\n        params = tmp.params;\n        rest = tmp.rest;\n        expect(')');\n\n        expect(':');\n        returnType = parseType();\n\n        value = markerApply(valueMarker, delegate.createFunctionTypeAnnotation(\n            params,\n            returnType,\n            rest,\n            typeParameters\n        ));\n\n        id.typeAnnotation = markerApply(valueMarker, delegate.createTypeAnnotation(\n            value\n        ));\n        markerApply(idMarker, id);\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createDeclareFunction(\n            id\n        ));\n    }\n\n    function parseDeclareVariable() {\n        var id, marker = markerCreate();\n        expectContextualKeyword('declare');\n        expectKeyword('var');\n        id = parseTypeAnnotatableIdentifier();\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createDeclareVariable(\n            id\n        ));\n    }\n\n    function parseDeclareModule() {\n        var body = [], bodyMarker, id, idMarker, marker = markerCreate(), token;\n        expectContextualKeyword('declare');\n        expectContextualKeyword('module');\n\n        if (lookahead.type === Token.StringLiteral) {\n            if (strict && lookahead.octal) {\n                throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n            }\n            idMarker = markerCreate();\n            id = markerApply(idMarker, delegate.createLiteral(lex()));\n        } else {\n            id = parseVariableIdentifier();\n        }\n\n        bodyMarker = markerCreate();\n        expect('{');\n        while (index < length && !match('}')) {\n            token = lookahead2();\n            switch (token.value) {\n            case 'class':\n                body.push(parseDeclareClass());\n                break;\n            case 'function':\n                body.push(parseDeclareFunction());\n                break;\n            case 'var':\n                body.push(parseDeclareVariable());\n                break;\n            default:\n                throwUnexpected(lookahead);\n            }\n        }\n        expect('}');\n\n        return markerApply(marker, delegate.createDeclareModule(\n            id,\n            markerApply(bodyMarker, delegate.createBlockStatement(body))\n        ));\n    }\n\n    function collectToken() {\n        var start, loc, token, range, value, entry;\n\n        if (!state.inXJSChild) {\n            skipComment();\n        }\n\n        start = index;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        token = extra.advance();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        if (token.type !== Token.EOF) {\n            range = [token.range[0], token.range[1]];\n            value = source.slice(token.range[0], token.range[1]);\n            entry = {\n                type: TokenName[token.type],\n                value: value,\n                range: range,\n                loc: loc\n            };\n            if (token.regex) {\n                entry.regex = {\n                    pattern: token.regex.pattern,\n                    flags: token.regex.flags\n                };\n            }\n            extra.tokens.push(entry);\n        }\n\n        return token;\n    }\n\n    function collectRegex() {\n        var pos, loc, regex, token;\n\n        skipComment();\n\n        pos = index;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        regex = extra.scanRegExp();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        if (!extra.tokenize) {\n            // Pop the previous token, which is likely '/' or '/='\n            if (extra.tokens.length > 0) {\n                token = extra.tokens[extra.tokens.length - 1];\n                if (token.range[0] === pos && token.type === 'Punctuator') {\n                    if (token.value === '/' || token.value === '/=') {\n                        extra.tokens.pop();\n                    }\n                }\n            }\n\n            extra.tokens.push({\n                type: 'RegularExpression',\n                value: regex.literal,\n                regex: regex.regex,\n                range: [pos, index],\n                loc: loc\n            });\n        }\n\n        return regex;\n    }\n\n    function filterTokenLocation() {\n        var i, entry, token, tokens = [];\n\n        for (i = 0; i < extra.tokens.length; ++i) {\n            entry = extra.tokens[i];\n            token = {\n                type: entry.type,\n                value: entry.value\n            };\n            if (entry.regex) {\n                token.regex = {\n                    pattern: entry.regex.pattern,\n                    flags: entry.regex.flags\n                };\n            }\n            if (extra.range) {\n                token.range = entry.range;\n            }\n            if (extra.loc) {\n                token.loc = entry.loc;\n            }\n            tokens.push(token);\n        }\n\n        extra.tokens = tokens;\n    }\n\n    function patch() {\n        if (extra.comments) {\n            extra.skipComment = skipComment;\n            skipComment = scanComment;\n        }\n\n        if (typeof extra.tokens !== 'undefined') {\n            extra.advance = advance;\n            extra.scanRegExp = scanRegExp;\n\n            advance = collectToken;\n            scanRegExp = collectRegex;\n        }\n    }\n\n    function unpatch() {\n        if (typeof extra.skipComment === 'function') {\n            skipComment = extra.skipComment;\n        }\n\n        if (typeof extra.scanRegExp === 'function') {\n            advance = extra.advance;\n            scanRegExp = extra.scanRegExp;\n        }\n    }\n\n    // This is used to modify the delegate.\n\n    function extend(object, properties) {\n        var entry, result = {};\n\n        for (entry in object) {\n            if (object.hasOwnProperty(entry)) {\n                result[entry] = object[entry];\n            }\n        }\n\n        for (entry in properties) {\n            if (properties.hasOwnProperty(entry)) {\n                result[entry] = properties[entry];\n            }\n        }\n\n        return result;\n    }\n\n    function tokenize(code, options) {\n        var toString,\n            token,\n            tokens;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowKeyword: true,\n            allowIn: true,\n            labelSet: {},\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            lastCommentStart: -1\n        };\n\n        extra = {};\n\n        // Options matching.\n        options = options || {};\n\n        // Of course we collect tokens here.\n        options.tokens = true;\n        extra.tokens = [];\n        extra.tokenize = true;\n        // The following two fields are necessary to compute the Regex tokens.\n        extra.openParenToken = -1;\n        extra.openCurlyToken = -1;\n\n        extra.range = (typeof options.range === 'boolean') && options.range;\n        extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n        if (typeof options.comment === 'boolean' && options.comment) {\n            extra.comments = [];\n        }\n        if (typeof options.tolerant === 'boolean' && options.tolerant) {\n            extra.errors = [];\n        }\n\n        if (length > 0) {\n            if (typeof source[0] === 'undefined') {\n                // Try first to convert to a string. This is good as fast path\n                // for old IE which understands string indexing for string\n                // literals only and not for string object.\n                if (code instanceof String) {\n                    source = code.valueOf();\n                }\n            }\n        }\n\n        patch();\n\n        try {\n            peek();\n            if (lookahead.type === Token.EOF) {\n                return extra.tokens;\n            }\n\n            token = lex();\n            while (lookahead.type !== Token.EOF) {\n                try {\n                    token = lex();\n                } catch (lexError) {\n                    token = lookahead;\n                    if (extra.errors) {\n                        extra.errors.push(lexError);\n                        // We have to break on the first error\n                        // to avoid infinite loops.\n                        break;\n                    } else {\n                        throw lexError;\n                    }\n                }\n            }\n\n            filterTokenLocation();\n            tokens = extra.tokens;\n            if (typeof extra.comments !== 'undefined') {\n                tokens.comments = extra.comments;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                tokens.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            unpatch();\n            extra = {};\n        }\n        return tokens;\n    }\n\n    function parse(code, options) {\n        var program, toString;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowKeyword: false,\n            allowIn: true,\n            labelSet: {},\n            parenthesizedCount: 0,\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            inXJSChild: false,\n            inXJSTag: false,\n            inType: false,\n            lastCommentStart: -1,\n            yieldAllowed: false,\n            awaitAllowed: false\n        };\n\n        extra = {};\n        if (typeof options !== 'undefined') {\n            extra.range = (typeof options.range === 'boolean') && options.range;\n            extra.loc = (typeof options.loc === 'boolean') && options.loc;\n            extra.attachComment = (typeof options.attachComment === 'boolean') && options.attachComment;\n\n            if (extra.loc && options.source !== null && options.source !== undefined) {\n                delegate = extend(delegate, {\n                    'postProcess': function (node) {\n                        node.loc.source = toString(options.source);\n                        return node;\n                    }\n                });\n            }\n\n            if (typeof options.tokens === 'boolean' && options.tokens) {\n                extra.tokens = [];\n            }\n            if (typeof options.comment === 'boolean' && options.comment) {\n                extra.comments = [];\n            }\n            if (typeof options.tolerant === 'boolean' && options.tolerant) {\n                extra.errors = [];\n            }\n            if (extra.attachComment) {\n                extra.range = true;\n                extra.comments = [];\n                extra.bottomRightStack = [];\n                extra.trailingComments = [];\n                extra.leadingComments = [];\n            }\n        }\n\n        if (length > 0) {\n            if (typeof source[0] === 'undefined') {\n                // Try first to convert to a string. This is good as fast path\n                // for old IE which understands string indexing for string\n                // literals only and not for string object.\n                if (code instanceof String) {\n                    source = code.valueOf();\n                }\n            }\n        }\n\n        patch();\n        try {\n            program = parseProgram();\n            if (typeof extra.comments !== 'undefined') {\n                program.comments = extra.comments;\n            }\n            if (typeof extra.tokens !== 'undefined') {\n                filterTokenLocation();\n                program.tokens = extra.tokens;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                program.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            unpatch();\n            extra = {};\n        }\n\n        return program;\n    }\n\n    // Sync with *.json manifests.\n    exports.version = '8001.1001.0-dev-harmony-fb';\n\n    exports.tokenize = tokenize;\n\n    exports.parse = parse;\n\n    // Deep copy.\n    exports.Syntax = (function () {\n        var name, types = {};\n\n        if (typeof Object.create === 'function') {\n            types = Object.create(null);\n        }\n\n        for (name in Syntax) {\n            if (Syntax.hasOwnProperty(name)) {\n                types[name] = Syntax[name];\n            }\n        }\n\n        if (typeof Object.freeze === 'function') {\n            Object.freeze(types);\n        }\n\n        return types;\n    }());\n\n}));\n/* vim: set sw=4 ts=4 et tw=80 : */\n","var assert = require(\"assert\");\nvar types = require(\"./types\");\nvar n = types.namedTypes;\nvar isArray = types.builtInTypes.array;\nvar isObject = types.builtInTypes.object;\nvar linesModule = require(\"./lines\");\nvar fromString = linesModule.fromString;\nvar Lines = linesModule.Lines;\nvar concat = linesModule.concat;\nvar comparePos = require(\"./util\").comparePos;\nvar childNodesCacheKey = require(\"private\").makeUniqueKey();\n\n// TODO Move a non-caching implementation of this function into ast-types,\n// and implement a caching wrapper function here.\nfunction getSortedChildNodes(node, resultArray) {\n    if (!node) {\n        return;\n    }\n\n    if (resultArray) {\n        if (n.Node.check(node) &&\n            n.SourceLocation.check(node.loc)) {\n            // This reverse insertion sort almost always takes constant\n            // time because we almost always (maybe always?) append the\n            // nodes in order anyway.\n            for (var i = resultArray.length - 1; i >= 0; --i) {\n                if (comparePos(resultArray[i].loc.end,\n                               node.loc.start) <= 0) {\n                    break;\n                }\n            }\n            resultArray.splice(i + 1, 0, node);\n            return;\n        }\n    } else if (node[childNodesCacheKey]) {\n        return node[childNodesCacheKey];\n    }\n\n    var names;\n    if (isArray.check(node)) {\n        names = Object.keys(node);\n    } else if (isObject.check(node)) {\n        names = types.getFieldNames(node);\n    } else {\n        return;\n    }\n\n    if (!resultArray) {\n        Object.defineProperty(node, childNodesCacheKey, {\n            value: resultArray = [],\n            enumerable: false\n        });\n    }\n\n    for (var i = 0, nameCount = names.length; i < nameCount; ++i) {\n        getSortedChildNodes(node[names[i]], resultArray);\n    }\n\n    return resultArray;\n}\n\n// As efficiently as possible, decorate the comment object with\n// .precedingNode, .enclosingNode, and/or .followingNode properties, at\n// least one of which is guaranteed to be defined.\nfunction decorateComment(node, comment) {\n    var childNodes = getSortedChildNodes(node);\n\n    // Time to dust off the old binary search robes and wizard hat.\n    var left = 0, right = childNodes.length;\n    while (left < right) {\n        var middle = (left + right) >> 1;\n        var child = childNodes[middle];\n\n        if (comparePos(child.loc.start, comment.loc.start) <= 0 &&\n            comparePos(comment.loc.end, child.loc.end) <= 0) {\n            // The comment is completely contained by this child node.\n            decorateComment(comment.enclosingNode = child, comment);\n            return; // Abandon the binary search at this level.\n        }\n\n        if (comparePos(child.loc.end, comment.loc.start) <= 0) {\n            // This child node falls completely before the comment.\n            // Because we will never consider this node or any nodes\n            // before it again, this node must be the closest preceding\n            // node we have encountered so far.\n            var precedingNode = child;\n            left = middle + 1;\n            continue;\n        }\n\n        if (comparePos(comment.loc.end, child.loc.start) <= 0) {\n            // This child node falls completely after the comment.\n            // Because we will never consider this node or any nodes after\n            // it again, this node must be the closest following node we\n            // have encountered so far.\n            var followingNode = child;\n            right = middle;\n            continue;\n        }\n\n        throw new Error(\"Comment location overlaps with node location\");\n    }\n\n    if (precedingNode) {\n        comment.precedingNode = precedingNode;\n    }\n\n    if (followingNode) {\n        comment.followingNode = followingNode;\n    }\n}\n\nexports.attach = function(comments, ast, lines) {\n    if (!isArray.check(comments)) {\n        return;\n    }\n\n    var tiesToBreak = [];\n\n    comments.forEach(function(comment) {\n        comment.loc.lines = lines;\n        decorateComment(ast, comment);\n\n        var pn = comment.precedingNode;\n        var en = comment.enclosingNode;\n        var fn = comment.followingNode;\n\n        if (pn && fn) {\n            var tieCount = tiesToBreak.length;\n            if (tieCount > 0) {\n                var lastTie = tiesToBreak[tieCount - 1];\n\n                assert.strictEqual(\n                    lastTie.precedingNode === comment.precedingNode,\n                    lastTie.followingNode === comment.followingNode\n                );\n\n                if (lastTie.followingNode !== comment.followingNode) {\n                    breakTies(tiesToBreak, lines);\n                }\n            }\n\n            tiesToBreak.push(comment);\n\n        } else if (pn) {\n            // No contest: we have a trailing comment.\n            breakTies(tiesToBreak, lines);\n            Comments.forNode(pn).addTrailing(comment);\n\n        } else if (fn) {\n            // No contest: we have a leading comment.\n            breakTies(tiesToBreak, lines);\n            Comments.forNode(fn).addLeading(comment);\n\n        } else if (en) {\n            // The enclosing node has no child nodes at all, so what we\n            // have here is a dangling comment, e.g. [/* crickets */].\n            breakTies(tiesToBreak, lines);\n            Comments.forNode(en).addDangling(comment);\n\n        } else {\n            throw new Error(\"AST contains no nodes at all?\");\n        }\n    });\n\n    breakTies(tiesToBreak, lines);\n};\n\nfunction breakTies(tiesToBreak, lines) {\n    var tieCount = tiesToBreak.length;\n    if (tieCount === 0) {\n        return;\n    }\n\n    var pn = tiesToBreak[0].precedingNode;\n    var fn = tiesToBreak[0].followingNode;\n    var gapEndPos = fn.loc.start;\n\n    // Iterate backwards through tiesToBreak, examining the gaps\n    // between the tied comments. In order to qualify as leading, a\n    // comment must be separated from fn by an unbroken series of\n    // whitespace-only gaps (or other comments).\n    for (var indexOfFirstLeadingComment = tieCount;\n         indexOfFirstLeadingComment > 0;\n         --indexOfFirstLeadingComment) {\n        var comment = tiesToBreak[indexOfFirstLeadingComment - 1];\n        assert.strictEqual(comment.precedingNode, pn);\n        assert.strictEqual(comment.followingNode, fn);\n\n        var gap = lines.sliceString(comment.loc.end, gapEndPos);\n        if (/\\S/.test(gap)) {\n            // The gap string contained something other than whitespace.\n            break;\n        }\n\n        gapEndPos = comment.loc.start;\n    }\n\n    while (indexOfFirstLeadingComment <= tieCount &&\n           (comment = tiesToBreak[indexOfFirstLeadingComment]) &&\n           // If the comment is a //-style comment and indented more\n           // deeply than the node itself, reconsider it as trailing.\n           comment.type === \"Line\" &&\n           comment.loc.start.column > fn.loc.start.column) {\n        ++indexOfFirstLeadingComment;\n    }\n\n    tiesToBreak.forEach(function(comment, i) {\n        if (i < indexOfFirstLeadingComment) {\n            Comments.forNode(pn).addTrailing(comment);\n        } else {\n            Comments.forNode(fn).addLeading(comment);\n        }\n    });\n\n    tiesToBreak.length = 0;\n}\n\nfunction Comments() {\n    assert.ok(this instanceof Comments);\n    this.leading = [];\n    this.dangling = [];\n    this.trailing = [];\n}\n\nvar Cp = Comments.prototype;\n\nComments.forNode = function forNode(node) {\n    var comments = node.comments;\n    if (!comments) {\n        Object.defineProperty(node, \"comments\", {\n            value: comments = new Comments,\n            enumerable: false\n        });\n    }\n    return comments;\n};\n\nCp.forEach = function forEach(callback, context) {\n    this.leading.forEach(callback, context);\n    // this.dangling.forEach(callback, context);\n    this.trailing.forEach(callback, context);\n};\n\nCp.addLeading = function addLeading(comment) {\n    this.leading.push(comment);\n};\n\nCp.addDangling = function addDangling(comment) {\n    this.dangling.push(comment);\n};\n\nCp.addTrailing = function addTrailing(comment) {\n    comment.trailing = true;\n    if (comment.type === \"Block\") {\n        this.trailing.push(comment);\n    } else {\n        this.leading.push(comment);\n    }\n};\n\n/**\n * @param {Object} options - Options object that configures printing.\n */\nfunction printLeadingComment(comment, options) {\n    var loc = comment.loc;\n    var lines = loc && loc.lines;\n    var parts = [];\n\n    if (comment.type === \"Block\") {\n        parts.push(\"/*\", fromString(comment.value, options), \"*/\");\n    } else if (comment.type === \"Line\") {\n        parts.push(\"//\", fromString(comment.value, options));\n    } else assert.fail(comment.type);\n\n    if (comment.trailing) {\n        // When we print trailing comments as leading comments, we don't\n        // want to bring any trailing spaces along.\n        parts.push(\"\\n\");\n\n    } else if (lines instanceof Lines) {\n        var trailingSpace = lines.slice(\n            loc.end,\n            lines.skipSpaces(loc.end)\n        );\n\n        if (trailingSpace.length === 1) {\n            // If the trailing space contains no newlines, then we want to\n            // preserve it exactly as we found it.\n            parts.push(trailingSpace);\n        } else {\n            // If the trailing space contains newlines, then replace it\n            // with just that many newlines, with all other spaces removed.\n            parts.push(new Array(trailingSpace.length).join(\"\\n\"));\n        }\n\n    } else {\n        parts.push(\"\\n\");\n    }\n\n    return concat(parts).stripMargin(loc ? loc.start.column : 0);\n}\n\n/**\n * @param {Object} options - Options object that configures printing.\n */\nfunction printTrailingComment(comment, options) {\n    var loc = comment.loc;\n    var lines = loc && loc.lines;\n    var parts = [];\n\n    if (lines instanceof Lines) {\n        var fromPos = lines.skipSpaces(loc.start, true) || lines.firstPos();\n        var leadingSpace = lines.slice(fromPos, loc.start);\n\n        if (leadingSpace.length === 1) {\n            // If the leading space contains no newlines, then we want to\n            // preserve it exactly as we found it.\n            parts.push(leadingSpace);\n        } else {\n            // If the leading space contains newlines, then replace it\n            // with just that many newlines, sans all other spaces.\n            parts.push(new Array(leadingSpace.length).join(\"\\n\"));\n        }\n    }\n\n    if (comment.type === \"Block\") {\n        parts.push(\"/*\", fromString(comment.value, options), \"*/\");\n    } else if (comment.type === \"Line\") {\n        parts.push(\"//\", fromString(comment.value, options), \"\\n\");\n    } else assert.fail(comment.type);\n\n    return concat(parts).stripMargin(\n        loc ? loc.start.column : 0,\n        true // Skip the first line, in case there were leading spaces.\n    );\n}\n\n/**\n * @param {Object} options - Options object that configures printing.\n */\nexports.printComments = function(comments, innerLines, options) {\n    if (innerLines) {\n        assert.ok(innerLines instanceof Lines);\n    } else {\n        innerLines = fromString(\"\");\n    }\n\n    if (!comments || !(comments.leading.length +\n                       comments.trailing.length)) {\n        return innerLines;\n    }\n\n    var parts = [];\n\n    comments.leading.forEach(function(comment) {\n        parts.push(printLeadingComment(comment, options));\n    });\n\n    parts.push(innerLines);\n\n    comments.trailing.forEach(function(comment) {\n        assert.strictEqual(comment.type, \"Block\");\n        parts.push(printTrailingComment(comment, options));\n    });\n\n    return concat(parts);\n};\n","var assert = require(\"assert\");\nvar sourceMap = require(\"source-map\");\nvar normalizeOptions = require(\"./options\").normalize;\nvar secretKey = require(\"private\").makeUniqueKey();\nvar types = require(\"./types\");\nvar isString = types.builtInTypes.string;\nvar comparePos = require(\"./util\").comparePos;\nvar Mapping = require(\"./mapping\");\n\n// Goals:\n// 1. Minimize new string creation.\n// 2. Keep (de)identation O(lines) time.\n// 3. Permit negative indentations.\n// 4. Enforce immutability.\n// 5. No newline characters.\n\nfunction getSecret(lines) {\n    return lines[secretKey];\n}\n\nfunction Lines(infos, sourceFileName) {\n    assert.ok(this instanceof Lines);\n    assert.ok(infos.length > 0);\n\n    if (sourceFileName) {\n        isString.assert(sourceFileName);\n    } else {\n        sourceFileName = null;\n    }\n\n    Object.defineProperty(this, secretKey, {\n        value: {\n            infos: infos,\n            mappings: [],\n            name: sourceFileName,\n            cachedSourceMap: null\n        }\n    });\n\n    if (sourceFileName) {\n        getSecret(this).mappings.push(new Mapping(this, {\n            start: this.firstPos(),\n            end: this.lastPos()\n        }));\n    }\n}\n\n// Exposed for instanceof checks. The fromString function should be used\n// to create new Lines objects.\nexports.Lines = Lines;\nvar Lp = Lines.prototype;\n\n// These properties used to be assigned to each new object in the Lines\n// constructor, but we can more efficiently stuff them into the secret and\n// let these lazy accessors compute their values on-the-fly.\nObject.defineProperties(Lp, {\n    length: {\n        get: function() {\n            return getSecret(this).infos.length;\n        }\n    },\n\n    name: {\n        get: function() {\n            return getSecret(this).name;\n        }\n    }\n});\n\nfunction copyLineInfo(info) {\n    return {\n        line: info.line,\n        indent: info.indent,\n        sliceStart: info.sliceStart,\n        sliceEnd: info.sliceEnd\n    };\n}\n\nvar fromStringCache = {};\nvar hasOwn = fromStringCache.hasOwnProperty;\nvar maxCacheKeyLen = 10;\n\nfunction countSpaces(spaces, tabWidth) {\n    var count = 0;\n    var len = spaces.length;\n\n    for (var i = 0; i < len; ++i) {\n        var ch = spaces.charAt(i);\n\n        if (ch === \" \") {\n            count += 1;\n\n        } else if (ch === \"\\t\") {\n            assert.strictEqual(typeof tabWidth, \"number\");\n            assert.ok(tabWidth > 0);\n\n            var next = Math.ceil(count / tabWidth) * tabWidth;\n            if (next === count) {\n                count += tabWidth;\n            } else {\n                count = next;\n            }\n\n        } else if (ch === \"\\r\") {\n            // Ignore carriage return characters.\n\n        } else {\n            assert.fail(\"unexpected whitespace character\", ch);\n        }\n    }\n\n    return count;\n}\nexports.countSpaces = countSpaces;\n\nvar leadingSpaceExp = /^\\s*/;\n\n/**\n * @param {Object} options - Options object that configures printing.\n */\nfunction fromString(string, options) {\n    if (string instanceof Lines)\n        return string;\n\n    string += \"\";\n\n    var tabWidth = options && options.tabWidth;\n    var tabless = string.indexOf(\"\\t\") < 0;\n    var cacheable = !options && tabless && (string.length <= maxCacheKeyLen);\n\n    assert.ok(tabWidth || tabless, \"No tab width specified but encountered tabs in string\\n\" + string);\n\n    if (cacheable && hasOwn.call(fromStringCache, string))\n        return fromStringCache[string];\n\n    var lines = new Lines(string.split(\"\\n\").map(function(line) {\n        var spaces = leadingSpaceExp.exec(line)[0];\n        return {\n            line: line,\n            indent: countSpaces(spaces, tabWidth),\n            sliceStart: spaces.length,\n            sliceEnd: line.length\n        };\n    }), normalizeOptions(options).sourceFileName);\n\n    if (cacheable)\n        fromStringCache[string] = lines;\n\n    return lines;\n}\nexports.fromString = fromString;\n\nfunction isOnlyWhitespace(string) {\n    return !/\\S/.test(string);\n}\n\nLp.toString = function(options) {\n    return this.sliceString(this.firstPos(), this.lastPos(), options);\n};\n\nLp.getSourceMap = function(sourceMapName, sourceRoot) {\n    if (!sourceMapName) {\n        // Although we could make up a name or generate an anonymous\n        // source map, instead we assume that any consumer who does not\n        // provide a name does not actually want a source map.\n        return null;\n    }\n\n    var targetLines = this;\n\n    function updateJSON(json) {\n        json = json || {};\n\n        isString.assert(sourceMapName);\n        json.file = sourceMapName;\n\n        if (sourceRoot) {\n            isString.assert(sourceRoot);\n            json.sourceRoot = sourceRoot;\n        }\n\n        return json;\n    }\n\n    var secret = getSecret(targetLines);\n    if (secret.cachedSourceMap) {\n        // Since Lines objects are immutable, we can reuse any source map\n        // that was previously generated. Nevertheless, we return a new\n        // JSON object here to protect the cached source map from outside\n        // modification.\n        return updateJSON(secret.cachedSourceMap.toJSON());\n    }\n\n    var smg = new sourceMap.SourceMapGenerator(updateJSON());\n    var sourcesToContents = {};\n\n    secret.mappings.forEach(function(mapping) {\n        var sourceCursor = mapping.sourceLines.skipSpaces(\n            mapping.sourceLoc.start\n        ) || mapping.sourceLines.lastPos();\n\n        var targetCursor = targetLines.skipSpaces(\n            mapping.targetLoc.start\n        ) || targetLines.lastPos();\n\n        while (comparePos(sourceCursor, mapping.sourceLoc.end) < 0 &&\n               comparePos(targetCursor, mapping.targetLoc.end) < 0) {\n\n            var sourceChar = mapping.sourceLines.charAt(sourceCursor);\n            var targetChar = targetLines.charAt(targetCursor);\n            assert.strictEqual(sourceChar, targetChar);\n\n            var sourceName = mapping.sourceLines.name;\n\n            // Add mappings one character at a time for maximum resolution.\n            smg.addMapping({\n                source: sourceName,\n                original: { line: sourceCursor.line,\n                            column: sourceCursor.column },\n                generated: { line: targetCursor.line,\n                             column: targetCursor.column }\n            });\n\n            if (!hasOwn.call(sourcesToContents, sourceName)) {\n                var sourceContent = mapping.sourceLines.toString();\n                smg.setSourceContent(sourceName, sourceContent);\n                sourcesToContents[sourceName] = sourceContent;\n            }\n\n            targetLines.nextPos(targetCursor, true);\n            mapping.sourceLines.nextPos(sourceCursor, true);\n        }\n    });\n\n    secret.cachedSourceMap = smg;\n\n    return smg.toJSON();\n};\n\nLp.bootstrapCharAt = function(pos) {\n    assert.strictEqual(typeof pos, \"object\");\n    assert.strictEqual(typeof pos.line, \"number\");\n    assert.strictEqual(typeof pos.column, \"number\");\n\n    var line = pos.line,\n        column = pos.column,\n        strings = this.toString().split(\"\\n\"),\n        string = strings[line - 1];\n\n    if (typeof string === \"undefined\")\n        return \"\";\n\n    if (column === string.length &&\n        line < strings.length)\n        return \"\\n\";\n\n    if (column >= string.length)\n        return \"\";\n\n    return string.charAt(column);\n};\n\nLp.charAt = function(pos) {\n    assert.strictEqual(typeof pos, \"object\");\n    assert.strictEqual(typeof pos.line, \"number\");\n    assert.strictEqual(typeof pos.column, \"number\");\n\n    var line = pos.line,\n        column = pos.column,\n        secret = getSecret(this),\n        infos = secret.infos,\n        info = infos[line - 1],\n        c = column;\n\n    if (typeof info === \"undefined\" || c < 0)\n        return \"\";\n\n    var indent = this.getIndentAt(line);\n    if (c < indent)\n        return \" \";\n\n    c += info.sliceStart - indent;\n\n    if (c === info.sliceEnd &&\n        line < this.length)\n        return \"\\n\";\n\n    if (c >= info.sliceEnd)\n        return \"\";\n\n    return info.line.charAt(c);\n};\n\nLp.stripMargin = function(width, skipFirstLine) {\n    if (width === 0)\n        return this;\n\n    assert.ok(width > 0, \"negative margin: \" + width);\n\n    if (skipFirstLine && this.length === 1)\n        return this;\n\n    var secret = getSecret(this);\n\n    var lines = new Lines(secret.infos.map(function(info, i) {\n        if (info.line && (i > 0 || !skipFirstLine)) {\n            info = copyLineInfo(info);\n            info.indent = Math.max(0, info.indent - width);\n        }\n        return info;\n    }));\n\n    if (secret.mappings.length > 0) {\n        var newMappings = getSecret(lines).mappings;\n        assert.strictEqual(newMappings.length, 0);\n        secret.mappings.forEach(function(mapping) {\n            newMappings.push(mapping.indent(width, skipFirstLine, true));\n        });\n    }\n\n    return lines;\n};\n\nLp.indent = function(by) {\n    if (by === 0)\n        return this;\n\n    var secret = getSecret(this);\n\n    var lines = new Lines(secret.infos.map(function(info) {\n        if (info.line) {\n            info = copyLineInfo(info);\n            info.indent += by;\n        }\n        return info\n    }));\n\n    if (secret.mappings.length > 0) {\n        var newMappings = getSecret(lines).mappings;\n        assert.strictEqual(newMappings.length, 0);\n        secret.mappings.forEach(function(mapping) {\n            newMappings.push(mapping.indent(by));\n        });\n    }\n\n    return lines;\n};\n\nLp.indentTail = function(by) {\n    if (by === 0)\n        return this;\n\n    if (this.length < 2)\n        return this;\n\n    var secret = getSecret(this);\n\n    var lines = new Lines(secret.infos.map(function(info, i) {\n        if (i > 0 && info.line) {\n            info = copyLineInfo(info);\n            info.indent += by;\n        }\n\n        return info;\n    }));\n\n    if (secret.mappings.length > 0) {\n        var newMappings = getSecret(lines).mappings;\n        assert.strictEqual(newMappings.length, 0);\n        secret.mappings.forEach(function(mapping) {\n            newMappings.push(mapping.indent(by, true));\n        });\n    }\n\n    return lines;\n};\n\nLp.getIndentAt = function(line) {\n    assert.ok(line >= 1, \"no line \" + line + \" (line numbers start from 1)\");\n    var secret = getSecret(this),\n        info = secret.infos[line - 1];\n    return Math.max(info.indent, 0);\n};\n\nLp.guessTabWidth = function() {\n    var secret = getSecret(this);\n    if (hasOwn.call(secret, \"cachedTabWidth\")) {\n        return secret.cachedTabWidth;\n    }\n\n    var counts = []; // Sparse array.\n    var lastIndent = 0;\n\n    for (var line = 1, last = this.length; line <= last; ++line) {\n        var info = secret.infos[line - 1];\n        var sliced = info.line.slice(info.sliceStart, info.sliceEnd);\n\n        // Whitespace-only lines don't tell us much about the likely tab\n        // width of this code.\n        if (isOnlyWhitespace(sliced)) {\n            continue;\n        }\n\n        var diff = Math.abs(info.indent - lastIndent);\n        counts[diff] = ~~counts[diff] + 1;\n        lastIndent = info.indent;\n    }\n\n    var maxCount = -1;\n    var result = 2;\n\n    for (var tabWidth = 1;\n         tabWidth < counts.length;\n         tabWidth += 1) {\n        if (hasOwn.call(counts, tabWidth) &&\n            counts[tabWidth] > maxCount) {\n            maxCount = counts[tabWidth];\n            result = tabWidth;\n        }\n    }\n\n    return secret.cachedTabWidth = result;\n};\n\nLp.isOnlyWhitespace = function() {\n    return isOnlyWhitespace(this.toString());\n};\n\nLp.isPrecededOnlyByWhitespace = function(pos) {\n    var secret = getSecret(this);\n    var info = secret.infos[pos.line - 1];\n    var indent = Math.max(info.indent, 0);\n\n    var diff = pos.column - indent;\n    if (diff <= 0) {\n        // If pos.column does not exceed the indentation amount, then\n        // there must be only whitespace before it.\n        return true;\n    }\n\n    var start = info.sliceStart;\n    var end = Math.min(start + diff, info.sliceEnd);\n    var prefix = info.line.slice(start, end);\n\n    return isOnlyWhitespace(prefix);\n};\n\nLp.getLineLength = function(line) {\n    var secret = getSecret(this),\n        info = secret.infos[line - 1];\n    return this.getIndentAt(line) + info.sliceEnd - info.sliceStart;\n};\n\nLp.nextPos = function(pos, skipSpaces) {\n    var l = Math.max(pos.line, 0),\n        c = Math.max(pos.column, 0);\n\n    if (c < this.getLineLength(l)) {\n        pos.column += 1;\n\n        return skipSpaces\n            ? !!this.skipSpaces(pos, false, true)\n            : true;\n    }\n\n    if (l < this.length) {\n        pos.line += 1;\n        pos.column = 0;\n\n        return skipSpaces\n            ? !!this.skipSpaces(pos, false, true)\n            : true;\n    }\n\n    return false;\n};\n\nLp.prevPos = function(pos, skipSpaces) {\n    var l = pos.line,\n        c = pos.column;\n\n    if (c < 1) {\n        l -= 1;\n\n        if (l < 1)\n            return false;\n\n        c = this.getLineLength(l);\n\n    } else {\n        c = Math.min(c - 1, this.getLineLength(l));\n    }\n\n    pos.line = l;\n    pos.column = c;\n\n    return skipSpaces\n        ? !!this.skipSpaces(pos, true, true)\n        : true;\n};\n\nLp.firstPos = function() {\n    // Trivial, but provided for completeness.\n    return { line: 1, column: 0 };\n};\n\nLp.lastPos = function() {\n    return {\n        line: this.length,\n        column: this.getLineLength(this.length)\n    };\n};\n\nLp.skipSpaces = function(pos, backward, modifyInPlace) {\n    if (pos) {\n        pos = modifyInPlace ? pos : {\n            line: pos.line,\n            column: pos.column\n        };\n    } else if (backward) {\n        pos = this.lastPos();\n    } else {\n        pos = this.firstPos();\n    }\n\n    if (backward) {\n        while (this.prevPos(pos)) {\n            if (!isOnlyWhitespace(this.charAt(pos)) &&\n                this.nextPos(pos)) {\n                return pos;\n            }\n        }\n\n        return null;\n\n    } else {\n        while (isOnlyWhitespace(this.charAt(pos))) {\n            if (!this.nextPos(pos)) {\n                return null;\n            }\n        }\n\n        return pos;\n    }\n};\n\nLp.trimLeft = function() {\n    var pos = this.skipSpaces(this.firstPos(), false, true);\n    return pos ? this.slice(pos) : emptyLines;\n};\n\nLp.trimRight = function() {\n    var pos = this.skipSpaces(this.lastPos(), true, true);\n    return pos ? this.slice(this.firstPos(), pos) : emptyLines;\n};\n\nLp.trim = function() {\n    var start = this.skipSpaces(this.firstPos(), false, true);\n    if (start === null)\n        return emptyLines;\n\n    var end = this.skipSpaces(this.lastPos(), true, true);\n    assert.notStrictEqual(end, null);\n\n    return this.slice(start, end);\n};\n\nLp.eachPos = function(callback, startPos, skipSpaces) {\n    var pos = this.firstPos();\n\n    if (startPos) {\n        pos.line = startPos.line,\n        pos.column = startPos.column\n    }\n\n    if (skipSpaces && !this.skipSpaces(pos, false, true)) {\n        return; // Encountered nothing but spaces.\n    }\n\n    do callback.call(this, pos);\n    while (this.nextPos(pos, skipSpaces));\n};\n\nLp.bootstrapSlice = function(start, end) {\n    var strings = this.toString().split(\"\\n\").slice(\n            start.line - 1, end.line);\n\n    strings.push(strings.pop().slice(0, end.column));\n    strings[0] = strings[0].slice(start.column);\n\n    return fromString(strings.join(\"\\n\"));\n};\n\nLp.slice = function(start, end) {\n    if (!end) {\n        if (!start) {\n            // The client seems to want a copy of this Lines object, but\n            // Lines objects are immutable, so it's perfectly adequate to\n            // return the same object.\n            return this;\n        }\n\n        // Slice to the end if no end position was provided.\n        end = this.lastPos();\n    }\n\n    var secret = getSecret(this);\n    var sliced = secret.infos.slice(start.line - 1, end.line);\n\n    if (start.line === end.line) {\n        sliced[0] = sliceInfo(sliced[0], start.column, end.column);\n    } else {\n        assert.ok(start.line < end.line);\n        sliced[0] = sliceInfo(sliced[0], start.column);\n        sliced.push(sliceInfo(sliced.pop(), 0, end.column));\n    }\n\n    var lines = new Lines(sliced);\n\n    if (secret.mappings.length > 0) {\n        var newMappings = getSecret(lines).mappings;\n        assert.strictEqual(newMappings.length, 0);\n        secret.mappings.forEach(function(mapping) {\n            var sliced = mapping.slice(this, start, end);\n            if (sliced) {\n                newMappings.push(sliced);\n            }\n        }, this);\n    }\n\n    return lines;\n};\n\nfunction sliceInfo(info, startCol, endCol) {\n    var sliceStart = info.sliceStart;\n    var sliceEnd = info.sliceEnd;\n    var indent = Math.max(info.indent, 0);\n    var lineLength = indent + sliceEnd - sliceStart;\n\n    if (typeof endCol === \"undefined\") {\n        endCol = lineLength;\n    }\n\n    startCol = Math.max(startCol, 0);\n    endCol = Math.min(endCol, lineLength);\n    endCol = Math.max(endCol, startCol);\n\n    if (endCol < indent) {\n        indent = endCol;\n        sliceEnd = sliceStart;\n    } else {\n        sliceEnd -= lineLength - endCol;\n    }\n\n    lineLength = endCol;\n    lineLength -= startCol;\n\n    if (startCol < indent) {\n        indent -= startCol;\n    } else {\n        startCol -= indent;\n        indent = 0;\n        sliceStart += startCol;\n    }\n\n    assert.ok(indent >= 0);\n    assert.ok(sliceStart <= sliceEnd);\n    assert.strictEqual(lineLength, indent + sliceEnd - sliceStart);\n\n    if (info.indent === indent &&\n        info.sliceStart === sliceStart &&\n        info.sliceEnd === sliceEnd) {\n        return info;\n    }\n\n    return {\n        line: info.line,\n        indent: indent,\n        sliceStart: sliceStart,\n        sliceEnd: sliceEnd\n    };\n}\n\nLp.bootstrapSliceString = function(start, end, options) {\n    return this.slice(start, end).toString(options);\n};\n\nLp.sliceString = function(start, end, options) {\n    if (!end) {\n        if (!start) {\n            // The client seems to want a copy of this Lines object, but\n            // Lines objects are immutable, so it's perfectly adequate to\n            // return the same object.\n            return this;\n        }\n\n        // Slice to the end if no end position was provided.\n        end = this.lastPos();\n    }\n\n    options = normalizeOptions(options);\n\n    var infos = getSecret(this).infos;\n    var parts = [];\n    var tabWidth = options.tabWidth;\n\n    for (var line = start.line; line <= end.line; ++line) {\n        var info = infos[line - 1];\n\n        if (line === start.line) {\n            if (line === end.line) {\n                info = sliceInfo(info, start.column, end.column);\n            } else {\n                info = sliceInfo(info, start.column);\n            }\n        } else if (line === end.line) {\n            info = sliceInfo(info, 0, end.column);\n        }\n\n        var indent = Math.max(info.indent, 0);\n\n        var before = info.line.slice(0, info.sliceStart);\n        if (options.reuseWhitespace &&\n            isOnlyWhitespace(before) &&\n            countSpaces(before, options.tabWidth) === indent) {\n            // Reuse original spaces if the indentation is correct.\n            parts.push(info.line.slice(0, info.sliceEnd));\n            continue;\n        }\n\n        var tabs = 0;\n        var spaces = indent;\n\n        if (options.useTabs) {\n            tabs = Math.floor(indent / tabWidth);\n            spaces -= tabs * tabWidth;\n        }\n\n        var result = \"\";\n\n        if (tabs > 0) {\n            result += new Array(tabs + 1).join(\"\\t\");\n        }\n\n        if (spaces > 0) {\n            result += new Array(spaces + 1).join(\" \");\n        }\n\n        result += info.line.slice(info.sliceStart, info.sliceEnd);\n\n        parts.push(result);\n    }\n\n    return parts.join(\"\\n\");\n};\n\nLp.isEmpty = function() {\n    return this.length < 2 && this.getLineLength(1) < 1;\n};\n\nLp.join = function(elements) {\n    var separator = this;\n    var separatorSecret = getSecret(separator);\n    var infos = [];\n    var mappings = [];\n    var prevInfo;\n\n    function appendSecret(secret) {\n        if (secret === null)\n            return;\n\n        if (prevInfo) {\n            var info = secret.infos[0];\n            var indent = new Array(info.indent + 1).join(\" \");\n            var prevLine = infos.length;\n            var prevColumn = Math.max(prevInfo.indent, 0) +\n                prevInfo.sliceEnd - prevInfo.sliceStart;\n\n            prevInfo.line = prevInfo.line.slice(\n                0, prevInfo.sliceEnd) + indent + info.line.slice(\n                    info.sliceStart, info.sliceEnd);\n\n            prevInfo.sliceEnd = prevInfo.line.length;\n\n            if (secret.mappings.length > 0) {\n                secret.mappings.forEach(function(mapping) {\n                    mappings.push(mapping.add(prevLine, prevColumn));\n                });\n            }\n\n        } else if (secret.mappings.length > 0) {\n            mappings.push.apply(mappings, secret.mappings);\n        }\n\n        secret.infos.forEach(function(info, i) {\n            if (!prevInfo || i > 0) {\n                prevInfo = copyLineInfo(info);\n                infos.push(prevInfo);\n            }\n        });\n    }\n\n    function appendWithSeparator(secret, i) {\n        if (i > 0)\n            appendSecret(separatorSecret);\n        appendSecret(secret);\n    }\n\n    elements.map(function(elem) {\n        var lines = fromString(elem);\n        if (lines.isEmpty())\n            return null;\n        return getSecret(lines);\n    }).forEach(separator.isEmpty()\n               ? appendSecret\n               : appendWithSeparator);\n\n    if (infos.length < 1)\n        return emptyLines;\n\n    var lines = new Lines(infos);\n\n    getSecret(lines).mappings = mappings;\n\n    return lines;\n};\n\nexports.concat = function(elements) {\n    return emptyLines.join(elements);\n};\n\nLp.concat = function(other) {\n    var args = arguments,\n        list = [this];\n    list.push.apply(list, args);\n    assert.strictEqual(list.length, args.length + 1);\n    return emptyLines.join(list);\n};\n\n// The emptyLines object needs to be created all the way down here so that\n// Lines.prototype will be fully populated.\nvar emptyLines = fromString(\"\");\n","var assert = require(\"assert\");\nvar types = require(\"./types\");\nvar isString = types.builtInTypes.string;\nvar isNumber = types.builtInTypes.number;\nvar SourceLocation = types.namedTypes.SourceLocation;\nvar Position = types.namedTypes.Position;\nvar linesModule = require(\"./lines\");\nvar comparePos = require(\"./util\").comparePos;\n\nfunction Mapping(sourceLines, sourceLoc, targetLoc) {\n    assert.ok(this instanceof Mapping);\n    assert.ok(sourceLines instanceof linesModule.Lines);\n    SourceLocation.assert(sourceLoc);\n\n    if (targetLoc) {\n        // In certain cases it's possible for targetLoc.{start,end}.column\n        // values to be negative, which technically makes them no longer\n        // valid SourceLocation nodes, so we need to be more forgiving.\n        assert.ok(\n            isNumber.check(targetLoc.start.line) &&\n            isNumber.check(targetLoc.start.column) &&\n            isNumber.check(targetLoc.end.line) &&\n            isNumber.check(targetLoc.end.column)\n        );\n    } else {\n        // Assume identity mapping if no targetLoc specified.\n        targetLoc = sourceLoc;\n    }\n\n    Object.defineProperties(this, {\n        sourceLines: { value: sourceLines },\n        sourceLoc: { value: sourceLoc },\n        targetLoc: { value: targetLoc }\n    });\n}\n\nvar Mp = Mapping.prototype;\nmodule.exports = Mapping;\n\nMp.slice = function(lines, start, end) {\n    assert.ok(lines instanceof linesModule.Lines);\n    Position.assert(start);\n\n    if (end) {\n        Position.assert(end);\n    } else {\n        end = lines.lastPos();\n    }\n\n    var sourceLines = this.sourceLines;\n    var sourceLoc = this.sourceLoc;\n    var targetLoc = this.targetLoc;\n\n    function skip(name) {\n        var sourceFromPos = sourceLoc[name];\n        var targetFromPos = targetLoc[name];\n        var targetToPos = start;\n\n        if (name === \"end\") {\n            targetToPos = end;\n        } else {\n            assert.strictEqual(name, \"start\");\n        }\n\n        return skipChars(\n            sourceLines, sourceFromPos,\n            lines, targetFromPos, targetToPos\n        );\n    }\n\n    if (comparePos(start, targetLoc.start) <= 0) {\n        if (comparePos(targetLoc.end, end) <= 0) {\n            targetLoc = {\n                start: subtractPos(targetLoc.start, start.line, start.column),\n                end: subtractPos(targetLoc.end, start.line, start.column)\n            };\n\n            // The sourceLoc can stay the same because the contents of the\n            // targetLoc have not changed.\n\n        } else if (comparePos(end, targetLoc.start) <= 0) {\n            return null;\n\n        } else {\n            sourceLoc = {\n                start: sourceLoc.start,\n                end: skip(\"end\")\n            };\n\n            targetLoc = {\n                start: subtractPos(targetLoc.start, start.line, start.column),\n                end: subtractPos(end, start.line, start.column)\n            };\n        }\n\n    } else {\n        if (comparePos(targetLoc.end, start) <= 0) {\n            return null;\n        }\n\n        if (comparePos(targetLoc.end, end) <= 0) {\n            sourceLoc = {\n                start: skip(\"start\"),\n                end: sourceLoc.end\n            };\n\n            targetLoc = {\n                // Same as subtractPos(start, start.line, start.column):\n                start: { line: 1, column: 0 },\n                end: subtractPos(targetLoc.end, start.line, start.column)\n            };\n\n        } else {\n            sourceLoc = {\n                start: skip(\"start\"),\n                end: skip(\"end\")\n            };\n\n            targetLoc = {\n                // Same as subtractPos(start, start.line, start.column):\n                start: { line: 1, column: 0 },\n                end: subtractPos(end, start.line, start.column)\n            };\n        }\n    }\n\n    return new Mapping(this.sourceLines, sourceLoc, targetLoc);\n};\n\nMp.add = function(line, column) {\n    return new Mapping(this.sourceLines, this.sourceLoc, {\n        start: addPos(this.targetLoc.start, line, column),\n        end: addPos(this.targetLoc.end, line, column)\n    });\n};\n\nfunction addPos(toPos, line, column) {\n    return {\n        line: toPos.line + line - 1,\n        column: (toPos.line === 1)\n            ? toPos.column + column\n            : toPos.column\n    };\n}\n\nMp.subtract = function(line, column) {\n    return new Mapping(this.sourceLines, this.sourceLoc, {\n        start: subtractPos(this.targetLoc.start, line, column),\n        end: subtractPos(this.targetLoc.end, line, column)\n    });\n};\n\nfunction subtractPos(fromPos, line, column) {\n    return {\n        line: fromPos.line - line + 1,\n        column: (fromPos.line === line)\n            ? fromPos.column - column\n            : fromPos.column\n    };\n}\n\nMp.indent = function(by, skipFirstLine, noNegativeColumns) {\n    if (by === 0) {\n        return this;\n    }\n\n    var targetLoc = this.targetLoc;\n    var startLine = targetLoc.start.line;\n    var endLine = targetLoc.end.line;\n\n    if (skipFirstLine && startLine === 1 && endLine === 1) {\n        return this;\n    }\n\n    targetLoc = {\n        start: targetLoc.start,\n        end: targetLoc.end\n    };\n\n    if (!skipFirstLine || startLine > 1) {\n        var startColumn = targetLoc.start.column + by;\n        targetLoc.start = {\n            line: startLine,\n            column: noNegativeColumns\n                ? Math.max(0, startColumn)\n                : startColumn\n        };\n    }\n\n    if (!skipFirstLine || endLine > 1) {\n        var endColumn = targetLoc.end.column + by;\n        targetLoc.end = {\n            line: endLine,\n            column: noNegativeColumns\n                ? Math.max(0, endColumn)\n                : endColumn\n        };\n    }\n\n    return new Mapping(this.sourceLines, this.sourceLoc, targetLoc);\n};\n\nfunction skipChars(\n    sourceLines, sourceFromPos,\n    targetLines, targetFromPos, targetToPos\n) {\n    assert.ok(sourceLines instanceof linesModule.Lines);\n    assert.ok(targetLines instanceof linesModule.Lines);\n    Position.assert(sourceFromPos);\n    Position.assert(targetFromPos);\n    Position.assert(targetToPos);\n\n    var targetComparison = comparePos(targetFromPos, targetToPos);\n    if (targetComparison === 0) {\n        // Trivial case: no characters to skip.\n        return sourceFromPos;\n    }\n\n    if (targetComparison < 0) {\n        // Skipping forward.\n\n        var sourceCursor = sourceLines.skipSpaces(sourceFromPos);\n        var targetCursor = targetLines.skipSpaces(targetFromPos);\n\n        var lineDiff = targetToPos.line - targetCursor.line;\n        sourceCursor.line += lineDiff;\n        targetCursor.line += lineDiff;\n\n        if (lineDiff > 0) {\n            // If jumping to later lines, reset columns to the beginnings\n            // of those lines.\n            sourceCursor.column = 0;\n            targetCursor.column = 0;\n        } else {\n            assert.strictEqual(lineDiff, 0);\n        }\n\n        while (comparePos(targetCursor, targetToPos) < 0 &&\n               targetLines.nextPos(targetCursor, true)) {\n            assert.ok(sourceLines.nextPos(sourceCursor, true));\n            assert.strictEqual(\n                sourceLines.charAt(sourceCursor),\n                targetLines.charAt(targetCursor)\n            );\n        }\n\n    } else {\n        // Skipping backward.\n\n        var sourceCursor = sourceLines.skipSpaces(sourceFromPos, true);\n        var targetCursor = targetLines.skipSpaces(targetFromPos, true);\n\n        var lineDiff = targetToPos.line - targetCursor.line;\n        sourceCursor.line += lineDiff;\n        targetCursor.line += lineDiff;\n\n        if (lineDiff < 0) {\n            // If jumping to earlier lines, reset columns to the ends of\n            // those lines.\n            sourceCursor.column = sourceLines.getLineLength(sourceCursor.line);\n            targetCursor.column = targetLines.getLineLength(targetCursor.line);\n        } else {\n            assert.strictEqual(lineDiff, 0);\n        }\n\n        while (comparePos(targetToPos, targetCursor) < 0 &&\n               targetLines.prevPos(targetCursor, true)) {\n            assert.ok(sourceLines.prevPos(sourceCursor, true));\n            assert.strictEqual(\n                sourceLines.charAt(sourceCursor),\n                targetLines.charAt(targetCursor)\n            );\n        }\n    }\n\n    return sourceCursor;\n}\n","var defaults = {\n    // If you want to use a different branch of esprima, or any other\n    // module that supports a .parse function, pass that module object to\n    // recast.parse as options.esprima.\n    esprima: require(\"esprima-fb\"),\n\n    // Number of spaces the pretty-printer should use per tab for\n    // indentation. If you do not pass this option explicitly, it will be\n    // (quite reliably!) inferred from the original code.\n    tabWidth: 4,\n\n    // If you really want the pretty-printer to use tabs instead of\n    // spaces, make this option true.\n    useTabs: false,\n\n    // The reprinting code leaves leading whitespace untouched unless it\n    // has to reindent a line, or you pass false for this option.\n    reuseWhitespace: true,\n\n    // Some of the pretty-printer code (such as that for printing function\n    // parameter lists) makes a valiant attempt to prevent really long\n    // lines. You can adjust the limit by changing this option; however,\n    // there is no guarantee that line length will fit inside this limit.\n    wrapColumn: 74, // Aspirational for now.\n\n    // Pass a string as options.sourceFileName to recast.parse to tell the\n    // reprinter to keep track of reused code so that it can construct a\n    // source map automatically.\n    sourceFileName: null,\n\n    // Pass a string as options.sourceMapName to recast.print, and\n    // (provided you passed options.sourceFileName earlier) the\n    // PrintResult of recast.print will have a .map property for the\n    // generated source map.\n    sourceMapName: null,\n\n    // If provided, this option will be passed along to the source map\n    // generator as a root directory for relative source file paths.\n    sourceRoot: null,\n\n    // If you provide a source map that was generated from a previous call\n    // to recast.print as options.inputSourceMap, the old source map will\n    // be composed with the new source map.\n    inputSourceMap: null,\n\n    // If you want esprima to generate .range information (recast only\n    // uses .loc internally), pass true for this option.\n    range: false,\n\n    // If you want esprima not to throw exceptions when it encounters\n    // non-fatal errors, keep this option true.\n    tolerant: true\n}, hasOwn = defaults.hasOwnProperty;\n\n// Copy options and fill in default values.\nexports.normalize = function(options) {\n    options = options || defaults;\n\n    function get(key) {\n        return hasOwn.call(options, key)\n            ? options[key]\n            : defaults[key];\n    }\n\n    return {\n        tabWidth: +get(\"tabWidth\"),\n        useTabs: !!get(\"useTabs\"),\n        reuseWhitespace: !!get(\"reuseWhitespace\"),\n        wrapColumn: Math.max(get(\"wrapColumn\"), 0),\n        sourceFileName: get(\"sourceFileName\"),\n        sourceMapName: get(\"sourceMapName\"),\n        sourceRoot: get(\"sourceRoot\"),\n        inputSourceMap: get(\"inputSourceMap\"),\n        esprima: get(\"esprima\"),\n        range: get(\"range\"),\n        tolerant: get(\"tolerant\")\n    };\n};\n","var assert = require(\"assert\");\nvar types = require(\"./types\");\nvar n = types.namedTypes;\nvar b = types.builders;\nvar isObject = types.builtInTypes.object;\nvar isArray = types.builtInTypes.array;\nvar isFunction = types.builtInTypes.function;\nvar Patcher = require(\"./patcher\").Patcher;\nvar normalizeOptions = require(\"./options\").normalize;\nvar fromString = require(\"./lines\").fromString;\nvar attachComments = require(\"./comments\").attach;\n\nexports.parse = function parse(source, options) {\n    options = normalizeOptions(options);\n\n    var lines = fromString(source, options);\n\n    var sourceWithoutTabs = lines.toString({\n        tabWidth: options.tabWidth,\n        reuseWhitespace: false,\n        useTabs: false\n    });\n\n    var program = options.esprima.parse(sourceWithoutTabs, {\n        loc: true,\n        range: options.range,\n        comment: true,\n        tolerant: options.tolerant\n    });\n\n    var comments = program.comments;\n    delete program.comments;\n\n    // In order to ensure we reprint leading and trailing program\n    // comments, wrap the original Program node with a File node.\n    var file = b.file(program);\n    file.loc = {\n        lines: lines,\n        indent: 0,\n        start: lines.firstPos(),\n        end: lines.lastPos()\n    };\n\n    // Return a copy of the original AST so that any changes made may be\n    // compared to the original.\n    var copy = new TreeCopier(lines).copy(file);\n\n    // Attach comments to the copy rather than the original.\n    attachComments(comments, copy.program, lines);\n\n    return copy;\n};\n\nfunction TreeCopier(lines) {\n    assert.ok(this instanceof TreeCopier);\n    this.lines = lines;\n    this.indent = 0;\n}\n\nvar TCp = TreeCopier.prototype;\n\nTCp.copy = function(node) {\n    if (isArray.check(node)) {\n        return node.map(this.copy, this);\n    }\n\n    if (!isObject.check(node)) {\n        return node;\n    }\n\n    if ((n.MethodDefinition && n.MethodDefinition.check(node)) ||\n        (n.Property.check(node) && (node.method || node.shorthand))) {\n        // If the node is a MethodDefinition or a .method or .shorthand\n        // Property, then the location information stored in\n        // node.value.loc is very likely untrustworthy (just the {body}\n        // part of a method, or nothing in the case of shorthand\n        // properties), so we null out that information to prevent\n        // accidental reuse of bogus source code during reprinting.\n        node.value.loc = null;\n\n        if (n.FunctionExpression.check(node.value)) {\n            // FunctionExpression method values should be anonymous,\n            // because their .id fields are ignored anyway.\n            node.value.id = null;\n        }\n    }\n\n    var copy = Object.create(Object.getPrototypeOf(node), {\n        original: { // Provide a link from the copy to the original.\n            value: node,\n            configurable: false,\n            enumerable: false,\n            writable: true\n        }\n    });\n\n    var loc = node.loc;\n    var oldIndent = this.indent;\n    var newIndent = oldIndent;\n\n    if (loc) {\n        if (loc.start.line < 1) {\n            loc.start.line = 1;\n        }\n\n        if (loc.end.line < 1) {\n            loc.end.line = 1;\n        }\n\n        if (this.lines.isPrecededOnlyByWhitespace(loc.start)) {\n            newIndent = this.indent = loc.start.column;\n        }\n\n        loc.lines = this.lines;\n        loc.indent = newIndent;\n    }\n\n    var keys = Object.keys(node);\n    var keyCount = keys.length;\n    for (var i = 0; i < keyCount; ++i) {\n        var key = keys[i];\n        if (key === \"loc\") {\n            copy[key] = node[key];\n        } else if (key === \"comments\") {\n            // Handled below.\n        } else {\n            copy[key] = this.copy(node[key]);\n        }\n    }\n\n    this.indent = oldIndent;\n\n    if (node.comments) {\n        Object.defineProperty(copy, \"comments\", {\n            value: node.comments,\n            enumerable: false\n        });\n    }\n\n    return copy;\n};\n","var assert = require(\"assert\");\nvar linesModule = require(\"./lines\");\nvar types = require(\"./types\");\nvar getFieldValue = types.getFieldValue;\nvar Node = types.namedTypes.Node;\nvar Expression = types.namedTypes.Expression;\nvar SourceLocation = types.namedTypes.SourceLocation;\nvar util = require(\"./util\");\nvar comparePos = util.comparePos;\nvar NodePath = types.NodePath;\nvar isObject = types.builtInTypes.object;\nvar isArray = types.builtInTypes.array;\nvar isString = types.builtInTypes.string;\n\nfunction Patcher(lines) {\n    assert.ok(this instanceof Patcher);\n    assert.ok(lines instanceof linesModule.Lines);\n\n    var self = this,\n        replacements = [];\n\n    self.replace = function(loc, lines) {\n        if (isString.check(lines))\n            lines = linesModule.fromString(lines);\n\n        replacements.push({\n            lines: lines,\n            start: loc.start,\n            end: loc.end\n        });\n    };\n\n    self.get = function(loc) {\n        // If no location is provided, return the complete Lines object.\n        loc = loc || {\n            start: { line: 1, column: 0 },\n            end: { line: lines.length,\n                   column: lines.getLineLength(lines.length) }\n        };\n\n        var sliceFrom = loc.start,\n            toConcat = [];\n\n        function pushSlice(from, to) {\n            assert.ok(comparePos(from, to) <= 0);\n            toConcat.push(lines.slice(from, to));\n        }\n\n        replacements.sort(function(a, b) {\n            return comparePos(a.start, b.start);\n        }).forEach(function(rep) {\n            if (comparePos(sliceFrom, rep.start) > 0) {\n                // Ignore nested replacement ranges.\n            } else {\n                pushSlice(sliceFrom, rep.start);\n                toConcat.push(rep.lines);\n                sliceFrom = rep.end;\n            }\n        });\n\n        pushSlice(sliceFrom, loc.end);\n\n        return linesModule.concat(toConcat);\n    };\n}\nexports.Patcher = Patcher;\n\nexports.getReprinter = function(path) {\n    assert.ok(path instanceof NodePath);\n\n    // Make sure that this path refers specifically to a Node, rather than\n    // some non-Node subproperty of a Node.\n    var node = path.value;\n    if (!Node.check(node))\n        return;\n\n    var orig = node.original;\n    var origLoc = orig && orig.loc;\n    var lines = origLoc && origLoc.lines;\n    var reprints = [];\n\n    if (!lines || !findReprints(path, reprints))\n        return;\n\n    return function(print) {\n        var patcher = new Patcher(lines);\n\n        reprints.forEach(function(reprint) {\n            var old = reprint.oldPath.value;\n            SourceLocation.assert(old.loc, true);\n            patcher.replace(\n                old.loc,\n                print(reprint.newPath).indentTail(old.loc.indent)\n            );\n        });\n\n        return patcher.get(origLoc).indentTail(-orig.loc.indent);\n    };\n};\n\nfunction findReprints(newPath, reprints) {\n    var newNode = newPath.value;\n    Node.assert(newNode);\n\n    var oldNode = newNode.original;\n    Node.assert(oldNode);\n\n    assert.deepEqual(reprints, []);\n\n    if (newNode.type !== oldNode.type) {\n        return false;\n    }\n\n    var oldPath = new NodePath(oldNode);\n    var canReprint = findChildReprints(newPath, oldPath, reprints);\n\n    if (!canReprint) {\n        // Make absolutely sure the calling code does not attempt to reprint\n        // any nodes.\n        reprints.length = 0;\n    }\n\n    return canReprint;\n}\n\nfunction findAnyReprints(newPath, oldPath, reprints) {\n    var newNode = newPath.value;\n    var oldNode = oldPath.value;\n\n    if (newNode === oldNode)\n        return true;\n\n    if (isArray.check(newNode))\n        return findArrayReprints(newPath, oldPath, reprints);\n\n    if (isObject.check(newNode))\n        return findObjectReprints(newPath, oldPath, reprints);\n\n    return false;\n}\n\nfunction findArrayReprints(newPath, oldPath, reprints) {\n    var newNode = newPath.value;\n    var oldNode = oldPath.value;\n    isArray.assert(newNode);\n    var len = newNode.length;\n\n    if (!(isArray.check(oldNode) &&\n          oldNode.length === len))\n        return false;\n\n    for (var i = 0; i < len; ++i)\n        if (!findAnyReprints(newPath.get(i), oldPath.get(i), reprints))\n            return false;\n\n    return true;\n}\n\nfunction findObjectReprints(newPath, oldPath, reprints) {\n    var newNode = newPath.value;\n    isObject.assert(newNode);\n\n    if (newNode.original === null) {\n        // If newNode.original node was set to null, reprint the node.\n        return false;\n    }\n\n    var oldNode = oldPath.value;\n    if (!isObject.check(oldNode))\n        return false;\n\n    if (Node.check(newNode)) {\n        if (!Node.check(oldNode)) {\n            return false;\n        }\n\n        if (!oldNode.loc) {\n            // If we have no .loc information for oldNode, then we won't\n            // be able to reprint it.\n            return false;\n        }\n\n        // Here we need to decide whether the reprinted code for newNode\n        // is appropriate for patching into the location of oldNode.\n\n        if (newNode.type === oldNode.type) {\n            var childReprints = [];\n\n            if (findChildReprints(newPath, oldPath, childReprints)) {\n                reprints.push.apply(reprints, childReprints);\n            } else {\n                reprints.push({\n                    newPath: newPath,\n                    oldPath: oldPath\n                });\n            }\n\n            return true;\n        }\n\n        if (Expression.check(newNode) &&\n            Expression.check(oldNode)) {\n\n            // If both nodes are subtypes of Expression, then we should be\n            // able to fill the location occupied by the old node with\n            // code printed for the new node with no ill consequences.\n            reprints.push({\n                newPath: newPath,\n                oldPath: oldPath\n            });\n\n            return true;\n        }\n\n        // The nodes have different types, and at least one of the types\n        // is not a subtype of the Expression type, so we cannot safely\n        // assume the nodes are syntactically interchangeable.\n        return false;\n    }\n\n    return findChildReprints(newPath, oldPath, reprints);\n}\n\n// This object is reused in hasOpeningParen and hasClosingParen to avoid\n// having to allocate a temporary object.\nvar reusablePos = { line: 1, column: 0 };\n\nfunction hasOpeningParen(oldPath) {\n    var oldNode = oldPath.value;\n    var loc = oldNode.loc;\n    var lines = loc && loc.lines;\n\n    if (lines) {\n        var pos = reusablePos;\n        pos.line = loc.start.line;\n        pos.column = loc.start.column;\n\n        while (lines.prevPos(pos)) {\n            var ch = lines.charAt(pos);\n\n            if (ch === \"(\") {\n                var rootPath = oldPath;\n                while (rootPath.parentPath)\n                    rootPath = rootPath.parentPath;\n\n                // If we found an opening parenthesis but it occurred before\n                // the start of the original subtree for this reprinting, then\n                // we must not return true for hasOpeningParen(oldPath).\n                return comparePos(rootPath.value.loc.start, pos) <= 0;\n            }\n\n            if (ch !== \" \") {\n                return false;\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction hasClosingParen(oldPath) {\n    var oldNode = oldPath.value;\n    var loc = oldNode.loc;\n    var lines = loc && loc.lines;\n\n    if (lines) {\n        var pos = reusablePos;\n        pos.line = loc.end.line;\n        pos.column = loc.end.column;\n\n        do {\n            var ch = lines.charAt(pos);\n\n            if (ch === \")\") {\n                var rootPath = oldPath;\n                while (rootPath.parentPath)\n                    rootPath = rootPath.parentPath;\n\n                // If we found a closing parenthesis but it occurred after the\n                // end of the original subtree for this reprinting, then we\n                // must not return true for hasClosingParen(oldPath).\n                return comparePos(pos, rootPath.value.loc.end) <= 0;\n            }\n\n            if (ch !== \" \") {\n                return false;\n            }\n\n        } while (lines.nextPos(pos));\n    }\n\n    return false;\n}\n\nfunction hasParens(oldPath) {\n    // This logic can technically be fooled if the node has parentheses\n    // but there are comments intervening between the parentheses and the\n    // node. In such cases the node will be harmlessly wrapped in an\n    // additional layer of parentheses.\n    return hasOpeningParen(oldPath) && hasClosingParen(oldPath);\n}\n\nfunction findChildReprints(newPath, oldPath, reprints) {\n    var newNode = newPath.value;\n    var oldNode = oldPath.value;\n\n    isObject.assert(newNode);\n    isObject.assert(oldNode);\n\n    if (newNode.original === null) {\n        // If newNode.original node was set to null, reprint the node.\n        return false;\n    }\n\n    // If this type of node cannot come lexically first in its enclosing\n    // statement (e.g. a function expression or object literal), and it\n    // seems to be doing so, then the only way we can ignore this problem\n    // and save ourselves from falling back to the pretty printer is if an\n    // opening parenthesis happens to precede the node.  For example,\n    // (function(){ ... }()); does not need to be reprinted, even though\n    // the FunctionExpression comes lexically first in the enclosing\n    // ExpressionStatement and fails the hasParens test, because the\n    // parent CallExpression passes the hasParens test. If we relied on\n    // the path.needsParens() && !hasParens(oldNode) check below, the\n    // absence of a closing parenthesis after the FunctionExpression would\n    // trigger pretty-printing unnecessarily.\n    if (!newPath.canBeFirstInStatement() &&\n        newPath.firstInStatement() &&\n        !hasOpeningParen(oldPath))\n        return false;\n\n    // If this node needs parentheses and will not be wrapped with\n    // parentheses when reprinted, then return false to skip reprinting\n    // and let it be printed generically.\n    if (newPath.needsParens(true) && !hasParens(oldPath)) {\n        return false;\n    }\n\n    for (var k in util.getUnionOfKeys(newNode, oldNode)) {\n        if (k === \"loc\")\n            continue;\n\n        if (!findAnyReprints(newPath.get(k), oldPath.get(k), reprints))\n            return false;\n    }\n\n    return true;\n}\n","var assert = require(\"assert\");\nvar sourceMap = require(\"source-map\");\nvar printComments = require(\"./comments\").printComments;\nvar linesModule = require(\"./lines\");\nvar fromString = linesModule.fromString;\nvar concat = linesModule.concat;\nvar normalizeOptions = require(\"./options\").normalize;\nvar getReprinter = require(\"./patcher\").getReprinter;\nvar types = require(\"./types\");\nvar namedTypes = types.namedTypes;\nvar isString = types.builtInTypes.string;\nvar isObject = types.builtInTypes.object;\nvar NodePath = types.NodePath;\nvar util = require(\"./util\");\n\nfunction PrintResult(code, sourceMap) {\n    assert.ok(this instanceof PrintResult);\n\n    isString.assert(code);\n    this.code = code;\n\n    if (sourceMap) {\n        isObject.assert(sourceMap);\n        this.map = sourceMap;\n    }\n}\n\nvar PRp = PrintResult.prototype;\nvar warnedAboutToString = false;\n\nPRp.toString = function() {\n    if (!warnedAboutToString) {\n        console.warn(\n            \"Deprecation warning: recast.print now returns an object with \" +\n            \"a .code property. You appear to be treating the object as a \" +\n            \"string, which might still work but is strongly discouraged.\"\n        );\n\n        warnedAboutToString = true;\n    }\n\n    return this.code;\n};\n\nvar emptyPrintResult = new PrintResult(\"\");\n\nfunction Printer(originalOptions) {\n    assert.ok(this instanceof Printer);\n\n    var explicitTabWidth = originalOptions && originalOptions.tabWidth;\n    var options = normalizeOptions(originalOptions);\n    assert.notStrictEqual(options, originalOptions);\n\n    // It's common for client code to pass the same options into both\n    // recast.parse and recast.print, but the Printer doesn't need (and\n    // can be confused by) options.sourceFileName, so we null it out.\n    options.sourceFileName = null;\n\n    function printWithComments(path) {\n        assert.ok(path instanceof NodePath);\n        return printComments(path.node.comments, print(path), options);\n    }\n\n    function print(path, includeComments) {\n        if (includeComments)\n            return printWithComments(path);\n\n        assert.ok(path instanceof NodePath);\n\n        if (!explicitTabWidth) {\n            var oldTabWidth = options.tabWidth;\n            var loc = path.node.loc;\n            if (loc && loc.lines && loc.lines.guessTabWidth) {\n                options.tabWidth = loc.lines.guessTabWidth();\n                var lines = maybeReprint(path);\n                options.tabWidth = oldTabWidth;\n                return lines;\n            }\n        }\n\n        return maybeReprint(path);\n    }\n\n    function maybeReprint(path) {\n        var reprinter = getReprinter(path);\n        if (reprinter)\n            return maybeAddParens(path, reprinter(maybeReprint));\n        return printRootGenerically(path);\n    }\n\n    // Print the root node generically, but then resume reprinting its\n    // children non-generically.\n    function printRootGenerically(path) {\n        return genericPrint(path, options, printWithComments);\n    }\n\n    // Print the entire AST generically.\n    function printGenerically(path) {\n        return genericPrint(path, options, printGenerically);\n    }\n\n    this.print = function(ast) {\n        if (!ast) {\n            return emptyPrintResult;\n        }\n\n        var path = ast instanceof NodePath ? ast : new NodePath(ast);\n        var lines = print(path, true);\n\n        return new PrintResult(\n            lines.toString(options),\n            util.composeSourceMaps(\n                options.inputSourceMap,\n                lines.getSourceMap(\n                    options.sourceMapName,\n                    options.sourceRoot\n                )\n            )\n        );\n    };\n\n    this.printGenerically = function(ast) {\n        if (!ast) {\n            return emptyPrintResult;\n        }\n\n        var path = ast instanceof NodePath ? ast : new NodePath(ast);\n        var oldReuseWhitespace = options.reuseWhitespace;\n\n        // Do not reuse whitespace (or anything else, for that matter)\n        // when printing generically.\n        options.reuseWhitespace = false;\n        var pr = new PrintResult(printGenerically(path).toString(options));\n        options.reuseWhitespace = oldReuseWhitespace;\n        return pr;\n    };\n}\n\nexports.Printer = Printer;\n\nfunction maybeAddParens(path, lines) {\n    return path.needsParens() ? concat([\"(\", lines, \")\"]) : lines;\n}\n\nfunction genericPrint(path, options, printPath) {\n    assert.ok(path instanceof NodePath);\n    return maybeAddParens(path, genericPrintNoParens(path, options, printPath));\n}\n\nfunction genericPrintNoParens(path, options, print) {\n    var n = path.value;\n\n    if (!n) {\n        return fromString(\"\");\n    }\n\n    if (typeof n === \"string\") {\n        return fromString(n, options);\n    }\n\n    namedTypes.Node.assert(n);\n\n    switch (n.type) {\n    case \"File\":\n        path = path.get(\"program\");\n        n = path.node;\n        namedTypes.Program.assert(n);\n\n        // intentionally fall through...\n\n    case \"Program\":\n        return maybeAddSemicolon(\n            printStatementSequence(path.get(\"body\"), options, print)\n        );\n\n    case \"EmptyStatement\":\n        return fromString(\"\");\n\n    case \"ExpressionStatement\":\n        return concat([print(path.get(\"expression\")), \";\"]);\n\n    case \"BinaryExpression\":\n    case \"LogicalExpression\":\n    case \"AssignmentExpression\":\n        return fromString(\" \").join([\n            print(path.get(\"left\")),\n            n.operator,\n            print(path.get(\"right\"))\n        ]);\n\n    case \"MemberExpression\":\n        var parts = [print(path.get(\"object\"))];\n\n        if (n.computed)\n            parts.push(\"[\", print(path.get(\"property\")), \"]\");\n        else\n            parts.push(\".\", print(path.get(\"property\")));\n\n        return concat(parts);\n\n    case \"Path\":\n        return fromString(\".\").join(n.body);\n\n    case \"Identifier\":\n        return fromString(n.name, options);\n\n    case \"SpreadElement\":\n    case \"SpreadElementPattern\":\n    case \"SpreadProperty\":\n    case \"SpreadPropertyPattern\":\n        return concat([\"...\", print(path.get(\"argument\"))]);\n\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n        var parts = [];\n\n        if (n.async)\n            parts.push(\"async \");\n\n        parts.push(\"function\");\n\n        if (n.generator)\n            parts.push(\"*\");\n\n        if (n.id)\n            parts.push(\" \", print(path.get(\"id\")));\n\n        parts.push(\n            \"(\",\n            printFunctionParams(path, options, print),\n            \") \",\n            print(path.get(\"body\")));\n\n        return concat(parts);\n\n    case \"ArrowFunctionExpression\":\n        var parts = [];\n\n        if (n.async)\n            parts.push(\"async \");\n\n        if (n.params.length === 1) {\n            parts.push(print(path.get(\"params\", 0)));\n        } else {\n            parts.push(\n                \"(\",\n                printFunctionParams(path, options, print),\n                \")\"\n            );\n        }\n\n        parts.push(\" => \", print(path.get(\"body\")));\n\n        return concat(parts);\n\n    case \"MethodDefinition\":\n        var parts = [];\n\n        if (n.static) {\n            parts.push(\"static \");\n        }\n\n        parts.push(printMethod(\n            n.kind,\n            path.get(\"key\"),\n            path.get(\"value\"),\n            options,\n            print\n        ));\n\n        return concat(parts);\n\n    case \"YieldExpression\":\n        var parts = [\"yield\"];\n\n        if (n.delegate)\n            parts.push(\"*\");\n\n        if (n.argument)\n            parts.push(\" \", print(path.get(\"argument\")));\n\n        return concat(parts);\n\n    case \"AwaitExpression\":\n        var parts = [\"await\"];\n\n        if (n.all)\n            parts.push(\"*\");\n\n        if (n.argument)\n            parts.push(\" \", print(path.get(\"argument\")));\n\n        return concat(parts);\n\n    case \"ModuleDeclaration\":\n        var parts = [\"module\", print(path.get(\"id\"))];\n\n        if (n.source) {\n            assert.ok(!n.body);\n            parts.push(\"from\", print(path.get(\"source\")));\n        } else {\n            parts.push(print(path.get(\"body\")));\n        }\n\n        return fromString(\" \").join(parts);\n\n    case \"ImportSpecifier\":\n    case \"ExportSpecifier\":\n        var parts = [print(path.get(\"id\"))];\n\n        if (n.name)\n            parts.push(\" as \", print(path.get(\"name\")));\n\n        return concat(parts);\n\n    case \"ExportBatchSpecifier\":\n        return fromString(\"*\");\n\n    case \"ImportNamespaceSpecifier\":\n        return concat([\"* as \", print(path.get(\"id\"))]);\n\n    case \"ImportDefaultSpecifier\":\n        return print(path.get(\"id\"));\n\n    case \"ExportDeclaration\":\n        var parts = [\"export\"];\n\n        if (n[\"default\"]) {\n            parts.push(\" default\");\n\n        } else if (n.specifiers &&\n                   n.specifiers.length > 0) {\n\n            if (n.specifiers.length === 1 &&\n                n.specifiers[0].type === \"ExportBatchSpecifier\") {\n                parts.push(\" *\");\n            } else {\n                parts.push(\n                    \" { \",\n                    fromString(\", \").join(path.get(\"specifiers\").map(print)),\n                    \" }\"\n                );\n            }\n\n            if (n.source)\n                parts.push(\" from \", print(path.get(\"source\")));\n\n            parts.push(\";\");\n\n            return concat(parts);\n        }\n\n        if (n.declaration) {\n            if (!namedTypes.Node.check(n.declaration)) {\n                console.log(JSON.stringify(n, null, 2));\n            }\n            var decLines = print(path.get(\"declaration\"));\n            parts.push(\" \", decLines);\n            if (lastNonSpaceCharacter(decLines) !== \";\") {\n                parts.push(\";\");\n            }\n        }\n\n        return concat(parts);\n\n    case \"ImportDeclaration\":\n        var parts = [\"import \"];\n\n        if (n.specifiers &&\n            n.specifiers.length > 0) {\n\n            var foundImportSpecifier = false;\n\n            path.get(\"specifiers\").each(function(sp) {\n                if (sp.name > 0) {\n                    parts.push(\", \");\n                }\n\n                if (namedTypes.ImportDefaultSpecifier.check(sp.value) ||\n                    namedTypes.ImportNamespaceSpecifier.check(sp.value)) {\n                    assert.strictEqual(foundImportSpecifier, false);\n                } else {\n                    namedTypes.ImportSpecifier.assert(sp.value);\n                    if (!foundImportSpecifier) {\n                        foundImportSpecifier = true;\n                        parts.push(\"{\");\n                    }\n                }\n\n                parts.push(print(sp));\n            });\n\n            if (foundImportSpecifier) {\n                parts.push(\"}\");\n            }\n\n            parts.push(\" from \");\n        }\n\n        parts.push(print(path.get(\"source\")), \";\");\n\n        return concat(parts);\n\n    case \"BlockStatement\":\n        var naked = printStatementSequence(path.get(\"body\"), options, print);\n        if (naked.isEmpty())\n            return fromString(\"{}\");\n\n        return concat([\n            \"{\\n\",\n            naked.indent(options.tabWidth),\n            \"\\n}\"\n        ]);\n\n    case \"ReturnStatement\":\n        var parts = [\"return\"];\n\n        if (n.argument) {\n            var argLines = print(path.get(\"argument\"));\n            if (argLines.length > 1 &&\n                namedTypes.XJSElement &&\n                namedTypes.XJSElement.check(n.argument)) {\n                parts.push(\n                    \" (\\n\",\n                    argLines.indent(options.tabWidth),\n                    \"\\n)\"\n                );\n            } else {\n                parts.push(\" \", argLines);\n            }\n        }\n\n        parts.push(\";\");\n\n        return concat(parts);\n\n    case \"CallExpression\":\n        return concat([\n            print(path.get(\"callee\")),\n            printArgumentsList(path, options, print)\n        ]);\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n        var allowBreak = false,\n            len = n.properties.length,\n            parts = [len > 0 ? \"{\\n\" : \"{\"];\n\n        path.get(\"properties\").map(function(childPath) {\n            var prop = childPath.value;\n            var i = childPath.name;\n\n            var lines = print(childPath).indent(options.tabWidth);\n\n            var multiLine = lines.length > 1;\n            if (multiLine && allowBreak) {\n                // Similar to the logic for BlockStatement.\n                parts.push(\"\\n\");\n            }\n\n            parts.push(lines);\n\n            if (i < len - 1) {\n                // Add an extra line break if the previous object property\n                // had a multi-line value.\n                parts.push(multiLine ? \",\\n\\n\" : \",\\n\");\n                allowBreak = !multiLine;\n            }\n        });\n\n        parts.push(len > 0 ? \"\\n}\" : \"}\");\n\n        return concat(parts);\n\n    case \"PropertyPattern\":\n        return concat([\n            print(path.get(\"key\")),\n            \": \",\n            print(path.get(\"pattern\"))\n        ]);\n\n    case \"Property\": // Non-standard AST node type.\n        if (n.method || n.kind === \"get\" || n.kind === \"set\") {\n            return printMethod(\n                n.kind,\n                path.get(\"key\"),\n                path.get(\"value\"),\n                options,\n                print\n            );\n        }\n\n        if (path.node.shorthand) {\n            return print(path.get(\"key\"));\n        } else {\n            return concat([\n                print(path.get(\"key\")),\n                \": \",\n                print(path.get(\"value\"))\n            ]);\n        }\n\n    case \"ArrayExpression\":\n    case \"ArrayPattern\":\n        var elems = n.elements,\n            len = elems.length,\n            parts = [\"[\"];\n\n        path.get(\"elements\").each(function(elemPath) {\n            var elem = elemPath.value;\n            if (!elem) {\n                // If the array expression ends with a hole, that hole\n                // will be ignored by the interpreter, but if it ends with\n                // two (or more) holes, we need to write out two (or more)\n                // commas so that the resulting code is interpreted with\n                // both (all) of the holes.\n                parts.push(\",\");\n            } else {\n                var i = elemPath.name;\n                if (i > 0)\n                    parts.push(\" \");\n                parts.push(print(elemPath));\n                if (i < len - 1)\n                    parts.push(\",\");\n            }\n        });\n\n        parts.push(\"]\");\n\n        return concat(parts);\n\n    case \"SequenceExpression\":\n        return fromString(\", \").join(path.get(\"expressions\").map(print));\n\n    case \"ThisExpression\":\n        return fromString(\"this\");\n\n    case \"Literal\":\n        if (typeof n.value !== \"string\")\n            return fromString(n.value, options);\n\n        // intentionally fall through...\n\n    case \"ModuleSpecifier\":\n        // A ModuleSpecifier is a string-valued Literal.\n        return fromString(nodeStr(n), options);\n\n    case \"UnaryExpression\":\n        var parts = [n.operator];\n        if (/[a-z]$/.test(n.operator))\n            parts.push(\" \");\n        parts.push(print(path.get(\"argument\")));\n        return concat(parts);\n\n    case \"UpdateExpression\":\n        var parts = [\n            print(path.get(\"argument\")),\n            n.operator\n        ];\n\n        if (n.prefix)\n            parts.reverse();\n\n        return concat(parts);\n\n    case \"ConditionalExpression\":\n        return concat([\n            \"(\", print(path.get(\"test\")),\n            \" ? \", print(path.get(\"consequent\")),\n            \" : \", print(path.get(\"alternate\")), \")\"\n        ]);\n\n    case \"NewExpression\":\n        var parts = [\"new \", print(path.get(\"callee\"))];\n        var args = n.arguments;\n        if (args) {\n            parts.push(printArgumentsList(path, options, print));\n        }\n\n        return concat(parts);\n\n    case \"VariableDeclaration\":\n        var parts = [n.kind, \" \"];\n        var maxLen = 0;\n        var printed = path.get(\"declarations\").map(function(childPath) {\n            var lines = print(childPath);\n            maxLen = Math.max(lines.length, maxLen);\n            return lines;\n        });\n\n        if (maxLen === 1) {\n            parts.push(fromString(\", \").join(printed));\n        } else if (printed.length > 1 ) {\n            parts.push(\n                fromString(\",\\n\").join(printed)\n                    .indentTail(n.kind.length + 1)\n            );\n        } else {\n            parts.push(printed[0]);\n        }\n\n        // We generally want to terminate all variable declarations with a\n        // semicolon, except when they are children of for loops.\n        var parentNode = path.parent && path.parent.node;\n        if (!namedTypes.ForStatement.check(parentNode) &&\n            !namedTypes.ForInStatement.check(parentNode) &&\n            !(namedTypes.ForOfStatement &&\n              namedTypes.ForOfStatement.check(parentNode))) {\n            parts.push(\";\");\n        }\n\n        return concat(parts);\n\n    case \"VariableDeclarator\":\n        return n.init ? fromString(\" = \").join([\n            print(path.get(\"id\")),\n            print(path.get(\"init\"))\n        ]) : print(path.get(\"id\"));\n\n    case \"WithStatement\":\n        return concat([\n            \"with (\",\n            print(path.get(\"object\")),\n            \") \",\n            print(path.get(\"body\"))\n        ]);\n\n    case \"IfStatement\":\n        var con = adjustClause(print(path.get(\"consequent\")), options),\n            parts = [\"if (\", print(path.get(\"test\")), \")\", con];\n\n        if (n.alternate)\n            parts.push(\n                endsWithBrace(con) ? \" else\" : \"\\nelse\",\n                adjustClause(print(path.get(\"alternate\")), options));\n\n        return concat(parts);\n\n    case \"ForStatement\":\n        // TODO Get the for (;;) case right.\n        var init = print(path.get(\"init\")),\n            sep = init.length > 1 ? \";\\n\" : \"; \",\n            forParen = \"for (\",\n            indented = fromString(sep).join([\n                init,\n                print(path.get(\"test\")),\n                print(path.get(\"update\"))\n            ]).indentTail(forParen.length),\n            head = concat([forParen, indented, \")\"]),\n            clause = adjustClause(print(path.get(\"body\")), options),\n            parts = [head];\n\n        if (head.length > 1) {\n            parts.push(\"\\n\");\n            clause = clause.trimLeft();\n        }\n\n        parts.push(clause);\n\n        return concat(parts);\n\n    case \"WhileStatement\":\n        return concat([\n            \"while (\",\n            print(path.get(\"test\")),\n            \")\",\n            adjustClause(print(path.get(\"body\")), options)\n        ]);\n\n    case \"ForInStatement\":\n        // Note: esprima can't actually parse \"for each (\".\n        return concat([\n            n.each ? \"for each (\" : \"for (\",\n            print(path.get(\"left\")),\n            \" in \",\n            print(path.get(\"right\")),\n            \")\",\n            adjustClause(print(path.get(\"body\")), options)\n        ]);\n\n    case \"ForOfStatement\":\n        return concat([\n            \"for (\",\n            print(path.get(\"left\")),\n            \" of \",\n            print(path.get(\"right\")),\n            \")\",\n            adjustClause(print(path.get(\"body\")), options)\n        ]);\n\n    case \"DoWhileStatement\":\n        var doBody = concat([\n            \"do\",\n            adjustClause(print(path.get(\"body\")), options)\n        ]), parts = [doBody];\n\n        if (endsWithBrace(doBody))\n            parts.push(\" while\");\n        else\n            parts.push(\"\\nwhile\");\n\n        parts.push(\" (\", print(path.get(\"test\")), \");\");\n\n        return concat(parts);\n\n    case \"BreakStatement\":\n        var parts = [\"break\"];\n        if (n.label)\n            parts.push(\" \", print(path.get(\"label\")));\n        parts.push(\";\");\n        return concat(parts);\n\n    case \"ContinueStatement\":\n        var parts = [\"continue\"];\n        if (n.label)\n            parts.push(\" \", print(path.get(\"label\")));\n        parts.push(\";\");\n        return concat(parts);\n\n    case \"LabeledStatement\":\n        return concat([\n            print(path.get(\"label\")),\n            \":\\n\",\n            print(path.get(\"body\"))\n        ]);\n\n    case \"TryStatement\":\n        var parts = [\n            \"try \",\n            print(path.get(\"block\"))\n        ];\n\n        path.get(\"handlers\").each(function(handler) {\n            parts.push(\" \", print(handler));\n        });\n\n        if (n.finalizer)\n            parts.push(\" finally \", print(path.get(\"finalizer\")));\n\n        return concat(parts);\n\n    case \"CatchClause\":\n        var parts = [\"catch (\", print(path.get(\"param\"))];\n\n        if (n.guard)\n            // Note: esprima does not recognize conditional catch clauses.\n            parts.push(\" if \", print(path.get(\"guard\")));\n\n        parts.push(\") \", print(path.get(\"body\")));\n\n        return concat(parts);\n\n    case \"ThrowStatement\":\n        return concat([\n            \"throw \",\n            print(path.get(\"argument\")),\n            \";\"\n        ]);\n\n    case \"SwitchStatement\":\n        return concat([\n            \"switch (\",\n            print(path.get(\"discriminant\")),\n            \") {\\n\",\n            fromString(\"\\n\").join(path.get(\"cases\").map(print)),\n            \"\\n}\"\n        ]);\n\n        // Note: ignoring n.lexical because it has no printing consequences.\n\n    case \"SwitchCase\":\n        var parts = [];\n\n        if (n.test)\n            parts.push(\"case \", print(path.get(\"test\")), \":\");\n        else\n            parts.push(\"default:\");\n\n        if (n.consequent.length > 0) {\n            parts.push(\"\\n\", printStatementSequence(\n                path.get(\"consequent\"),\n                options,\n                print\n            ).indent(options.tabWidth));\n        }\n\n        return concat(parts);\n\n    case \"DebuggerStatement\":\n        return fromString(\"debugger;\");\n\n    // XJS extensions below.\n\n    case \"XJSAttribute\":\n        var parts = [print(path.get(\"name\"))];\n        if (n.value)\n            parts.push(\"=\", print(path.get(\"value\")));\n        return concat(parts);\n\n    case \"XJSIdentifier\":\n        return fromString(n.name, options);\n\n    case \"XJSNamespacedName\":\n        return fromString(\":\").join([\n            print(path.get(\"namespace\")),\n            print(path.get(\"name\"))\n        ]);\n\n    case \"XJSMemberExpression\":\n        return fromString(\".\").join([\n            print(path.get(\"object\")),\n            print(path.get(\"property\"))\n        ]);\n\n    case \"XJSSpreadAttribute\":\n        return concat([\"{...\", print(path.get(\"argument\")), \"}\"]);\n\n    case \"XJSExpressionContainer\":\n        return concat([\"{\", print(path.get(\"expression\")), \"}\"]);\n\n    case \"XJSElement\":\n        var openingLines = print(path.get(\"openingElement\"));\n\n        if (n.openingElement.selfClosing) {\n            assert.ok(!n.closingElement);\n            return openingLines;\n        }\n\n        var childLines = concat(\n            path.get(\"children\").map(function(childPath) {\n                var child = childPath.value;\n\n                if (namedTypes.Literal.check(child) &&\n                    typeof child.value === \"string\") {\n                    if (/\\S/.test(child.value)) {\n                        return child.value.replace(/^\\s+|\\s+$/g, \"\");\n                    } else if (/\\n/.test(child.value)) {\n                        return \"\\n\";\n                    }\n                }\n\n                return print(childPath);\n            })\n        ).indentTail(options.tabWidth);\n\n        var closingLines = print(path.get(\"closingElement\"));\n\n        return concat([\n            openingLines,\n            childLines,\n            closingLines\n        ]);\n\n    case \"XJSOpeningElement\":\n        var parts = [\"<\", print(path.get(\"name\"))];\n        var attrParts = [];\n\n        path.get(\"attributes\").each(function(attrPath) {\n            attrParts.push(\" \", print(attrPath));\n        });\n\n        var attrLines = concat(attrParts);\n\n        var needLineWrap = (\n            attrLines.length > 1 ||\n            attrLines.getLineLength(1) > options.wrapColumn\n        );\n\n        if (needLineWrap) {\n            attrParts.forEach(function(part, i) {\n                if (part === \" \") {\n                    assert.strictEqual(i % 2, 0);\n                    attrParts[i] = \"\\n\";\n                }\n            });\n\n            attrLines = concat(attrParts).indentTail(options.tabWidth);\n        }\n\n        parts.push(attrLines, n.selfClosing ? \" />\" : \">\");\n\n        return concat(parts);\n\n    case \"XJSClosingElement\":\n        return concat([\"</\", print(path.get(\"name\")), \">\"]);\n\n    case \"XJSText\":\n        return fromString(n.value, options);\n\n    case \"XJSEmptyExpression\":\n        return fromString(\"\");\n\n    case \"TypeAnnotatedIdentifier\":\n        var parts = [\n            print(path.get(\"annotation\")),\n            \" \",\n            print(path.get(\"identifier\"))\n        ];\n\n        return concat(parts);\n\n    case \"ClassBody\":\n        if (n.body.length === 0) {\n            return fromString(\"{}\");\n        }\n\n        return concat([\n            \"{\\n\",\n            printStatementSequence(path.get(\"body\"), options, print)\n                .indent(options.tabWidth),\n            \"\\n}\"\n        ]);\n\n    case \"ClassPropertyDefinition\":\n        var parts = [\"static \", print(path.get(\"definition\"))];\n        if (!namedTypes.MethodDefinition.check(n.definition))\n            parts.push(\";\");\n        return concat(parts);\n\n    case \"ClassProperty\":\n        return concat([print(path.get(\"id\")), \";\"]);\n\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n        var parts = [\"class\"];\n\n        if (n.id)\n            parts.push(\" \", print(path.get(\"id\")));\n\n        if (n.superClass)\n            parts.push(\" extends \", print(path.get(\"superClass\")));\n\n        parts.push(\" \", print(path.get(\"body\")));\n\n        return concat(parts);\n\n    // These types are unprintable because they serve as abstract\n    // supertypes for other (printable) types.\n    case \"Node\":\n    case \"Printable\":\n    case \"SourceLocation\":\n    case \"Position\":\n    case \"Statement\":\n    case \"Function\":\n    case \"Pattern\":\n    case \"Expression\":\n    case \"Declaration\":\n    case \"Specifier\":\n    case \"NamedSpecifier\":\n    case \"Block\": // Block comment.\n    case \"Line\": // Line comment.\n        throw new Error(\"unprintable type: \" + JSON.stringify(n.type));\n\n    // Unhandled types below. If encountered, nodes of these types should\n    // be either left alone or desugared into AST types that are fully\n    // supported by the pretty-printer.\n\n    case \"ClassHeritage\": // TODO\n    case \"ComprehensionBlock\": // TODO\n    case \"ComprehensionExpression\": // TODO\n    case \"Glob\": // TODO\n    case \"TaggedTemplateExpression\": // TODO\n    case \"TemplateElement\": // TODO\n    case \"TemplateLiteral\": // TODO\n    case \"GeneratorExpression\": // TODO\n    case \"LetStatement\": // TODO\n    case \"LetExpression\": // TODO\n    case \"GraphExpression\": // TODO\n    case \"GraphIndexExpression\": // TODO\n\n    // Type Annotations for Facebook Flow, typically stripped out or\n    // transformed away before printing.\n    case \"AnyTypeAnnotation\": // TODO\n    case \"BooleanTypeAnnotation\": // TODO\n    case \"ClassImplements\": // TODO\n    case \"DeclareClass\": // TODO\n    case \"DeclareFunction\": // TODO\n    case \"DeclareModule\": // TODO\n    case \"DeclareVariable\": // TODO\n    case \"FunctionTypeAnnotation\": // TODO\n    case \"FunctionTypeParam\": // TODO\n    case \"GenericTypeAnnotation\": // TODO\n    case \"InterfaceDeclaration\": // TODO\n    case \"InterfaceExtends\": // TODO\n    case \"IntersectionTypeAnnotation\": // TODO\n    case \"MemberTypeAnnotation\": // TODO\n    case \"NullableTypeAnnotation\": // TODO\n    case \"NumberTypeAnnotation\": // TODO\n    case \"ObjectTypeAnnotation\": // TODO\n    case \"ObjectTypeCallProperty\": // TODO\n    case \"ObjectTypeIndexer\": // TODO\n    case \"ObjectTypeProperty\": // TODO\n    case \"QualifiedTypeIdentifier\": // TODO\n    case \"StringLiteralTypeAnnotation\": // TODO\n    case \"StringTypeAnnotation\": // TODO\n    case \"TupleTypeAnnotation\": // TODO\n    case \"Type\": // TODO\n    case \"TypeAlias\": // TODO\n    case \"TypeAnnotation\": // TODO\n    case \"TypeParameterDeclaration\": // TODO\n    case \"TypeParameterInstantiation\": // TODO\n    case \"TypeofTypeAnnotation\": // TODO\n    case \"UnionTypeAnnotation\": // TODO\n    case \"VoidTypeAnnotation\": // TODO\n\n    // XML types that nobody cares about or needs to print.\n    case \"XMLDefaultDeclaration\":\n    case \"XMLAnyName\":\n    case \"XMLQualifiedIdentifier\":\n    case \"XMLFunctionQualifiedIdentifier\":\n    case \"XMLAttributeSelector\":\n    case \"XMLFilterExpression\":\n    case \"XML\":\n    case \"XMLElement\":\n    case \"XMLList\":\n    case \"XMLEscape\":\n    case \"XMLText\":\n    case \"XMLStartTag\":\n    case \"XMLEndTag\":\n    case \"XMLPointTag\":\n    case \"XMLName\":\n    case \"XMLAttribute\":\n    case \"XMLCdata\":\n    case \"XMLComment\":\n    case \"XMLProcessingInstruction\":\n    default:\n        debugger;\n        throw new Error(\"unknown type: \" + JSON.stringify(n.type));\n    }\n\n    return p;\n}\n\nfunction printStatementSequence(path, options, print) {\n    var inClassBody = path.parent &&\n        namedTypes.ClassBody &&\n        namedTypes.ClassBody.check(path.parent.node);\n\n    var filtered = path.filter(function(stmtPath) {\n        var stmt = stmtPath.value;\n\n        // Just in case the AST has been modified to contain falsy\n        // \"statements,\" it's safer simply to skip them.\n        if (!stmt)\n            return false;\n\n        // Skip printing EmptyStatement nodes to avoid leaving stray\n        // semicolons lying around.\n        if (stmt.type === \"EmptyStatement\")\n            return false;\n\n        if (!inClassBody) {\n            namedTypes.Statement.assert(stmt);\n        }\n\n        return true;\n    });\n\n    var prevTrailingSpace = null;\n    var len = filtered.length;\n    var parts = [];\n\n    filtered.forEach(function(stmtPath, i) {\n        var printed = print(stmtPath);\n        var stmt = stmtPath.value;\n        var needSemicolon = true;\n        var multiLine = printed.length > 1;\n        var notFirst = i > 0;\n        var notLast = i < len - 1;\n        var leadingSpace;\n        var trailingSpace;\n\n        if (inClassBody) {\n            var stmt = stmtPath.value;\n\n            if (namedTypes.MethodDefinition.check(stmt) ||\n                (namedTypes.ClassPropertyDefinition.check(stmt) &&\n                 namedTypes.MethodDefinition.check(stmt.definition))) {\n                needSemicolon = false;\n            }\n        }\n\n        if (needSemicolon) {\n            // Try to add a semicolon to anything that isn't a method in a\n            // class body.\n            printed = maybeAddSemicolon(printed);\n        }\n\n        var trueLoc = options.reuseWhitespace && getTrueLoc(stmt);\n        var lines = trueLoc && trueLoc.lines;\n\n        if (notFirst) {\n            if (lines) {\n                var beforeStart = lines.skipSpaces(trueLoc.start, true);\n                var beforeStartLine = beforeStart ? beforeStart.line : 1;\n                var leadingGap = trueLoc.start.line - beforeStartLine;\n                leadingSpace = Array(leadingGap + 1).join(\"\\n\");\n            } else {\n                leadingSpace = multiLine ? \"\\n\\n\" : \"\\n\";\n            }\n        } else {\n            leadingSpace = \"\";\n        }\n\n        if (notLast) {\n            if (lines) {\n                var afterEnd = lines.skipSpaces(trueLoc.end);\n                var afterEndLine = afterEnd ? afterEnd.line : lines.length;\n                var trailingGap = afterEndLine - trueLoc.end.line;\n                trailingSpace = Array(trailingGap + 1).join(\"\\n\");\n            } else {\n                trailingSpace = multiLine ? \"\\n\\n\" : \"\\n\";\n            }\n        } else {\n            trailingSpace = \"\";\n        }\n\n        parts.push(\n            maxSpace(prevTrailingSpace, leadingSpace),\n            printed\n        );\n\n        if (notLast) {\n            prevTrailingSpace = trailingSpace;\n        } else if (trailingSpace) {\n            parts.push(trailingSpace);\n        }\n    });\n\n    return concat(parts);\n}\n\nfunction getTrueLoc(node) {\n    // It's possible that node is newly-created (not parsed by Esprima),\n    // in which case it probably won't have a .loc property (or an\n    // .original property for that matter). That's fine; we'll just\n    // pretty-print it as usual.\n    if (!node.loc) {\n        return null;\n    }\n\n    if (!node.comments) {\n        // If the node has no comments, regard node.loc as true.\n        return node.loc;\n    }\n\n    var start = node.loc.start;\n    var end = node.loc.end;\n\n    // If the node has any comments, their locations might contribute to\n    // the true start/end positions of the node.\n    node.comments.forEach(function(comment) {\n        if (comment.loc) {\n            if (util.comparePos(comment.loc.start, start) < 0) {\n                start = comment.loc.start;\n            }\n\n            if (util.comparePos(end, comment.loc.end) < 0) {\n                end = comment.loc.end;\n            }\n        }\n    });\n\n    return {\n        lines: node.loc.lines,\n        start: start,\n        end: end\n    };\n}\n\nfunction maxSpace(s1, s2) {\n    if (!s1 && !s2) {\n        return fromString(\"\");\n    }\n\n    if (!s1) {\n        return fromString(s2);\n    }\n\n    if (!s2) {\n        return fromString(s1);\n    }\n\n    var spaceLines1 = fromString(s1);\n    var spaceLines2 = fromString(s2);\n\n    if (spaceLines2.length > spaceLines1.length) {\n        return spaceLines2;\n    }\n\n    return spaceLines1;\n}\n\nfunction printMethod(kind, keyPath, valuePath, options, print) {\n    var parts = [];\n    var key = keyPath.value;\n    var value = valuePath.value;\n\n    namedTypes.FunctionExpression.assert(value);\n\n    if (value.async) {\n        parts.push(\"async \");\n    }\n\n    if (!kind || kind === \"init\") {\n        if (value.generator) {\n            parts.push(\"*\");\n        }\n    } else {\n        assert.ok(kind === \"get\" || kind === \"set\");\n        parts.push(kind, \" \");\n    }\n\n    parts.push(\n        print(keyPath),\n        \"(\",\n        printFunctionParams(valuePath, options, print),\n        \") \",\n        print(valuePath.get(\"body\"))\n    );\n\n    return concat(parts);\n}\n\nfunction printArgumentsList(path, options, print) {\n    var printed = path.get(\"arguments\").map(print);\n\n    var joined = fromString(\", \").join(printed);\n    if (joined.getLineLength(1) > options.wrapColumn) {\n        joined = fromString(\",\\n\").join(printed);\n        return concat([\"(\\n\", joined.indent(options.tabWidth), \"\\n)\"]);\n    }\n\n    return concat([\"(\", joined, \")\"]);\n}\n\nfunction printFunctionParams(path, options, print) {\n    var fun = path.node;\n    namedTypes.Function.assert(fun);\n\n    var params = path.get(\"params\");\n    var defaults = path.get(\"defaults\");\n    var printed = params.map(defaults.value ? function(param) {\n        var p = print(param);\n        var d = defaults.get(param.name);\n        return d.value ? concat([p, \"=\", print(d)]) : p;\n    } : print);\n\n    if (fun.rest) {\n        printed.push(concat([\"...\", print(path.get(\"rest\"))]));\n    }\n\n    var joined = fromString(\", \").join(printed);\n    if (joined.length > 1 ||\n        joined.getLineLength(1) > options.wrapColumn) {\n        joined = fromString(\",\\n\").join(printed);\n        return concat([\"\\n\", joined.indent(options.tabWidth)]);\n    }\n\n    return joined;\n}\n\nfunction adjustClause(clause, options) {\n    if (clause.length > 1)\n        return concat([\" \", clause]);\n\n    return concat([\n        \"\\n\",\n        maybeAddSemicolon(clause).indent(options.tabWidth)\n    ]);\n}\n\nfunction lastNonSpaceCharacter(lines) {\n    var pos = lines.lastPos();\n    do {\n        var ch = lines.charAt(pos);\n        if (/\\S/.test(ch))\n            return ch;\n    } while (lines.prevPos(pos));\n}\n\nfunction endsWithBrace(lines) {\n    return lastNonSpaceCharacter(lines) === \"}\";\n}\n\nfunction nodeStr(n) {\n    namedTypes.Literal.assert(n);\n    isString.assert(n.value);\n    return JSON.stringify(n.value);\n}\n\nfunction maybeAddSemicolon(lines) {\n    var eoc = lastNonSpaceCharacter(lines);\n    if (!eoc || \"\\n};\".indexOf(eoc) < 0)\n        return concat([lines, \";\"]);\n    return lines;\n}\n","var types = require(\"ast-types\");\nvar def = types.Type.def;\n\ndef(\"File\")\n    .bases(\"Node\")\n    .build(\"program\")\n    .field(\"program\", def(\"Program\"));\n\ntypes.finalize();\n\nmodule.exports = types;\n","var assert = require(\"assert\");\nvar getFieldValue = require(\"./types\").getFieldValue;\nvar sourceMap = require(\"source-map\");\nvar SourceMapConsumer = sourceMap.SourceMapConsumer;\nvar SourceMapGenerator = sourceMap.SourceMapGenerator;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction getUnionOfKeys() {\n    var result = {};\n    var argc = arguments.length;\n    for (var i = 0; i < argc; ++i) {\n        var keys = Object.keys(arguments[i]);\n        var keyCount = keys.length;\n        for (var j = 0; j < keyCount; ++j) {\n            result[keys[j]] = true;\n        }\n    }\n    return result;\n}\nexports.getUnionOfKeys = getUnionOfKeys;\n\nfunction comparePos(pos1, pos2) {\n    return (pos1.line - pos2.line) || (pos1.column - pos2.column);\n}\nexports.comparePos = comparePos;\n\nexports.composeSourceMaps = function(formerMap, latterMap) {\n    if (formerMap) {\n        if (!latterMap) {\n            return formerMap;\n        }\n    } else {\n        return latterMap || null;\n    }\n\n    var smcFormer = new SourceMapConsumer(formerMap);\n    var smcLatter = new SourceMapConsumer(latterMap);\n    var smg = new SourceMapGenerator({\n        file: latterMap.file,\n        sourceRoot: latterMap.sourceRoot\n    });\n\n    var sourcesToContents = {};\n\n    smcLatter.eachMapping(function(mapping) {\n        var origPos = smcFormer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n        });\n\n        var sourceName = origPos.source;\n        if (sourceName === null) {\n            return;\n        }\n\n        smg.addMapping({\n            source: sourceName,\n            original: {\n                line: origPos.line,\n                column: origPos.column\n            },\n            generated: {\n                line: mapping.generatedLine,\n                column: mapping.generatedColumn\n            },\n            name: mapping.name\n        });\n\n        var sourceContent = smcFormer.sourceContentFor(sourceName);\n        if (sourceContent && !hasOwn.call(sourcesToContents, sourceName)) {\n            sourcesToContents[sourceName] = sourceContent;\n            smg.setSourceContent(sourceName, sourceContent);\n        }\n    });\n\n    return smg.toJSON();\n};\n","var types = require(\"./lib/types\");\nvar parse = require(\"./lib/parser\").parse;\nvar Printer = require(\"./lib/printer\").Printer;\n\nfunction print(node, options) {\n    return new Printer(options).print(node);\n}\n\nfunction prettyPrint(node, options) {\n    return new Printer(options).printGenerically(node);\n}\n\nfunction run(transformer, options) {\n    return runFile(process.argv[2], transformer, options);\n}\n\nfunction runFile(path, transformer, options) {\n    require(\"fs\").readFile(path, \"utf-8\", function(err, code) {\n        if (err) {\n            console.error(err);\n            return;\n        }\n\n        runString(code, transformer, options);\n    });\n}\n\nfunction defaultWriteback(output) {\n    process.stdout.write(output);\n}\n\nfunction runString(code, transformer, options) {\n    var writeback = options && options.writeback || defaultWriteback;\n    transformer(parse(code, options), function(node) {\n        writeback(print(node, options).code);\n    });\n}\n\nObject.defineProperties(exports, {\n    /**\n     * Parse a string of code into an augmented syntax tree suitable for\n     * arbitrary modification and reprinting.\n     */\n    parse: {\n        enumerable: true,\n        value: parse\n    },\n\n    /**\n     * Traverse and potentially modify an abstract syntax tree using a\n     * convenient visitor syntax:\n     *\n     *   recast.visit(ast, {\n     *     names: [],\n     *     visitIdentifier: function(path) {\n     *       var node = path.value;\n     *       this.visitor.names.push(node.name);\n     *       this.traverse(path);\n     *     }\n     *   });\n     */\n    visit: {\n        enumerable: true,\n        value: types.visit\n    },\n\n    /**\n     * Reprint a modified syntax tree using as much of the original source\n     * code as possible.\n     */\n    print: {\n        enumerable: true,\n        value: print\n    },\n\n    /**\n     * Print without attempting to reuse any original source code.\n     */\n    prettyPrint: {\n        enumerable: false,\n        value: prettyPrint\n    },\n\n    /**\n     * Customized version of require(\"ast-types\").\n     */\n    types: {\n        enumerable: false,\n        value: types\n    },\n\n    /**\n     * Convenient command-line interface (see e.g. example/add-braces).\n     */\n    run: {\n        enumerable: false,\n        value: run\n    }\n});\n","var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data == null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function() {\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var iteratorSymbol =\n    typeof Symbol === \"function\" && Symbol.iterator || \"@@iterator\";\n\n  if (typeof regeneratorRuntime === \"object\") {\n    return;\n  }\n\n  var runtime = regeneratorRuntime =\n    typeof exports === \"undefined\" ? {} : exports;\n\n  function wrap(innerFn, outerFn, self, tryList) {\n    return new Generator(innerFn, outerFn, self || null, tryList || []);\n  }\n  runtime.wrap = wrap;\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    genFun.__proto__ = GeneratorFunctionPrototype;\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  runtime.async = function(innerFn, outerFn, self, tryList) {\n    return new Promise(function(resolve, reject) {\n      var generator = wrap(innerFn, outerFn, self, tryList);\n      var callNext = step.bind(generator.next);\n      var callThrow = step.bind(generator[\"throw\"]);\n\n      function step(arg) {\n        try {\n          var info = this(arg);\n          var value = info.value;\n        } catch (error) {\n          return reject(error);\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(callNext, callThrow);\n        }\n      }\n\n      callNext();\n    });\n  };\n\n  function Generator(innerFn, outerFn, self, tryList) {\n    var generator = outerFn ? Object.create(outerFn.prototype) : this;\n    var context = new Context(tryList);\n    var state = GenStateSuspendedStart;\n\n    function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          try {\n            var info = delegate.iterator[method](arg);\n\n            // Delegate generator ran and handled its own exceptions so\n            // regardless of what the method was, we continue as if it is\n            // \"next\" with an undefined arg.\n            method = \"next\";\n            arg = undefined;\n\n          } catch (uncaught) {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = uncaught;\n\n            continue;\n          }\n\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          if (state === GenStateSuspendedStart &&\n              typeof arg !== \"undefined\") {\n            // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n            throw new TypeError(\n              \"attempt to send \" + JSON.stringify(arg) + \" to newborn generator\"\n            );\n          }\n\n          if (state === GenStateSuspendedYield) {\n            context.sent = arg;\n          } else {\n            delete context.sent;\n          }\n\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        try {\n          var value = innerFn.call(self, context);\n\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: value,\n            done: context.done\n          };\n\n          if (value === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } catch (thrown) {\n          state = GenStateCompleted;\n\n          if (method === \"next\") {\n            context.dispatchException(thrown);\n          } else {\n            arg = thrown;\n          }\n        }\n      }\n    }\n\n    generator.next = invoke.bind(generator, \"next\");\n    generator[\"throw\"] = invoke.bind(generator, \"throw\");\n    generator[\"return\"] = invoke.bind(generator, \"return\");\n\n    return generator;\n  }\n\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(triple) {\n    var entry = { tryLoc: triple[0] };\n\n    if (1 in triple) {\n      entry.catchLoc = triple[1];\n    }\n\n    if (2 in triple) {\n      entry.finallyLoc = triple[2];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry, i) {\n    var record = entry.completion || {};\n    record.type = i === 0 ? \"normal\" : \"return\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryList.forEach(pushTryEntry, this);\n    this.reset();\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1;\n\n        function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        }\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function() {\n      this.prev = 0;\n      this.next = 0;\n      this.sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      // Pre-initialize at least 20 temporary variables to enable hidden\n      // class optimizations for simple generators.\n      for (var tempIndex = 0, tempName;\n           hasOwn.call(this, tempName = \"t\" + tempIndex) || tempIndex < 20;\n           ++tempIndex) {\n        this[tempName] = null;\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    _findFinallyEntry: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") && (\n              entry.finallyLoc === finallyLoc ||\n              this.prev < entry.finallyLoc)) {\n          return entry;\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      var entry = this._findFinallyEntry();\n      var record = entry ? entry.completion : {};\n\n      record.type = type;\n      record.arg = arg;\n\n      if (entry) {\n        this.next = entry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      var entry = this._findFinallyEntry(finallyLoc);\n      return this.complete(entry.completion);\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry, i);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})();\n","// Generated by `/scripts/character-class-escape-sets.js`. Do not edit.\nvar regenerate = require('regenerate');\n\nexports.REGULAR = {\n\t'd': regenerate()\n\t\t.addRange(0x30, 0x39),\n\t'D': regenerate()\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0xFFFF),\n\t's': regenerate(0x20, 0xA0, 0x1680, 0x180E, 0x202F, 0x205F, 0x3000, 0xFEFF)\n\t\t.addRange(0x9, 0xD)\n\t\t.addRange(0x2000, 0x200A)\n\t\t.addRange(0x2028, 0x2029),\n\t'S': regenerate()\n\t\t.addRange(0x0, 0x8)\n\t\t.addRange(0xE, 0x1F)\n\t\t.addRange(0x21, 0x9F)\n\t\t.addRange(0xA1, 0x167F)\n\t\t.addRange(0x1681, 0x180D)\n\t\t.addRange(0x180F, 0x1FFF)\n\t\t.addRange(0x200B, 0x2027)\n\t\t.addRange(0x202A, 0x202E)\n\t\t.addRange(0x2030, 0x205E)\n\t\t.addRange(0x2060, 0x2FFF)\n\t\t.addRange(0x3001, 0xFEFE)\n\t\t.addRange(0xFF00, 0xFFFF),\n\t'w': regenerate(0x5F)\n\t\t.addRange(0x30, 0x39)\n\t\t.addRange(0x41, 0x5A)\n\t\t.addRange(0x61, 0x7A),\n\t'W': regenerate(0x60)\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x40)\n\t\t.addRange(0x5B, 0x5E)\n\t\t.addRange(0x7B, 0xFFFF)\n};\n\nexports.UNICODE = {\n\t'd': regenerate()\n\t\t.addRange(0x30, 0x39),\n\t'D': regenerate()\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x10FFFF),\n\t's': regenerate(0x20, 0xA0, 0x1680, 0x180E, 0x202F, 0x205F, 0x3000, 0xFEFF)\n\t\t.addRange(0x9, 0xD)\n\t\t.addRange(0x2000, 0x200A)\n\t\t.addRange(0x2028, 0x2029),\n\t'S': regenerate()\n\t\t.addRange(0x0, 0x8)\n\t\t.addRange(0xE, 0x1F)\n\t\t.addRange(0x21, 0x9F)\n\t\t.addRange(0xA1, 0x167F)\n\t\t.addRange(0x1681, 0x180D)\n\t\t.addRange(0x180F, 0x1FFF)\n\t\t.addRange(0x200B, 0x2027)\n\t\t.addRange(0x202A, 0x202E)\n\t\t.addRange(0x2030, 0x205E)\n\t\t.addRange(0x2060, 0x2FFF)\n\t\t.addRange(0x3001, 0xFEFE)\n\t\t.addRange(0xFF00, 0x10FFFF),\n\t'w': regenerate(0x5F)\n\t\t.addRange(0x30, 0x39)\n\t\t.addRange(0x41, 0x5A)\n\t\t.addRange(0x61, 0x7A),\n\t'W': regenerate(0x60)\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x40)\n\t\t.addRange(0x5B, 0x5E)\n\t\t.addRange(0x7B, 0x10FFFF)\n};\n\nexports.UNICODE_IGNORE_CASE = {\n\t'd': regenerate()\n\t\t.addRange(0x30, 0x39),\n\t'D': regenerate()\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x10FFFF),\n\t's': regenerate(0x20, 0xA0, 0x1680, 0x180E, 0x202F, 0x205F, 0x3000, 0xFEFF)\n\t\t.addRange(0x9, 0xD)\n\t\t.addRange(0x2000, 0x200A)\n\t\t.addRange(0x2028, 0x2029),\n\t'S': regenerate()\n\t\t.addRange(0x0, 0x8)\n\t\t.addRange(0xE, 0x1F)\n\t\t.addRange(0x21, 0x9F)\n\t\t.addRange(0xA1, 0x167F)\n\t\t.addRange(0x1681, 0x180D)\n\t\t.addRange(0x180F, 0x1FFF)\n\t\t.addRange(0x200B, 0x2027)\n\t\t.addRange(0x202A, 0x202E)\n\t\t.addRange(0x2030, 0x205E)\n\t\t.addRange(0x2060, 0x2FFF)\n\t\t.addRange(0x3001, 0xFEFE)\n\t\t.addRange(0xFF00, 0x10FFFF),\n\t'w': regenerate(0x5F, 0x17F, 0x212A)\n\t\t.addRange(0x30, 0x39)\n\t\t.addRange(0x41, 0x5A)\n\t\t.addRange(0x61, 0x7A),\n\t'W': regenerate(0x4B, 0x53, 0x60)\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x40)\n\t\t.addRange(0x5B, 0x5E)\n\t\t.addRange(0x7B, 0x10FFFF)\n};\n","module.exports={\n\t\"75\": 8490,\n\t\"83\": 383,\n\t\"107\": 8490,\n\t\"115\": 383,\n\t\"181\": 924,\n\t\"197\": 8491,\n\t\"383\": 83,\n\t\"452\": 453,\n\t\"453\": 452,\n\t\"455\": 456,\n\t\"456\": 455,\n\t\"458\": 459,\n\t\"459\": 458,\n\t\"497\": 498,\n\t\"498\": 497,\n\t\"837\": 8126,\n\t\"914\": 976,\n\t\"917\": 1013,\n\t\"920\": 1012,\n\t\"921\": 8126,\n\t\"922\": 1008,\n\t\"924\": 181,\n\t\"928\": 982,\n\t\"929\": 1009,\n\t\"931\": 962,\n\t\"934\": 981,\n\t\"937\": 8486,\n\t\"962\": 931,\n\t\"976\": 914,\n\t\"977\": 1012,\n\t\"981\": 934,\n\t\"982\": 928,\n\t\"1008\": 922,\n\t\"1009\": 929,\n\t\"1012\": [\n\t\t920,\n\t\t977\n\t],\n\t\"1013\": 917,\n\t\"7776\": 7835,\n\t\"7835\": 7776,\n\t\"8126\": [\n\t\t837,\n\t\t921\n\t],\n\t\"8486\": 937,\n\t\"8490\": 75,\n\t\"8491\": 197,\n\t\"66560\": 66600,\n\t\"66561\": 66601,\n\t\"66562\": 66602,\n\t\"66563\": 66603,\n\t\"66564\": 66604,\n\t\"66565\": 66605,\n\t\"66566\": 66606,\n\t\"66567\": 66607,\n\t\"66568\": 66608,\n\t\"66569\": 66609,\n\t\"66570\": 66610,\n\t\"66571\": 66611,\n\t\"66572\": 66612,\n\t\"66573\": 66613,\n\t\"66574\": 66614,\n\t\"66575\": 66615,\n\t\"66576\": 66616,\n\t\"66577\": 66617,\n\t\"66578\": 66618,\n\t\"66579\": 66619,\n\t\"66580\": 66620,\n\t\"66581\": 66621,\n\t\"66582\": 66622,\n\t\"66583\": 66623,\n\t\"66584\": 66624,\n\t\"66585\": 66625,\n\t\"66586\": 66626,\n\t\"66587\": 66627,\n\t\"66588\": 66628,\n\t\"66589\": 66629,\n\t\"66590\": 66630,\n\t\"66591\": 66631,\n\t\"66592\": 66632,\n\t\"66593\": 66633,\n\t\"66594\": 66634,\n\t\"66595\": 66635,\n\t\"66596\": 66636,\n\t\"66597\": 66637,\n\t\"66598\": 66638,\n\t\"66599\": 66639,\n\t\"66600\": 66560,\n\t\"66601\": 66561,\n\t\"66602\": 66562,\n\t\"66603\": 66563,\n\t\"66604\": 66564,\n\t\"66605\": 66565,\n\t\"66606\": 66566,\n\t\"66607\": 66567,\n\t\"66608\": 66568,\n\t\"66609\": 66569,\n\t\"66610\": 66570,\n\t\"66611\": 66571,\n\t\"66612\": 66572,\n\t\"66613\": 66573,\n\t\"66614\": 66574,\n\t\"66615\": 66575,\n\t\"66616\": 66576,\n\t\"66617\": 66577,\n\t\"66618\": 66578,\n\t\"66619\": 66579,\n\t\"66620\": 66580,\n\t\"66621\": 66581,\n\t\"66622\": 66582,\n\t\"66623\": 66583,\n\t\"66624\": 66584,\n\t\"66625\": 66585,\n\t\"66626\": 66586,\n\t\"66627\": 66587,\n\t\"66628\": 66588,\n\t\"66629\": 66589,\n\t\"66630\": 66590,\n\t\"66631\": 66591,\n\t\"66632\": 66592,\n\t\"66633\": 66593,\n\t\"66634\": 66594,\n\t\"66635\": 66595,\n\t\"66636\": 66596,\n\t\"66637\": 66597,\n\t\"66638\": 66598,\n\t\"66639\": 66599,\n\t\"71840\": 71872,\n\t\"71841\": 71873,\n\t\"71842\": 71874,\n\t\"71843\": 71875,\n\t\"71844\": 71876,\n\t\"71845\": 71877,\n\t\"71846\": 71878,\n\t\"71847\": 71879,\n\t\"71848\": 71880,\n\t\"71849\": 71881,\n\t\"71850\": 71882,\n\t\"71851\": 71883,\n\t\"71852\": 71884,\n\t\"71853\": 71885,\n\t\"71854\": 71886,\n\t\"71855\": 71887,\n\t\"71856\": 71888,\n\t\"71857\": 71889,\n\t\"71858\": 71890,\n\t\"71859\": 71891,\n\t\"71860\": 71892,\n\t\"71861\": 71893,\n\t\"71862\": 71894,\n\t\"71863\": 71895,\n\t\"71864\": 71896,\n\t\"71865\": 71897,\n\t\"71866\": 71898,\n\t\"71867\": 71899,\n\t\"71868\": 71900,\n\t\"71869\": 71901,\n\t\"71870\": 71902,\n\t\"71871\": 71903,\n\t\"71872\": 71840,\n\t\"71873\": 71841,\n\t\"71874\": 71842,\n\t\"71875\": 71843,\n\t\"71876\": 71844,\n\t\"71877\": 71845,\n\t\"71878\": 71846,\n\t\"71879\": 71847,\n\t\"71880\": 71848,\n\t\"71881\": 71849,\n\t\"71882\": 71850,\n\t\"71883\": 71851,\n\t\"71884\": 71852,\n\t\"71885\": 71853,\n\t\"71886\": 71854,\n\t\"71887\": 71855,\n\t\"71888\": 71856,\n\t\"71889\": 71857,\n\t\"71890\": 71858,\n\t\"71891\": 71859,\n\t\"71892\": 71860,\n\t\"71893\": 71861,\n\t\"71894\": 71862,\n\t\"71895\": 71863,\n\t\"71896\": 71864,\n\t\"71897\": 71865,\n\t\"71898\": 71866,\n\t\"71899\": 71867,\n\t\"71900\": 71868,\n\t\"71901\": 71869,\n\t\"71902\": 71870,\n\t\"71903\": 71871\n}\n","/*! https://mths.be/regenerate v1.0.1 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar ERRORS = {\n\t\t'rangeOrder': 'A range\\u2019s `stop` value must be greater than or equal ' +\n\t\t\t'to the `start` value.',\n\t\t'codePointRange': 'Invalid code point value. Code points range from ' +\n\t\t\t'U+000000 to U+10FFFF.'\n\t};\n\n\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-pairs\n\tvar HIGH_SURROGATE_MIN = 0xD800;\n\tvar HIGH_SURROGATE_MAX = 0xDBFF;\n\tvar LOW_SURROGATE_MIN = 0xDC00;\n\tvar LOW_SURROGATE_MAX = 0xDFFF;\n\n\t// In Regenerate output, `\\0` will never be preceded by `\\` because we sort\n\t// by code point value, so let’s keep this regular expression simple.\n\tvar regexNull = /\\\\x00([^0123456789]|$)/g;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar extend = function(destination, source) {\n\t\tvar key;\n\t\tfor (key in source) {\n\t\t\tif (hasOwnProperty.call(source, key)) {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t}\n\t\treturn destination;\n\t};\n\n\tvar forEach = function(array, callback) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tcallback(array[index], index);\n\t\t}\n\t};\n\n\tvar toString = object.toString;\n\tvar isArray = function(value) {\n\t\treturn toString.call(value) == '[object Array]';\n\t};\n\tvar isNumber = function(value) {\n\t\treturn typeof value == 'number' ||\n\t\t\ttoString.call(value) == '[object Number]';\n\t};\n\n\t// This assumes that `number` is a positive integer that `toString()`s nicely\n\t// (which is the case for all code point values).\n\tvar zeroes = '0000';\n\tvar pad = function(number, totalCharacters) {\n\t\tvar string = String(number);\n\t\treturn string.length < totalCharacters\n\t\t\t? (zeroes + string).slice(-totalCharacters)\n\t\t\t: string;\n\t};\n\n\tvar hex = function(number) {\n\t\treturn Number(number).toString(16).toUpperCase();\n\t};\n\n\tvar slice = [].slice;\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar dataFromCodePoints = function(codePoints) {\n\t\tvar index = -1;\n\t\tvar length = codePoints.length;\n\t\tvar max = length - 1;\n\t\tvar result = [];\n\t\tvar isStart = true;\n\t\tvar tmp;\n\t\tvar previous = 0;\n\t\twhile (++index < length) {\n\t\t\ttmp = codePoints[index];\n\t\t\tif (isStart) {\n\t\t\t\tresult.push(tmp);\n\t\t\t\tprevious = tmp;\n\t\t\t\tisStart = false;\n\t\t\t} else {\n\t\t\t\tif (tmp == previous + 1) {\n\t\t\t\t\tif (index != max) {\n\t\t\t\t\t\tprevious = tmp;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisStart = true;\n\t\t\t\t\t\tresult.push(tmp + 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// End the previous range and start a new one.\n\t\t\t\t\tresult.push(previous + 1, tmp);\n\t\t\t\t\tprevious = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!isStart) {\n\t\t\tresult.push(tmp + 1);\n\t\t}\n\t\treturn result;\n\t};\n\n\tvar dataRemove = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\t// Modify this pair.\n\t\t\t\tif (codePoint == start) {\n\t\t\t\t\tif (end == start + 1) {\n\t\t\t\t\t\t// Just remove `start` and `end`.\n\t\t\t\t\t\tdata.splice(index, 2);\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Just replace `start` with a new value.\n\t\t\t\t\t\tdata[index] = codePoint + 1;\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\t\t\t} else if (codePoint == end - 1) {\n\t\t\t\t\t// Just replace `end` with a new value.\n\t\t\t\t\tdata[index + 1] = codePoint;\n\t\t\t\t\treturn data;\n\t\t\t\t} else {\n\t\t\t\t\t// Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\t\t\t\t\tdata.splice(index, 2, start, codePoint, codePoint + 1, end);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataRemoveRange = function(data, rangeStart, rangeEnd) {\n\t\tif (rangeEnd < rangeStart) {\n\t\t\tthrow Error(ERRORS.rangeOrder);\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\twhile (index < data.length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n\t\t\t// Exit as soon as no more matching pairs can be found.\n\t\t\tif (start > rangeEnd) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if this range pair is equal to, or forms a subset of, the range\n\t\t\t// to be removed.\n\t\t\t// E.g. we have `[0, 11, 40, 51]` and want to remove 0-10 → `[40, 51]`.\n\t\t\t// E.g. we have `[40, 51]` and want to remove 0-100 → `[]`.\n\t\t\tif (rangeStart <= start && rangeEnd >= end) {\n\t\t\t\t// Remove this pair.\n\t\t\t\tdata.splice(index, 2);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check if both `rangeStart` and `rangeEnd` are within the bounds of\n\t\t\t// this pair.\n\t\t\t// E.g. we have `[0, 11]` and want to remove 4-6 → `[0, 4, 7, 11]`.\n\t\t\tif (rangeStart >= start && rangeEnd < end) {\n\t\t\t\tif (rangeStart == start) {\n\t\t\t\t\t// Replace `[start, end]` with `[startB, endB]`.\n\t\t\t\t\tdata[index] = rangeEnd + 1;\n\t\t\t\t\tdata[index + 1] = end + 1;\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\t// Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\t\t\t\tdata.splice(index, 2, start, rangeStart, rangeEnd + 1, end + 1);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if only `rangeStart` is within the bounds of this pair.\n\t\t\t// E.g. we have `[0, 11]` and want to remove 4-20 → `[0, 4]`.\n\t\t\tif (rangeStart >= start && rangeStart <= end) {\n\t\t\t\t// Replace `end` with `rangeStart`.\n\t\t\t\tdata[index + 1] = rangeStart;\n\t\t\t\t// Note: we cannot `return` just yet, in case any following pairs still\n\t\t\t\t// contain matching code points.\n\t\t\t\t// E.g. we have `[0, 11, 14, 31]` and want to remove 4-20\n\t\t\t\t// → `[0, 4, 21, 31]`.\n\t\t\t}\n\n\t\t\t// Check if only `rangeEnd` is within the bounds of this pair.\n\t\t\t// E.g. we have `[14, 31]` and want to remove 4-20 → `[21, 31]`.\n\t\t\telse if (rangeEnd >= start && rangeEnd <= end) {\n\t\t\t\t// Just replace `start`.\n\t\t\t\tdata[index] = rangeEnd + 1;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\t var dataAdd = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar lastIndex = null;\n\t\tvar length = data.length;\n\t\tif (codePoint < 0x0 || codePoint > 0x10FFFF) {\n\t\t\tthrow RangeError(ERRORS.codePointRange);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\n\t\t\t// Check if the code point is already in the set.\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (codePoint == start - 1) {\n\t\t\t\t// Just replace `start` with a new value.\n\t\t\t\tdata[index] = codePoint;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// At this point, if `start` is `greater` than `codePoint`, insert a new\n\t\t\t// `[start, end]` pair before the current pair, or after the current pair\n\t\t\t// if there is a known `lastIndex`.\n\t\t\tif (start > codePoint) {\n\t\t\t\tdata.splice(\n\t\t\t\t\tlastIndex != null ? lastIndex + 2 : 0,\n\t\t\t\t\t0,\n\t\t\t\t\tcodePoint,\n\t\t\t\t\tcodePoint + 1\n\t\t\t\t);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (codePoint == end) {\n\t\t\t\t// Check if adding this code point causes two separate ranges to become\n\t\t\t\t// a single range, e.g. `dataAdd([0, 4, 5, 10], 4)` → `[0, 10]`.\n\t\t\t\tif (codePoint + 1 == data[index + 2]) {\n\t\t\t\t\tdata.splice(index, 4, start, data[index + 3]);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\t// Else, just replace `end` with a new value.\n\t\t\t\tdata[index + 1] = codePoint + 1;\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\tlastIndex = index;\n\t\t\tindex += 2;\n\t\t}\n\t\t// The loop has finished; add the new pair to the end of the data set.\n\t\tdata.push(codePoint, codePoint + 1);\n\t\treturn data;\n\t};\n\n\tvar dataAddData = function(dataA, dataB) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar data = dataA.slice();\n\t\tvar length = dataB.length;\n\t\twhile (index < length) {\n\t\t\tstart = dataB[index];\n\t\t\tend = dataB[index + 1] - 1;\n\t\t\tif (start == end) {\n\t\t\t\tdata = dataAdd(data, start);\n\t\t\t} else {\n\t\t\t\tdata = dataAddRange(data, start, end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataRemoveData = function(dataA, dataB) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar data = dataA.slice();\n\t\tvar length = dataB.length;\n\t\twhile (index < length) {\n\t\t\tstart = dataB[index];\n\t\t\tend = dataB[index + 1] - 1;\n\t\t\tif (start == end) {\n\t\t\t\tdata = dataRemove(data, start);\n\t\t\t} else {\n\t\t\t\tdata = dataRemoveRange(data, start, end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataAddRange = function(data, rangeStart, rangeEnd) {\n\t\tif (rangeEnd < rangeStart) {\n\t\t\tthrow Error(ERRORS.rangeOrder);\n\t\t}\n\t\tif (\n\t\t\trangeStart < 0x0 || rangeStart > 0x10FFFF ||\n\t\t\trangeEnd < 0x0 || rangeEnd > 0x10FFFF\n\t\t) {\n\t\t\tthrow RangeError(ERRORS.codePointRange);\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar added = false;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\n\t\t\tif (added) {\n\t\t\t\t// The range has already been added to the set; at this point, we just\n\t\t\t\t// need to get rid of the following ranges in case they overlap.\n\n\t\t\t\t// Check if this range can be combined with the previous range.\n\t\t\t\tif (start == rangeEnd + 1) {\n\t\t\t\t\tdata.splice(index - 1, 2);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Exit as soon as no more possibly overlapping pairs can be found.\n\t\t\t\tif (start > rangeEnd) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// E.g. `[0, 11, 12, 16]` and we’ve added 5-15, so we now have\n\t\t\t\t// `[0, 16, 12, 16]`. Remove the `12,16` part, as it lies within the\n\t\t\t\t// `0,16` range that was previously added.\n\t\t\t\tif (start >= rangeStart && start <= rangeEnd) {\n\t\t\t\t\t// `start` lies within the range that was previously added.\n\n\t\t\t\t\tif (end > rangeStart && end - 1 <= rangeEnd) {\n\t\t\t\t\t\t// `end` lies within the range that was previously added as well,\n\t\t\t\t\t\t// so remove this pair.\n\t\t\t\t\t\tdata.splice(index, 2);\n\t\t\t\t\t\tindex -= 2;\n\t\t\t\t\t\t// Note: we cannot `return` just yet, as there may still be other\n\t\t\t\t\t\t// overlapping pairs.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `start` lies within the range that was previously added, but\n\t\t\t\t\t\t// `end` doesn’t. E.g. `[0, 11, 12, 31]` and we’ve added 5-15, so\n\t\t\t\t\t\t// now we have `[0, 16, 12, 31]`. This must be written as `[0, 31]`.\n\t\t\t\t\t\t// Remove the previously added `end` and the current `start`.\n\t\t\t\t\t\tdata.splice(index - 1, 2);\n\t\t\t\t\t\tindex -= 2;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Note: we cannot return yet.\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\telse if (start == rangeEnd + 1) {\n\t\t\t\tdata[index] = rangeStart;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if a new pair must be inserted *before* the current one.\n\t\t\telse if (start > rangeEnd) {\n\t\t\t\tdata.splice(index, 0, rangeStart, rangeEnd + 1);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\telse if (rangeStart >= start && rangeStart < end && rangeEnd + 1 <= end) {\n\t\t\t\t// The new range lies entirely within an existing range pair. No action\n\t\t\t\t// needed.\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\telse if (\n\t\t\t\t// E.g. `[0, 11]` and you add 5-15 → `[0, 16]`.\n\t\t\t\t(rangeStart >= start && rangeStart < end) ||\n\t\t\t\t// E.g. `[0, 3]` and you add 3-6 → `[0, 7]`.\n\t\t\t\tend == rangeStart\n\t\t\t) {\n\t\t\t\t// Replace `end` with the new value.\n\t\t\t\tdata[index + 1] = rangeEnd + 1;\n\t\t\t\t// Make sure the next range pair doesn’t overlap, e.g. `[0, 11, 12, 14]`\n\t\t\t\t// and you add 5-15 → `[0, 16]`, i.e. remove the `12,14` part.\n\t\t\t\tadded = true;\n\t\t\t\t// Note: we cannot `return` just yet.\n\t\t\t}\n\n\t\t\telse if (rangeStart <= start && rangeEnd + 1 >= end) {\n\t\t\t\t// The new range is a superset of the old range.\n\t\t\t\tdata[index] = rangeStart;\n\t\t\t\tdata[index + 1] = rangeEnd + 1;\n\t\t\t\tadded = true;\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\t// The loop has finished without doing anything; add the new pair to the end\n\t\t// of the data set.\n\t\tif (!added) {\n\t\t\tdata.push(rangeStart, rangeEnd + 1);\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataContains = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar dataIntersection = function(data, codePoints) {\n\t\tvar index = 0;\n\t\tvar length = codePoints.length;\n\t\tvar codePoint;\n\t\tvar result = [];\n\t\twhile (index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tif (dataContains(data, codePoint)) {\n\t\t\t\tresult.push(codePoint);\n\t\t\t}\n\t\t\t++index;\n\t\t}\n\t\treturn dataFromCodePoints(result);\n\t};\n\n\tvar dataIsEmpty = function(data) {\n\t\treturn !data.length;\n\t};\n\n\tvar dataIsSingleton = function(data) {\n\t\t// Check if the set only represents a single code point.\n\t\treturn data.length == 2 && data[0] + 1 == data[1];\n\t};\n\n\tvar dataToArray = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar result = [];\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\twhile (start < end) {\n\t\t\t\tresult.push(start);\n\t\t\t\t++start;\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn result;\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\tvar floor = Math.floor;\n\tvar highSurrogate = function(codePoint) {\n\t\treturn parseInt(\n\t\t\tfloor((codePoint - 0x10000) / 0x400) + HIGH_SURROGATE_MIN,\n\t\t\t10\n\t\t);\n\t};\n\n\tvar lowSurrogate = function(codePoint) {\n\t\treturn parseInt(\n\t\t\t(codePoint - 0x10000) % 0x400 + LOW_SURROGATE_MIN,\n\t\t\t10\n\t\t);\n\t};\n\n\tvar stringFromCharCode = String.fromCharCode;\n\tvar codePointToString = function(codePoint) {\n\t\tvar string;\n\t\t// https://mathiasbynens.be/notes/javascript-escapes#single\n\t\t// Note: the `\\b` escape sequence for U+0008 BACKSPACE in strings has a\n\t\t// different meaning in regular expressions (word boundary), so it cannot\n\t\t// be used here.\n\t\tif (codePoint == 0x09) {\n\t\t\tstring = '\\\\t';\n\t\t}\n\t\t// Note: IE < 9 treats `'\\v'` as `'v'`, so avoid using it.\n\t\t// else if (codePoint == 0x0B) {\n\t\t// \tstring = '\\\\v';\n\t\t// }\n\t\telse if (codePoint == 0x0A) {\n\t\t\tstring = '\\\\n';\n\t\t}\n\t\telse if (codePoint == 0x0C) {\n\t\t\tstring = '\\\\f';\n\t\t}\n\t\telse if (codePoint == 0x0D) {\n\t\t\tstring = '\\\\r';\n\t\t}\n\t\telse if (codePoint == 0x5C) {\n\t\t\tstring = '\\\\\\\\';\n\t\t}\n\t\telse if (\n\t\t\tcodePoint == 0x24 ||\n\t\t\t(codePoint >= 0x28 && codePoint <= 0x2B) ||\n\t\t\tcodePoint == 0x2D || codePoint == 0x2E || codePoint == 0x3F ||\n\t\t\t(codePoint >= 0x5B && codePoint <= 0x5E) ||\n\t\t\t(codePoint >= 0x7B && codePoint <= 0x7D)\n\t\t) {\n\t\t\t// The code point maps to an unsafe printable ASCII character;\n\t\t\t// backslash-escape it. Here’s the list of those symbols:\n\t\t\t//\n\t\t\t//     $()*+-.?[\\]^{|}\n\t\t\t//\n\t\t\t// See #7 for more info.\n\t\t\tstring = '\\\\' + stringFromCharCode(codePoint);\n\t\t}\n\t\telse if (codePoint >= 0x20 && codePoint <= 0x7E) {\n\t\t\t// The code point maps to one of these printable ASCII symbols\n\t\t\t// (including the space character):\n\t\t\t//\n\t\t\t//      !\"#%&',/0123456789:;<=>@ABCDEFGHIJKLMNO\n\t\t\t//     PQRSTUVWXYZ_`abcdefghijklmnopqrstuvwxyz~\n\t\t\t//\n\t\t\t// These can safely be used directly.\n\t\t\tstring = stringFromCharCode(codePoint);\n\t\t}\n\t\telse if (codePoint <= 0xFF) {\n\t\t\t// https://mathiasbynens.be/notes/javascript-escapes#hexadecimal\n\t\t\tstring = '\\\\x' + pad(hex(codePoint), 2);\n\t\t}\n\t\telse { // `codePoint <= 0xFFFF` holds true.\n\t\t\t// https://mathiasbynens.be/notes/javascript-escapes#unicode\n\t\t\tstring = '\\\\u' + pad(hex(codePoint), 4);\n\t\t}\n\n\t\t// There’s no need to account for astral symbols / surrogate pairs here,\n\t\t// since `codePointToString` is private and only used for BMP code points.\n\t\t// But if that’s what you need, just add an `else` block with this code:\n\t\t//\n\t\t//     string = '\\\\u' + pad(hex(highSurrogate(codePoint)), 4)\n\t\t//     \t+ '\\\\u' + pad(hex(lowSurrogate(codePoint)), 4);\n\n\t\treturn string;\n\t};\n\n\tvar symbolToCodePoint = function(symbol) {\n\t\tvar length = symbol.length;\n\t\tvar first = symbol.charCodeAt(0);\n\t\tvar second;\n\t\tif (\n\t\t\tfirst >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX &&\n\t\t\tlength > 1 // There is a next code unit.\n\t\t) {\n\t\t\t// `first` is a high surrogate, and there is a next character. Assume\n\t\t\t// it’s a low surrogate (else it’s invalid usage of Regenerate anyway).\n\t\t\tsecond = symbol.charCodeAt(1);\n\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\treturn (first - HIGH_SURROGATE_MIN) * 0x400 +\n\t\t\t\tsecond - LOW_SURROGATE_MIN + 0x10000;\n\t\t}\n\t\treturn first;\n\t};\n\n\tvar createBMPCharacterClasses = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar result = '';\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\tif (dataIsSingleton(data)) {\n\t\t\treturn codePointToString(data[0]);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\t\t\tif (start == end) {\n\t\t\t\tresult += codePointToString(start);\n\t\t\t} else if (start + 1 == end) {\n\t\t\t\tresult += codePointToString(start) + codePointToString(end);\n\t\t\t} else {\n\t\t\t\tresult += codePointToString(start) + '-' + codePointToString(end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn '[' + result + ']';\n\t};\n\n\tvar splitAtBMP = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar loneHighSurrogates = [];\n\t\tvar bmp = [];\n\t\tvar astral = [];\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\t\t\tif (start <= 0xFFFF && end <= 0xFFFF) {\n\t\t\t\t// Both `start` and `end` are within the BMP range.\n\t\t\t\tif (start >= HIGH_SURROGATE_MIN && start <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\t// `start` lies in the high surrogates range.\n\t\t\t\t\tif (end <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\t\tloneHighSurrogates.push(start, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tloneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\t\tbmp.push(HIGH_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, end + 1);\n\t\t\t\t} else if (start < HIGH_SURROGATE_MIN && end > HIGH_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t} else {\n\t\t\t\t\tbmp.push(start, end + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (start <= 0xFFFF && end > 0xFFFF) {\n\t\t\t\t// `start` is in the BMP range, but `end` lies within the astral range.\n\t\t\t\tif (start >= HIGH_SURROGATE_MIN && start <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\t// `start` lies in the high surrogates range. Since `end` is astral,\n\t\t\t\t\t// we can just add all high surrogates starting from `start` to\n\t\t\t\t\t// `loneHighSurrogates`, any other BMP code points to `bmp`, and the\n\t\t\t\t\t// remaining symbols to `astral`.\n\t\t\t\t\tloneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tbmp.push(HIGH_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t} else if (start < HIGH_SURROGATE_MIN) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t} else { // `start > HIGH_SURROGATE_MAX` holds true.\n\t\t\t\t\tbmp.push(start, 0xFFFF + 1);\n\t\t\t\t}\n\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both `start` and `end` are in the astral range.\n\t\t\t\tastral.push(start, end + 1);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn {\n\t\t\t'loneHighSurrogates': loneHighSurrogates,\n\t\t\t'bmp': bmp,\n\t\t\t'astral': astral\n\t\t};\n\t};\n\n\tvar optimizeSurrogateMappings = function(surrogateMappings) {\n\t\tvar result = [];\n\t\tvar tmpLow = [];\n\t\tvar addLow = false;\n\t\tvar mapping;\n\t\tvar nextMapping;\n\t\tvar highSurrogates;\n\t\tvar lowSurrogates;\n\t\tvar nextHighSurrogates;\n\t\tvar nextLowSurrogates;\n\t\tvar index = -1;\n\t\tvar length = surrogateMappings.length;\n\t\twhile (++index < length) {\n\t\t\tmapping = surrogateMappings[index];\n\t\t\tnextMapping = surrogateMappings[index + 1];\n\t\t\tif (!nextMapping) {\n\t\t\t\tresult.push(mapping);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\thighSurrogates = mapping[0];\n\t\t\tlowSurrogates = mapping[1];\n\t\t\tnextHighSurrogates = nextMapping[0];\n\t\t\tnextLowSurrogates = nextMapping[1];\n\n\t\t\t// Check for identical high surrogate ranges.\n\t\t\ttmpLow = lowSurrogates;\n\t\t\twhile (\n\t\t\t\tnextHighSurrogates &&\n\t\t\t\thighSurrogates[0] == nextHighSurrogates[0] &&\n\t\t\t\thighSurrogates[1] == nextHighSurrogates[1]\n\t\t\t) {\n\t\t\t\t// Merge with the next item.\n\t\t\t\tif (dataIsSingleton(nextLowSurrogates)) {\n\t\t\t\t\ttmpLow = dataAdd(tmpLow, nextLowSurrogates[0]);\n\t\t\t\t} else {\n\t\t\t\t\ttmpLow = dataAddRange(\n\t\t\t\t\t\ttmpLow,\n\t\t\t\t\t\tnextLowSurrogates[0],\n\t\t\t\t\t\tnextLowSurrogates[1] - 1\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t++index;\n\t\t\t\tmapping = surrogateMappings[index];\n\t\t\t\thighSurrogates = mapping[0];\n\t\t\t\tlowSurrogates = mapping[1];\n\t\t\t\tnextMapping = surrogateMappings[index + 1];\n\t\t\t\tnextHighSurrogates = nextMapping && nextMapping[0];\n\t\t\t\tnextLowSurrogates = nextMapping && nextMapping[1];\n\t\t\t\taddLow = true;\n\t\t\t}\n\t\t\tresult.push([\n\t\t\t\thighSurrogates,\n\t\t\t\taddLow ? tmpLow : lowSurrogates\n\t\t\t]);\n\t\t\taddLow = false;\n\t\t}\n\t\treturn optimizeByLowSurrogates(result);\n\t};\n\n\tvar optimizeByLowSurrogates = function(surrogateMappings) {\n\t\tif (surrogateMappings.length == 1) {\n\t\t\treturn surrogateMappings;\n\t\t}\n\t\tvar index = -1;\n\t\tvar innerIndex = -1;\n\t\twhile (++index < surrogateMappings.length) {\n\t\t\tvar mapping = surrogateMappings[index];\n\t\t\tvar lowSurrogates = mapping[1];\n\t\t\tvar lowSurrogateStart = lowSurrogates[0];\n\t\t\tvar lowSurrogateEnd = lowSurrogates[1];\n\t\t\tinnerIndex = index; // Note: the loop starts at the next index.\n\t\t\twhile (++innerIndex < surrogateMappings.length) {\n\t\t\t\tvar otherMapping = surrogateMappings[innerIndex];\n\t\t\t\tvar otherLowSurrogates = otherMapping[1];\n\t\t\t\tvar otherLowSurrogateStart = otherLowSurrogates[0];\n\t\t\t\tvar otherLowSurrogateEnd = otherLowSurrogates[1];\n\t\t\t\tif (\n\t\t\t\t\tlowSurrogateStart == otherLowSurrogateStart &&\n\t\t\t\t\tlowSurrogateEnd == otherLowSurrogateEnd\n\t\t\t\t) {\n\t\t\t\t\t// Add the code points in the other item to this one.\n\t\t\t\t\tif (dataIsSingleton(otherMapping[0])) {\n\t\t\t\t\t\tmapping[0] = dataAdd(mapping[0], otherMapping[0][0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmapping[0] = dataAddRange(\n\t\t\t\t\t\t\tmapping[0],\n\t\t\t\t\t\t\totherMapping[0][0],\n\t\t\t\t\t\t\totherMapping[0][1] - 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Remove the other, now redundant, item.\n\t\t\t\t\tsurrogateMappings.splice(innerIndex, 1);\n\t\t\t\t\t--innerIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn surrogateMappings;\n\t};\n\n\tvar surrogateSet = function(data) {\n\t\t// Exit early if `data` is an empty set.\n\t\tif (!data.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar startHigh;\n\t\tvar startLow;\n\t\tvar prevStartHigh = 0;\n\t\tvar prevEndHigh = 0;\n\t\tvar tmpLow = [];\n\t\tvar endHigh;\n\t\tvar endLow;\n\t\tvar surrogateMappings = [];\n\t\tvar length = data.length;\n\t\tvar dataHigh = [];\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1;\n\n\t\t\tstartHigh = highSurrogate(start);\n\t\t\tstartLow = lowSurrogate(start);\n\t\t\tendHigh = highSurrogate(end);\n\t\t\tendLow = lowSurrogate(end);\n\n\t\t\tvar startsWithLowestLowSurrogate = startLow == LOW_SURROGATE_MIN;\n\t\t\tvar endsWithHighestLowSurrogate = endLow == LOW_SURROGATE_MAX;\n\t\t\tvar complete = false;\n\n\t\t\t// Append the previous high-surrogate-to-low-surrogate mappings.\n\t\t\t// Step 1: `(startHigh, startLow)` to `(startHigh, LOW_SURROGATE_MAX)`.\n\t\t\tif (\n\t\t\t\tstartHigh == endHigh ||\n\t\t\t\tstartsWithLowestLowSurrogate && endsWithHighestLowSurrogate\n\t\t\t) {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[startHigh, endHigh + 1],\n\t\t\t\t\t[startLow, endLow + 1]\n\t\t\t\t]);\n\t\t\t\tcomplete = true;\n\t\t\t} else {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[startHigh, startHigh + 1],\n\t\t\t\t\t[startLow, LOW_SURROGATE_MAX + 1]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\t// Step 2: `(startHigh + 1, LOW_SURROGATE_MIN)` to\n\t\t\t// `(endHigh - 1, LOW_SURROGATE_MAX)`.\n\t\t\tif (!complete && startHigh + 1 < endHigh) {\n\t\t\t\tif (endsWithHighestLowSurrogate) {\n\t\t\t\t\t// Combine step 2 and step 3.\n\t\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t\t[startHigh + 1, endHigh + 1],\n\t\t\t\t\t\t[LOW_SURROGATE_MIN, endLow + 1]\n\t\t\t\t\t]);\n\t\t\t\t\tcomplete = true;\n\t\t\t\t} else {\n\t\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t\t[startHigh + 1, endHigh],\n\t\t\t\t\t\t[LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1]\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Step 3. `(endHigh, LOW_SURROGATE_MIN)` to `(endHigh, endLow)`.\n\t\t\tif (!complete) {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[endHigh, endHigh + 1],\n\t\t\t\t\t[LOW_SURROGATE_MIN, endLow + 1]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tprevStartHigh = startHigh;\n\t\t\tprevEndHigh = endHigh;\n\n\t\t\tindex += 2;\n\t\t}\n\n\t\t// The format of `surrogateMappings` is as follows:\n\t\t//\n\t\t//     [ surrogateMapping1, surrogateMapping2 ]\n\t\t//\n\t\t// i.e.:\n\t\t//\n\t\t//     [\n\t\t//       [ highSurrogates1, lowSurrogates1 ],\n\t\t//       [ highSurrogates2, lowSurrogates2 ]\n\t\t//     ]\n\t\treturn optimizeSurrogateMappings(surrogateMappings);\n\t};\n\n\tvar createSurrogateCharacterClasses = function(surrogateMappings) {\n\t\tvar result = [];\n\t\tforEach(surrogateMappings, function(surrogateMapping) {\n\t\t\tvar highSurrogates = surrogateMapping[0];\n\t\t\tvar lowSurrogates = surrogateMapping[1];\n\t\t\tresult.push(\n\t\t\t\tcreateBMPCharacterClasses(highSurrogates) +\n\t\t\t\tcreateBMPCharacterClasses(lowSurrogates)\n\t\t\t);\n\t\t});\n\t\treturn result.join('|');\n\t};\n\n\tvar createCharacterClassesFromData = function(data) {\n\t\tvar result = [];\n\n\t\tvar parts = splitAtBMP(data);\n\t\tvar loneHighSurrogates = parts.loneHighSurrogates;\n\t\tvar bmp = parts.bmp;\n\t\tvar astral = parts.astral;\n\t\tvar hasAstral = !dataIsEmpty(parts.astral);\n\t\tvar hasLoneSurrogates = !dataIsEmpty(loneHighSurrogates);\n\n\t\tvar surrogateMappings = surrogateSet(astral);\n\n\t\t// If we’re not dealing with any astral symbols, there’s no need to move\n\t\t// individual code points that are high surrogates to the end of the regex.\n\t\tif (!hasAstral && hasLoneSurrogates) {\n\t\t\tbmp = dataAddData(bmp, loneHighSurrogates);\n\t\t}\n\n\t\tif (!dataIsEmpty(bmp)) {\n\t\t\t// The data set contains BMP code points that are not high surrogates\n\t\t\t// needed for astral code points in the set.\n\t\t\tresult.push(createBMPCharacterClasses(bmp));\n\t\t}\n\t\tif (surrogateMappings.length) {\n\t\t\t// The data set contains astral code points; append character classes\n\t\t\t// based on their surrogate pairs.\n\t\t\tresult.push(createSurrogateCharacterClasses(surrogateMappings));\n\t\t}\n\t\tif (hasAstral && hasLoneSurrogates) {\n\t\t\t// The data set contains lone high surrogates; append these. Lone high\n\t\t\t// surrogates must go at the end of the regex if astral symbols are to be\n\t\t\t// matched as well.\n\t\t\tresult.push(createBMPCharacterClasses(loneHighSurrogates));\n\t\t}\n\t\treturn result.join('|');\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// `regenerate` can be used as a constructor (and new methods can be added to\n\t// its prototype) but also as a regular function, the latter of which is the\n\t// documented and most common usage. For that reason, it’s not capitalized.\n\tvar regenerate = function(value) {\n\t\tif (arguments.length > 1) {\n\t\t\tvalue = slice.call(arguments);\n\t\t}\n\t\tif (this instanceof regenerate) {\n\t\t\tthis.data = [];\n\t\t\treturn value ? this.add(value) : this;\n\t\t}\n\t\treturn (new regenerate).add(value);\n\t};\n\n\tregenerate.version = '1.0.1';\n\n\tvar proto = regenerate.prototype;\n\textend(proto, {\n\t\t'add': function(value) {\n\t\t\tvar $this = this;\n\t\t\tif (value == null) {\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (value instanceof regenerate) {\n\t\t\t\t// Allow passing other Regenerate instances.\n\t\t\t\t$this.data = dataAddData($this.data, value.data);\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tvalue = slice.call(arguments);\n\t\t\t}\n\t\t\tif (isArray(value)) {\n\t\t\t\tforEach(value, function(item) {\n\t\t\t\t\t$this.add(item);\n\t\t\t\t});\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\t$this.data = dataAdd(\n\t\t\t\t$this.data,\n\t\t\t\tisNumber(value) ? value : symbolToCodePoint(value)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'remove': function(value) {\n\t\t\tvar $this = this;\n\t\t\tif (value == null) {\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (value instanceof regenerate) {\n\t\t\t\t// Allow passing other Regenerate instances.\n\t\t\t\t$this.data = dataRemoveData($this.data, value.data);\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tvalue = slice.call(arguments);\n\t\t\t}\n\t\t\tif (isArray(value)) {\n\t\t\t\tforEach(value, function(item) {\n\t\t\t\t\t$this.remove(item);\n\t\t\t\t});\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\t$this.data = dataRemove(\n\t\t\t\t$this.data,\n\t\t\t\tisNumber(value) ? value : symbolToCodePoint(value)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'addRange': function(start, end) {\n\t\t\tvar $this = this;\n\t\t\t$this.data = dataAddRange($this.data,\n\t\t\t\tisNumber(start) ? start : symbolToCodePoint(start),\n\t\t\t\tisNumber(end) ? end : symbolToCodePoint(end)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'removeRange': function(start, end) {\n\t\t\tvar $this = this;\n\t\t\tvar startCodePoint = isNumber(start) ? start : symbolToCodePoint(start);\n\t\t\tvar endCodePoint = isNumber(end) ? end : symbolToCodePoint(end);\n\t\t\t$this.data = dataRemoveRange(\n\t\t\t\t$this.data,\n\t\t\t\tstartCodePoint,\n\t\t\t\tendCodePoint\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'intersection': function(argument) {\n\t\t\tvar $this = this;\n\t\t\t// Allow passing other Regenerate instances.\n\t\t\t// TODO: Optimize this by writing and using `dataIntersectionData()`.\n\t\t\tvar array = argument instanceof regenerate ?\n\t\t\t\tdataToArray(argument.data) :\n\t\t\t\targument;\n\t\t\t$this.data = dataIntersection($this.data, array);\n\t\t\treturn $this;\n\t\t},\n\t\t'contains': function(codePoint) {\n\t\t\treturn dataContains(\n\t\t\t\tthis.data,\n\t\t\t\tisNumber(codePoint) ? codePoint : symbolToCodePoint(codePoint)\n\t\t\t);\n\t\t},\n\t\t'clone': function() {\n\t\t\tvar set = new regenerate;\n\t\t\tset.data = this.data.slice(0);\n\t\t\treturn set;\n\t\t},\n\t\t'toString': function() {\n\t\t\tvar result = createCharacterClassesFromData(this.data);\n\t\t\t// Use `\\0` instead of `\\x00` where possible.\n\t\t\treturn result.replace(regexNull, '\\\\0$1');\n\t\t},\n\t\t'toRegExp': function(flags) {\n\t\t\treturn RegExp(this.toString(), flags || '');\n\t\t},\n\t\t'valueOf': function() { // Note: `valueOf` is aliased as `toArray`.\n\t\t\treturn dataToArray(this.data);\n\t\t}\n\t});\n\n\tproto.toArray = proto.valueOf;\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn regenerate;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = regenerate;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfreeExports.regenerate = regenerate;\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.regenerate = regenerate;\n\t}\n\n}(this));\n","/*!\n * RegJSGen\n * Copyright 2014 Benjamin Tan <https://d10.github.io/>\n * Available under MIT license <http://d10.mit-license.org/>\n */\n;(function() {\n  'use strict';\n\n  /** Used to determine if values are of the language type `Object` */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Backup possible global object */\n  var oldRoot = root;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /*! Based on https://mths.be/fromcodepoint v0.2.0 by @mathias */\n\n  var stringFromCharCode = String.fromCharCode;\n  var floor = Math.floor;\n  function fromCodePoint() {\n    var MAX_SIZE = 0x4000;\n    var codeUnits = [];\n    var highSurrogate;\n    var lowSurrogate;\n    var index = -1;\n    var length = arguments.length;\n    if (!length) {\n      return '';\n    }\n    var result = '';\n    while (++index < length) {\n      var codePoint = Number(arguments[index]);\n      if (\n        !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n        codePoint < 0 || // not a valid Unicode code point\n        codePoint > 0x10FFFF || // not a valid Unicode code point\n        floor(codePoint) != codePoint // not an integer\n      ) {\n        throw RangeError('Invalid code point: ' + codePoint);\n      }\n      if (codePoint <= 0xFFFF) {\n        // BMP code point\n        codeUnits.push(codePoint);\n      } else {\n        // Astral code point; split in surrogate halves\n        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        codePoint -= 0x10000;\n        highSurrogate = (codePoint >> 10) + 0xD800;\n        lowSurrogate = (codePoint % 0x400) + 0xDC00;\n        codeUnits.push(highSurrogate, lowSurrogate);\n      }\n      if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n        result += stringFromCharCode.apply(null, codeUnits);\n        codeUnits.length = 0;\n      }\n    }\n    return result;\n  }\n\n  function assertType(type, expected) {\n    if (expected.indexOf('|') == -1) {\n      if (type == expected) {\n        return;\n      }\n\n      throw Error('Invalid node type: ' + type);\n    }\n\n    expected = assertType.hasOwnProperty(expected)\n      ? assertType[expected]\n      : (assertType[expected] = RegExp('^(?:' + expected + ')$'));\n\n    if (expected.test(type)) {\n      return;\n    }\n\n    throw Error('Invalid node type: ' + type);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  function generate(node) {\n    var type = node.type;\n\n    if (generate.hasOwnProperty(type) && typeof generate[type] == 'function') {\n      return generate[type](node);\n    }\n\n    throw Error('Invalid node type: ' + type);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  function generateAlternative(node) {\n    assertType(node.type, 'alternative');\n\n    var terms = node.body,\n        length = terms ? terms.length : 0;\n\n    if (length == 1) {\n      return generateTerm(terms[0]);\n    } else {\n      var i = -1,\n          result = '';\n\n      while (++i < length) {\n        result += generateTerm(terms[i]);\n      }\n\n      return result;\n    }\n  }\n\n  function generateAnchor(node) {\n    assertType(node.type, 'anchor');\n\n    switch (node.kind) {\n      case 'start':\n        return '^';\n      case 'end':\n        return '$';\n      case 'boundary':\n        return '\\\\b';\n      case 'not-boundary':\n        return '\\\\B';\n      default:\n        throw Error('Invalid assertion');\n    }\n  }\n\n  function generateAtom(node) {\n    assertType(node.type, 'anchor|characterClass|characterClassEscape|dot|group|reference|value');\n\n    return generate(node);\n  }\n\n  function generateCharacterClass(node) {\n    assertType(node.type, 'characterClass');\n\n    var classRanges = node.body,\n        length = classRanges ? classRanges.length : 0;\n\n    var i = -1,\n        result = '[';\n\n    if (node.negative) {\n      result += '^';\n    }\n\n    while (++i < length) {\n      result += generateClassAtom(classRanges[i]);\n    }\n\n    result += ']';\n\n    return result;\n  }\n\n  function generateCharacterClassEscape(node) {\n    assertType(node.type, 'characterClassEscape');\n\n    return '\\\\' + node.value;\n  }\n\n  function generateCharacterClassRange(node) {\n    assertType(node.type, 'characterClassRange');\n\n    var min = node.min,\n        max = node.max;\n\n    if (min.type == 'characterClassRange' || max.type == 'characterClassRange') {\n      throw Error('Invalid character class range');\n    }\n\n    return generateClassAtom(min) + '-' + generateClassAtom(max);\n  }\n\n  function generateClassAtom(node) {\n    assertType(node.type, 'anchor|characterClassEscape|characterClassRange|dot|value');\n\n    return generate(node);\n  }\n\n  function generateDisjunction(node) {\n    assertType(node.type, 'disjunction');\n\n    var body = node.body,\n        length = body ? body.length : 0;\n\n    if (length == 0) {\n      throw Error('No body');\n    } else if (length == 1) {\n      return generate(body[0]);\n    } else {\n      var i = -1,\n          result = '';\n\n      while (++i < length) {\n        if (i != 0) {\n          result += '|';\n        }\n        result += generate(body[i]);\n      }\n\n      return result;\n    }\n  }\n\n  function generateDot(node) {\n    assertType(node.type, 'dot');\n\n    return '.';\n  }\n\n  function generateGroup(node) {\n    assertType(node.type, 'group');\n\n    var result = '(';\n\n    switch (node.behavior) {\n      case 'normal':\n        break;\n      case 'ignore':\n        result += '?:';\n        break;\n      case 'lookahead':\n        result += '?=';\n        break;\n      case 'negativeLookahead':\n        result += '?!';\n        break;\n      default:\n        throw Error('Invalid behaviour: ' + node.behaviour);\n    }\n\n    var body = node.body,\n        length = body ? body.length : 0;\n\n    if (length == 1) {\n      result += generate(body[0]);\n    } else {\n      var i = -1;\n\n      while (++i < length) {\n        result += generate(body[i]);\n      }\n    }\n\n    result += ')';\n\n    return result;\n  }\n\n  function generateQuantifier(node) {\n    assertType(node.type, 'quantifier');\n\n    var quantifier = '',\n        min = node.min,\n        max = node.max;\n\n    switch (max) {\n      case undefined:\n      case null:\n        switch (min) {\n          case 0:\n            quantifier = '*'\n            break;\n          case 1:\n            quantifier = '+';\n            break;\n          default:\n            quantifier = '{' + min + ',}';\n            break;\n        }\n        break;\n      default:\n        if (min == max) {\n          quantifier = '{' + min + '}';\n        }\n        else if (min == 0 && max == 1) {\n          quantifier = '?';\n        } else {\n          quantifier = '{' + min + ',' + max + '}';\n        }\n        break;\n    }\n\n    if (!node.greedy) {\n      quantifier += '?';\n    }\n\n    return generateAtom(node.body[0]) + quantifier;\n  }\n\n  function generateReference(node) {\n    assertType(node.type, 'reference');\n\n    return '\\\\' + node.matchIndex;\n  }\n\n  function generateTerm(node) {\n    assertType(node.type, 'anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|value');\n\n    return generate(node);\n  }\n\n  function generateValue(node) {\n    assertType(node.type, 'value');\n\n    var kind = node.kind,\n        codePoint = node.codePoint;\n\n    switch (kind) {\n      case 'controlLetter':\n        return '\\\\c' + fromCodePoint(codePoint + 64);\n      case 'hexadecimalEscape':\n        return '\\\\x' + ('00' + codePoint.toString(16).toUpperCase()).slice(-2);\n      case 'identifier':\n        return '\\\\' + fromCodePoint(codePoint);\n      case 'null':\n        return '\\\\' + codePoint;\n      case 'octal':\n        return '\\\\' + codePoint.toString(8);\n      case 'singleEscape':\n        switch (codePoint) {\n          case 0x0008:\n            return '\\\\b';\n          case 0x009:\n            return '\\\\t';\n          case 0x00A:\n            return '\\\\n';\n          case 0x00B:\n            return '\\\\v';\n          case 0x00C:\n            return '\\\\f';\n          case 0x00D:\n            return '\\\\r';\n          default:\n            throw Error('Invalid codepoint: ' + codePoint);\n        }\n      case 'symbol':\n        return fromCodePoint(codePoint);\n      case 'unicodeEscape':\n        return '\\\\u' + ('0000' + codePoint.toString(16).toUpperCase()).slice(-4);\n      case 'unicodeCodePointEscape':\n        return '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n      default:\n        throw Error('Unsupported node kind: ' + kind);\n    }\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  generate.alternative = generateAlternative;\n  generate.anchor = generateAnchor;\n  generate.characterClass = generateCharacterClass;\n  generate.characterClassEscape = generateCharacterClassEscape;\n  generate.characterClassRange = generateCharacterClassRange;\n  generate.disjunction = generateDisjunction;\n  generate.dot = generateDot;\n  generate.group = generateGroup;\n  generate.quantifier = generateQuantifier;\n  generate.reference = generateReference;\n  generate.value = generateValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // export regjsgen\n  // some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // define as an anonymous module so, through path mapping, it can be aliased\n    define(function() {\n      return {\n        'generate': generate\n      };\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports && freeModule) {\n    // in Narwhal, Node.js, Rhino -require, or RingoJS\n    freeExports.generate = generate;\n  }\n  // in a browser or Rhino\n  else {\n    root.regjsgen = {\n      'generate': generate\n    };\n  }\n}.call(this));\n","// regjsparser\n//\n// ==================================================================\n//\n// See ECMA-262 Standard: 15.10.1\n//\n// NOTE: The ECMA-262 standard uses the term \"Assertion\" for /^/. Here the\n//   term \"Anchor\" is used.\n//\n// Pattern ::\n//      Disjunction\n//\n// Disjunction ::\n//      Alternative\n//      Alternative | Disjunction\n//\n// Alternative ::\n//      [empty]\n//      Alternative Term\n//\n// Term ::\n//      Anchor\n//      Atom\n//      Atom Quantifier\n//\n// Anchor ::\n//      ^\n//      $\n//      \\ b\n//      \\ B\n//      ( ? = Disjunction )\n//      ( ? ! Disjunction )\n//\n// Quantifier ::\n//      QuantifierPrefix\n//      QuantifierPrefix ?\n//\n// QuantifierPrefix ::\n//      *\n//      +\n//      ?\n//      { DecimalDigits }\n//      { DecimalDigits , }\n//      { DecimalDigits , DecimalDigits }\n//\n// Atom ::\n//      PatternCharacter\n//      .\n//      \\ AtomEscape\n//      CharacterClass\n//      ( Disjunction )\n//      ( ? : Disjunction )\n//\n// PatternCharacter ::\n//      SourceCharacter but not any of: ^ $ \\ . * + ? ( ) [ ] { } |\n//\n// AtomEscape ::\n//      DecimalEscape\n//      CharacterEscape\n//      CharacterClassEscape\n//\n// CharacterEscape[U] ::\n//      ControlEscape\n//      c ControlLetter\n//      HexEscapeSequence\n//      RegExpUnicodeEscapeSequence[?U] (ES6)\n//      IdentityEscape[?U]\n//\n// ControlEscape ::\n//      one of f n r t v\n// ControlLetter ::\n//      one of\n//          a b c d e f g h i j k l m n o p q r s t u v w x y z\n//          A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n//\n// IdentityEscape ::\n//      SourceCharacter but not IdentifierPart\n//      <ZWJ>\n//      <ZWNJ>\n//\n// DecimalEscape ::\n//      DecimalIntegerLiteral [lookahead ∉ DecimalDigit]\n//\n// CharacterClassEscape ::\n//      one of d D s S w W\n//\n// CharacterClass ::\n//      [ [lookahead ∉ {^}] ClassRanges ]\n//      [ ^ ClassRanges ]\n//\n// ClassRanges ::\n//      [empty]\n//      NonemptyClassRanges\n//\n// NonemptyClassRanges ::\n//      ClassAtom\n//      ClassAtom NonemptyClassRangesNoDash\n//      ClassAtom - ClassAtom ClassRanges\n//\n// NonemptyClassRangesNoDash ::\n//      ClassAtom\n//      ClassAtomNoDash NonemptyClassRangesNoDash\n//      ClassAtomNoDash - ClassAtom ClassRanges\n//\n// ClassAtom ::\n//      -\n//      ClassAtomNoDash\n//\n// ClassAtomNoDash ::\n//      SourceCharacter but not one of \\ or ] or -\n//      \\ ClassEscape\n//\n// ClassEscape ::\n//      DecimalEscape\n//      b\n//      CharacterEscape\n//      CharacterClassEscape\n\n(function() {\n\n  function parse(str, flags) {\n    var hasUnicodeFlag = (flags || \"\").indexOf(\"u\") !== -1;\n    var pos = 0;\n    var closedCaptureCounter = 0;\n\n    function addRaw(node) {\n      node.raw = str.substring(node.range[0], node.range[1]);\n      return node;\n    }\n\n    function updateRawStart(node, start) {\n      node.range[0] = start;\n      return addRaw(node);\n    }\n\n    function createAnchor(kind, rawLength) {\n      return addRaw({\n        type: 'anchor',\n        kind: kind,\n        range: [\n          pos - rawLength,\n          pos\n        ]\n      });\n    }\n\n    function createValue(kind, codePoint, from, to) {\n      return addRaw({\n        type: 'value',\n        kind: kind,\n        codePoint: codePoint,\n        range: [from, to]\n      });\n    }\n\n    function createEscaped(kind, codePoint, value, fromOffset) {\n      fromOffset = fromOffset || 0;\n      return createValue(kind, codePoint, pos - (value.length + fromOffset), pos);\n    }\n\n    function createCharacter(matches) {\n      var _char = matches[0];\n      var first = _char.charCodeAt(0);\n      if (hasUnicodeFlag) {\n        var second;\n        if (_char.length === 1 && first >= 0xD800 && first <= 0xDBFF) {\n          second = lookahead().charCodeAt(0);\n          if (second >= 0xDC00 && second <= 0xDFFF) {\n            // Unicode surrogate pair\n            pos++;\n            return createValue(\n                'symbol',\n                (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000,\n                pos - 2, pos);\n          }\n        }\n      }\n      return createValue('symbol', first, pos - 1, pos);\n    }\n\n    function createDisjunction(alternatives, from, to) {\n      return addRaw({\n        type: 'disjunction',\n        body: alternatives,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createDot() {\n      return addRaw({\n        type: 'dot',\n        range: [\n          pos - 1,\n          pos\n        ]\n      });\n    }\n\n    function createCharacterClassEscape(value) {\n      return addRaw({\n        type: 'characterClassEscape',\n        value: value,\n        range: [\n          pos - 2,\n          pos\n        ]\n      });\n    }\n\n    function createReference(matchIndex) {\n      return addRaw({\n        type: 'reference',\n        matchIndex: parseInt(matchIndex, 10),\n        range: [\n          pos - 1 - matchIndex.length,\n          pos\n        ]\n      });\n    }\n\n    function createGroup(behavior, disjunction, from, to) {\n      return addRaw({\n        type: 'group',\n        behavior: behavior,\n        body: disjunction,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createQuantifier(min, max, from, to) {\n      if (to == null) {\n        from = pos - 1;\n        to = pos;\n      }\n\n      return addRaw({\n        type: 'quantifier',\n        min: min,\n        max: max,\n        greedy: true,\n        body: null, // set later on,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createAlternative(terms, from, to) {\n      return addRaw({\n        type: 'alternative',\n        body: terms,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createCharacterClass(classRanges, negative, from, to) {\n      return addRaw({\n        type: 'characterClass',\n        body: classRanges,\n        negative: negative,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createClassRange(min, max, from, to) {\n      // See 15.10.2.15:\n      if (min.codePoint > max.codePoint) {\n        throw SyntaxError('invalid range in character class');\n      }\n\n      return addRaw({\n        type: 'characterClassRange',\n        min: min,\n        max: max,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function flattenBody(body) {\n      if (body.type === 'alternative') {\n        return body.body;\n      } else {\n        return [body];\n      }\n    }\n\n    function isEmpty(obj) {\n      return obj.type === 'empty';\n    }\n\n    function incr(amount) {\n      amount = (amount || 1);\n      var res = str.substring(pos, pos + amount);\n      pos += (amount || 1);\n      return res;\n    }\n\n    function skip(value) {\n      if (!match(value)) {\n        throw SyntaxError('character: ' + value);\n      }\n    }\n\n    function match(value) {\n      if (str.indexOf(value, pos) === pos) {\n        return incr(value.length);\n      }\n    }\n\n    function lookahead() {\n      return str[pos];\n    }\n\n    function current(value) {\n      return str.indexOf(value, pos) === pos;\n    }\n\n    function next(value) {\n      return str[pos + 1] === value;\n    }\n\n    function matchReg(regExp) {\n      var subStr = str.substring(pos);\n      var res = subStr.match(regExp);\n      if (res) {\n        res.range = [];\n        res.range[0] = pos;\n        incr(res[0].length);\n        res.range[1] = pos;\n      }\n      return res;\n    }\n\n    function parseDisjunction() {\n      // Disjunction ::\n      //      Alternative\n      //      Alternative | Disjunction\n      var res = [], from = pos;\n      res.push(parseAlternative());\n\n      while (match('|')) {\n        res.push(parseAlternative());\n      }\n\n      if (res.length === 1) {\n        return res[0];\n      }\n\n      return createDisjunction(res, from, pos);\n    }\n\n    function parseAlternative() {\n      var res = [], from = pos;\n      var term;\n\n      // Alternative ::\n      //      [empty]\n      //      Alternative Term\n      while (term = parseTerm()) {\n        res.push(term);\n      }\n\n      if (res.length === 1) {\n        return res[0];\n      }\n\n      return createAlternative(res, from, pos);\n    }\n\n    function parseTerm() {\n      // Term ::\n      //      Anchor\n      //      Atom\n      //      Atom Quantifier\n\n      if (pos >= str.length || current('|') || current(')')) {\n        return null; /* Means: The term is empty */\n      }\n\n      var anchor = parseAnchor();\n\n      if (anchor) {\n        return anchor;\n      }\n\n      var atom = parseAtom();\n      if (!atom) {\n        throw SyntaxError('Expected atom')\n      }\n      var quantifier = parseQuantifier() || false;\n      if (quantifier) {\n        quantifier.body = flattenBody(atom);\n        // The quantifier contains the atom. Therefore, the beginning of the\n        // quantifier range is given by the beginning of the atom.\n        updateRawStart(quantifier, atom.range[0]);\n        return quantifier;\n      }\n      return atom;\n    }\n\n    function parseGroup(matchA, typeA, matchB, typeB) {\n      var type = null, from = pos;\n\n      if (match(matchA)) {\n        type = typeA;\n      } else if (match(matchB)) {\n        type = typeB;\n      } else {\n        return false;\n      }\n\n      var body = parseDisjunction();\n      if (!body) {\n        throw SyntaxError('Expected disjunction');\n      }\n      skip(')');\n      var group = createGroup(type, flattenBody(body), from, pos);\n\n      if (type == 'normal') {\n        // Keep track of the number of closed groups. This is required for\n        // parseDecimalEscape().\n        closedCaptureCounter++;\n      }\n      return group;\n    }\n\n    function parseAnchor() {\n      // Anchor ::\n      //      ^\n      //      $\n      //      \\ b\n      //      \\ B\n      //      ( ? = Disjunction )\n      //      ( ? ! Disjunction )\n      var res, from = pos;\n\n      if (match('^')) {\n        return createAnchor('start', 1 /* rawLength */);\n      } else if (match('$')) {\n        return createAnchor('end', 1 /* rawLength */);\n      } else if (match('\\\\b')) {\n        return createAnchor('boundary', 2 /* rawLength */);\n      } else if (match('\\\\B')) {\n        return createAnchor('not-boundary', 2 /* rawLength */);\n      } else {\n        return parseGroup('(?=', 'lookahead', '(?!', 'negativeLookahead');\n      }\n    }\n\n    function parseQuantifier() {\n      // Quantifier ::\n      //      QuantifierPrefix\n      //      QuantifierPrefix ?\n      //\n      // QuantifierPrefix ::\n      //      *\n      //      +\n      //      ?\n      //      { DecimalDigits }\n      //      { DecimalDigits , }\n      //      { DecimalDigits , DecimalDigits }\n\n      var res;\n      var quantifier;\n      var min, max;\n\n      if (match('*')) {\n        quantifier = createQuantifier(0);\n      }\n      else if (match('+')) {\n        quantifier = createQuantifier(1);\n      }\n      else if (match('?')) {\n        quantifier = createQuantifier(0, 1);\n      }\n      else if (res = matchReg(/^\\{([0-9]+)\\}/)) {\n        min = parseInt(res[1], 10);\n        quantifier = createQuantifier(min, min, res.range[0], res.range[1]);\n      }\n      else if (res = matchReg(/^\\{([0-9]+),\\}/)) {\n        min = parseInt(res[1], 10);\n        quantifier = createQuantifier(min, undefined, res.range[0], res.range[1]);\n      }\n      else if (res = matchReg(/^\\{([0-9]+),([0-9]+)\\}/)) {\n        min = parseInt(res[1], 10);\n        max = parseInt(res[2], 10);\n        if (min > max) {\n          throw SyntaxError('numbers out of order in {} quantifier');\n        }\n        quantifier = createQuantifier(min, max, res.range[0], res.range[1]);\n      }\n\n      if (quantifier) {\n        if (match('?')) {\n          quantifier.greedy = false;\n          quantifier.range[1] += 1;\n        }\n      }\n\n      return quantifier;\n    }\n\n    function parseAtom() {\n      // Atom ::\n      //      PatternCharacter\n      //      .\n      //      \\ AtomEscape\n      //      CharacterClass\n      //      ( Disjunction )\n      //      ( ? : Disjunction )\n\n      var res;\n\n      // jviereck: allow ']', '}' here as well to be compatible with browser's\n      //   implementations: ']'.match(/]/);\n      // if (res = matchReg(/^[^^$\\\\.*+?()[\\]{}|]/)) {\n      if (res = matchReg(/^[^^$\\\\.*+?(){[|]/)) {\n        //      PatternCharacter\n        return createCharacter(res);\n      }\n      else if (match('.')) {\n        //      .\n        return createDot();\n      }\n      else if (match('\\\\')) {\n        //      \\ AtomEscape\n        res = parseAtomEscape();\n        if (!res) {\n          throw SyntaxError('atomEscape');\n        }\n        return res;\n      }\n      else if (res = parseCharacterClass()) {\n        return res;\n      }\n      else {\n        //      ( Disjunction )\n        //      ( ? : Disjunction )\n        return parseGroup('(?:', 'ignore', '(', 'normal');\n      }\n    }\n\n    function parseUnicodeSurrogatePairEscape(firstEscape) {\n      if (hasUnicodeFlag) {\n        var first, second;\n        if (firstEscape.kind == 'unicodeEscape' &&\n          (first = firstEscape.codePoint) >= 0xD800 && first <= 0xDBFF &&\n          current('\\\\') && next('u') ) {\n          var prevPos = pos;\n          pos++;\n          var secondEscape = parseClassEscape();\n          if (secondEscape.kind == 'unicodeEscape' &&\n            (second = secondEscape.codePoint) >= 0xDC00 && second <= 0xDFFF) {\n            // Unicode surrogate pair\n            firstEscape.range[1] = secondEscape.range[1];\n            firstEscape.codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n            firstEscape.type = 'value';\n            firstEscape.kind = 'unicodeCodePointEscape';\n            addRaw(firstEscape);\n          }\n          else {\n            pos = prevPos;\n          }\n        }\n      }\n      return firstEscape;\n    }\n\n    function parseClassEscape() {\n      return parseAtomEscape(true);\n    }\n\n    function parseAtomEscape(insideCharacterClass) {\n      // AtomEscape ::\n      //      DecimalEscape\n      //      CharacterEscape\n      //      CharacterClassEscape\n\n      var res;\n\n      res = parseDecimalEscape();\n      if (res) {\n        return res;\n      }\n\n      // For ClassEscape\n      if (insideCharacterClass) {\n        if (match('b')) {\n          // 15.10.2.19\n          // The production ClassEscape :: b evaluates by returning the\n          // CharSet containing the one character <BS> (Unicode value 0008).\n          return createEscaped('singleEscape', 0x0008, '\\\\b');\n        } else if (match('B')) {\n          throw SyntaxError('\\\\B not possible inside of CharacterClass');\n        }\n      }\n\n      res = parseCharacterEscape();\n\n      return res;\n    }\n\n\n    function parseDecimalEscape() {\n      // DecimalEscape ::\n      //      DecimalIntegerLiteral [lookahead ∉ DecimalDigit]\n      //      CharacterClassEscape :: one of d D s S w W\n\n      var res, match;\n\n      if (res = matchReg(/^(?!0)\\d+/)) {\n        match = res[0];\n        var refIdx = parseInt(res[0], 10);\n        if (refIdx <= closedCaptureCounter) {\n          // If the number is smaller than the normal-groups found so\n          // far, then it is a reference...\n          return createReference(res[0]);\n        } else {\n          // ... otherwise it needs to be interpreted as a octal (if the\n          // number is in an octal format). If it is NOT octal format,\n          // then the slash is ignored and the number is matched later\n          // as normal characters.\n\n          // Reset the position again, as maybe only parts of the previous\n          // matched numbers are actual octal numbers. E.g. in '019' only\n          // the '01' should be matched.\n          incr(-res[0].length);\n          if (res = matchReg(/^[0-7]{1,3}/)) {\n            return createEscaped('octal', parseInt(res[0], 8), res[0], 1);\n          } else {\n            // If we end up here, we have a case like /\\91/. Then the\n            // first slash is to be ignored and the 9 & 1 to be treated\n            // like ordinary characters. Create a character for the\n            // first number only here - other number-characters\n            // (if available) will be matched later.\n            res = createCharacter(matchReg(/^[89]/));\n            return updateRawStart(res, res.range[0] - 1);\n          }\n        }\n      }\n      // Only allow octal numbers in the following. All matched numbers start\n      // with a zero (if the do not, the previous if-branch is executed).\n      // If the number is not octal format and starts with zero (e.g. `091`)\n      // then only the zeros `0` is treated here and the `91` are ordinary\n      // characters.\n      // Example:\n      //   /\\091/.exec('\\091')[0].length === 3\n      else if (res = matchReg(/^[0-7]{1,3}/)) {\n        match = res[0];\n        if (/^0{1,3}$/.test(match)) {\n          // If they are all zeros, then only take the first one.\n          return createEscaped('null', 0x0000, '0', match.length + 1);\n        } else {\n          return createEscaped('octal', parseInt(match, 8), match, 1);\n        }\n      } else if (res = matchReg(/^[dDsSwW]/)) {\n        return createCharacterClassEscape(res[0]);\n      }\n      return false;\n    }\n\n    function parseCharacterEscape() {\n      // CharacterEscape ::\n      //      ControlEscape\n      //      c ControlLetter\n      //      HexEscapeSequence\n      //      UnicodeEscapeSequence\n      //      IdentityEscape\n\n      var res;\n      if (res = matchReg(/^[fnrtv]/)) {\n        // ControlEscape\n        var codePoint = 0;\n        switch (res[0]) {\n          case 't': codePoint = 0x009; break;\n          case 'n': codePoint = 0x00A; break;\n          case 'v': codePoint = 0x00B; break;\n          case 'f': codePoint = 0x00C; break;\n          case 'r': codePoint = 0x00D; break;\n        }\n        return createEscaped('singleEscape', codePoint, '\\\\' + res[0]);\n      } else if (res = matchReg(/^c([a-zA-Z])/)) {\n        // c ControlLetter\n        return createEscaped('controlLetter', res[1].charCodeAt(0) % 32, res[1], 2);\n      } else if (res = matchReg(/^x([0-9a-fA-F]{2})/)) {\n        // HexEscapeSequence\n        return createEscaped('hexadecimalEscape', parseInt(res[1], 16), res[1], 2);\n      } else if (res = matchReg(/^u([0-9a-fA-F]{4})/)) {\n        // UnicodeEscapeSequence\n        return parseUnicodeSurrogatePairEscape(\n          createEscaped('unicodeEscape', parseInt(res[1], 16), res[1], 2)\n        );\n      } else if (hasUnicodeFlag && (res = matchReg(/^u\\{([0-9a-fA-F]{1,})\\}/))) {\n        // RegExpUnicodeEscapeSequence (ES6 Unicode code point escape)\n        return createEscaped('unicodeCodePointEscape', parseInt(res[1], 16), res[1], 4);\n      } else {\n        // IdentityEscape\n        return parseIdentityEscape();\n      }\n    }\n\n    // Taken from the Esprima parser.\n    function isIdentifierPart(ch) {\n      // Generated by `tools/generate-identifier-regex.js`.\n      var NonAsciiIdentifierPart = new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]');\n\n      return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)\n        (ch >= 65 && ch <= 90) ||         // A..Z\n        (ch >= 97 && ch <= 122) ||        // a..z\n        (ch >= 48 && ch <= 57) ||         // 0..9\n        (ch === 92) ||                    // \\ (backslash)\n        ((ch >= 0x80) && NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n    }\n\n    function parseIdentityEscape() {\n      // IdentityEscape ::\n      //      SourceCharacter but not IdentifierPart\n      //      <ZWJ>\n      //      <ZWNJ>\n\n      var ZWJ = '\\u200C';\n      var ZWNJ = '\\u200D';\n\n      var res;\n      var tmp;\n\n      if (!isIdentifierPart(lookahead())) {\n        tmp = incr();\n        return createEscaped('identifier', tmp.charCodeAt(0), tmp, 1);\n      }\n\n      if (match(ZWJ)) {\n        // <ZWJ>\n        return createEscaped('identifier', 0x200C, ZWJ);\n      } else if (match(ZWNJ)) {\n        // <ZWNJ>\n        return createEscaped('identifier', 0x200D, ZWNJ);\n      }\n\n      return null;\n    }\n\n    function parseCharacterClass() {\n      // CharacterClass ::\n      //      [ [lookahead ∉ {^}] ClassRanges ]\n      //      [ ^ ClassRanges ]\n\n      var res, from = pos;\n      if (res = matchReg(/^\\[\\^/)) {\n        res = parseClassRanges();\n        skip(']');\n        return createCharacterClass(res, true, from, pos);\n      } else if (match('[')) {\n        res = parseClassRanges();\n        skip(']');\n        return createCharacterClass(res, false, from, pos);\n      }\n\n      return null;\n    }\n\n    function parseClassRanges() {\n      // ClassRanges ::\n      //      [empty]\n      //      NonemptyClassRanges\n\n      var res;\n      if (current(']')) {\n        // Empty array means nothing insinde of the ClassRange.\n        return [];\n      } else {\n        res = parseNonemptyClassRanges();\n        if (!res) {\n          throw SyntaxError('nonEmptyClassRanges');\n        }\n        return res;\n      }\n    }\n\n    function parseHelperClassRanges(atom) {\n      var from, to, res;\n      if (current('-') && !next(']')) {\n        // ClassAtom - ClassAtom ClassRanges\n        skip('-');\n\n        res = parseClassAtom();\n        if (!res) {\n          throw SyntaxError('classAtom');\n        }\n        to = pos;\n        var classRanges = parseClassRanges();\n        if (!classRanges) {\n          throw SyntaxError('classRanges');\n        }\n        from = atom.range[0];\n        if (classRanges.type === 'empty') {\n          return [createClassRange(atom, res, from, to)];\n        }\n        return [createClassRange(atom, res, from, to)].concat(classRanges);\n      }\n\n      res = parseNonemptyClassRangesNoDash();\n      if (!res) {\n        throw SyntaxError('nonEmptyClassRangesNoDash');\n      }\n\n      return [atom].concat(res);\n    }\n\n    function parseNonemptyClassRanges() {\n      // NonemptyClassRanges ::\n      //      ClassAtom\n      //      ClassAtom NonemptyClassRangesNoDash\n      //      ClassAtom - ClassAtom ClassRanges\n\n      var atom = parseClassAtom();\n      if (!atom) {\n        throw SyntaxError('classAtom');\n      }\n\n      if (current(']')) {\n        // ClassAtom\n        return [atom];\n      }\n\n      // ClassAtom NonemptyClassRangesNoDash\n      // ClassAtom - ClassAtom ClassRanges\n      return parseHelperClassRanges(atom);\n    }\n\n    function parseNonemptyClassRangesNoDash() {\n      // NonemptyClassRangesNoDash ::\n      //      ClassAtom\n      //      ClassAtomNoDash NonemptyClassRangesNoDash\n      //      ClassAtomNoDash - ClassAtom ClassRanges\n\n      var res = parseClassAtom();\n      if (!res) {\n        throw SyntaxError('classAtom');\n      }\n      if (current(']')) {\n        //      ClassAtom\n        return res;\n      }\n\n      // ClassAtomNoDash NonemptyClassRangesNoDash\n      // ClassAtomNoDash - ClassAtom ClassRanges\n      return parseHelperClassRanges(res);\n    }\n\n    function parseClassAtom() {\n      // ClassAtom ::\n      //      -\n      //      ClassAtomNoDash\n      if (match('-')) {\n        return createCharacter('-');\n      } else {\n        return parseClassAtomNoDash();\n      }\n    }\n\n    function parseClassAtomNoDash() {\n      // ClassAtomNoDash ::\n      //      SourceCharacter but not one of \\ or ] or -\n      //      \\ ClassEscape\n\n      var res;\n      if (res = matchReg(/^[^\\\\\\]-]/)) {\n        return createCharacter(res[0]);\n      } else if (match('\\\\')) {\n        res = parseClassEscape();\n        if (!res) {\n          throw SyntaxError('classEscape');\n        }\n\n        return parseUnicodeSurrogatePairEscape(res);\n      }\n    }\n\n    // Convert the input to a string and treat the empty string special.\n    str = String(str);\n    if (str === '') {\n      str = '(?:)';\n    }\n\n    var result = parseDisjunction();\n\n    if (result.range[1] !== str.length) {\n      throw SyntaxError('Could not parse entire input - got stuck: ' + str);\n    }\n\n    return result;\n  };\n\n  var regjsparser = {\n    parse: parse\n  };\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = regjsparser;\n  } else {\n    window.regjsparser = regjsparser;\n  }\n\n}());\n","var generate = require('regjsgen').generate;\nvar parse = require('regjsparser').parse;\nvar regenerate = require('regenerate');\nvar iuMappings = require('./data/iu-mappings.json');\nvar ESCAPE_SETS = require('./data/character-class-escape-sets.js');\n\nfunction getCharacterClassEscapeSet(character) {\n\tif (unicode) {\n\t\tif (ignoreCase) {\n\t\t\treturn ESCAPE_SETS.UNICODE_IGNORE_CASE[character];\n\t\t}\n\t\treturn ESCAPE_SETS.UNICODE[character];\n\t}\n\treturn ESCAPE_SETS.REGULAR[character];\n}\n\nvar object = {};\nvar hasOwnProperty = object.hasOwnProperty;\nfunction has(object, property) {\n\treturn hasOwnProperty.call(object, property);\n}\n\n// Prepare a Regenerate set containing all code points, used for negative\n// character classes (if any).\nvar UNICODE_SET = regenerate().addRange(0x0, 0x10FFFF);\n// Without the `u` flag, the range stops at 0xFFFF.\n// https://mths.be/es6#sec-pattern-semantics\nvar BMP_SET = regenerate().addRange(0x0, 0xFFFF);\n\n// Prepare a Regenerate set containing all code points that are supposed to be\n// matched by `/./u`. https://mths.be/es6#sec-atom\nvar DOT_SET_UNICODE = UNICODE_SET.clone() // all Unicode code points\n\t.remove(\n\t\t// minus `LineTerminator`s (https://mths.be/es6#sec-line-terminators):\n\t\t0x000A, // Line Feed <LF>\n\t\t0x000D, // Carriage Return <CR>\n\t\t0x2028, // Line Separator <LS>\n\t\t0x2029  // Paragraph Separator <PS>\n\t);\n// Prepare a Regenerate set containing all code points that are supposed to be\n// matched by `/./` (only BMP code points).\nvar DOT_SET = DOT_SET_UNICODE.clone()\n\t.intersection(BMP_SET);\n\n// Add a range of code points + any case-folded code points in that range to a\n// set.\nregenerate.prototype.iuAddRange = function(min, max) {\n\tvar $this = this;\n\tdo {\n\t\tvar folded = caseFold(min);\n\t\tif (folded) {\n\t\t\t$this.add(folded);\n\t\t}\n\t} while (++min <= max);\n\treturn $this;\n};\n\nfunction assign(target, source) {\n\tfor (var key in source) {\n\t\t// Note: `hasOwnProperty` is not needed here.\n\t\ttarget[key] = source[key];\n\t}\n}\n\nfunction update(item, pattern) {\n\t// TODO: Test if memoizing `pattern` here is worth the effort.\n\tvar tree = parse(pattern, '');\n\tswitch (tree.type) {\n\t\tcase 'characterClass':\n\t\tcase 'group':\n\t\tcase 'value':\n\t\t\t// No wrapping needed.\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// Wrap the pattern in a non-capturing group.\n\t\t\ttree = wrap(tree, pattern);\n\t}\n\tassign(item, tree);\n}\n\nfunction wrap(tree, pattern) {\n\t// Wrap the pattern in a non-capturing group.\n\treturn {\n\t\t'type': 'group',\n\t\t'behavior': 'ignore',\n\t\t'body': [tree],\n\t\t'raw': '(?:' + pattern + ')'\n\t};\n}\n\nfunction caseFold(codePoint) {\n\treturn has(iuMappings, codePoint) ? iuMappings[codePoint] : false;\n}\n\nvar ignoreCase = false;\nvar unicode = false;\nfunction processCharacterClass(characterClassItem) {\n\tvar set = regenerate();\n\tvar body = characterClassItem.body.forEach(function(item) {\n\t\tswitch (item.type) {\n\t\t\tcase 'value':\n\t\t\t\tset.add(item.codePoint);\n\t\t\t\tif (ignoreCase && unicode) {\n\t\t\t\t\tvar folded = caseFold(item.codePoint);\n\t\t\t\t\tif (folded) {\n\t\t\t\t\t\tset.add(folded);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'characterClassRange':\n\t\t\t\tvar min = item.min.codePoint;\n\t\t\t\tvar max = item.max.codePoint;\n\t\t\t\tset.addRange(min, max);\n\t\t\t\tif (ignoreCase && unicode) {\n\t\t\t\t\tset.iuAddRange(min, max);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'characterClassEscape':\n\t\t\t\tset.add(getCharacterClassEscapeSet(item.value));\n\t\t\t\tbreak;\n\t\t\t// The `default` clause is only here as a safeguard; it should never be\n\t\t\t// reached. Code coverage tools should ignore it.\n\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\tthrow Error('Unknown term type: ' + item.type);\n\t\t}\n\t});\n\tif (characterClassItem.negative) {\n\t\tset = (unicode ? UNICODE_SET : BMP_SET).clone().remove(set);\n\t}\n\tupdate(characterClassItem, set.toString());\n\treturn characterClassItem;\n}\n\nfunction processTerm(item) {\n\tswitch (item.type) {\n\t\tcase 'dot':\n\t\t\tupdate(\n\t\t\t\titem,\n\t\t\t\t(unicode ? DOT_SET_UNICODE : DOT_SET).toString()\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'characterClass':\n\t\t\titem = processCharacterClass(item);\n\t\t\tbreak;\n\t\tcase 'characterClassEscape':\n\t\t\tupdate(\n\t\t\t\titem,\n\t\t\t\tgetCharacterClassEscapeSet(item.value).toString()\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'alternative':\n\t\tcase 'disjunction':\n\t\tcase 'group':\n\t\tcase 'quantifier':\n\t\t\titem.body = item.body.map(processTerm);\n\t\t\tbreak;\n\t\tcase 'value':\n\t\t\tvar codePoint = item.codePoint;\n\t\t\tvar set = regenerate(codePoint);\n\t\t\tif (ignoreCase && unicode) {\n\t\t\t\tvar folded = caseFold(codePoint);\n\t\t\t\tif (folded) {\n\t\t\t\t\tset.add(folded);\n\t\t\t\t}\n\t\t\t}\n\t\t\tupdate(item, set.toString());\n\t\t\tbreak;\n\t\tcase 'anchor':\n\t\tcase 'empty':\n\t\tcase 'group':\n\t\tcase 'reference':\n\t\t\t// Nothing to do here.\n\t\t\tbreak;\n\t\t// The `default` clause is only here as a safeguard; it should never be\n\t\t// reached. Code coverage tools should ignore it.\n\t\t/* istanbul ignore next */\n\t\tdefault:\n\t\t\tthrow Error('Unknown term type: ' + item.type);\n\t}\n\treturn item;\n};\n\nmodule.exports = function(pattern, flags) {\n\tvar tree = parse(pattern, flags);\n\tignoreCase = flags ? flags.indexOf('i') > -1 : false;\n\tunicode = flags ? flags.indexOf('u') > -1 : false;\n\tassign(tree, processTerm(tree));\n\treturn generate(tree);\n};\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./source-map/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./source-map/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./source-map/source-node').SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var util = require('./util');\n\n  /**\n   * A data structure which is a combination of an array and a set. Adding a new\n   * member is O(1), testing for membership is O(1), and finding the index of an\n   * element is O(1). Removing elements from the set is not supported. Only\n   * strings are supported for membership.\n   */\n  function ArraySet() {\n    this._array = [];\n    this._set = {};\n  }\n\n  /**\n   * Static method for creating ArraySet instances from an existing array.\n   */\n  ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n    var set = new ArraySet();\n    for (var i = 0, len = aArray.length; i < len; i++) {\n      set.add(aArray[i], aAllowDuplicates);\n    }\n    return set;\n  };\n\n  /**\n   * Add the given string to this set.\n   *\n   * @param String aStr\n   */\n  ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n    var isDuplicate = this.has(aStr);\n    var idx = this._array.length;\n    if (!isDuplicate || aAllowDuplicates) {\n      this._array.push(aStr);\n    }\n    if (!isDuplicate) {\n      this._set[util.toSetString(aStr)] = idx;\n    }\n  };\n\n  /**\n   * Is the given string a member of this set?\n   *\n   * @param String aStr\n   */\n  ArraySet.prototype.has = function ArraySet_has(aStr) {\n    return Object.prototype.hasOwnProperty.call(this._set,\n                                                util.toSetString(aStr));\n  };\n\n  /**\n   * What is the index of the given string in the array?\n   *\n   * @param String aStr\n   */\n  ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n    if (this.has(aStr)) {\n      return this._set[util.toSetString(aStr)];\n    }\n    throw new Error('\"' + aStr + '\" is not in the set.');\n  };\n\n  /**\n   * What is the element at the given index?\n   *\n   * @param Number aIdx\n   */\n  ArraySet.prototype.at = function ArraySet_at(aIdx) {\n    if (aIdx >= 0 && aIdx < this._array.length) {\n      return this._array[aIdx];\n    }\n    throw new Error('No element indexed by ' + aIdx);\n  };\n\n  /**\n   * Returns the array representation of this set (which has the proper indices\n   * indicated by indexOf). Note that this is a copy of the internal array used\n   * for storing the members so that no one can mess with internal state.\n   */\n  ArraySet.prototype.toArray = function ArraySet_toArray() {\n    return this._array.slice();\n  };\n\n  exports.ArraySet = ArraySet;\n\n});\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var base64 = require('./base64');\n\n  // A single base 64 digit can contain 6 bits of data. For the base 64 variable\n  // length quantities we use in the source map spec, the first bit is the sign,\n  // the next four bits are the actual value, and the 6th bit is the\n  // continuation bit. The continuation bit tells us whether there are more\n  // digits in this value following this digit.\n  //\n  //   Continuation\n  //   |    Sign\n  //   |    |\n  //   V    V\n  //   101011\n\n  var VLQ_BASE_SHIFT = 5;\n\n  // binary: 100000\n  var VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n  // binary: 011111\n  var VLQ_BASE_MASK = VLQ_BASE - 1;\n\n  // binary: 100000\n  var VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n  /**\n   * Converts from a two-complement value to a value where the sign bit is\n   * is placed in the least significant bit.  For example, as decimals:\n   *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n   *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n   */\n  function toVLQSigned(aValue) {\n    return aValue < 0\n      ? ((-aValue) << 1) + 1\n      : (aValue << 1) + 0;\n  }\n\n  /**\n   * Converts to a two-complement value from a value where the sign bit is\n   * is placed in the least significant bit.  For example, as decimals:\n   *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n   *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n   */\n  function fromVLQSigned(aValue) {\n    var isNegative = (aValue & 1) === 1;\n    var shifted = aValue >> 1;\n    return isNegative\n      ? -shifted\n      : shifted;\n  }\n\n  /**\n   * Returns the base 64 VLQ encoded value.\n   */\n  exports.encode = function base64VLQ_encode(aValue) {\n    var encoded = \"\";\n    var digit;\n\n    var vlq = toVLQSigned(aValue);\n\n    do {\n      digit = vlq & VLQ_BASE_MASK;\n      vlq >>>= VLQ_BASE_SHIFT;\n      if (vlq > 0) {\n        // There are still more digits in this value, so we must make sure the\n        // continuation bit is marked.\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      encoded += base64.encode(digit);\n    } while (vlq > 0);\n\n    return encoded;\n  };\n\n  /**\n   * Decodes the next base 64 VLQ value from the given string and returns the\n   * value and the rest of the string via the out parameter.\n   */\n  exports.decode = function base64VLQ_decode(aStr, aOutParam) {\n    var i = 0;\n    var strLen = aStr.length;\n    var result = 0;\n    var shift = 0;\n    var continuation, digit;\n\n    do {\n      if (i >= strLen) {\n        throw new Error(\"Expected more digits in base 64 VLQ value.\");\n      }\n      digit = base64.decode(aStr.charAt(i++));\n      continuation = !!(digit & VLQ_CONTINUATION_BIT);\n      digit &= VLQ_BASE_MASK;\n      result = result + (digit << shift);\n      shift += VLQ_BASE_SHIFT;\n    } while (continuation);\n\n    aOutParam.value = fromVLQSigned(result);\n    aOutParam.rest = aStr.slice(i);\n  };\n\n});\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var charToIntMap = {};\n  var intToCharMap = {};\n\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    .split('')\n    .forEach(function (ch, index) {\n      charToIntMap[ch] = index;\n      intToCharMap[index] = ch;\n    });\n\n  /**\n   * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n   */\n  exports.encode = function base64_encode(aNumber) {\n    if (aNumber in intToCharMap) {\n      return intToCharMap[aNumber];\n    }\n    throw new TypeError(\"Must be between 0 and 63: \" + aNumber);\n  };\n\n  /**\n   * Decode a single base 64 digit to an integer.\n   */\n  exports.decode = function base64_decode(aChar) {\n    if (aChar in charToIntMap) {\n      return charToIntMap[aChar];\n    }\n    throw new TypeError(\"Not a valid base 64 digit: \" + aChar);\n  };\n\n});\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  /**\n   * Recursive implementation of binary search.\n   *\n   * @param aLow Indices here and lower do not contain the needle.\n   * @param aHigh Indices here and higher do not contain the needle.\n   * @param aNeedle The element being searched for.\n   * @param aHaystack The non-empty array being searched.\n   * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n   */\n  function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare) {\n    // This function terminates when one of the following is true:\n    //\n    //   1. We find the exact element we are looking for.\n    //\n    //   2. We did not find the exact element, but we can return the next\n    //      closest element that is less than that element.\n    //\n    //   3. We did not find the exact element, and there is no next-closest\n    //      element which is less than the one we are searching for, so we\n    //      return null.\n    var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n    var cmp = aCompare(aNeedle, aHaystack[mid], true);\n    if (cmp === 0) {\n      // Found the element we are looking for.\n      return aHaystack[mid];\n    }\n    else if (cmp > 0) {\n      // aHaystack[mid] is greater than our needle.\n      if (aHigh - mid > 1) {\n        // The element is in the upper half.\n        return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare);\n      }\n      // We did not find an exact match, return the next closest one\n      // (termination case 2).\n      return aHaystack[mid];\n    }\n    else {\n      // aHaystack[mid] is less than our needle.\n      if (mid - aLow > 1) {\n        // The element is in the lower half.\n        return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare);\n      }\n      // The exact needle element was not found in this haystack. Determine if\n      // we are in termination case (2) or (3) and return the appropriate thing.\n      return aLow < 0\n        ? null\n        : aHaystack[aLow];\n    }\n  }\n\n  /**\n   * This is an implementation of binary search which will always try and return\n   * the next lowest value checked if there is no exact hit. This is because\n   * mappings between original and generated line/col pairs are single points,\n   * and there is an implicit region between each of them, so a miss just means\n   * that you aren't on the very start of a region.\n   *\n   * @param aNeedle The element you are looking for.\n   * @param aHaystack The array that is being searched.\n   * @param aCompare A function which takes the needle and an element in the\n   *     array and returns -1, 0, or 1 depending on whether the needle is less\n   *     than, equal to, or greater than the element, respectively.\n   */\n  exports.search = function search(aNeedle, aHaystack, aCompare) {\n    return aHaystack.length > 0\n      ? recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack, aCompare)\n      : null;\n  };\n\n});\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var util = require('./util');\n  var binarySearch = require('./binary-search');\n  var ArraySet = require('./array-set').ArraySet;\n  var base64VLQ = require('./base64-vlq');\n\n  /**\n   * A SourceMapConsumer instance represents a parsed source map which we can\n   * query for information about the original file positions by giving it a file\n   * position in the generated source.\n   *\n   * The only parameter is the raw source map (either as a JSON string, or\n   * already parsed to an object). According to the spec, source maps have the\n   * following attributes:\n   *\n   *   - version: Which version of the source map spec this map is following.\n   *   - sources: An array of URLs to the original source files.\n   *   - names: An array of identifiers which can be referrenced by individual mappings.\n   *   - sourceRoot: Optional. The URL root from which all sources are relative.\n   *   - sourcesContent: Optional. An array of contents of the original source files.\n   *   - mappings: A string of base64 VLQs which contain the actual mappings.\n   *   - file: Optional. The generated file this source map is associated with.\n   *\n   * Here is an example source map, taken from the source map spec[0]:\n   *\n   *     {\n   *       version : 3,\n   *       file: \"out.js\",\n   *       sourceRoot : \"\",\n   *       sources: [\"foo.js\", \"bar.js\"],\n   *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n   *       mappings: \"AA,AB;;ABCDE;\"\n   *     }\n   *\n   * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n   */\n  function SourceMapConsumer(aSourceMap) {\n    var sourceMap = aSourceMap;\n    if (typeof aSourceMap === 'string') {\n      sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n    }\n\n    var version = util.getArg(sourceMap, 'version');\n    var sources = util.getArg(sourceMap, 'sources');\n    // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n    // requires the array) to play nice here.\n    var names = util.getArg(sourceMap, 'names', []);\n    var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n    var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n    var mappings = util.getArg(sourceMap, 'mappings');\n    var file = util.getArg(sourceMap, 'file', null);\n\n    // Once again, Sass deviates from the spec and supplies the version as a\n    // string rather than a number, so we use loose equality checking here.\n    if (version != this._version) {\n      throw new Error('Unsupported version: ' + version);\n    }\n\n    // Pass `true` below to allow duplicate names and sources. While source maps\n    // are intended to be compressed and deduplicated, the TypeScript compiler\n    // sometimes generates source maps with duplicates in them. See Github issue\n    // #72 and bugzil.la/889492.\n    this._names = ArraySet.fromArray(names, true);\n    this._sources = ArraySet.fromArray(sources, true);\n\n    this.sourceRoot = sourceRoot;\n    this.sourcesContent = sourcesContent;\n    this._mappings = mappings;\n    this.file = file;\n  }\n\n  /**\n   * Create a SourceMapConsumer from a SourceMapGenerator.\n   *\n   * @param SourceMapGenerator aSourceMap\n   *        The source map that will be consumed.\n   * @returns SourceMapConsumer\n   */\n  SourceMapConsumer.fromSourceMap =\n    function SourceMapConsumer_fromSourceMap(aSourceMap) {\n      var smc = Object.create(SourceMapConsumer.prototype);\n\n      smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n      smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n      smc.sourceRoot = aSourceMap._sourceRoot;\n      smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                              smc.sourceRoot);\n      smc.file = aSourceMap._file;\n\n      smc.__generatedMappings = aSourceMap._mappings.slice()\n        .sort(util.compareByGeneratedPositions);\n      smc.__originalMappings = aSourceMap._mappings.slice()\n        .sort(util.compareByOriginalPositions);\n\n      return smc;\n    };\n\n  /**\n   * The version of the source mapping spec that we are consuming.\n   */\n  SourceMapConsumer.prototype._version = 3;\n\n  /**\n   * The list of original sources.\n   */\n  Object.defineProperty(SourceMapConsumer.prototype, 'sources', {\n    get: function () {\n      return this._sources.toArray().map(function (s) {\n        return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n      }, this);\n    }\n  });\n\n  // `__generatedMappings` and `__originalMappings` are arrays that hold the\n  // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n  // are lazily instantiated, accessed via the `_generatedMappings` and\n  // `_originalMappings` getters respectively, and we only parse the mappings\n  // and create these arrays once queried for a source location. We jump through\n  // these hoops because there can be many thousands of mappings, and parsing\n  // them is expensive, so we only want to do it if we must.\n  //\n  // Each object in the arrays is of the form:\n  //\n  //     {\n  //       generatedLine: The line number in the generated code,\n  //       generatedColumn: The column number in the generated code,\n  //       source: The path to the original source file that generated this\n  //               chunk of code,\n  //       originalLine: The line number in the original source that\n  //                     corresponds to this chunk of generated code,\n  //       originalColumn: The column number in the original source that\n  //                       corresponds to this chunk of generated code,\n  //       name: The name of the original symbol which generated this chunk of\n  //             code.\n  //     }\n  //\n  // All properties except for `generatedLine` and `generatedColumn` can be\n  // `null`.\n  //\n  // `_generatedMappings` is ordered by the generated positions.\n  //\n  // `_originalMappings` is ordered by the original positions.\n\n  SourceMapConsumer.prototype.__generatedMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n    get: function () {\n      if (!this.__generatedMappings) {\n        this.__generatedMappings = [];\n        this.__originalMappings = [];\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__generatedMappings;\n    }\n  });\n\n  SourceMapConsumer.prototype.__originalMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n    get: function () {\n      if (!this.__originalMappings) {\n        this.__generatedMappings = [];\n        this.__originalMappings = [];\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__originalMappings;\n    }\n  });\n\n  SourceMapConsumer.prototype._nextCharIsMappingSeparator =\n    function SourceMapConsumer_nextCharIsMappingSeparator(aStr) {\n      var c = aStr.charAt(0);\n      return c === \";\" || c === \",\";\n    };\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  SourceMapConsumer.prototype._parseMappings =\n    function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n      var generatedLine = 1;\n      var previousGeneratedColumn = 0;\n      var previousOriginalLine = 0;\n      var previousOriginalColumn = 0;\n      var previousSource = 0;\n      var previousName = 0;\n      var str = aStr;\n      var temp = {};\n      var mapping;\n\n      while (str.length > 0) {\n        if (str.charAt(0) === ';') {\n          generatedLine++;\n          str = str.slice(1);\n          previousGeneratedColumn = 0;\n        }\n        else if (str.charAt(0) === ',') {\n          str = str.slice(1);\n        }\n        else {\n          mapping = {};\n          mapping.generatedLine = generatedLine;\n\n          // Generated column.\n          base64VLQ.decode(str, temp);\n          mapping.generatedColumn = previousGeneratedColumn + temp.value;\n          previousGeneratedColumn = mapping.generatedColumn;\n          str = temp.rest;\n\n          if (str.length > 0 && !this._nextCharIsMappingSeparator(str)) {\n            // Original source.\n            base64VLQ.decode(str, temp);\n            mapping.source = this._sources.at(previousSource + temp.value);\n            previousSource += temp.value;\n            str = temp.rest;\n            if (str.length === 0 || this._nextCharIsMappingSeparator(str)) {\n              throw new Error('Found a source, but no line and column');\n            }\n\n            // Original line.\n            base64VLQ.decode(str, temp);\n            mapping.originalLine = previousOriginalLine + temp.value;\n            previousOriginalLine = mapping.originalLine;\n            // Lines are stored 0-based\n            mapping.originalLine += 1;\n            str = temp.rest;\n            if (str.length === 0 || this._nextCharIsMappingSeparator(str)) {\n              throw new Error('Found a source and line, but no column');\n            }\n\n            // Original column.\n            base64VLQ.decode(str, temp);\n            mapping.originalColumn = previousOriginalColumn + temp.value;\n            previousOriginalColumn = mapping.originalColumn;\n            str = temp.rest;\n\n            if (str.length > 0 && !this._nextCharIsMappingSeparator(str)) {\n              // Original name.\n              base64VLQ.decode(str, temp);\n              mapping.name = this._names.at(previousName + temp.value);\n              previousName += temp.value;\n              str = temp.rest;\n            }\n          }\n\n          this.__generatedMappings.push(mapping);\n          if (typeof mapping.originalLine === 'number') {\n            this.__originalMappings.push(mapping);\n          }\n        }\n      }\n\n      this.__generatedMappings.sort(util.compareByGeneratedPositions);\n      this.__originalMappings.sort(util.compareByOriginalPositions);\n    };\n\n  /**\n   * Find the mapping that best matches the hypothetical \"needle\" mapping that\n   * we are searching for in the given \"haystack\" of mappings.\n   */\n  SourceMapConsumer.prototype._findMapping =\n    function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                           aColumnName, aComparator) {\n      // To return the position we are searching for, we must first find the\n      // mapping for the given position and then return the opposite position it\n      // points to. Because the mappings are sorted, we can use binary search to\n      // find the best mapping.\n\n      if (aNeedle[aLineName] <= 0) {\n        throw new TypeError('Line must be greater than or equal to 1, got '\n                            + aNeedle[aLineName]);\n      }\n      if (aNeedle[aColumnName] < 0) {\n        throw new TypeError('Column must be greater than or equal to 0, got '\n                            + aNeedle[aColumnName]);\n      }\n\n      return binarySearch.search(aNeedle, aMappings, aComparator);\n    };\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.\n   *   - column: The column number in the generated source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.\n   *   - column: The column number in the original source, or null.\n   *   - name: The original identifier, or null.\n   */\n  SourceMapConsumer.prototype.originalPositionFor =\n    function SourceMapConsumer_originalPositionFor(aArgs) {\n      var needle = {\n        generatedLine: util.getArg(aArgs, 'line'),\n        generatedColumn: util.getArg(aArgs, 'column')\n      };\n\n      var mapping = this._findMapping(needle,\n                                      this._generatedMappings,\n                                      \"generatedLine\",\n                                      \"generatedColumn\",\n                                      util.compareByGeneratedPositions);\n\n      if (mapping && mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source != null && this.sourceRoot != null) {\n          source = util.join(this.sourceRoot, source);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: util.getArg(mapping, 'name', null)\n        };\n      }\n\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    };\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * availible.\n   */\n  SourceMapConsumer.prototype.sourceContentFor =\n    function SourceMapConsumer_sourceContentFor(aSource) {\n      if (!this.sourcesContent) {\n        return null;\n      }\n\n      if (this.sourceRoot != null) {\n        aSource = util.relative(this.sourceRoot, aSource);\n      }\n\n      if (this._sources.has(aSource)) {\n        return this.sourcesContent[this._sources.indexOf(aSource)];\n      }\n\n      var url;\n      if (this.sourceRoot != null\n          && (url = util.urlParse(this.sourceRoot))) {\n        // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n        // many users. We can help them out when they expect file:// URIs to\n        // behave like it would if they were running a local HTTP server. See\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n        var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n        if (url.scheme == \"file\"\n            && this._sources.has(fileUriAbsPath)) {\n          return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n        }\n\n        if ((!url.path || url.path == \"/\")\n            && this._sources.has(\"/\" + aSource)) {\n          return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n        }\n      }\n\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    };\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.\n   *   - column: The column number in the original source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.\n   *   - column: The column number in the generated source, or null.\n   */\n  SourceMapConsumer.prototype.generatedPositionFor =\n    function SourceMapConsumer_generatedPositionFor(aArgs) {\n      var needle = {\n        source: util.getArg(aArgs, 'source'),\n        originalLine: util.getArg(aArgs, 'line'),\n        originalColumn: util.getArg(aArgs, 'column')\n      };\n\n      if (this.sourceRoot != null) {\n        needle.source = util.relative(this.sourceRoot, needle.source);\n      }\n\n      var mapping = this._findMapping(needle,\n                                      this._originalMappings,\n                                      \"originalLine\",\n                                      \"originalColumn\",\n                                      util.compareByOriginalPositions);\n\n      if (mapping) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null)\n        };\n      }\n\n      return {\n        line: null,\n        column: null\n      };\n    };\n\n  SourceMapConsumer.GENERATED_ORDER = 1;\n  SourceMapConsumer.ORIGINAL_ORDER = 2;\n\n  /**\n   * Iterate over each mapping between an original source/line/column and a\n   * generated line/column in this source map.\n   *\n   * @param Function aCallback\n   *        The function that is called with each mapping.\n   * @param Object aContext\n   *        Optional. If specified, this object will be the value of `this` every\n   *        time that `aCallback` is called.\n   * @param aOrder\n   *        Either `SourceMapConsumer.GENERATED_ORDER` or\n   *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n   *        iterate over the mappings sorted by the generated file's line/column\n   *        order or the original's source/line/column order, respectively. Defaults to\n   *        `SourceMapConsumer.GENERATED_ORDER`.\n   */\n  SourceMapConsumer.prototype.eachMapping =\n    function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n      var context = aContext || null;\n      var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n      var mappings;\n      switch (order) {\n      case SourceMapConsumer.GENERATED_ORDER:\n        mappings = this._generatedMappings;\n        break;\n      case SourceMapConsumer.ORIGINAL_ORDER:\n        mappings = this._originalMappings;\n        break;\n      default:\n        throw new Error(\"Unknown order of iteration.\");\n      }\n\n      var sourceRoot = this.sourceRoot;\n      mappings.map(function (mapping) {\n        var source = mapping.source;\n        if (source != null && sourceRoot != null) {\n          source = util.join(sourceRoot, source);\n        }\n        return {\n          source: source,\n          generatedLine: mapping.generatedLine,\n          generatedColumn: mapping.generatedColumn,\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: mapping.name\n        };\n      }).forEach(aCallback, context);\n    };\n\n  exports.SourceMapConsumer = SourceMapConsumer;\n\n});\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var base64VLQ = require('./base64-vlq');\n  var util = require('./util');\n  var ArraySet = require('./array-set').ArraySet;\n\n  /**\n   * An instance of the SourceMapGenerator represents a source map which is\n   * being built incrementally. You may pass an object with the following\n   * properties:\n   *\n   *   - file: The filename of the generated source.\n   *   - sourceRoot: A root for all relative URLs in this source map.\n   */\n  function SourceMapGenerator(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, 'file', null);\n    this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = [];\n    this._sourcesContents = null;\n  }\n\n  SourceMapGenerator.prototype._version = 3;\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  SourceMapGenerator.fromSourceMap =\n    function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n      var sourceRoot = aSourceMapConsumer.sourceRoot;\n      var generator = new SourceMapGenerator({\n        file: aSourceMapConsumer.file,\n        sourceRoot: sourceRoot\n      });\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        var newMapping = {\n          generated: {\n            line: mapping.generatedLine,\n            column: mapping.generatedColumn\n          }\n        };\n\n        if (mapping.source != null) {\n          newMapping.source = mapping.source;\n          if (sourceRoot != null) {\n            newMapping.source = util.relative(sourceRoot, newMapping.source);\n          }\n\n          newMapping.original = {\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          };\n\n          if (mapping.name != null) {\n            newMapping.name = mapping.name;\n          }\n        }\n\n        generator.addMapping(newMapping);\n      });\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          generator.setSourceContent(sourceFile, content);\n        }\n      });\n      return generator;\n    };\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  SourceMapGenerator.prototype.addMapping =\n    function SourceMapGenerator_addMapping(aArgs) {\n      var generated = util.getArg(aArgs, 'generated');\n      var original = util.getArg(aArgs, 'original', null);\n      var source = util.getArg(aArgs, 'source', null);\n      var name = util.getArg(aArgs, 'name', null);\n\n      this._validateMapping(generated, original, source, name);\n\n      if (source != null && !this._sources.has(source)) {\n        this._sources.add(source);\n      }\n\n      if (name != null && !this._names.has(name)) {\n        this._names.add(name);\n      }\n\n      this._mappings.push({\n        generatedLine: generated.line,\n        generatedColumn: generated.column,\n        originalLine: original != null && original.line,\n        originalColumn: original != null && original.column,\n        source: source,\n        name: name\n      });\n    };\n\n  /**\n   * Set the source content for a source file.\n   */\n  SourceMapGenerator.prototype.setSourceContent =\n    function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n      var source = aSourceFile;\n      if (this._sourceRoot != null) {\n        source = util.relative(this._sourceRoot, source);\n      }\n\n      if (aSourceContent != null) {\n        // Add the source content to the _sourcesContents map.\n        // Create a new _sourcesContents map if the property is null.\n        if (!this._sourcesContents) {\n          this._sourcesContents = {};\n        }\n        this._sourcesContents[util.toSetString(source)] = aSourceContent;\n      } else if (this._sourcesContents) {\n        // Remove the source file from the _sourcesContents map.\n        // If the _sourcesContents map is empty, set the property to null.\n        delete this._sourcesContents[util.toSetString(source)];\n        if (Object.keys(this._sourcesContents).length === 0) {\n          this._sourcesContents = null;\n        }\n      }\n    };\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  SourceMapGenerator.prototype.applySourceMap =\n    function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n      var sourceFile = aSourceFile;\n      // If aSourceFile is omitted, we will use the file property of the SourceMap\n      if (aSourceFile == null) {\n        if (aSourceMapConsumer.file == null) {\n          throw new Error(\n            'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n            'or the source map\\'s \"file\" property. Both were omitted.'\n          );\n        }\n        sourceFile = aSourceMapConsumer.file;\n      }\n      var sourceRoot = this._sourceRoot;\n      // Make \"sourceFile\" relative if an absolute Url is passed.\n      if (sourceRoot != null) {\n        sourceFile = util.relative(sourceRoot, sourceFile);\n      }\n      // Applying the SourceMap can add and remove items from the sources and\n      // the names array.\n      var newSources = new ArraySet();\n      var newNames = new ArraySet();\n\n      // Find mappings for the \"sourceFile\"\n      this._mappings.forEach(function (mapping) {\n        if (mapping.source === sourceFile && mapping.originalLine != null) {\n          // Check if it can be mapped by the source map, then update the mapping.\n          var original = aSourceMapConsumer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          });\n          if (original.source != null) {\n            // Copy mapping\n            mapping.source = original.source;\n            if (aSourceMapPath != null) {\n              mapping.source = util.join(aSourceMapPath, mapping.source)\n            }\n            if (sourceRoot != null) {\n              mapping.source = util.relative(sourceRoot, mapping.source);\n            }\n            mapping.originalLine = original.line;\n            mapping.originalColumn = original.column;\n            if (original.name != null) {\n              mapping.name = original.name;\n            }\n          }\n        }\n\n        var source = mapping.source;\n        if (source != null && !newSources.has(source)) {\n          newSources.add(source);\n        }\n\n        var name = mapping.name;\n        if (name != null && !newNames.has(name)) {\n          newNames.add(name);\n        }\n\n      }, this);\n      this._sources = newSources;\n      this._names = newNames;\n\n      // Copy sourcesContents of applied map.\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          if (aSourceMapPath != null) {\n            sourceFile = util.join(aSourceMapPath, sourceFile);\n          }\n          if (sourceRoot != null) {\n            sourceFile = util.relative(sourceRoot, sourceFile);\n          }\n          this.setSourceContent(sourceFile, content);\n        }\n      }, this);\n    };\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  SourceMapGenerator.prototype._validateMapping =\n    function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                                aName) {\n      if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n          && aGenerated.line > 0 && aGenerated.column >= 0\n          && !aOriginal && !aSource && !aName) {\n        // Case 1.\n        return;\n      }\n      else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n               && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n               && aGenerated.line > 0 && aGenerated.column >= 0\n               && aOriginal.line > 0 && aOriginal.column >= 0\n               && aSource) {\n        // Cases 2 and 3.\n        return;\n      }\n      else {\n        throw new Error('Invalid mapping: ' + JSON.stringify({\n          generated: aGenerated,\n          source: aSource,\n          original: aOriginal,\n          name: aName\n        }));\n      }\n    };\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  SourceMapGenerator.prototype._serializeMappings =\n    function SourceMapGenerator_serializeMappings() {\n      var previousGeneratedColumn = 0;\n      var previousGeneratedLine = 1;\n      var previousOriginalColumn = 0;\n      var previousOriginalLine = 0;\n      var previousName = 0;\n      var previousSource = 0;\n      var result = '';\n      var mapping;\n\n      // The mappings must be guaranteed to be in sorted order before we start\n      // serializing them or else the generated line numbers (which are defined\n      // via the ';' separators) will be all messed up. Note: it might be more\n      // performant to maintain the sorting as we insert them, rather than as we\n      // serialize them, but the big O is the same either way.\n      this._mappings.sort(util.compareByGeneratedPositions);\n\n      for (var i = 0, len = this._mappings.length; i < len; i++) {\n        mapping = this._mappings[i];\n\n        if (mapping.generatedLine !== previousGeneratedLine) {\n          previousGeneratedColumn = 0;\n          while (mapping.generatedLine !== previousGeneratedLine) {\n            result += ';';\n            previousGeneratedLine++;\n          }\n        }\n        else {\n          if (i > 0) {\n            if (!util.compareByGeneratedPositions(mapping, this._mappings[i - 1])) {\n              continue;\n            }\n            result += ',';\n          }\n        }\n\n        result += base64VLQ.encode(mapping.generatedColumn\n                                   - previousGeneratedColumn);\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (mapping.source != null) {\n          result += base64VLQ.encode(this._sources.indexOf(mapping.source)\n                                     - previousSource);\n          previousSource = this._sources.indexOf(mapping.source);\n\n          // lines are stored 0-based in SourceMap spec version 3\n          result += base64VLQ.encode(mapping.originalLine - 1\n                                     - previousOriginalLine);\n          previousOriginalLine = mapping.originalLine - 1;\n\n          result += base64VLQ.encode(mapping.originalColumn\n                                     - previousOriginalColumn);\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (mapping.name != null) {\n            result += base64VLQ.encode(this._names.indexOf(mapping.name)\n                                       - previousName);\n            previousName = this._names.indexOf(mapping.name);\n          }\n        }\n      }\n\n      return result;\n    };\n\n  SourceMapGenerator.prototype._generateSourcesContent =\n    function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n      return aSources.map(function (source) {\n        if (!this._sourcesContents) {\n          return null;\n        }\n        if (aSourceRoot != null) {\n          source = util.relative(aSourceRoot, source);\n        }\n        var key = util.toSetString(source);\n        return Object.prototype.hasOwnProperty.call(this._sourcesContents,\n                                                    key)\n          ? this._sourcesContents[key]\n          : null;\n      }, this);\n    };\n\n  /**\n   * Externalize the source map.\n   */\n  SourceMapGenerator.prototype.toJSON =\n    function SourceMapGenerator_toJSON() {\n      var map = {\n        version: this._version,\n        sources: this._sources.toArray(),\n        names: this._names.toArray(),\n        mappings: this._serializeMappings()\n      };\n      if (this._file != null) {\n        map.file = this._file;\n      }\n      if (this._sourceRoot != null) {\n        map.sourceRoot = this._sourceRoot;\n      }\n      if (this._sourcesContents) {\n        map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n      }\n\n      return map;\n    };\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  SourceMapGenerator.prototype.toString =\n    function SourceMapGenerator_toString() {\n      return JSON.stringify(this);\n    };\n\n  exports.SourceMapGenerator = SourceMapGenerator;\n\n});\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\n  var util = require('./util');\n\n  // Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n  // operating systems these days (capturing the result).\n  var REGEX_NEWLINE = /(\\r?\\n)/;\n\n  // Matches a Windows-style newline, or any character.\n  var REGEX_CHARACTER = /\\r\\n|[\\s\\S]/g;\n\n  /**\n   * SourceNodes provide a way to abstract over interpolating/concatenating\n   * snippets of generated JavaScript source code while maintaining the line and\n   * column information associated with the original source code.\n   *\n   * @param aLine The original line number.\n   * @param aColumn The original column number.\n   * @param aSource The original source's filename.\n   * @param aChunks Optional. An array of strings which are snippets of\n   *        generated JS, or other SourceNodes.\n   * @param aName The original identifier.\n   */\n  function SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n    this.children = [];\n    this.sourceContents = {};\n    this.line = aLine == null ? null : aLine;\n    this.column = aColumn == null ? null : aColumn;\n    this.source = aSource == null ? null : aSource;\n    this.name = aName == null ? null : aName;\n    if (aChunks != null) this.add(aChunks);\n  }\n\n  /**\n   * Creates a SourceNode from generated code and a SourceMapConsumer.\n   *\n   * @param aGeneratedCode The generated code\n   * @param aSourceMapConsumer The SourceMap for the generated code\n   * @param aRelativePath Optional. The path that relative sources in the\n   *        SourceMapConsumer should be relative to.\n   */\n  SourceNode.fromStringWithSourceMap =\n    function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n      // The SourceNode we want to fill with the generated code\n      // and the SourceMap\n      var node = new SourceNode();\n\n      // All even indices of this array are one line of the generated code,\n      // while all odd indices are the newlines between two adjacent lines\n      // (since `REGEX_NEWLINE` captures its match).\n      // Processed fragments are removed from this array, by calling `shiftNextLine`.\n      var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n      var shiftNextLine = function() {\n        var lineContents = remainingLines.shift();\n        // The last line of a file might not have a newline.\n        var newLine = remainingLines.shift() || \"\";\n        return lineContents + newLine;\n      };\n\n      // We need to remember the position of \"remainingLines\"\n      var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n      // The generate SourceNodes we need a code range.\n      // To extract it current and last mapping is used.\n      // Here we store the last mapping.\n      var lastMapping = null;\n\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        if (lastMapping !== null) {\n          // We add the code from \"lastMapping\" to \"mapping\":\n          // First check if there is a new line in between.\n          if (lastGeneratedLine < mapping.generatedLine) {\n            var code = \"\";\n            // Associate first line with \"lastMapping\"\n            addMappingWithCode(lastMapping, shiftNextLine());\n            lastGeneratedLine++;\n            lastGeneratedColumn = 0;\n            // The remaining code is added without mapping\n          } else {\n            // There is no new line in between.\n            // Associate the code between \"lastGeneratedColumn\" and\n            // \"mapping.generatedColumn\" with \"lastMapping\"\n            var nextLine = remainingLines[0];\n            var code = nextLine.substr(0, mapping.generatedColumn -\n                                          lastGeneratedColumn);\n            remainingLines[0] = nextLine.substr(mapping.generatedColumn -\n                                                lastGeneratedColumn);\n            lastGeneratedColumn = mapping.generatedColumn;\n            addMappingWithCode(lastMapping, code);\n            // No more remaining code, continue\n            lastMapping = mapping;\n            return;\n          }\n        }\n        // We add the generated code until the first mapping\n        // to the SourceNode without any mapping.\n        // Each line is added as separate string.\n        while (lastGeneratedLine < mapping.generatedLine) {\n          node.add(shiftNextLine());\n          lastGeneratedLine++;\n        }\n        if (lastGeneratedColumn < mapping.generatedColumn) {\n          var nextLine = remainingLines[0];\n          node.add(nextLine.substr(0, mapping.generatedColumn));\n          remainingLines[0] = nextLine.substr(mapping.generatedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n        }\n        lastMapping = mapping;\n      }, this);\n      // We have processed all mappings.\n      if (remainingLines.length > 0) {\n        if (lastMapping) {\n          // Associate the remaining code in the current line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n        }\n        // and add the remaining lines without any mapping\n        node.add(remainingLines.join(\"\"));\n      }\n\n      // Copy sourcesContent into SourceNode\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          if (aRelativePath != null) {\n            sourceFile = util.join(aRelativePath, sourceFile);\n          }\n          node.setSourceContent(sourceFile, content);\n        }\n      });\n\n      return node;\n\n      function addMappingWithCode(mapping, code) {\n        if (mapping === null || mapping.source === undefined) {\n          node.add(code);\n        } else {\n          var source = aRelativePath\n            ? util.join(aRelativePath, mapping.source)\n            : mapping.source;\n          node.add(new SourceNode(mapping.originalLine,\n                                  mapping.originalColumn,\n                                  source,\n                                  code,\n                                  mapping.name));\n        }\n      }\n    };\n\n  /**\n   * Add a chunk of generated JS to this source node.\n   *\n   * @param aChunk A string snippet of generated JS code, another instance of\n   *        SourceNode, or an array where each member is one of those things.\n   */\n  SourceNode.prototype.add = function SourceNode_add(aChunk) {\n    if (Array.isArray(aChunk)) {\n      aChunk.forEach(function (chunk) {\n        this.add(chunk);\n      }, this);\n    }\n    else if (aChunk instanceof SourceNode || typeof aChunk === \"string\") {\n      if (aChunk) {\n        this.children.push(aChunk);\n      }\n    }\n    else {\n      throw new TypeError(\n        \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n      );\n    }\n    return this;\n  };\n\n  /**\n   * Add a chunk of generated JS to the beginning of this source node.\n   *\n   * @param aChunk A string snippet of generated JS code, another instance of\n   *        SourceNode, or an array where each member is one of those things.\n   */\n  SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n    if (Array.isArray(aChunk)) {\n      for (var i = aChunk.length-1; i >= 0; i--) {\n        this.prepend(aChunk[i]);\n      }\n    }\n    else if (aChunk instanceof SourceNode || typeof aChunk === \"string\") {\n      this.children.unshift(aChunk);\n    }\n    else {\n      throw new TypeError(\n        \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n      );\n    }\n    return this;\n  };\n\n  /**\n   * Walk over the tree of JS snippets in this node and its children. The\n   * walking function is called once for each snippet of JS and is passed that\n   * snippet and the its original associated source's line/column location.\n   *\n   * @param aFn The traversal function.\n   */\n  SourceNode.prototype.walk = function SourceNode_walk(aFn) {\n    var chunk;\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      chunk = this.children[i];\n      if (chunk instanceof SourceNode) {\n        chunk.walk(aFn);\n      }\n      else {\n        if (chunk !== '') {\n          aFn(chunk, { source: this.source,\n                       line: this.line,\n                       column: this.column,\n                       name: this.name });\n        }\n      }\n    }\n  };\n\n  /**\n   * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n   * each of `this.children`.\n   *\n   * @param aSep The separator.\n   */\n  SourceNode.prototype.join = function SourceNode_join(aSep) {\n    var newChildren;\n    var i;\n    var len = this.children.length;\n    if (len > 0) {\n      newChildren = [];\n      for (i = 0; i < len-1; i++) {\n        newChildren.push(this.children[i]);\n        newChildren.push(aSep);\n      }\n      newChildren.push(this.children[i]);\n      this.children = newChildren;\n    }\n    return this;\n  };\n\n  /**\n   * Call String.prototype.replace on the very right-most source snippet. Useful\n   * for trimming whitespace from the end of a source node, etc.\n   *\n   * @param aPattern The pattern to replace.\n   * @param aReplacement The thing to replace the pattern with.\n   */\n  SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n    var lastChild = this.children[this.children.length - 1];\n    if (lastChild instanceof SourceNode) {\n      lastChild.replaceRight(aPattern, aReplacement);\n    }\n    else if (typeof lastChild === 'string') {\n      this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n    }\n    else {\n      this.children.push(''.replace(aPattern, aReplacement));\n    }\n    return this;\n  };\n\n  /**\n   * Set the source content for a source file. This will be added to the SourceMapGenerator\n   * in the sourcesContent field.\n   *\n   * @param aSourceFile The filename of the source file\n   * @param aSourceContent The content of the source file\n   */\n  SourceNode.prototype.setSourceContent =\n    function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n      this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n    };\n\n  /**\n   * Walk over the tree of SourceNodes. The walking function is called for each\n   * source file content and is passed the filename and source content.\n   *\n   * @param aFn The traversal function.\n   */\n  SourceNode.prototype.walkSourceContents =\n    function SourceNode_walkSourceContents(aFn) {\n      for (var i = 0, len = this.children.length; i < len; i++) {\n        if (this.children[i] instanceof SourceNode) {\n          this.children[i].walkSourceContents(aFn);\n        }\n      }\n\n      var sources = Object.keys(this.sourceContents);\n      for (var i = 0, len = sources.length; i < len; i++) {\n        aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n      }\n    };\n\n  /**\n   * Return the string representation of this source node. Walks over the tree\n   * and concatenates all the various snippets together to one string.\n   */\n  SourceNode.prototype.toString = function SourceNode_toString() {\n    var str = \"\";\n    this.walk(function (chunk) {\n      str += chunk;\n    });\n    return str;\n  };\n\n  /**\n   * Returns the string representation of this source node along with a source\n   * map.\n   */\n  SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n    var generated = {\n      code: \"\",\n      line: 1,\n      column: 0\n    };\n    var map = new SourceMapGenerator(aArgs);\n    var sourceMappingActive = false;\n    var lastOriginalSource = null;\n    var lastOriginalLine = null;\n    var lastOriginalColumn = null;\n    var lastOriginalName = null;\n    this.walk(function (chunk, original) {\n      generated.code += chunk;\n      if (original.source !== null\n          && original.line !== null\n          && original.column !== null) {\n        if(lastOriginalSource !== original.source\n           || lastOriginalLine !== original.line\n           || lastOriginalColumn !== original.column\n           || lastOriginalName !== original.name) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n        lastOriginalSource = original.source;\n        lastOriginalLine = original.line;\n        lastOriginalColumn = original.column;\n        lastOriginalName = original.name;\n        sourceMappingActive = true;\n      } else if (sourceMappingActive) {\n        map.addMapping({\n          generated: {\n            line: generated.line,\n            column: generated.column\n          }\n        });\n        lastOriginalSource = null;\n        sourceMappingActive = false;\n      }\n      chunk.match(REGEX_CHARACTER).forEach(function (ch, idx, array) {\n        if (REGEX_NEWLINE.test(ch)) {\n          generated.line++;\n          generated.column = 0;\n          // Mappings end at eol\n          if (idx + 1 === array.length) {\n            lastOriginalSource = null;\n            sourceMappingActive = false;\n          } else if (sourceMappingActive) {\n            map.addMapping({\n              source: original.source,\n              original: {\n                line: original.line,\n                column: original.column\n              },\n              generated: {\n                line: generated.line,\n                column: generated.column\n              },\n              name: original.name\n            });\n          }\n        } else {\n          generated.column += ch.length;\n        }\n      });\n    });\n    this.walkSourceContents(function (sourceFile, sourceContent) {\n      map.setSourceContent(sourceFile, sourceContent);\n    });\n\n    return { code: generated.code, map: map };\n  };\n\n  exports.SourceNode = SourceNode;\n\n});\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  /**\n   * This is a helper function for getting values from parameter/options\n   * objects.\n   *\n   * @param args The object we are extracting values from\n   * @param name The name of the property we are getting.\n   * @param defaultValue An optional value to return if the property is missing\n   * from the object. If this is not specified and the property is missing, an\n   * error will be thrown.\n   */\n  function getArg(aArgs, aName, aDefaultValue) {\n    if (aName in aArgs) {\n      return aArgs[aName];\n    } else if (arguments.length === 3) {\n      return aDefaultValue;\n    } else {\n      throw new Error('\"' + aName + '\" is a required argument.');\n    }\n  }\n  exports.getArg = getArg;\n\n  var urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\n  var dataUrlRegexp = /^data:.+\\,.+$/;\n\n  function urlParse(aUrl) {\n    var match = aUrl.match(urlRegexp);\n    if (!match) {\n      return null;\n    }\n    return {\n      scheme: match[1],\n      auth: match[2],\n      host: match[3],\n      port: match[4],\n      path: match[5]\n    };\n  }\n  exports.urlParse = urlParse;\n\n  function urlGenerate(aParsedUrl) {\n    var url = '';\n    if (aParsedUrl.scheme) {\n      url += aParsedUrl.scheme + ':';\n    }\n    url += '//';\n    if (aParsedUrl.auth) {\n      url += aParsedUrl.auth + '@';\n    }\n    if (aParsedUrl.host) {\n      url += aParsedUrl.host;\n    }\n    if (aParsedUrl.port) {\n      url += \":\" + aParsedUrl.port\n    }\n    if (aParsedUrl.path) {\n      url += aParsedUrl.path;\n    }\n    return url;\n  }\n  exports.urlGenerate = urlGenerate;\n\n  /**\n   * Normalizes a path, or the path portion of a URL:\n   *\n   * - Replaces consequtive slashes with one slash.\n   * - Removes unnecessary '.' parts.\n   * - Removes unnecessary '<dir>/..' parts.\n   *\n   * Based on code in the Node.js 'path' core module.\n   *\n   * @param aPath The path or url to normalize.\n   */\n  function normalize(aPath) {\n    var path = aPath;\n    var url = urlParse(aPath);\n    if (url) {\n      if (!url.path) {\n        return aPath;\n      }\n      path = url.path;\n    }\n    var isAbsolute = (path.charAt(0) === '/');\n\n    var parts = path.split(/\\/+/);\n    for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n      part = parts[i];\n      if (part === '.') {\n        parts.splice(i, 1);\n      } else if (part === '..') {\n        up++;\n      } else if (up > 0) {\n        if (part === '') {\n          // The first part is blank if the path is absolute. Trying to go\n          // above the root is a no-op. Therefore we can remove all '..' parts\n          // directly after the root.\n          parts.splice(i + 1, up);\n          up = 0;\n        } else {\n          parts.splice(i, 2);\n          up--;\n        }\n      }\n    }\n    path = parts.join('/');\n\n    if (path === '') {\n      path = isAbsolute ? '/' : '.';\n    }\n\n    if (url) {\n      url.path = path;\n      return urlGenerate(url);\n    }\n    return path;\n  }\n  exports.normalize = normalize;\n\n  /**\n   * Joins two paths/URLs.\n   *\n   * @param aRoot The root path or URL.\n   * @param aPath The path or URL to be joined with the root.\n   *\n   * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n   *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n   *   first.\n   * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n   *   is updated with the result and aRoot is returned. Otherwise the result\n   *   is returned.\n   *   - If aPath is absolute, the result is aPath.\n   *   - Otherwise the two paths are joined with a slash.\n   * - Joining for example 'http://' and 'www.example.com' is also supported.\n   */\n  function join(aRoot, aPath) {\n    if (aRoot === \"\") {\n      aRoot = \".\";\n    }\n    if (aPath === \"\") {\n      aPath = \".\";\n    }\n    var aPathUrl = urlParse(aPath);\n    var aRootUrl = urlParse(aRoot);\n    if (aRootUrl) {\n      aRoot = aRootUrl.path || '/';\n    }\n\n    // `join(foo, '//www.example.org')`\n    if (aPathUrl && !aPathUrl.scheme) {\n      if (aRootUrl) {\n        aPathUrl.scheme = aRootUrl.scheme;\n      }\n      return urlGenerate(aPathUrl);\n    }\n\n    if (aPathUrl || aPath.match(dataUrlRegexp)) {\n      return aPath;\n    }\n\n    // `join('http://', 'www.example.com')`\n    if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n      aRootUrl.host = aPath;\n      return urlGenerate(aRootUrl);\n    }\n\n    var joined = aPath.charAt(0) === '/'\n      ? aPath\n      : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n    if (aRootUrl) {\n      aRootUrl.path = joined;\n      return urlGenerate(aRootUrl);\n    }\n    return joined;\n  }\n  exports.join = join;\n\n  /**\n   * Make a path relative to a URL or another path.\n   *\n   * @param aRoot The root path or URL.\n   * @param aPath The path or URL to be made relative to aRoot.\n   */\n  function relative(aRoot, aPath) {\n    if (aRoot === \"\") {\n      aRoot = \".\";\n    }\n\n    aRoot = aRoot.replace(/\\/$/, '');\n\n    // XXX: It is possible to remove this block, and the tests still pass!\n    var url = urlParse(aRoot);\n    if (aPath.charAt(0) == \"/\" && url && url.path == \"/\") {\n      return aPath.slice(1);\n    }\n\n    return aPath.indexOf(aRoot + '/') === 0\n      ? aPath.substr(aRoot.length + 1)\n      : aPath;\n  }\n  exports.relative = relative;\n\n  /**\n   * Because behavior goes wacky when you set `__proto__` on objects, we\n   * have to prefix all the strings in our set with an arbitrary character.\n   *\n   * See https://github.com/mozilla/source-map/pull/31 and\n   * https://github.com/mozilla/source-map/issues/30\n   *\n   * @param String aStr\n   */\n  function toSetString(aStr) {\n    return '$' + aStr;\n  }\n  exports.toSetString = toSetString;\n\n  function fromSetString(aStr) {\n    return aStr.substr(1);\n  }\n  exports.fromSetString = fromSetString;\n\n  function strcmp(aStr1, aStr2) {\n    var s1 = aStr1 || \"\";\n    var s2 = aStr2 || \"\";\n    return (s1 > s2) - (s1 < s2);\n  }\n\n  /**\n   * Comparator between two mappings where the original positions are compared.\n   *\n   * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n   * mappings with the same original source/line/column, but different generated\n   * line and column the same. Useful when searching for a mapping with a\n   * stubbed out mapping.\n   */\n  function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n    var cmp;\n\n    cmp = strcmp(mappingA.source, mappingB.source);\n    if (cmp) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalLine - mappingB.originalLine;\n    if (cmp) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalColumn - mappingB.originalColumn;\n    if (cmp || onlyCompareOriginal) {\n      return cmp;\n    }\n\n    cmp = strcmp(mappingA.name, mappingB.name);\n    if (cmp) {\n      return cmp;\n    }\n\n    cmp = mappingA.generatedLine - mappingB.generatedLine;\n    if (cmp) {\n      return cmp;\n    }\n\n    return mappingA.generatedColumn - mappingB.generatedColumn;\n  };\n  exports.compareByOriginalPositions = compareByOriginalPositions;\n\n  /**\n   * Comparator between two mappings where the generated positions are\n   * compared.\n   *\n   * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n   * mappings with the same generated line and column, but different\n   * source/name/original line and column the same. Useful when searching for a\n   * mapping with a stubbed out mapping.\n   */\n  function compareByGeneratedPositions(mappingA, mappingB, onlyCompareGenerated) {\n    var cmp;\n\n    cmp = mappingA.generatedLine - mappingB.generatedLine;\n    if (cmp) {\n      return cmp;\n    }\n\n    cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n    if (cmp || onlyCompareGenerated) {\n      return cmp;\n    }\n\n    cmp = strcmp(mappingA.source, mappingB.source);\n    if (cmp) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalLine - mappingB.originalLine;\n    if (cmp) {\n      return cmp;\n    }\n\n    cmp = mappingA.originalColumn - mappingB.originalColumn;\n    if (cmp) {\n      return cmp;\n    }\n\n    return strcmp(mappingA.name, mappingB.name);\n  };\n  exports.compareByGeneratedPositions = compareByGeneratedPositions;\n\n});\n","/** vim: et:ts=4:sw=4:sts=4\n * @license amdefine 0.1.0 Copyright (c) 2011, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/amdefine for details\n */\n\n/*jslint node: true */\n/*global module, process */\n'use strict';\n\n/**\n * Creates a define for node.\n * @param {Object} module the \"module\" object that is defined by Node for the\n * current module.\n * @param {Function} [requireFn]. Node's require function for the current module.\n * It only needs to be passed in Node versions before 0.5, when module.require\n * did not exist.\n * @returns {Function} a define function that is usable for the current node\n * module.\n */\nfunction amdefine(module, requireFn) {\n    'use strict';\n    var defineCache = {},\n        loaderCache = {},\n        alreadyCalled = false,\n        path = require('path'),\n        makeRequire, stringRequire;\n\n    /**\n     * Trims the . and .. from an array of path segments.\n     * It will keep a leading path segment if a .. will become\n     * the first path segment, to help with module name lookups,\n     * which act like paths, but can be remapped. But the end result,\n     * all paths that use this function should look normalized.\n     * NOTE: this method MODIFIES the input array.\n     * @param {Array} ary the array of path segments.\n     */\n    function trimDots(ary) {\n        var i, part;\n        for (i = 0; ary[i]; i+= 1) {\n            part = ary[i];\n            if (part === '.') {\n                ary.splice(i, 1);\n                i -= 1;\n            } else if (part === '..') {\n                if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {\n                    //End of the line. Keep at least one non-dot\n                    //path segment at the front so it can be mapped\n                    //correctly to disk. Otherwise, there is likely\n                    //no path mapping for a path starting with '..'.\n                    //This can still fail, but catches the most reasonable\n                    //uses of ..\n                    break;\n                } else if (i > 0) {\n                    ary.splice(i - 1, 2);\n                    i -= 2;\n                }\n            }\n        }\n    }\n\n    function normalize(name, baseName) {\n        var baseParts;\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === '.') {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                baseParts = baseName.split('/');\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                baseParts = baseParts.concat(name.split('/'));\n                trimDots(baseParts);\n                name = baseParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    /**\n     * Create the normalize() function passed to a loader plugin's\n     * normalize method.\n     */\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(id) {\n        function load(value) {\n            loaderCache[id] = value;\n        }\n\n        load.fromText = function (id, text) {\n            //This one is difficult because the text can/probably uses\n            //define, and any relative paths and requires should be relative\n            //to that id was it would be found on disk. But this would require\n            //bootstrapping a module/require fairly deeply from node core.\n            //Not sure how best to go about that yet.\n            throw new Error('amdefine does not implement load.fromText');\n        };\n\n        return load;\n    }\n\n    makeRequire = function (systemRequire, exports, module, relId) {\n        function amdRequire(deps, callback) {\n            if (typeof deps === 'string') {\n                //Synchronous, single module require('')\n                return stringRequire(systemRequire, exports, module, deps, relId);\n            } else {\n                //Array of dependencies with a callback.\n\n                //Convert the dependencies to modules.\n                deps = deps.map(function (depName) {\n                    return stringRequire(systemRequire, exports, module, depName, relId);\n                });\n\n                //Wait for next tick to call back the require call.\n                process.nextTick(function () {\n                    callback.apply(null, deps);\n                });\n            }\n        }\n\n        amdRequire.toUrl = function (filePath) {\n            if (filePath.indexOf('.') === 0) {\n                return normalize(filePath, path.dirname(module.filename));\n            } else {\n                return filePath;\n            }\n        };\n\n        return amdRequire;\n    };\n\n    //Favor explicit value, passed in if the module wants to support Node 0.4.\n    requireFn = requireFn || function req() {\n        return module.require.apply(module, arguments);\n    };\n\n    function runFactory(id, deps, factory) {\n        var r, e, m, result;\n\n        if (id) {\n            e = loaderCache[id] = {};\n            m = {\n                id: id,\n                uri: __filename,\n                exports: e\n            };\n            r = makeRequire(requireFn, e, m, id);\n        } else {\n            //Only support one define call per file\n            if (alreadyCalled) {\n                throw new Error('amdefine with no module ID cannot be called more than once per file.');\n            }\n            alreadyCalled = true;\n\n            //Use the real variables from node\n            //Use module.exports for exports, since\n            //the exports in here is amdefine exports.\n            e = module.exports;\n            m = module;\n            r = makeRequire(requireFn, e, m, module.id);\n        }\n\n        //If there are dependencies, they are strings, so need\n        //to convert them to dependency values.\n        if (deps) {\n            deps = deps.map(function (depName) {\n                return r(depName);\n            });\n        }\n\n        //Call the factory with the right dependencies.\n        if (typeof factory === 'function') {\n            result = factory.apply(m.exports, deps);\n        } else {\n            result = factory;\n        }\n\n        if (result !== undefined) {\n            m.exports = result;\n            if (id) {\n                loaderCache[id] = m.exports;\n            }\n        }\n    }\n\n    stringRequire = function (systemRequire, exports, module, id, relId) {\n        //Split the ID by a ! so that\n        var index = id.indexOf('!'),\n            originalId = id,\n            prefix, plugin;\n\n        if (index === -1) {\n            id = normalize(id, relId);\n\n            //Straight module lookup. If it is one of the special dependencies,\n            //deal with it, otherwise, delegate to node.\n            if (id === 'require') {\n                return makeRequire(systemRequire, exports, module, relId);\n            } else if (id === 'exports') {\n                return exports;\n            } else if (id === 'module') {\n                return module;\n            } else if (loaderCache.hasOwnProperty(id)) {\n                return loaderCache[id];\n            } else if (defineCache[id]) {\n                runFactory.apply(null, defineCache[id]);\n                return loaderCache[id];\n            } else {\n                if(systemRequire) {\n                    return systemRequire(originalId);\n                } else {\n                    throw new Error('No module with ID: ' + id);\n                }\n            }\n        } else {\n            //There is a plugin in play.\n            prefix = id.substring(0, index);\n            id = id.substring(index + 1, id.length);\n\n            plugin = stringRequire(systemRequire, exports, module, prefix, relId);\n\n            if (plugin.normalize) {\n                id = plugin.normalize(id, makeNormalize(relId));\n            } else {\n                //Normalize the ID normally.\n                id = normalize(id, relId);\n            }\n\n            if (loaderCache[id]) {\n                return loaderCache[id];\n            } else {\n                plugin.load(id, makeRequire(systemRequire, exports, module, relId), makeLoad(id), {});\n\n                return loaderCache[id];\n            }\n        }\n    };\n\n    //Create a define function specific to the module asking for amdefine.\n    function define(id, deps, factory) {\n        if (Array.isArray(id)) {\n            factory = deps;\n            deps = id;\n            id = undefined;\n        } else if (typeof id !== 'string') {\n            factory = id;\n            id = deps = undefined;\n        }\n\n        if (deps && !Array.isArray(deps)) {\n            factory = deps;\n            deps = undefined;\n        }\n\n        if (!deps) {\n            deps = ['require', 'exports', 'module'];\n        }\n\n        //Set up properties for this module. If an ID, then use\n        //internal cache. If no ID, then use the external variables\n        //for this node module.\n        if (id) {\n            //Put the module in deep freeze until there is a\n            //require call for it.\n            defineCache[id] = [id, deps, factory];\n        } else {\n            runFactory(id, deps, factory);\n        }\n    }\n\n    //define.require, which has access to all the values in the\n    //cache. Useful for AMD modules that all have IDs in the file,\n    //but need to finally export a value to node based on one of those\n    //IDs.\n    define.require = function (id) {\n        if (loaderCache[id]) {\n            return loaderCache[id];\n        }\n\n        if (defineCache[id]) {\n            runFactory.apply(null, defineCache[id]);\n            return loaderCache[id];\n        }\n    };\n\n    define.amd = {};\n\n    return define;\n}\n\nmodule.exports = amdefine;\n","module.exports={\"abstract-expression-call\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"PROPERTY\"},\"property\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Symbol\"},\"property\":{\"type\":\"Identifier\",\"name\":\"referenceGet\"},\"computed\":false},\"computed\":true},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"OBJECT\"}]},\"property\":{\"type\":\"Identifier\",\"name\":\"call\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"OBJECT\"}]}}]},\"abstract-expression-delete\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"PROPERTY\"},\"property\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Symbol\"},\"property\":{\"type\":\"Identifier\",\"name\":\"referenceDelete\"},\"computed\":false},\"computed\":true},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"OBJECT\"}]}}]},\"abstract-expression-get\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"PROPERTY\"},\"property\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Symbol\"},\"property\":{\"type\":\"Identifier\",\"name\":\"referenceGet\"},\"computed\":false},\"computed\":true},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"OBJECT\"}]}}]},\"abstract-expression-set\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"PROPERTY\"},\"property\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Symbol\"},\"property\":{\"type\":\"Identifier\",\"name\":\"referenceSet\"},\"computed\":false},\"computed\":true},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"OBJECT\"},{\"type\":\"Identifier\",\"name\":\"VALUE\"}]}}]},\"apply-constructor\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"Constructor\"},{\"type\":\"Identifier\",\"name\":\"args\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"VariableDeclaration\",\"declarations\":[{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"instance\"},\"init\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Object\"},\"property\":{\"type\":\"Identifier\",\"name\":\"create\"},\"computed\":false},\"arguments\":[{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Constructor\"},\"property\":{\"type\":\"Identifier\",\"name\":\"prototype\"},\"computed\":false}]}}],\"kind\":\"var\"},{\"type\":\"VariableDeclaration\",\"declarations\":[{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"result\"},\"init\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Constructor\"},\"property\":{\"type\":\"Identifier\",\"name\":\"apply\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"instance\"},{\"type\":\"Identifier\",\"name\":\"args\"}]}}],\"kind\":\"var\"},{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"ConditionalExpression\",\"test\":{\"type\":\"LogicalExpression\",\"left\":{\"type\":\"BinaryExpression\",\"left\":{\"type\":\"Identifier\",\"name\":\"result\"},\"operator\":\"!=\",\"right\":{\"type\":\"Literal\",\"value\":null}},\"operator\":\"&&\",\"right\":{\"type\":\"LogicalExpression\",\"left\":{\"type\":\"BinaryExpression\",\"left\":{\"type\":\"UnaryExpression\",\"operator\":\"typeof\",\"prefix\":true,\"argument\":{\"type\":\"Identifier\",\"name\":\"result\"}},\"operator\":\"==\",\"right\":{\"type\":\"Literal\",\"value\":\"object\"}},\"operator\":\"||\",\"right\":{\"type\":\"BinaryExpression\",\"left\":{\"type\":\"UnaryExpression\",\"operator\":\"typeof\",\"prefix\":true,\"argument\":{\"type\":\"Identifier\",\"name\":\"result\"}},\"operator\":\"==\",\"right\":{\"type\":\"Literal\",\"value\":\"function\"}}}},\"consequent\":{\"type\":\"Identifier\",\"name\":\"result\"},\"alternate\":{\"type\":\"Identifier\",\"name\":\"instance\"}}}]},\"expression\":false}}]},\"array-comprehension-container\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"VariableDeclaration\",\"declarations\":[{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"KEY\"},\"init\":{\"type\":\"ArrayExpression\",\"elements\":[]}}],\"kind\":\"var\"},{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"Identifier\",\"name\":\"KEY\"}}]},\"expression\":false},\"arguments\":[]}}]},\"array-comprehension-for-each\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"ARRAY\"},\"property\":{\"type\":\"Identifier\",\"name\":\"forEach\"},\"computed\":false},\"arguments\":[{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"KEY\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[]},\"expression\":false}]}}]},\"array-expression-comprehension-filter\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"ARRAY\"},\"property\":{\"type\":\"Identifier\",\"name\":\"filter\"},\"computed\":false},\"arguments\":[{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"KEY\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"Identifier\",\"name\":\"FILTER\"}}]},\"expression\":false}]},\"property\":{\"type\":\"Identifier\",\"name\":\"map\"},\"computed\":false},\"arguments\":[{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"KEY\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"Identifier\",\"name\":\"STATEMENT\"}}]},\"expression\":false}]}}]},\"array-expression-comprehension-map\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"ARRAY\"},\"property\":{\"type\":\"Identifier\",\"name\":\"map\"},\"computed\":false},\"arguments\":[{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"KEY\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"Identifier\",\"name\":\"STATEMENT\"}}]},\"expression\":false}]}}]},\"array-from\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Array\"},\"property\":{\"type\":\"Identifier\",\"name\":\"from\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"VALUE\"}]}}]},\"array-push\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"KEY\"},\"property\":{\"type\":\"Identifier\",\"name\":\"push\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"STATEMENT\"}]}}]},\"call\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"OBJECT\"},\"property\":{\"type\":\"Identifier\",\"name\":\"call\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"CONTEXT\"}]}}]},\"class-super-constructor-call\":{\"type\":\"Program\",\"body\":[{\"type\":\"IfStatement\",\"test\":{\"type\":\"Identifier\",\"name\":\"SUPER_NAME\"},\"consequent\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"SUPER_NAME\"},\"property\":{\"type\":\"Identifier\",\"name\":\"apply\"},\"computed\":false},\"arguments\":[{\"type\":\"ThisExpression\"},{\"type\":\"Identifier\",\"name\":\"arguments\"}]}}]},\"alternate\":null}]},\"exports-assign\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"AssignmentExpression\",\"operator\":\"=\",\"left\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"exports\"},\"property\":{\"type\":\"Identifier\",\"name\":\"KEY\"},\"computed\":false},\"right\":{\"type\":\"Identifier\",\"name\":\"VALUE\"}}}]},\"exports-default-module-override\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"AssignmentExpression\",\"operator\":\"=\",\"left\":{\"type\":\"Identifier\",\"name\":\"exports\"},\"right\":{\"type\":\"AssignmentExpression\",\"operator\":\"=\",\"left\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"module\"},\"property\":{\"type\":\"Identifier\",\"name\":\"exports\"},\"computed\":false},\"right\":{\"type\":\"Identifier\",\"name\":\"VALUE\"}}}}]},\"exports-default-module\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"AssignmentExpression\",\"operator\":\"=\",\"left\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"module\"},\"property\":{\"type\":\"Identifier\",\"name\":\"exports\"},\"computed\":false},\"right\":{\"type\":\"Identifier\",\"name\":\"VALUE\"}}}]},\"exports-wildcard\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"obj\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ForInStatement\",\"left\":{\"type\":\"VariableDeclaration\",\"declarations\":[{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"i\"},\"init\":null}],\"kind\":\"var\"},\"right\":{\"type\":\"Identifier\",\"name\":\"obj\"},\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"AssignmentExpression\",\"operator\":\"=\",\"left\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"exports\"},\"property\":{\"type\":\"Identifier\",\"name\":\"i\"},\"computed\":true},\"right\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"obj\"},\"property\":{\"type\":\"Identifier\",\"name\":\"i\"},\"computed\":true}}}]}}]},\"expression\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"OBJECT\"}]}}]},\"for-of\":{\"type\":\"Program\",\"body\":[{\"type\":\"ForStatement\",\"init\":{\"type\":\"VariableDeclaration\",\"declarations\":[{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"ITERATOR_KEY\"},\"init\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"OBJECT\"},\"property\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Symbol\"},\"property\":{\"type\":\"Identifier\",\"name\":\"iterator\"},\"computed\":false},\"computed\":true},\"arguments\":[]}},{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"STEP_KEY\"},\"init\":null}],\"kind\":\"var\"},\"test\":{\"type\":\"UnaryExpression\",\"operator\":\"!\",\"prefix\":true,\"argument\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"AssignmentExpression\",\"operator\":\"=\",\"left\":{\"type\":\"Identifier\",\"name\":\"STEP_KEY\"},\"right\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"ITERATOR_KEY\"},\"property\":{\"type\":\"Identifier\",\"name\":\"next\"},\"computed\":false},\"arguments\":[]}},\"property\":{\"type\":\"Identifier\",\"name\":\"done\"},\"computed\":false}},\"update\":null,\"body\":{\"type\":\"BlockStatement\",\"body\":[]}}]},\"function-return-obj\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"KEY\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"Identifier\",\"name\":\"KEY\"}}]},\"expression\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"OBJECT\"}]}}]},\"has-own\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Object\"},\"property\":{\"type\":\"Identifier\",\"name\":\"prototype\"},\"computed\":false},\"property\":{\"type\":\"Identifier\",\"name\":\"hasOwnProperty\"},\"computed\":false}}]},\"if-undefined-set-to\":{\"type\":\"Program\",\"body\":[{\"type\":\"IfStatement\",\"test\":{\"type\":\"BinaryExpression\",\"left\":{\"type\":\"Identifier\",\"name\":\"VARIABLE\"},\"operator\":\"===\",\"right\":{\"type\":\"Identifier\",\"name\":\"undefined\"}},\"consequent\":{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"AssignmentExpression\",\"operator\":\"=\",\"left\":{\"type\":\"Identifier\",\"name\":\"VARIABLE\"},\"right\":{\"type\":\"Identifier\",\"name\":\"DEFAULT\"}}},\"alternate\":null}]},\"inherits\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"child\"},{\"type\":\"Identifier\",\"name\":\"parent\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"AssignmentExpression\",\"operator\":\"=\",\"left\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"child\"},\"property\":{\"type\":\"Identifier\",\"name\":\"prototype\"},\"computed\":false},\"right\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Object\"},\"property\":{\"type\":\"Identifier\",\"name\":\"create\"},\"computed\":false},\"arguments\":[{\"type\":\"LogicalExpression\",\"left\":{\"type\":\"Identifier\",\"name\":\"parent\"},\"operator\":\"&&\",\"right\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"parent\"},\"property\":{\"type\":\"Identifier\",\"name\":\"prototype\"},\"computed\":false}},{\"type\":\"ObjectExpression\",\"properties\":[{\"type\":\"Property\",\"method\":false,\"shorthand\":false,\"computed\":false,\"key\":{\"type\":\"Identifier\",\"name\":\"constructor\"},\"value\":{\"type\":\"ObjectExpression\",\"properties\":[{\"type\":\"Property\",\"method\":false,\"shorthand\":false,\"computed\":false,\"key\":{\"type\":\"Identifier\",\"name\":\"value\"},\"value\":{\"type\":\"Identifier\",\"name\":\"child\"},\"kind\":\"init\"},{\"type\":\"Property\",\"method\":false,\"shorthand\":false,\"computed\":false,\"key\":{\"type\":\"Identifier\",\"name\":\"enumerable\"},\"value\":{\"type\":\"Literal\",\"value\":false},\"kind\":\"init\"},{\"type\":\"Property\",\"method\":false,\"shorthand\":false,\"computed\":false,\"key\":{\"type\":\"Identifier\",\"name\":\"writable\"},\"value\":{\"type\":\"Literal\",\"value\":true},\"kind\":\"init\"},{\"type\":\"Property\",\"method\":false,\"shorthand\":false,\"computed\":false,\"key\":{\"type\":\"Identifier\",\"name\":\"configurable\"},\"value\":{\"type\":\"Literal\",\"value\":true},\"kind\":\"init\"}]},\"kind\":\"init\"}]}]}}},{\"type\":\"IfStatement\",\"test\":{\"type\":\"Identifier\",\"name\":\"parent\"},\"consequent\":{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"AssignmentExpression\",\"operator\":\"=\",\"left\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"child\"},\"property\":{\"type\":\"Identifier\",\"name\":\"__proto__\"},\"computed\":false},\"right\":{\"type\":\"Identifier\",\"name\":\"parent\"}}},\"alternate\":null}]},\"expression\":false}}]},\"interop-require\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"obj\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"LogicalExpression\",\"left\":{\"type\":\"Identifier\",\"name\":\"obj\"},\"operator\":\"&&\",\"right\":{\"type\":\"LogicalExpression\",\"left\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"obj\"},\"property\":{\"type\":\"Literal\",\"value\":\"default\"},\"computed\":true},\"operator\":\"||\",\"right\":{\"type\":\"Identifier\",\"name\":\"obj\"}}}}]},\"expression\":false}}]},\"let-scoping-return\":{\"type\":\"Program\",\"body\":[{\"type\":\"IfStatement\",\"test\":{\"type\":\"BinaryExpression\",\"left\":{\"type\":\"UnaryExpression\",\"operator\":\"typeof\",\"prefix\":true,\"argument\":{\"type\":\"Identifier\",\"name\":\"RETURN\"}},\"operator\":\"===\",\"right\":{\"type\":\"Literal\",\"value\":\"object\"}},\"consequent\":{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"RETURN\"},\"property\":{\"type\":\"Identifier\",\"name\":\"v\"},\"computed\":false}},\"alternate\":null}]},\"object-define-properties-closure\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"KEY\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"Identifier\",\"name\":\"CONTENT\"}},{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"Identifier\",\"name\":\"KEY\"}}]},\"expression\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"OBJECT\"}]}}]},\"object-define-properties\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Object\"},\"property\":{\"type\":\"Identifier\",\"name\":\"defineProperties\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"OBJECT\"},{\"type\":\"Identifier\",\"name\":\"PROPS\"}]}}]},\"object-without-properties\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"obj\"},{\"type\":\"Identifier\",\"name\":\"keys\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"VariableDeclaration\",\"declarations\":[{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"target\"},\"init\":{\"type\":\"ObjectExpression\",\"properties\":[]}}],\"kind\":\"var\"},{\"type\":\"ForInStatement\",\"left\":{\"type\":\"VariableDeclaration\",\"declarations\":[{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"i\"},\"init\":null}],\"kind\":\"var\"},\"right\":{\"type\":\"Identifier\",\"name\":\"obj\"},\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"IfStatement\",\"test\":{\"type\":\"BinaryExpression\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"keys\"},\"property\":{\"type\":\"Identifier\",\"name\":\"indexOf\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"i\"}]},\"operator\":\">=\",\"right\":{\"type\":\"Literal\",\"value\":0}},\"consequent\":{\"type\":\"ContinueStatement\",\"label\":null},\"alternate\":null},{\"type\":\"IfStatement\",\"test\":{\"type\":\"UnaryExpression\",\"operator\":\"!\",\"prefix\":true,\"argument\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Object\"},\"property\":{\"type\":\"Identifier\",\"name\":\"prototype\"},\"computed\":false},\"property\":{\"type\":\"Identifier\",\"name\":\"hasOwnProperty\"},\"computed\":false},\"property\":{\"type\":\"Identifier\",\"name\":\"call\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"obj\"},{\"type\":\"Identifier\",\"name\":\"i\"}]}},\"consequent\":{\"type\":\"ContinueStatement\",\"label\":null},\"alternate\":null},{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"AssignmentExpression\",\"operator\":\"=\",\"left\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"target\"},\"property\":{\"type\":\"Identifier\",\"name\":\"i\"},\"computed\":true},\"right\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"obj\"},\"property\":{\"type\":\"Identifier\",\"name\":\"i\"},\"computed\":true}}}]}},{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"Identifier\",\"name\":\"target\"}}]},\"expression\":false}}]},\"prototype-identifier\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"CLASS_NAME\"},\"property\":{\"type\":\"Identifier\",\"name\":\"prototype\"},\"computed\":false}}]},\"prototype-properties\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"child\"},{\"type\":\"Identifier\",\"name\":\"staticProps\"},{\"type\":\"Identifier\",\"name\":\"instanceProps\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"IfStatement\",\"test\":{\"type\":\"Identifier\",\"name\":\"staticProps\"},\"consequent\":{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Object\"},\"property\":{\"type\":\"Identifier\",\"name\":\"defineProperties\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"child\"},{\"type\":\"Identifier\",\"name\":\"staticProps\"}]}},\"alternate\":null},{\"type\":\"IfStatement\",\"test\":{\"type\":\"Identifier\",\"name\":\"instanceProps\"},\"consequent\":{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Object\"},\"property\":{\"type\":\"Identifier\",\"name\":\"defineProperties\"},\"computed\":false},\"arguments\":[{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"child\"},\"property\":{\"type\":\"Identifier\",\"name\":\"prototype\"},\"computed\":false},{\"type\":\"Identifier\",\"name\":\"instanceProps\"}]}},\"alternate\":null}]},\"expression\":false}}]},\"require-assign-key\":{\"type\":\"Program\",\"body\":[{\"type\":\"VariableDeclaration\",\"declarations\":[{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"VARIABLE_NAME\"},\"init\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"require\"},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"MODULE_NAME\"}]},\"property\":{\"type\":\"Identifier\",\"name\":\"KEY\"},\"computed\":false}}],\"kind\":\"var\"}]},\"require-assign\":{\"type\":\"Program\",\"body\":[{\"type\":\"VariableDeclaration\",\"declarations\":[{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"VARIABLE_NAME\"},\"init\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"require\"},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"MODULE_NAME\"}]}}],\"kind\":\"var\"}]},\"require\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"require\"},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"MODULE_NAME\"}]}}]},\"self-global\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"ConditionalExpression\",\"test\":{\"type\":\"BinaryExpression\",\"left\":{\"type\":\"UnaryExpression\",\"operator\":\"typeof\",\"prefix\":true,\"argument\":{\"type\":\"Identifier\",\"name\":\"global\"}},\"operator\":\"===\",\"right\":{\"type\":\"Literal\",\"value\":\"undefined\"}},\"consequent\":{\"type\":\"Identifier\",\"name\":\"self\"},\"alternate\":{\"type\":\"Identifier\",\"name\":\"global\"}}}]},\"slice\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Array\"},\"property\":{\"type\":\"Identifier\",\"name\":\"prototype\"},\"computed\":false},\"property\":{\"type\":\"Identifier\",\"name\":\"slice\"},\"computed\":false}}]},\"sliced-to-array\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"arr\"},{\"type\":\"Identifier\",\"name\":\"i\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"IfStatement\",\"test\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Array\"},\"property\":{\"type\":\"Identifier\",\"name\":\"isArray\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"arr\"}]},\"consequent\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"Identifier\",\"name\":\"arr\"}}]},\"alternate\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"VariableDeclaration\",\"declarations\":[{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"_arr\"},\"init\":{\"type\":\"ArrayExpression\",\"elements\":[]}}],\"kind\":\"var\"},{\"type\":\"ForStatement\",\"init\":{\"type\":\"VariableDeclaration\",\"declarations\":[{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"_iterator\"},\"init\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"arr\"},\"property\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Symbol\"},\"property\":{\"type\":\"Identifier\",\"name\":\"iterator\"},\"computed\":false},\"computed\":true},\"arguments\":[]}},{\"type\":\"VariableDeclarator\",\"id\":{\"type\":\"Identifier\",\"name\":\"_step\"},\"init\":null}],\"kind\":\"var\"},\"test\":{\"type\":\"UnaryExpression\",\"operator\":\"!\",\"prefix\":true,\"argument\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"AssignmentExpression\",\"operator\":\"=\",\"left\":{\"type\":\"Identifier\",\"name\":\"_step\"},\"right\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"_iterator\"},\"property\":{\"type\":\"Identifier\",\"name\":\"next\"},\"computed\":false},\"arguments\":[]}},\"property\":{\"type\":\"Identifier\",\"name\":\"done\"},\"computed\":false}},\"update\":null,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"_arr\"},\"property\":{\"type\":\"Identifier\",\"name\":\"push\"},\"computed\":false},\"arguments\":[{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"_step\"},\"property\":{\"type\":\"Identifier\",\"name\":\"value\"},\"computed\":false}]}},{\"type\":\"IfStatement\",\"test\":{\"type\":\"LogicalExpression\",\"left\":{\"type\":\"Identifier\",\"name\":\"i\"},\"operator\":\"&&\",\"right\":{\"type\":\"BinaryExpression\",\"left\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"_arr\"},\"property\":{\"type\":\"Identifier\",\"name\":\"length\"},\"computed\":false},\"operator\":\"===\",\"right\":{\"type\":\"Identifier\",\"name\":\"i\"}}},\"consequent\":{\"type\":\"BreakStatement\",\"label\":null},\"alternate\":null}]}},{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"Identifier\",\"name\":\"_arr\"}}]}}]},\"expression\":false}}]},\"system\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"System\"},\"property\":{\"type\":\"Identifier\",\"name\":\"register\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"MODULE_NAME\"},{\"type\":\"Identifier\",\"name\":\"MODULE_DEPENDENCIES\"},{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"EXPORT_IDENTIFIER\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"ObjectExpression\",\"properties\":[{\"type\":\"Property\",\"method\":false,\"shorthand\":false,\"computed\":false,\"key\":{\"type\":\"Identifier\",\"name\":\"setters\"},\"value\":{\"type\":\"Identifier\",\"name\":\"SETTERS\"},\"kind\":\"init\"},{\"type\":\"Property\",\"method\":false,\"shorthand\":false,\"computed\":false,\"key\":{\"type\":\"Identifier\",\"name\":\"execute\"},\"value\":{\"type\":\"Identifier\",\"name\":\"EXECUTE\"},\"kind\":\"init\"}]}}]},\"expression\":false}]}}]},\"tagged-template-literal\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"strings\"},{\"type\":\"Identifier\",\"name\":\"raw\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Object\"},\"property\":{\"type\":\"Identifier\",\"name\":\"freeze\"},\"computed\":false},\"arguments\":[{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Object\"},\"property\":{\"type\":\"Identifier\",\"name\":\"defineProperties\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"strings\"},{\"type\":\"ObjectExpression\",\"properties\":[{\"type\":\"Property\",\"method\":false,\"shorthand\":false,\"computed\":false,\"key\":{\"type\":\"Identifier\",\"name\":\"raw\"},\"value\":{\"type\":\"ObjectExpression\",\"properties\":[{\"type\":\"Property\",\"method\":false,\"shorthand\":false,\"computed\":false,\"key\":{\"type\":\"Identifier\",\"name\":\"value\"},\"value\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Object\"},\"property\":{\"type\":\"Identifier\",\"name\":\"freeze\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"raw\"}]},\"kind\":\"init\"}]},\"kind\":\"init\"}]}]}]}}]},\"expression\":false}}]},\"to-array\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"arr\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ReturnStatement\",\"argument\":{\"type\":\"ConditionalExpression\",\"test\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Array\"},\"property\":{\"type\":\"Identifier\",\"name\":\"isArray\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"arr\"}]},\"consequent\":{\"type\":\"Identifier\",\"name\":\"arr\"},\"alternate\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"Array\"},\"property\":{\"type\":\"Identifier\",\"name\":\"from\"},\"computed\":false},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"arr\"}]}}}]},\"expression\":false}}]},\"umd-runner-body\":{\"type\":\"Program\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"FunctionExpression\",\"id\":null,\"params\":[{\"type\":\"Identifier\",\"name\":\"factory\"}],\"defaults\":[],\"rest\":null,\"generator\":false,\"body\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"IfStatement\",\"test\":{\"type\":\"LogicalExpression\",\"left\":{\"type\":\"BinaryExpression\",\"left\":{\"type\":\"UnaryExpression\",\"operator\":\"typeof\",\"prefix\":true,\"argument\":{\"type\":\"Identifier\",\"name\":\"define\"}},\"operator\":\"===\",\"right\":{\"type\":\"Literal\",\"value\":\"function\"}},\"operator\":\"&&\",\"right\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"define\"},\"property\":{\"type\":\"Identifier\",\"name\":\"amd\"},\"computed\":false}},\"consequent\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"define\"},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"AMD_ARGUMENTS\"},{\"type\":\"Identifier\",\"name\":\"factory\"}]}}]},\"alternate\":{\"type\":\"IfStatement\",\"test\":{\"type\":\"BinaryExpression\",\"left\":{\"type\":\"UnaryExpression\",\"operator\":\"typeof\",\"prefix\":true,\"argument\":{\"type\":\"Identifier\",\"name\":\"exports\"}},\"operator\":\"!==\",\"right\":{\"type\":\"Literal\",\"value\":\"undefined\"}},\"consequent\":{\"type\":\"BlockStatement\",\"body\":[{\"type\":\"ExpressionStatement\",\"expression\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"factory\"},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"exports\"},{\"type\":\"Identifier\",\"name\":\"COMMON_ARGUMENTS\"}]}}]},\"alternate\":null}}]},\"expression\":false}}]}}","//     Backbone.js 1.1.2\n\n//     (c) 2010-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(root, factory) {\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore');\n    factory(root, exports, _);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(this, function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create local references to array methods we'll want to use later.\n  var array = [];\n  var push = array.push;\n  var slice = array.slice;\n  var splice = array.splice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.1.2';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {\n\n    // Bind an event to a `callback` function. Passing `\"all\"` will bind\n    // the callback to all events fired.\n    on: function(name, callback, context) {\n      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n      this._events || (this._events = {});\n      var events = this._events[name] || (this._events[name] = []);\n      events.push({callback: callback, context: context, ctx: context || this});\n      return this;\n    },\n\n    // Bind an event to only be triggered a single time. After the first time\n    // the callback is invoked, it will be removed.\n    once: function(name, callback, context) {\n      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n      var self = this;\n      var once = _.once(function() {\n        self.off(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n      return this.on(name, once, context);\n    },\n\n    // Remove one or many callbacks. If `context` is null, removes all\n    // callbacks with that function. If `callback` is null, removes all\n    // callbacks for the event. If `name` is null, removes all bound\n    // callbacks for all events.\n    off: function(name, callback, context) {\n      var retain, ev, events, names, i, l, j, k;\n      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n      if (!name && !callback && !context) {\n        this._events = void 0;\n        return this;\n      }\n      names = name ? [name] : _.keys(this._events);\n      for (i = 0, l = names.length; i < l; i++) {\n        name = names[i];\n        if (events = this._events[name]) {\n          this._events[name] = retain = [];\n          if (callback || context) {\n            for (j = 0, k = events.length; j < k; j++) {\n              ev = events[j];\n              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                  (context && context !== ev.context)) {\n                retain.push(ev);\n              }\n            }\n          }\n          if (!retain.length) delete this._events[name];\n        }\n      }\n\n      return this;\n    },\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger: function(name) {\n      if (!this._events) return this;\n      var args = slice.call(arguments, 1);\n      if (!eventsApi(this, 'trigger', name, args)) return this;\n      var events = this._events[name];\n      var allEvents = this._events.all;\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, arguments);\n      return this;\n    },\n\n    // Tell this object to stop listening to either specific events ... or\n    // to every object it's currently listening to.\n    stopListening: function(obj, name, callback) {\n      var listeningTo = this._listeningTo;\n      if (!listeningTo) return this;\n      var remove = !name && !callback;\n      if (!callback && typeof name === 'object') callback = this;\n      if (obj) (listeningTo = {})[obj._listenId] = obj;\n      for (var id in listeningTo) {\n        obj = listeningTo[id];\n        obj.off(name, callback, this);\n        if (remove || _.isEmpty(obj._events)) delete this._listeningTo[id];\n      }\n      return this;\n    }\n\n  };\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Implement fancy features of the Events API such as multiple event\n  // names `\"change blur\"` and jQuery-style event maps `{change: action}`\n  // in terms of the existing API.\n  var eventsApi = function(obj, action, name, rest) {\n    if (!name) return true;\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n      for (var key in name) {\n        obj[action].apply(obj, [key, name[key]].concat(rest));\n      }\n      return false;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  var listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n  // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n  // listen to an event in another object ... keeping track of what it's\n  // listening to.\n  _.each(listenMethods, function(implementation, method) {\n    Events[method] = function(obj, name, callback) {\n      var listeningTo = this._listeningTo || (this._listeningTo = {});\n      var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n      listeningTo[id] = obj;\n      if (!callback && typeof name === 'object') callback = this;\n      obj[implementation](name, callback, this);\n      return this;\n    };\n  });\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId('c');\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      var attr, attrs, unset, changes, silent, changing, prev, current;\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      unset           = options.unset;\n      silent          = options.silent;\n      changes         = [];\n      changing        = this._changing;\n      this._changing  = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n      current = this.attributes, prev = this._previousAttributes;\n\n      // Check for changes of `id`.\n      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n      // For each `set` attribute, update or delete the current value.\n      for (attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          this.changed[attr] = val;\n        } else {\n          delete this.changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0, l = changes.length; i < l; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var val, changed = false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      for (var attr in diff) {\n        if (_.isEqual(old[attr], (val = diff[attr]))) continue;\n        (changed || (changed = {}))[attr] = val;\n      }\n      return changed;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server. If the server's representation of the\n    // model differs from its current attributes, they will be overridden,\n    // triggering a `\"change\"` event.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        if (!model.set(model.parse(resp, options), options)) return false;\n        if (success) success(model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      var attrs, method, xhr, attributes = this.attributes;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true}, options);\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !options.wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // Set temporary attributes if `{wait: true}`.\n      if (attrs && options.wait) {\n        this.attributes = _.extend({}, attributes, attrs);\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = model.parse(resp, options);\n        if (options.wait) serverAttrs = _.extend(attrs || {}, serverAttrs);\n        if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {\n          return false;\n        }\n        if (success) success(model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch') options.attrs = attrs;\n      xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      if (attrs && options.wait) this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n\n      var destroy = function() {\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (options.wait || model.isNew()) destroy();\n        if (success) success(model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      if (this.isNew()) {\n        options.success();\n        return false;\n      }\n      wrapError(this, options);\n\n      var xhr = this.sync('delete', this, options);\n      if (!options.wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      return base.replace(/([^\\/])$/, '$1/') + encodeURIComponent(this.id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend(options || {}, { validate: true }));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model.\n  var modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit'];\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  _.each(modelMethods, function(method) {\n    Model.prototype[method] = function() {\n      var args = slice.call(arguments);\n      args.unshift(this.attributes);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analagous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model){ return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      options || (options = {});\n      var i, l, index, model;\n      for (i = 0, l = models.length; i < l; i++) {\n        model = models[i] = this.get(models[i]);\n        if (!model) continue;\n        delete this._byId[model.id];\n        delete this._byId[model.cid];\n        index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n        this._removeReference(model, options);\n      }\n      return singular ? models[0] : models;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      options = _.defaults({}, options, setOptions);\n      if (options.parse) models = this.parse(models, options);\n      var singular = !_.isArray(models);\n      models = singular ? (models ? [models] : []) : _.clone(models);\n      var i, l, id, model, attrs, existing, sort;\n      var at = options.at;\n      var targetModel = this.model;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n      var toAdd = [], toRemove = [], modelMap = {};\n      var add = options.add, merge = options.merge, remove = options.remove;\n      var order = !sortable && add && remove ? [] : false;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      for (i = 0, l = models.length; i < l; i++) {\n        attrs = models[i] || {};\n        if (attrs instanceof Model) {\n          id = model = attrs;\n        } else {\n          id = attrs[targetModel.prototype.idAttribute || 'id'];\n        }\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        if (existing = this.get(id)) {\n          if (remove) modelMap[existing.cid] = true;\n          if (merge) {\n            attrs = attrs === model ? model.attributes : attrs;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(attrs, options);\n          if (!model) continue;\n          toAdd.push(model);\n          this._addReference(model, options);\n        }\n\n        // Do not add multiple models with the same `id`.\n        model = existing || model;\n        if (order && (model.isNew() || !modelMap[model.id])) order.push(model);\n        modelMap[model.id] = true;\n      }\n\n      // Remove nonexistent models if appropriate.\n      if (remove) {\n        for (i = 0, l = this.length; i < l; ++i) {\n          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this.remove(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      if (toAdd.length || (order && order.length)) {\n        if (sortable) sort = true;\n        this.length += toAdd.length;\n        if (at != null) {\n          for (i = 0, l = toAdd.length; i < l; i++) {\n            this.models.splice(at + i, 0, toAdd[i]);\n          }\n        } else {\n          if (order) this.models.length = 0;\n          var orderedModels = order || toAdd;\n          for (i = 0, l = orderedModels.length; i < l; i++) {\n            this.models.push(orderedModels[i]);\n          }\n        }\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        for (i = 0, l = toAdd.length; i < l; i++) {\n          (model = toAdd[i]).trigger('add', model, this, options);\n        }\n        if (sort || (order && order.length)) this.trigger('sort', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options || (options = {});\n      for (var i = 0, l = this.models.length; i < l; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] || this._byId[obj.id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      if (_.isEmpty(attrs)) return first ? void 0 : [];\n      return this[first ? 'find' : 'filter'](function(model) {\n        for (var key in attrs) {\n          if (attrs[key] !== model.get(key)) return false;\n        }\n        return true;\n      });\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      // Run sort based on type of `comparator`.\n      if (_.isString(this.comparator) || this.comparator.length === 1) {\n        this.models = this.sortBy(this.comparator, this);\n      } else {\n        this.models.sort(_.bind(this.comparator, this));\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success(collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      if (!(model = this._prepareModel(model, options))) return false;\n      if (!options.wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp) {\n        if (options.wait) collection.add(model, options);\n        if (success) success(model, resp, options);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models);\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (attrs instanceof Model) return attrs;\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      if (model.id != null) this._byId[model.id] = model;\n      if (!model.collection) model.collection = this;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (model && event === 'change:' + model.idAttribute) {\n        delete this._byId[model.previous(model.idAttribute)];\n        if (model.id != null) this._byId[model.id] = model;\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',\n    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',\n    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',\n    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',\n    'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle',\n    'lastIndexOf', 'isEmpty', 'chain', 'sample'];\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  _.each(methods, function(method) {\n    Collection.prototype[method] = function() {\n      var args = slice.call(arguments);\n      args.unshift(this.models);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Underscore methods that take a property name as an argument.\n  var attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy'];\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, function(method) {\n    Collection.prototype[method] = function(value, context) {\n      var iterator = _.isFunction(value) ? value : function(model) {\n        return model.get(value);\n      };\n      return _[method](this.models, iterator, context);\n    };\n  });\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    options || (options = {});\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n    this.delegateEvents();\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be merged as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this.$el.remove();\n      this.stopListening();\n      return this;\n    },\n\n    // Change the view's element (`this.el` property), including event\n    // re-delegation.\n    setElement: function(element, delegate) {\n      if (this.$el) this.undelegateEvents();\n      this.$el = element instanceof Backbone.$ ? element : Backbone.$(element);\n      this.el = this.$el[0];\n      if (delegate !== false) this.delegateEvents();\n      return this;\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    // This only works for delegate-able events: not `focus`, `blur`, and\n    // not `change`, `submit`, and `reset` in Internet Explorer.\n    delegateEvents: function(events) {\n      if (!(events || (events = _.result(this, 'events')))) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[events[key]];\n        if (!method) continue;\n\n        var match = key.match(delegateEventSplitter);\n        var eventName = match[1], selector = match[2];\n        method = _.bind(method, this);\n        eventName += '.delegateEvents' + this.cid;\n        if (selector === '') {\n          this.$el.on(eventName, method);\n        } else {\n          this.$el.on(eventName, selector, method);\n        }\n      }\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view with `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        var $el = Backbone.$('<' + _.result(this, 'tagName') + '>').attr(attrs);\n        this.setElement($el, false);\n      } else {\n        this.setElement(_.result(this, 'el'), false);\n      }\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // If we're sending a `PATCH` request, and we're in an old Internet Explorer\n    // that still has ActiveX enabled by default, override jQuery to use that\n    // for XHR instead. Remove this line when jQuery supports `PATCH` on IE8.\n    if (params.type === 'PATCH' && noXhrPatch) {\n      params.xhr = function() {\n        return new ActiveXObject(\"Microsoft.XMLHTTP\");\n      };\n    }\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  var noXhrPatch =\n    typeof window !== 'undefined' && !!window.ActiveXObject &&\n      !(window.XMLHttpRequest && (new XMLHttpRequest).dispatchEvent);\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        router.execute(callback, args);\n        router.trigger.apply(router, ['route:' + name].concat(args));\n        router.trigger('route', name, args);\n        Backbone.history.trigger('route', router, name, args);\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    _.bindAll(this, 'checkUrl');\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for detecting MSIE.\n  var isExplorer = /msie [\\w.]+/;\n\n  // Cached regex for removing a trailing slash.\n  var trailingSlash = /\\/$/;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      return this.location.pathname.replace(/[^\\/]$/, '$&/') === this.root;\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the cross-browser normalized URL fragment, either from the URL,\n    // the hash, or the override.\n    getFragment: function(fragment, forcePushState) {\n      if (fragment == null) {\n        if (this._hasPushState || !this._wantsHashChange || forcePushState) {\n          fragment = decodeURI(this.location.pathname + this.location.search);\n          var root = this.root.replace(trailingSlash, '');\n          if (!fragment.indexOf(root)) fragment = fragment.slice(root.length);\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error(\"Backbone.history has already been started\");\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.options.pushState && this.history && this.history.pushState);\n      var fragment          = this.getFragment();\n      var docMode           = document.documentMode;\n      var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      if (oldIE && this._wantsHashChange) {\n        var frame = Backbone.$('<iframe src=\"javascript:0\" tabindex=\"-1\">');\n        this.iframe = frame.hide().appendTo('body')[0].contentWindow;\n        this.navigate(fragment);\n      }\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._hasPushState) {\n        Backbone.$(window).on('popstate', this.checkUrl);\n      } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {\n        Backbone.$(window).on('hashchange', this.checkUrl);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      // Determine if we need to change the base url, for a pushState link\n      // opened by a non-pushState browser.\n      this.fragment = fragment;\n      var loc = this.location;\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          this.fragment = this.getFragment(null, true);\n          this.location.replace(this.root + '#' + this.fragment);\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot() && loc.hash) {\n          this.fragment = this.getHash().replace(routeStripper, '');\n          this.history.replaceState({}, document.title, this.root + this.fragment);\n        }\n\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      Backbone.$(window).off('popstate', this.checkUrl).off('hashchange', this.checkUrl);\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n      if (current === this.fragment && this.iframe) {\n        current = this.getFragment(this.getHash(this.iframe));\n      }\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.any(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      var url = this.root + (fragment = this.getFragment(fragment || ''));\n\n      // Strip the hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // Don't include a trailing slash on the root.\n      if (fragment === '' && url !== '/') url = url.slice(0, -1);\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._hasPushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getFragment(this.getHash(this.iframe)))) {\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if(!options.replace) this.iframe.document.open().close();\n          this._updateHash(this.iframe.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain, for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error(model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n","//     Underscore.js 1.7.0\n//     http://underscorejs.org\n//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    concat           = ArrayProto.concat,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.7.0';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var createCallback = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  _.iteratee = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return createCallback(value, context, argCount);\n    if (_.isObject(value)) return _.matches(value);\n    return _.property(value);\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    if (obj == null) return obj;\n    iteratee = createCallback(iteratee, context);\n    var i, length = obj.length;\n    if (length === +length) {\n      for (i = 0; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    if (obj == null) return [];\n    iteratee = _.iteratee(iteratee, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length),\n        currentKey;\n    for (var index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = function(obj, iteratee, memo, context) {\n    if (obj == null) obj = [];\n    iteratee = createCallback(iteratee, context, 4);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index = 0, currentKey;\n    if (arguments.length < 3) {\n      if (!length) throw new TypeError(reduceError);\n      memo = obj[keys ? keys[index++] : index++];\n    }\n    for (; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = function(obj, iteratee, memo, context) {\n    if (obj == null) obj = [];\n    iteratee = createCallback(iteratee, context, 4);\n    var keys = obj.length !== + obj.length && _.keys(obj),\n        index = (keys || obj).length,\n        currentKey;\n    if (arguments.length < 3) {\n      if (!index) throw new TypeError(reduceError);\n      memo = obj[keys ? keys[--index] : --index];\n    }\n    while (index--) {\n      currentKey = keys ? keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var result;\n    predicate = _.iteratee(predicate, context);\n    _.some(obj, function(value, index, list) {\n      if (predicate(value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    if (obj == null) return results;\n    predicate = _.iteratee(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(_.iteratee(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    if (obj == null) return true;\n    predicate = _.iteratee(predicate, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index, currentKey;\n    for (index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    if (obj == null) return false;\n    predicate = _.iteratee(predicate, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index, currentKey;\n    for (index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (obj.length !== +obj.length) obj = _.values(obj);\n    return _.indexOf(obj, target) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matches(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matches(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = obj.length === +obj.length ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = obj.length === +obj.length ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = obj && obj.length === +obj.length ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (obj.length !== +obj.length) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = _.iteratee(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = _.iteratee(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = low + high >>> 1;\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return obj.length === +obj.length ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = _.iteratee(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    if (n < 0) return [];\n    return slice.call(array, 0, n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return slice.call(array, Math.max(array.length - n, 0));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    if (shallow && _.every(input, _.isArray)) {\n      return concat.apply(output, input);\n    }\n    for (var i = 0, length = input.length; i < length; i++) {\n      var value = input[i];\n      if (!_.isArray(value) && !_.isArguments(value)) {\n        if (!strict) output.push(value);\n      } else if (shallow) {\n        push.apply(output, value);\n      } else {\n        flatten(value, shallow, strict, output);\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (array == null) return [];\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = _.iteratee(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = array.length; i < length; i++) {\n      var value = array[i];\n      if (isSorted) {\n        if (!i || seen !== value) result.push(value);\n        seen = value;\n      } else if (iteratee) {\n        var computed = iteratee(value, i, array);\n        if (_.indexOf(seen, computed) < 0) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (_.indexOf(result, value) < 0) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true, []));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    if (array == null) return [];\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = array.length; i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(slice.call(arguments, 1), true, true, []);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function(array) {\n    if (array == null) return [];\n    var length = _.max(arguments, 'length').length;\n    var results = Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(arguments, i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, length = list.length; i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, length = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    for (; i < length; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var idx = array.length;\n    if (typeof from == 'number') {\n      idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);\n    }\n    while (--idx >= 0) if (array[idx] === item) return idx;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Reusable constructor function for prototype setting.\n  var Ctor = function(){};\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    var args, bound;\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    args = slice.call(arguments, 2);\n    bound = function() {\n      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n      Ctor.prototype = func.prototype;\n      var self = new Ctor;\n      Ctor.prototype = null;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (_.isObject(result)) return result;\n      return self;\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    return function() {\n      var position = 0;\n      var args = boundArgs.slice();\n      for (var i = 0, length = args.length; i < length; i++) {\n        if (args[i] === _) args[i] = arguments[position++];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return func.apply(this, args);\n    };\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = hasher ? hasher.apply(this, arguments) : key;\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last > 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed before being called N times.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      } else {\n        func = null;\n      }\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      source = arguments[i];\n      for (prop in source) {\n        if (hasOwnProperty.call(source, prop)) {\n            obj[prop] = source[prop];\n        }\n      }\n    }\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj, iteratee, context) {\n    var result = {}, key;\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      iteratee = createCallback(iteratee, context);\n      for (key in obj) {\n        var value = obj[key];\n        if (iteratee(value, key, obj)) result[key] = value;\n      }\n    } else {\n      var keys = concat.apply([], slice.call(arguments, 1));\n      obj = new Object(obj);\n      for (var i = 0, length = keys.length; i < length; i++) {\n        key = keys[i];\n        if (key in obj) result[key] = obj[key];\n      }\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(concat.apply([], slice.call(arguments, 1)), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      var source = arguments[i];\n      for (var prop in source) {\n        if (obj[prop] === void 0) obj[prop] = source[prop];\n      }\n    }\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n    // Objects with different constructors are not equivalent, but `Object`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (\n      aCtor !== bCtor &&\n      // Handle Object.create(x) cases\n      'constructor' in a && 'constructor' in b &&\n      !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n        _.isFunction(bCtor) && bCtor instanceof bCtor)\n    ) {\n      return false;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size, result;\n    // Recursively compare objects and arrays.\n    if (className === '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size === b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      size = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      result = _.keys(b).length === size;\n      if (result) {\n        while (size--) {\n          // Deep compare each member\n          key = keys[size];\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around an IE 11 bug.\n  if (typeof /./ !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = function(key) {\n    return function(obj) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.\n  _.matches = function(attrs) {\n    var pairs = _.pairs(attrs), length = pairs.length;\n    return function(obj) {\n      if (obj == null) return !length;\n      obj = new Object(obj);\n      for (var i = 0; i < length; i++) {\n        var pair = pairs[i], key = pair[0];\n        if (pair[1] !== obj[key] || !(key in obj)) return false;\n      }\n      return true;\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = createCallback(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return void 0;\n    var value = object[property];\n    return _.isFunction(value) ? object[property]() : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","/*!\n * Bootstrap v3.3.1 (http://getbootstrap.com)\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */\n\nif (typeof jQuery === 'undefined') {\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n}\n\n+function ($) {\n  var version = $.fn.jquery.split(' ')[0].split('.')\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1)) {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher')\n  }\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: transition.js v3.3.1\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: alert.js v3.3.1\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.1'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: button.js v3.3.1\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.1'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state = state + 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked') && this.$element.hasClass('active')) changed = false\n        else $parent.find('.active').removeClass('active')\n      }\n      if (changed) $input.prop('checked', !this.$element.hasClass('active')).trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n    }\n\n    if (changed) this.$element.toggleClass('active')\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: carousel.js v3.3.1\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      =\n    this.sliding     =\n    this.interval    =\n    this.$active     =\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.1'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var delta = direction == 'prev' ? -1 : 1\n    var activeIndex = this.getItemIndex(active)\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var fallback  = type == 'next' ? 'first' : 'last'\n    var that      = this\n\n    if (!$next.length) {\n      if (!this.options.wrap) return\n      $next = this.$element.find('.item')[fallback]()\n    }\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.1\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $(this.options.trigger).filter('[href=\"#' + element.id + '\"], [data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.1'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true,\n    trigger: '[data-toggle=\"collapse\"]'\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.find('> .panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && option == 'show') options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $.extend({}, $this.data(), { trigger: this })\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.1\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.1'\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $('<div class=\"dropdown-backdrop\"/>').insertAfter($(this)).on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.divider):visible a'\n    var $items = $parent.find('[role=\"menu\"]' + desc + ', [role=\"listbox\"]' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--                        // up\n    if (e.which == 40 && index < $items.length - 1) index++                        // down\n    if (!~index)                                      index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '[role=\"menu\"]', Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '[role=\"listbox\"]', Dropdown.prototype.keydown)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: modal.js v3.3.1\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options        = options\n    this.$body          = $(document.body)\n    this.$element       = $(element)\n    this.$backdrop      =\n    this.isShown        = null\n    this.scrollbarWidth = 0\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.1'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      if (that.options.backdrop) that.adjustBackdrop()\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element\n        .addClass('in')\n        .attr('aria-hidden', false)\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$element.find('.modal-dialog') // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .attr('aria-hidden', true)\n      .off('click.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $('<div class=\"modal-backdrop ' + animate + '\" />')\n        .prependTo(this.$element)\n        .on('click.dismiss.bs.modal', $.proxy(function (e) {\n          if (e.target !== e.currentTarget) return\n          this.options.backdrop == 'static'\n            ? this.$element[0].focus.call(this.$element[0])\n            : this.hide.call(this)\n        }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    if (this.options.backdrop) this.adjustBackdrop()\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustBackdrop = function () {\n    this.$backdrop\n      .css('height', 0)\n      .css('height', this.$element[0].scrollHeight)\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    this.bodyIsOverflowing = document.body.scrollHeight > document.documentElement.clientHeight\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', '')\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tooltip.js v3.3.1\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       =\n    this.options    =\n    this.enabled    =\n    this.timeout    =\n    this.hoverState =\n    this.$element   = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.1'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $(this.options.viewport.selector || this.options.viewport)\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (self && self.$tip && self.$tip.is(':visible')) {\n      self.hoverState = 'in'\n      return\n    }\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var $container   = this.options.container ? $(this.options.container) : this.$element.parent()\n        var containerDim = this.getPosition($container)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > containerDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < containerDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > containerDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < containerDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  = offset.top  + marginTop\n    offset.left = offset.left + marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isHorizontal) {\n    this.arrow()\n      .css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isHorizontal ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = this.tip()\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && this.$tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof ($e.attr('data-original-title')) != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.width) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    return (this.$tip = this.$tip || $(this.options.template))\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this    = $(this)\n      var data     = $this.data('bs.tooltip')\n      var options  = typeof option == 'object' && option\n      var selector = options && options.selector\n\n      if (!data && option == 'destroy') return\n      if (selector) {\n        if (!data) $this.data('bs.tooltip', (data = {}))\n        if (!data[selector]) data[selector] = new Tooltip(this, options)\n      } else {\n        if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      }\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: popover.js v3.3.1\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.1'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n  Popover.prototype.tip = function () {\n    if (!this.$tip) this.$tip = $(this.options.template)\n    return this.$tip\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this    = $(this)\n      var data     = $this.data('bs.popover')\n      var options  = typeof option == 'object' && option\n      var selector = options && options.selector\n\n      if (!data && option == 'destroy') return\n      if (selector) {\n        if (!data) $this.data('bs.popover', (data = {}))\n        if (!data[selector]) data[selector] = new Popover(this, options)\n      } else {\n        if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      }\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.1\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    var process  = $.proxy(this.process, this)\n\n    this.$body          = $('body')\n    this.$scrollElement = $(element).is('body') ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', process)\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.1'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var offsetMethod = 'offset'\n    var offsetBase   = 0\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.offsets = []\n    this.targets = []\n    this.scrollHeight = this.getScrollHeight()\n\n    var self     = this\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        self.offsets.push(this[0])\n        self.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (!offsets[i + 1] || scrollTop <= offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n        '[data-target=\"' + target + '\"],' +\n        this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tab.js v3.3.1\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    this.element = $(element)\n  }\n\n  Tab.VERSION = '3.3.1'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && (($active.length && $active.hasClass('fade')) || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu')) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: affix.js v3.3.1\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      =\n    this.unpin        =\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.1'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && colliderTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = $('body').height()\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","","// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// when used in node, this will actually load the util module we depend on\n// versus loading the builtin util module as happens otherwise\n// this is a bug in node module loading as far as I am concerned\nvar util = require('util/');\n\nvar pSlice = Array.prototype.slice;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  }\n  else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = stackStartFunction.name;\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction replacer(key, value) {\n  if (util.isUndefined(value)) {\n    return '' + value;\n  }\n  if (util.isNumber(value) && (isNaN(value) || !isFinite(value))) {\n    return value.toString();\n  }\n  if (util.isFunction(value) || util.isRegExp(value)) {\n    return value.toString();\n  }\n  return value;\n}\n\nfunction truncate(s, n) {\n  if (util.isString(s)) {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\n\nfunction getMessage(self) {\n  return truncate(JSON.stringify(self.actual, replacer), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(JSON.stringify(self.expected, replacer), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (util.isBuffer(actual) && util.isBuffer(expected)) {\n    if (actual.length != expected.length) return false;\n\n    for (var i = 0; i < actual.length; i++) {\n      if (actual[i] !== expected[i]) return false;\n    }\n\n    return true;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!util.isObject(actual) && !util.isObject(expected)) {\n    return actual == expected;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b) {\n  if (util.isNullOrUndefined(a) || util.isNullOrUndefined(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b);\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b),\n        key, i;\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key])) return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  } else if (actual instanceof expected) {\n    return true;\n  } else if (expected.call({}, actual) === true) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (util.isString(expected)) {\n    message = expected;\n    expected = null;\n  }\n\n  try {\n    block();\n  } catch (e) {\n    actual = e;\n  }\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  if (!shouldThrow && expectedException(actual, expected)) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws.apply(this, [true].concat(pSlice.call(arguments)));\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/message) {\n  _throws.apply(this, [false].concat(pSlice.call(arguments)));\n};\n\nassert.ifError = function(err) { if (err) {throw err;}};\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return 42 === arr.foo() && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding, noZero) {\n  if (!(this instanceof Buffer))\n    return new Buffer(subject, encoding, noZero)\n\n  var type = typeof subject\n\n  // Find the length\n  var length\n  if (type === 'number')\n    length = subject > 0 ? subject >>> 0 : 0\n  else if (type === 'string') {\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) { // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data))\n      subject = subject.data\n    length = +subject.length > 0 ? Math.floor(+subject.length) : 0\n  } else\n    throw new TypeError('must start with number, buffer, array or string')\n\n  if (length > kMaxLength)\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n      'size: 0x' + kMaxLength.toString(16) + ' bytes')\n\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    buf = Buffer._augment(new Uint8Array(length))\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    buf = this\n    buf.length = length\n    buf._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    buf._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++)\n        buf[i] = subject.readUInt8(i)\n    } else {\n      for (i = 0; i < length; i++)\n        buf[i] = ((subject[i] % 256) + 256) % 256\n    }\n  } else if (type === 'string') {\n    buf.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT && !noZero) {\n    for (i = 0; i < length; i++) {\n      buf[i] = 0\n    }\n  }\n\n  if (length > 0 && length <= Buffer.poolSize)\n    buf.parent = rootParent\n\n  return buf\n}\n\nfunction SlowBuffer(subject, encoding, noZero) {\n  if (!(this instanceof SlowBuffer))\n    return new SlowBuffer(subject, encoding, noZero)\n\n  var buf = new Buffer(subject, encoding, noZero)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b))\n    throw new TypeError('Arguments must be Buffers')\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('Usage: Buffer.concat(list[, length])')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase)\n          throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max)\n      str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  return Buffer.compare(this, b)\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var byte = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(byte)) throw new Error('Invalid hex string')\n    buf[offset + i] = byte\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length, 2)\n  return charsWritten\n}\n\nBuffer.prototype.write = function (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n\n  if (length < 0 || offset < 0 || offset > this.length)\n    throw new RangeError('attempt to write outside buffer bounds');\n\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len;\n    if (start < 0)\n      start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0)\n      end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start)\n    end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined, true)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length)\n    newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0)\n    throw new RangeError('offset is not uint')\n  if (offset + ext > length)\n    throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100))\n    val += this[offset + i] * mul\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100))\n    val += this[offset + --byteLength] * mul;\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n      ((this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100))\n    val += this[offset + i] * mul\n  mul *= 0x80\n\n  if (val >= mul)\n    val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100))\n    val += this[offset + --i] * mul\n  mul *= 0x80\n\n  if (val >= mul)\n    val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80))\n    return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16) |\n      (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n      (this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100))\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100))\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(this,\n             value,\n             offset,\n             byteLength,\n             Math.pow(2, 8 * byteLength - 1) - 1,\n             -Math.pow(2, 8 * byteLength - 1))\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100))\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(this,\n             value,\n             offset,\n             byteLength,\n             Math.pow(2, 8 * byteLength - 1) - 1,\n             -Math.pow(2, 8 * byteLength - 1))\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100))\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function (target, target_start, start, end) {\n  var source = this\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (target_start >= target.length) target_start = target.length\n  if (!target_start) target_start = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || source.length === 0) return 0\n\n  // Fatal error conditions\n  if (target_start < 0)\n    throw new RangeError('targetStart out of bounds')\n  if (start < 0 || start >= source.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length)\n    end = this.length\n  if (target.length - target_start < end - start)\n    end = target.length - target_start + start\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes(string, units) {\n  var codePoint, length = string.length\n  var leadSurrogate = null\n  units = units || Infinity\n  var bytes = []\n  var i = 0\n\n  for (; i<length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\n      // last char was a lead\n      if (leadSurrogate) {\n\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        }\n\n        // valid surrogate pair\n        else {\n          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n          leadSurrogate = null\n        }\n      }\n\n      // no lead yet\n      else {\n\n        // unexpected trail\n        if (codePoint > 0xDBFF) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // unpaired lead\n        else if (i + 1 === length) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        else {\n          leadSurrogate = codePoint\n          continue\n        }\n      }\n    }\n\n    // valid bmp char, but last char was a lead\n    else if (leadSurrogate) {\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      leadSurrogate = null\n    }\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    }\n    else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    }\n    else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    }\n    else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    }\n    else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length, unitSize) {\n  if (unitSize) length -= length % unitSize;\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length))\n      break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n","exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canMutationObserver = typeof window !== 'undefined'\n    && window.MutationObserver;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    var queue = [];\n\n    if (canMutationObserver) {\n        var hiddenDiv = document.createElement(\"div\");\n        var observer = new MutationObserver(function () {\n            var queueList = queue.slice();\n            queue.length = 0;\n            queueList.forEach(function (fn) {\n                fn();\n            });\n        });\n\n        observer.observe(hiddenDiv, { attributes: true });\n\n        return function nextTick(fn) {\n            if (!queue.length) {\n                hiddenDiv.setAttribute('yes', 'no');\n            }\n            queue.push(fn);\n        };\n    }\n\n    if (canPost) {\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n","module.exports = require(\"./lib/_stream_duplex.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = false;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // In streams that never have any data, and do push(null) right away,\n  // the consumer can miss the 'end' event if they do some I/O before\n  // consuming the stream.  So, we don't emit('end') until some reading\n  // happens.\n  this.calledRead = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (typeof chunk === 'string' && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null || chunk === undefined) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      // update the buffer info.\n      state.length += state.objectMode ? 1 : chunk.length;\n      if (addToFront) {\n        state.buffer.unshift(chunk);\n      } else {\n        state.reading = false;\n        state.buffer.push(chunk);\n      }\n\n      if (state.needReadable)\n        emitReadable(stream);\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  var state = this._readableState;\n  state.calledRead = true;\n  var nOrig = n;\n  var ret;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    ret = null;\n\n    // In cases where the decoder did not receive enough data\n    // to produce a full chunk, then immediately received an\n    // EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>].\n    // howMuchToRead will see this and coerce the amount to\n    // read to zero (because it's looking at the length of the\n    // first <Buffer > in state.buffer), and we'll end up here.\n    //\n    // This can only happen via state.decoder -- no other venue\n    // exists for pushing a zero-length chunk into state.buffer\n    // and triggering this behavior. In this case, we return our\n    // remaining data and end the stream, if appropriate.\n    if (state.length > 0 && state.decoder) {\n      ret = fromList(n, state);\n      state.length -= ret.length;\n    }\n\n    if (state.length === 0)\n      endReadable(this);\n\n    return ret;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length - n <= state.highWaterMark)\n    doRead = true;\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading)\n    doRead = false;\n\n  if (doRead) {\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read called its callback synchronously, then `reading`\n  // will be false, and we need to re-evaluate how much data we\n  // can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we happened to read() exactly the remaining amount in the\n  // buffer, and the EOF has been seen at this point, then make sure\n  // that we emit 'end' on the very next tick.\n  if (state.ended && !state.endEmitted && state.length === 0)\n    endReadable(this);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // if we've ended and we have some data left, then emit\n  // 'readable' now to make sure it gets picked up.\n  if (state.length > 0)\n    emitReadable(stream);\n  else\n    endReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (state.emittedReadable)\n    return;\n\n  state.emittedReadable = true;\n  if (state.sync)\n    process.nextTick(function() {\n      emitReadable_(stream);\n    });\n  else\n    emitReadable_(stream);\n}\n\nfunction emitReadable_(stream) {\n  stream.emit('readable');\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    if (readable !== src) return;\n    cleanup();\n  }\n\n  function onend() {\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (!dest._writableState || dest._writableState.needDrain)\n      ondrain();\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    // the handler that waits for readable events after all\n    // the data gets sucked out in flow.\n    // This would be easier to follow with a .once() handler\n    // in flow(), but that is too slow.\n    this.on('readable', pipeOnReadable);\n\n    state.flowing = true;\n    process.nextTick(function() {\n      flow(src);\n    });\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var dest = this;\n    var state = src._readableState;\n    state.awaitDrain--;\n    if (state.awaitDrain === 0)\n      flow(src);\n  };\n}\n\nfunction flow(src) {\n  var state = src._readableState;\n  var chunk;\n  state.awaitDrain = 0;\n\n  function write(dest, i, list) {\n    var written = dest.write(chunk);\n    if (false === written) {\n      state.awaitDrain++;\n    }\n  }\n\n  while (state.pipesCount && null !== (chunk = src.read())) {\n\n    if (state.pipesCount === 1)\n      write(state.pipes, 0, null);\n    else\n      forEach(state.pipes, write);\n\n    src.emit('data', chunk);\n\n    // if anyone needs a drain, then we have to wait for that.\n    if (state.awaitDrain > 0)\n      return;\n  }\n\n  // if every destination was unpiped, either before entering this\n  // function, or in the while loop, then stop flowing.\n  //\n  // NB: This is a pretty rare edge case.\n  if (state.pipesCount === 0) {\n    state.flowing = false;\n\n    // if there were data event listeners added, then switch to old mode.\n    if (EE.listenerCount(src, 'data') > 0)\n      emitDataEvents(src);\n    return;\n  }\n\n  // at this point, no one needed a drain, so we just ran out of data\n  // on the next readable event, start it over again.\n  state.ranOut = true;\n}\n\nfunction pipeOnReadable() {\n  if (this._readableState.ranOut) {\n    this._readableState.ranOut = false;\n    flow(this);\n  }\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data' && !this._readableState.flowing)\n    emitDataEvents(this);\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        this.read(0);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  emitDataEvents(this);\n  this.read(0);\n  this.emit('resume');\n};\n\nReadable.prototype.pause = function() {\n  emitDataEvents(this, true);\n  this.emit('pause');\n};\n\nfunction emitDataEvents(stream, startPaused) {\n  var state = stream._readableState;\n\n  if (state.flowing) {\n    // https://github.com/isaacs/readable-stream/issues/16\n    throw new Error('Cannot switch to old mode now.');\n  }\n\n  var paused = startPaused || false;\n  var readable = false;\n\n  // convert to an old-style stream.\n  stream.readable = true;\n  stream.pipe = Stream.prototype.pipe;\n  stream.on = stream.addListener = Stream.prototype.on;\n\n  stream.on('readable', function() {\n    readable = true;\n\n    var c;\n    while (!paused && (null !== (c = stream.read())))\n      stream.emit('data', c);\n\n    if (c === null) {\n      readable = false;\n      stream._readableState.needReadable = true;\n    }\n  });\n\n  stream.pause = function() {\n    paused = true;\n    this.emit('pause');\n  };\n\n  stream.resume = function() {\n    paused = false;\n    if (readable)\n      process.nextTick(function() {\n        stream.emit('readable');\n      });\n    else\n      this.read(0);\n    this.emit('resume');\n  };\n\n  // now make it start, just in case it hadn't already.\n  stream.emit('readable');\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    //if (state.objectMode && util.isNullOrUndefined(chunk))\n    if (state.objectMode && (chunk === null || chunk === undefined))\n      return;\n    else if (!state.objectMode && (!chunk || !chunk.length))\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (typeof stream[i] === 'function' &&\n        typeof this[i] === 'undefined') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted && state.calledRead) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined)\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  var ts = this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('finish', function() {\n    if ('function' === typeof this._flush)\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var rs = stream._readableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb))\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\n  return ret;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      cb(er);\n    });\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished && !state.bufferProcessing && state.buffer.length)\n      clearBuffer(stream, state);\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  cb();\n  if (finished)\n    finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  for (var c = 0; c < state.buffer.length; c++) {\n    var entry = state.buffer[c];\n    var chunk = entry.chunk;\n    var encoding = entry.encoding;\n    var cb = entry.callback;\n    var len = state.objectMode ? 1 : chunk.length;\n\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n    // if we didn't call the onwrite immediately, then\n    // it means that we need to wait until it does.\n    // also, that means that the chunk and cb are currently\n    // being processed, so move the buffer counter past them.\n    if (state.writing) {\n      c++;\n      break;\n    }\n  }\n\n  state.bufferProcessing = false;\n  if (c < state.buffer.length)\n    state.buffer = state.buffer.slice(c);\n  else\n    state.buffer.length = 0;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (typeof chunk !== 'undefined' && chunk !== null)\n    this.write(chunk, encoding);\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    state.finished = true;\n    stream.emit('finish');\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nfunction isBuffer(arg) {\n  return Buffer.isBuffer(arg);\n}\nexports.isBuffer = isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}","module.exports = require(\"./lib/_stream_passthrough.js\")\n","var Stream = require('stream'); // hack to fix a circular dependency issue when used with browserify\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require(\"./lib/_stream_transform.js\")\n","module.exports = require(\"./lib/_stream_writable.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","/*!\n * jQuery JavaScript Library v2.1.3\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-12-18T15:11Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\n\nvar arr = [];\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\t// Use the correct document accordingly with window argument (sandbox)\n\tdocument = window.document,\n\n\tversion = \"2.1.3\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\treturn !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call(obj) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf(\"use strict\") === 1 ) {\n\t\t\t\tscript = document.createElement(\"script\");\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t// and removal by using an indirect global eval\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE9-11+\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( obj, callback, args ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = obj.length,\n\t\t\tisArray = isArraylike( obj );\n\n\t\tif ( args ) {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArraylike( Object(arr) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tisArray = isArraylike( elems ),\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n});\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nfunction isArraylike( obj ) {\n\tvar length = obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\tif ( obj.nodeType === 1 && length ) {\n\t\treturn true;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.0-pre\n * http://sizzlejs.com/\n *\n * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-12-16\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t// http://www.w3.org/TR/css3-syntax/#characters\n\tcharacterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Loosely modeled on CSS identifier characters\n\t// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\t// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = characterEncoding.replace( \"w\", \"w#\" ),\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + characterEncoding + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar match, elem, m, nodeType,\n\t\t// QSA vars\n\t\ti, groups, old, nid, newContext, newSelector;\n\n\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\n\tcontext = context || document;\n\tresults = results || [];\n\tnodeType = context.nodeType;\n\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\tif ( !seed && documentIsHTML ) {\n\n\t\t// Try to shortcut find operations when possible (e.g., not under DocumentFragment)\n\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\t\t\t// Speed-up: Sizzle(\"#ID\")\n\t\t\tif ( (m = match[1]) ) {\n\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\telem = context.getElementById( m );\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document (jQuery #6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE, Opera, and Webkit return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Context is not a document\n\t\t\t\t\tif ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\n\t\t\t\t\t\tcontains( context, elem ) && elem.id === m ) {\n\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Speed-up: Sizzle(\"TAG\")\n\t\t\t} else if ( match[2] ) {\n\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\treturn results;\n\n\t\t\t// Speed-up: Sizzle(\".CLASS\")\n\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName ) {\n\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}\n\n\t\t// QSA path\n\t\tif ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\t\tnid = old = expando;\n\t\t\tnewContext = context;\n\t\t\tnewSelector = nodeType !== 1 && selector;\n\n\t\t\t// qSA works strangely on Element-rooted queries\n\t\t\t// We can work around this by specifying an extra ID on the root\n\t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t\t// IE 8 doesn't work on object elements\n\t\t\tif ( nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\n\t\t\t\tgroups = tokenize( selector );\n\n\t\t\t\tif ( (old = context.getAttribute(\"id\")) ) {\n\t\t\t\t\tnid = old.replace( rescape, \"\\\\$&\" );\n\t\t\t\t} else {\n\t\t\t\t\tcontext.setAttribute( \"id\", nid );\n\t\t\t\t}\n\t\t\t\tnid = \"[id='\" + nid + \"'] \";\n\n\t\t\t\ti = groups.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tgroups[i] = nid + toSelector( groups[i] );\n\t\t\t\t}\n\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;\n\t\t\t\tnewSelector = groups.join(\",\");\n\t\t\t}\n\n\t\t\tif ( newSelector ) {\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch(qsaError) {\n\t\t\t\t} finally {\n\t\t\t\t\tif ( !old ) {\n\t\t\t\t\t\tcontext.removeAttribute(\"id\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = attrs.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// If no document and documentElement is available, return\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Set our document\n\tdocument = doc;\n\tdocElem = doc.documentElement;\n\tparent = doc.defaultView;\n\n\t// Support: IE>8\n\t// If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\n\t// IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\n\t// IE6-8 do not support the defaultView property so parent will be undefined\n\tif ( parent && parent !== parent.top ) {\n\t\t// IE11 does not have attachEvent, so all must suffer\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Support tests\n\t---------------------------------------------------------------------- */\n\tdocumentIsHTML = !isXML( doc );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( doc.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( doc.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !doc.getElementsByName || !doc.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\treturn m && m.parentNode ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\f]' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = doc.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully does not implement inclusive descendent\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === doc ? -1 :\n\t\t\t\tb === doc ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn doc;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, outerCache, node, diff, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\t\t\t\t\t\touterCache = parent[ expando ] || (parent[ expando ] = {});\n\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[0] === dirruns && cache[1];\n\t\t\t\t\t\t\tdiff = cache[0] === dirruns && cache[2];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {\n\t\t\t\t\t\t\tdiff = cache[1];\n\n\t\t\t\t\t\t// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\tif ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {\n\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\t\t\t\t\tif ( (oldCache = outerCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\touterCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context !== document && context;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\tmatchedCount += i;\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is no seed and only one group\n\tif ( match.length === 1 ) {\n\n\t\t// Take a shortcut and set the context if the root selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\trsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[\":\"] = jQuery.expr.pseudos;\njQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/);\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t});\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t});\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) >= 0 ) !== not;\n\t});\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t}));\n};\n\njQuery.fn.extend({\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter(function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], false) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], true) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n});\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[0] === \"<\" && selector[ selector.length - 1 ] === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Support: Blackberry 4.6\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || rootjQuery ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn typeof rootjQuery.ready !== \"undefined\" ?\n\t\t\t\trootjQuery.ready( selector ) :\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.extend({\n\tdir: function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\ttruncate = until !== undefined;\n\n\t\twhile ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmatched.push( elem );\n\t\t\t}\n\t\t}\n\t\treturn matched;\n\t},\n\n\tsibling: function( n, elem ) {\n\t\tvar matched = [];\n\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tmatched.push( n );\n\t\t\t}\n\t\t}\n\n\t\treturn matched;\n\t}\n});\n\njQuery.fn.extend({\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter(function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && (pos ?\n\t\t\t\t\tpos.index(cur) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector(cur, selectors)) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.unique(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter(selector)\n\t\t);\n\t}\n});\n\nfunction sibling( cur, dir ) {\n\twhile ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each({\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn jQuery.dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn jQuery.sibling( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.unique( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n});\nvar rnotwhite = (/\\S+/g);\n\n\n\n// String to Object options format cache\nvar optionsCache = {};\n\n// Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions( options ) {\n\tvar object = optionsCache[ options ] = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t});\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\t( optionsCache[ options ] || createOptions( options ) ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Last fire value (for non-forgettable lists)\n\t\tmemory,\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\t\t// Flag to know if list is currently firing\n\t\tfiring,\n\t\t// First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n\t\t// End of the loop when firing\n\t\tfiringLength,\n\t\t// Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n\t\t// Actual callback list\n\t\tlist = [],\n\t\t// Stack of fire calls for repeatable lists\n\t\tstack = !options.once && [],\n\t\t// Fire callbacks\n\t\tfire = function( data ) {\n\t\t\tmemory = options.memory && data;\n\t\t\tfired = true;\n\t\t\tfiringIndex = firingStart || 0;\n\t\t\tfiringStart = 0;\n\t\t\tfiringLength = list.length;\n\t\t\tfiring = true;\n\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\n\t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\n\t\t\t\t\tmemory = false; // To prevent further calls using add\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiring = false;\n\t\t\tif ( list ) {\n\t\t\t\tif ( stack ) {\n\t\t\t\t\tif ( stack.length ) {\n\t\t\t\t\t\tfire( stack.shift() );\n\t\t\t\t\t}\n\t\t\t\t} else if ( memory ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t} else {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Actual Callbacks object\n\t\tself = {\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\t// First, we save the current length\n\t\t\t\t\tvar start = list.length;\n\t\t\t\t\t(function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tvar type = jQuery.type( arg );\n\t\t\t\t\t\t\tif ( type === \"function\" ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && type !== \"string\" ) {\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})( arguments );\n\t\t\t\t\t// Do we need to add the callbacks to the\n\t\t\t\t\t// current firing batch?\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tfiringLength = list.length;\n\t\t\t\t\t// With memory, if we're not firing then\n\t\t\t\t\t// we should call right away\n\t\t\t\t\t} else if ( memory ) {\n\t\t\t\t\t\tfiringStart = start;\n\t\t\t\t\t\tfire( memory );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\t\t\tif ( index <= firingLength ) {\n\t\t\t\t\t\t\t\t\tfiringLength--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\n\t\t\t},\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tlist = [];\n\t\t\t\tfiringLength = 0;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Have the list do nothing anymore\n\t\t\tdisable: function() {\n\t\t\t\tlist = stack = memory = undefined;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it disabled?\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\t\t\t// Lock the list in its current state\n\t\t\tlock: function() {\n\t\t\t\tstack = undefined;\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it locked?\n\t\t\tlocked: function() {\n\t\t\t\treturn !stack;\n\t\t\t},\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( list && ( !fired || stack ) ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tstack.push( args );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfire( args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend({\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t}).promise();\n\t\t\t\t},\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[1] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(function() {\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[0] ] = function() {\n\t\t\t\tdeferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[0] + \"With\" ] = list.fireWith;\n\t\t});\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject )\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n});\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend({\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n});\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\n\twindow.removeEventListener( \"load\", completed, false );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\n\t\t// We once tried to use readyState \"interactive\" here, but it caused issues like the one\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\tsetTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed, false );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[0], key ) : emptyGet;\n};\n\n\n/**\n * Determines whether an object can have data\n */\njQuery.acceptData = function( owner ) {\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\nfunction Data() {\n\t// Support: Android<4,\n\t// Old WebKit does not have Object.preventExtensions/freeze method,\n\t// return new empty object instead with no [[set]] accessor\n\tObject.defineProperty( this.cache = {}, 0, {\n\t\tget: function() {\n\t\t\treturn {};\n\t\t}\n\t});\n\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\nData.accepts = jQuery.acceptData;\n\nData.prototype = {\n\tkey: function( owner ) {\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return the key for a frozen object.\n\t\tif ( !Data.accepts( owner ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar descriptor = {},\n\t\t\t// Check if the owner object already has a cache key\n\t\t\tunlock = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !unlock ) {\n\t\t\tunlock = Data.uid++;\n\n\t\t\t// Secure it in a non-enumerable, non-writable property\n\t\t\ttry {\n\t\t\t\tdescriptor[ this.expando ] = { value: unlock };\n\t\t\t\tObject.defineProperties( owner, descriptor );\n\n\t\t\t// Support: Android<4\n\t\t\t// Fallback to a less secure definition\n\t\t\t} catch ( e ) {\n\t\t\t\tdescriptor[ this.expando ] = unlock;\n\t\t\t\tjQuery.extend( owner, descriptor );\n\t\t\t}\n\t\t}\n\n\t\t// Ensure the cache object\n\t\tif ( !this.cache[ unlock ] ) {\n\t\t\tthis.cache[ unlock ] = {};\n\t\t}\n\n\t\treturn unlock;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\t// There may be an unlock assigned to this node,\n\t\t\t// if there is no entry for this \"owner\", create one inline\n\t\t\t// and set the unlock as though an owner entry had always existed\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\t\t\t// Fresh assignments by object are shallow copied\n\t\t\tif ( jQuery.isEmptyObject( cache ) ) {\n\t\t\t\tjQuery.extend( this.cache[ unlock ], data );\n\t\t\t// Otherwise, copy the properties one-by-one to the cache object\n\t\t\t} else {\n\t\t\t\tfor ( prop in data ) {\n\t\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\t// Either a valid cache is found, or will be created.\n\t\t// New caches will be created and the unlock returned,\n\t\t// allowing direct access to the newly created\n\t\t// empty data object. A valid owner object must be provided.\n\t\tvar cache = this.cache[ this.key( owner ) ];\n\n\t\treturn key === undefined ?\n\t\t\tcache : cache[ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t((key && typeof key === \"string\") && value === undefined) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase(key) );\n\t\t}\n\n\t\t// [*]When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.cache[ unlock ] = {};\n\n\t\t} else {\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\treturn !jQuery.isEmptyObject(\n\t\t\tthis.cache[ owner[ this.expando ] ] || {}\n\t\t);\n\t},\n\tdiscard: function( owner ) {\n\t\tif ( owner[ this.expando ] ) {\n\t\t\tdelete this.cache[ owner[ this.expando ] ];\n\t\t}\n\t}\n};\nvar data_priv = new Data();\n\nvar data_user = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdata_user.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend({\n\thasData: function( elem ) {\n\t\treturn data_user.hasData( elem ) || data_priv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn data_user.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdata_user.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to data_priv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn data_priv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdata_priv.remove( elem, name );\n\t}\n});\n\njQuery.fn.extend({\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = data_user.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !data_priv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata_priv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tdata_user.set( this, key );\n\t\t\t});\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data,\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = data_user.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = data_user.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each(function() {\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = data_user.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdata_user.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf(\"-\") !== -1 && data !== undefined ) {\n\t\t\t\t\tdata_user.set( this, key, value );\n\t\t\t\t}\n\t\t\t});\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each(function() {\n\t\t\tdata_user.remove( this, key );\n\t\t});\n\t}\n});\n\n\njQuery.extend({\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = data_priv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = data_priv.access( elem, type, jQuery.makeArray(data) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn data_priv.get( elem, key ) || data_priv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks(\"once memory\").add(function() {\n\t\t\t\tdata_priv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t})\n\t\t});\n\t}\n});\n\njQuery.fn.extend({\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[0], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t});\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n});\nvar pnum = (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source;\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\n\t};\n\nvar rcheckableType = (/^(?:checkbox|radio)$/i);\n\n\n\n(function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Safari<=5.1\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari<=5.1, Android<4.2\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<=11+\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n})();\nvar strundefined = typeof undefined;\n\n\n\nsupport.focusinBubbles = \"onfocusin\" in window;\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !(events = elemData.events) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !(eventHandle = elemData.handle) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend({\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join(\".\")\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !(handlers = events[ type ]) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.hasData( elem ) && data_priv.get( elem );\n\n\t\tif ( !elemData || !(events = elemData.events) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdelete elemData.handle;\n\t\t\tdata_priv.remove( elem, \"events\" );\n\t\t}\n\t},\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf(\".\") >= 0 ) {\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split(\".\");\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join(\".\");\n\t\tevent.namespace_re = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === (elem.ownerDocument || document) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( data_priv.get( cur, \"events\" ) || {} )[ event.type ] && data_priv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && jQuery.acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&\n\t\t\t\tjQuery.acceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( data_priv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[0] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n\t\t\t\t\t\t\t.apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( (event.result = ret) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t// Avoid non-left-click bubbling in Firefox (#3861)\n\t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.disabled !== true || event.type !== \"click\" ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome<28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tsimulate: function( type, elem, event, bubble ) {\n\t\t// Piggyback on a donor event to simulate a different one.\n\t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\n\t\t// simulated event prevents default then we do the same on the donor.\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true,\n\t\t\t\toriginalEvent: {}\n\t\t\t}\n\t\t);\n\t\tif ( bubble ) {\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t} else {\n\t\t\tjQuery.event.dispatch.call( elem, e );\n\t\t}\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle, false );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\t// Allow instantiation without the 'new' keyword\n\tif ( !(this instanceof jQuery.Event) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\t\t\t\t// Support: Android<4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && e.preventDefault ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopPropagation ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopImmediatePropagation ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// Support: Chrome 15+\njQuery.each({\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n});\n\n// Support: Firefox, Chrome, Safari\n// Create \"bubbling\" focus and blur events\nif ( !support.focusinBubbles ) {\n\tjQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n\t\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = data_priv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdata_priv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = data_priv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdata_priv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdata_priv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\njQuery.fn.extend({\n\n\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n\t\tvar origFn, type;\n\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.on( type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( data == null && fn == null ) {\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t});\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn this.on( types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t});\n\t},\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t});\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[0];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n});\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n\trtagName = /<([\\w:]+)/,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style|link)/i,\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /^$|\\/(?:java|ecma)script/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\n\t// We have to close these tags to support XHTML (#13200)\n\twrapMap = {\n\n\t\t// Support: IE9\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t\t_default: [ 0, \"\", \"\" ]\n\t};\n\n// Support: IE9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: 1.x compatibility\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName(\"tbody\")[0] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement(\"tbody\") ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute(\"type\");\n\t}\n\n\treturn elem;\n}\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdata_priv.set(\n\t\t\telems[ i ], \"globalEval\", !refElements || data_priv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( data_priv.hasData( src ) ) {\n\t\tpdataOld = data_priv.access( src );\n\t\tpdataCur = data_priv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( data_user.hasData( src ) ) {\n\t\tudataOld = data_user.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdata_user.set( dest, udataCur );\n\t}\n}\n\nfunction getAll( context, tag ) {\n\tvar ret = context.getElementsByTagName ? context.getElementsByTagName( tag || \"*\" ) :\n\t\t\tcontext.querySelectorAll ? context.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\njQuery.extend({\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tbuildFragment: function( elems, context, scripts, selection ) {\n\t\tvar elem, tmp, tag, wrap, contains, j,\n\t\t\tfragment = context.createDocumentFragment(),\n\t\t\tnodes = [],\n\t\t\ti = 0,\n\t\t\tl = elems.length;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\n\t\t\tif ( elem || elem === 0 ) {\n\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\t\t\t\t// Support: QtWebKit, PhantomJS\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement(\"div\") );\n\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\t\ttmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[ 2 ];\n\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[ 0 ];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: QtWebKit, PhantomJS\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t\t// Remember the top-level container\n\t\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\t\ttmp.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove wrapper from fragment\n\t\tfragment.textContent = \"\";\n\n\t\ti = 0;\n\t\twhile ( (elem = nodes[ i++ ]) ) {\n\n\t\t\t// #4087 - If origin and destination elements are the same, and this is\n\t\t\t// that element, do not do anything\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (elem = tmp[ j++ ]) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type, key,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[ i ]) !== undefined; i++ ) {\n\t\t\tif ( jQuery.acceptData( elem ) ) {\n\t\t\t\tkey = elem[ data_priv.expando ];\n\n\t\t\t\tif ( key && (data = data_priv.cache[ key ]) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( data_priv.cache[ key ] ) {\n\t\t\t\t\t\t// Discard any remaining `private` data\n\t\t\t\t\t\tdelete data_priv.cache[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Discard any remaining `user` data\n\t\t\tdelete data_user.cache[ elem[ data_user.expando ] ];\n\t\t}\n\t}\n});\n\njQuery.fn.extend({\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each(function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t});\n\t},\n\n\tprepend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t});\n\t},\n\n\tbefore: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t});\n\t},\n\n\tafter: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t});\n\t},\n\n\tremove: function( selector, keepData /* Internal Use Only */ ) {\n\t\tvar elem,\n\t\t\telems = selector ? jQuery.filter( selector, this ) : this,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\tif ( !keepData && elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem ) );\n\t\t\t}\n\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( elem, \"script\" ) );\n\t\t\t\t}\n\t\t\t\telem.parentNode.removeChild( elem );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = this[i]) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map(function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t});\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = value.replace( rxhtmlTag, \"<$1></$2>\" );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar arg = arguments[ 0 ];\n\n\t\t// Make the changes, replacing each context element with the new content\n\t\tthis.domManip( arguments, function( elem ) {\n\t\t\targ = this.parentNode;\n\n\t\t\tjQuery.cleanData( getAll( this ) );\n\n\t\t\tif ( arg ) {\n\t\t\t\targ.replaceChild( elem, this );\n\t\t\t}\n\t\t});\n\n\t\t// Force removal if there was no new content (e.g., from empty arguments)\n\t\treturn arg && (arg.length || arg.nodeType) ? this : this.remove();\n\t},\n\n\tdetach: function( selector ) {\n\t\treturn this.remove( selector, true );\n\t},\n\n\tdomManip: function( args, callback ) {\n\n\t\t// Flatten any nested arrays\n\t\targs = concat.apply( [], args );\n\n\t\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tset = this,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[ 0 ],\n\t\t\tisFunction = jQuery.isFunction( value );\n\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction ||\n\t\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\t\treturn this.each(function( index ) {\n\t\t\t\tvar self = set.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tself.domManip( args, callback );\n\t\t\t});\n\t\t}\n\n\t\tif ( l ) {\n\t\t\tfragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );\n\t\t\tfirst = fragment.firstChild;\n\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\n\t\t\tif ( first ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\n\t\t\t\t// Use the original fragment for the last item instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t\t\t// jQuery.merge because push.apply(_, arraylike) throws\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback.call( this[ i ], node, i );\n\t\t\t\t}\n\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!data_priv.access( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\n\n\nvar iframe,\n\telemdisplay = {};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar style,\n\t\telem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\t// getDefaultComputedStyle might be reliably used only on attached element\n\t\tdisplay = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?\n\n\t\t\t// Use of this method is a temporary fix (more like optimization) until something better comes along,\n\t\t\t// since it was removed from specification and supported only in FF\n\t\t\tstyle.display : jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = (iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" )).appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = (/^margin/);\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tif ( elem.ownerDocument.defaultView.opener ) {\n\t\t\treturn elem.ownerDocument.defaultView.getComputedStyle( elem, null );\n\t\t}\n\n\t\treturn window.getComputedStyle( elem, null );\n\t};\n\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\t}\n\n\tif ( computed ) {\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// Support: iOS < 6\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\t\t// Support: IE\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn (this.get = hookFn).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\n(function() {\n\tvar pixelPositionVal, boxSizingReliableVal,\n\t\tdocElem = document.documentElement,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE9-11+\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;\" +\n\t\t\"position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computePixelPositionAndBoxSizingReliable() {\n\t\tdiv.style.cssText =\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\" +\n\t\t\t\"box-sizing:border-box;display:block;margin-top:1%;top:1%;\" +\n\t\t\t\"border:1px;padding:1px;width:4px;position:absolute\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocElem.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div, null );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\tdocElem.removeChild( container );\n\t}\n\n\t// Support: node.js jsdom\n\t// Don't assume that getComputedStyle is a property of the global object\n\tif ( window.getComputedStyle ) {\n\t\tjQuery.extend( support, {\n\t\t\tpixelPosition: function() {\n\n\t\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t\t// No need to check if the test was already performed, though.\n\t\t\t\tcomputePixelPositionAndBoxSizingReliable();\n\t\t\t\treturn pixelPositionVal;\n\t\t\t},\n\t\t\tboxSizingReliable: function() {\n\t\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\t\tcomputePixelPositionAndBoxSizingReliable();\n\t\t\t\t}\n\t\t\t\treturn boxSizingReliableVal;\n\t\t\t},\n\t\t\treliableMarginRight: function() {\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\t\tvar ret,\n\t\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\t\t\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\t\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" +\n\t\t\t\t\t\"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";\n\t\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\t\tdiv.style.width = \"1px\";\n\t\t\t\tdocElem.appendChild( container );\n\n\t\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );\n\n\t\t\t\tdocElem.removeChild( container );\n\t\t\t\tdiv.removeChild( marginDiv );\n\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t});\n\t}\n})();\n\n\n// A method for quickly swapping in/out CSS properties to get correct calculations.\njQuery.swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar\n\t// Swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trnumsplit = new RegExp( \"^(\" + pnum + \")(.*)$\", \"i\" ),\n\trrelNum = new RegExp( \"^([+-])=(\" + pnum + \")\", \"i\" ),\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ];\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in style ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[0].toUpperCase() + name.slice(1),\n\t\torigName = name,\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in style ) {\n\t\t\treturn name;\n\t\t}\n\t}\n\n\treturn origName;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\tvar matches = rnumsplit.exec( value );\n\treturn matches ?\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test(val) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = data_priv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = data_priv.access( elem, \"olddisplay\", defaultDisplay(elem.nodeName) );\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdata_priv.set( elem, \"olddisplay\", hidden ? display : jQuery.css( elem, \"display\" ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend({\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\n\t\t\t\tvalue = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number, add 'px' to the (except for certain CSS properties)\n\t\t\tif ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\n\t\t\t\tvalue += \"px\";\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n});\n\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) && elem.offsetWidth === 0 ?\n\t\t\t\t\tjQuery.swap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t}) :\n\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar styles = extra && getStyles( elem );\n\t\t\treturn setPositiveNumber( elem, value, extra ?\n\t\t\t\taugmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t) : 0\n\t\t\t);\n\t\t}\n\t};\n});\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn jQuery.swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each({\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n});\n\njQuery.fn.extend({\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t});\n\t}\n});\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || \"swing\";\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\tif ( tween.elem[ tween.prop ] != null &&\n\t\t\t\t(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t}\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" ),\n\trrun = /queueHooks$/,\n\tanimationPrefilters = [ defaultPrefilter ],\n\ttweeners = {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value ),\n\t\t\t\ttarget = tween.cur(),\n\t\t\t\tparts = rfxnum.exec( value ),\n\t\t\t\tunit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\t\tstart = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +target ) &&\n\t\t\t\t\trfxnum.exec( jQuery.css( tween.elem, prop ) ),\n\t\t\t\tscale = 1,\n\t\t\t\tmaxIterations = 20;\n\n\t\t\tif ( start && start[ 3 ] !== unit ) {\n\t\t\t\t// Trust units reported by jQuery.css\n\t\t\t\tunit = unit || start[ 3 ];\n\n\t\t\t\t// Make sure we update the tween properties later on\n\t\t\t\tparts = parts || [];\n\n\t\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\t\tstart = +target || 1;\n\n\t\t\t\tdo {\n\t\t\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\t\t\tscale = scale || \".5\";\n\n\t\t\t\t\t// Adjust and apply\n\t\t\t\t\tstart = start / scale;\n\t\t\t\t\tjQuery.style( tween.elem, prop, start + unit );\n\n\t\t\t\t// Update scale, tolerating zero or NaN from tween.cur(),\n\t\t\t\t// break the loop if scale is unchanged or perfect, or if we've just had enough\n\t\t\t\t} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\n\t\t\t}\n\n\t\t\t// Update tween properties\n\t\t\tif ( parts ) {\n\t\t\t\tstart = tween.start = +start || +target || 0;\n\t\t\t\ttween.unit = unit;\n\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\ttween.end = parts[ 1 ] ?\n\t\t\t\t\tstart + ( parts[ 1 ] + 1 ) * parts[ 2 ] :\n\t\t\t\t\t+parts[ 2 ];\n\t\t\t}\n\n\t\t\treturn tween;\n\t\t} ]\n\t};\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\tsetTimeout(function() {\n\t\tfxNow = undefined;\n\t});\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( (tween = collection[ index ].call( animation, prop, value )) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = data_priv.get( elem, \"fxshow\" );\n\n\t// Handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always(function() {\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always(function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// Height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdata_priv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always(function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t});\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = data_priv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done(function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t});\n\t\t}\n\t\tanim.done(function() {\n\t\t\tvar prop;\n\n\t\t\tdata_priv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t});\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( (display === \"none\" ? defaultDisplay( elem.nodeName ) : display) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = animationPrefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t}),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise({\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, { specialEasing: {} }, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t})\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.split(\" \");\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\ttweeners[ prop ] = tweeners[ prop ] || [];\n\t\t\ttweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tanimationPrefilters.unshift( callback );\n\t\t} else {\n\t\t\tanimationPrefilters.push( callback );\n\t\t}\n\t}\n});\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend({\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || data_priv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = data_priv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t});\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tvar index,\n\t\t\t\tdata = data_priv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t});\n\t}\n});\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\n// Generate shortcuts for custom animations\njQuery.each({\n\tslideDown: genFx(\"show\"),\n\tslideUp: genFx(\"hide\"),\n\tslideToggle: genFx(\"toggle\"),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n});\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tclearInterval( timerId );\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\tclearTimeout( timeout );\n\t\t};\n\t});\n};\n\n\n(function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS<=5.1, Android<=4.2+\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE<=11+\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: Android<=2.3\n\t// Options inside disabled selects are incorrectly marked as disabled\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE<=11+\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n})();\n\n\nvar nodeHook, boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend({\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tattr: function( elem, name, value ) {\n\t\tvar hooks, ret,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set attributes on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === strundefined ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\n\t\t\t} else if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n\t\t\treturn ret;\n\n\t\t} else {\n\t\t\tret = jQuery.find.attr( elem, name );\n\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( (name = attrNames[i++]) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n});\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i;\n\njQuery.fn.extend({\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t},\n\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n\t\tif ( notxml ) {\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\treturn hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?\n\t\t\t\tret :\n\t\t\t\t( elem[ name ] = value );\n\n\t\t} else {\n\t\t\treturn hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ?\n\t\t\t\tret :\n\t\t\t\telem[ name ];\n\t\t}\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\t\t\t\treturn elem.hasAttribute( \"tabindex\" ) || rfocusable.test( elem.nodeName ) || elem.href ?\n\t\t\t\t\telem.tabIndex :\n\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t}\n});\n\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\njQuery.each([\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n});\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\njQuery.fn.extend({\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\tproceed = typeof value === \"string\" && value,\n\t\t\ti = 0,\n\t\t\tlen = this.length;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\n\t\tif ( proceed ) {\n\t\t\t// The disjunction here is for better compressibility (see removeClass)\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\" \"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\tproceed = arguments.length === 0 || typeof value === \"string\" && value,\n\t\t\ti = 0,\n\t\t\tlen = this.length;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\t\tif ( proceed ) {\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) >= 0 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = value ? jQuery.trim( cur ) : \"\";\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( type === \"string\" ) {\n\t\t\t\t// Toggle individual class names\n\t\t\t\tvar className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery( this ),\n\t\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( (className = classNames[ i++ ]) ) {\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( type === strundefined || type === \"boolean\" ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\t// store className if set\n\t\t\t\t\tdata_priv.set( this, \"__className__\", this.className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tthis.className = this.className || value === false ? \"\" : data_priv.get( this, \"__className__\" ) || \"\";\n\t\t\t}\n\t\t});\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tif ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n});\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend({\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[0];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each(function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE6-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ? !option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Radios and checkboxes getter/setter\njQuery.each([ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t\t};\n\t}\n});\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n});\n\njQuery.fn.extend({\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t},\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\n\t}\n});\n\n\nvar nonce = jQuery.now();\n\nvar rquery = (/\\?/);\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, tmp;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\ttmp = new DOMParser();\n\t\txml = tmp.parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Document location\n\tajaxLocation = window.location.href,\n\n\t// Segment location into parts\n\tajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[0] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s[ \"throws\" ] ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend({\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: ajaxLocation,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /xml/,\n\t\t\thtml: /html/,\n\t\t\tjson: /json/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\t\t\t// Cross-domain detection vars\n\t\t\tparts,\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\t\t\t// Loop variable\n\t\t\ti,\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\n\t\tif ( s.crossDomain == null ) {\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\n\t\t\ts.crossDomain = !!( parts &&\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\n\t\t\t);\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger(\"ajaxStart\");\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = setTimeout(function() {\n\t\t\t\t\tjqXHR.abort(\"timeout\");\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\tclearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger(\"ajaxStop\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n});\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t});\n\t};\n});\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax({\n\t\turl: url,\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t});\n};\n\n\njQuery.fn.extend({\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map(function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t}).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t});\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each(function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n\t\t});\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each(function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t}).end();\n\t}\n});\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\treturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\n};\njQuery.expr.filters.visible = function( elem ) {\n\treturn !jQuery.expr.filters.hidden( elem );\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n\t\t\t}\n\t\t});\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t});\n\n\t} else {\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function() {\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t}).get();\n\t}\n});\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new XMLHttpRequest();\n\t} catch( e ) {}\n};\n\nvar xhrId = 0,\n\txhrCallbacks = {},\n\txhrSuccessStatus = {\n\t\t// file protocol always yields status code 0, assume 200\n\t\t0: 200,\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\n// Support: IE9\n// Open requests must be manually aborted on unload (#5280)\n// See https://support.microsoft.com/kb/2856746 for more info\nif ( window.attachEvent ) {\n\twindow.attachEvent( \"onunload\", function() {\n\t\tfor ( var key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]();\n\t\t}\n\t});\n}\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport(function( options ) {\n\tvar callback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr(),\n\t\t\t\t\tid = ++xhrId;\n\n\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.password );\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n\t\t\t\t\t\t\tcallback = xhr.onload = xhr.onerror = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t// file: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t\t// Accessing binary-data responseText throws an exception\n\t\t\t\t\t\t\t\t\t// (#11426)\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText === \"string\" ? {\n\t\t\t\t\t\t\t\t\t\ttext: xhr.responseText\n\t\t\t\t\t\t\t\t\t} : undefined,\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\txhr.onerror = callback(\"error\");\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = xhrCallbacks[ id ] = callback(\"abort\");\n\n\t\t\t\ttry {\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup({\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /(?:java|ecma)script/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n});\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n});\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery(\"<script>\").prop({\n\t\t\t\t\tasync: true,\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t}).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup({\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n});\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[\"script json\"] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always(function() {\n\t\t\t// Restore preexisting value\n\t\t\twindow[ callbackName ] = overwritten;\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\t\t\t\t// make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t});\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n});\n\n\n\n\n// data: string of html\n// context (optional): If specified, the fragment will be created in this context, defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[1] ) ];\n\t}\n\n\tparsed = jQuery.buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf(\" \");\n\n\tif ( off >= 0 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\n\t\t\t// if \"type\" variable is undefined, then \"GET\" method will be used\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t}).done(function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t}).complete( callback && function( jqXHR, status ) {\n\t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t});\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n});\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep(jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t}).length;\n};\n\n\n\n\nvar docElem = window.document.documentElement;\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf(\"auto\") > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\t\t\toptions = options.call( elem, i, curOffset );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend({\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each(function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t});\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\t// Support: BlackBerry 5, iOS 3 (original iPhone)\n\t\t// If we don't have gBCR, just use 0,0 rather than error\n\t\tif ( typeof elem.getBoundingClientRect !== strundefined ) {\n\t\t\tbox = elem.getBoundingClientRect();\n\t\t}\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\toffsetParent: function() {\n\t\treturn this.map(function() {\n\t\t\tvar offsetParent = this.offsetParent || docElem;\n\n\t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) && jQuery.css( offsetParent, \"position\" ) === \"static\" ) ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || docElem;\n\t\t});\n\t}\n});\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : window.pageXOffset,\n\t\t\t\t\ttop ? val : window.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length, null );\n\t};\n});\n\n// Support: Safari<7+, Chrome<37+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n});\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t});\n});\n\n\n// The number of elements contained in the matched element set\njQuery.fn.size = function() {\n\treturn this.length;\n};\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t});\n}\n\n\n\n\nvar\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === strundefined ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n\n}));\n","/**\n * @license\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modern -o ./dist/lodash.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments */\n  var undefined;\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [],\n      objectPool = [];\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */\n  var keyPrefix = +new Date + '';\n\n  /** Used as the size when optimizations are enabled for large arrays */\n  var largeArraySize = 75;\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  /** Used to detect and test whitespace */\n  var whitespace = (\n    // whitespace\n    ' \\t\\x0B\\f\\xA0\\ufeff' +\n\n    // line terminators\n    '\\n\\r\\u2028\\u2029' +\n\n    // unicode category \"Zs\" space separators\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to match empty string literals in compiled template source */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /**\n   * Used to match ES6 template delimiters\n   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to match \"interpolate\" template delimiters */\n  var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match leading whitespace and zeros to be removed */\n  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');\n\n  /** Used to ensure capturing order of template delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** Used to assign default `context` object properties */\n  var contextProps = [\n    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',\n    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',\n    'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify */\n  var templateCounter = 0;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =\n  cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] =\n  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used as an internal `_.debounce` options object */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches\n   * or `fromIndex` constraints.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * An implementation of `_.contains` for cache objects that mimics the return\n   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.\n   *\n   * @private\n   * @param {Object} cache The cache object to inspect.\n   * @param {*} value The value to search for.\n   * @returns {number} Returns `0` if `value` is found, else `-1`.\n   */\n  function cacheIndexOf(cache, value) {\n    var type = typeof value;\n    cache = cache.cache;\n\n    if (type == 'boolean' || value == null) {\n      return cache[value] ? 0 : -1;\n    }\n    if (type != 'number' && type != 'string') {\n      type = 'object';\n    }\n    var key = type == 'number' ? value : keyPrefix + value;\n    cache = (cache = cache[type]) && cache[key];\n\n    return type == 'object'\n      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)\n      : (cache ? 0 : -1);\n  }\n\n  /**\n   * Adds a given value to the corresponding cache object.\n   *\n   * @private\n   * @param {*} value The value to add to the cache.\n   */\n  function cachePush(value) {\n    var cache = this.cache,\n        type = typeof value;\n\n    if (type == 'boolean' || value == null) {\n      cache[value] = true;\n    } else {\n      if (type != 'number' && type != 'string') {\n        type = 'object';\n      }\n      var key = type == 'number' ? value : keyPrefix + value,\n          typeCache = cache[type] || (cache[type] = {});\n\n      if (type == 'object') {\n        (typeCache[key] || (typeCache[key] = [])).push(value);\n      } else {\n        typeCache[key] = true;\n      }\n    }\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback when a given\n   * collection is a string value.\n   *\n   * @private\n   * @param {string} value The character to inspect.\n   * @returns {number} Returns the code unit of given character.\n   */\n  function charAtCallback(value) {\n    return value.charCodeAt(0);\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` elements, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ac = a.criteria,\n        bc = b.criteria,\n        index = -1,\n        length = ac.length;\n\n    while (++index < length) {\n      var value = ac[index],\n          other = bc[index];\n\n      if (value !== other) {\n        if (value > other || typeof value == 'undefined') {\n          return 1;\n        }\n        if (value < other || typeof other == 'undefined') {\n          return -1;\n        }\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to return the same value for\n    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See http://code.google.com/p/v8/issues/detail?id=90\n    return a.index - b.index;\n  }\n\n  /**\n   * Creates a cache object to optimize linear searches of large arrays.\n   *\n   * @private\n   * @param {Array} [array=[]] The array to search.\n   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.\n   */\n  function createCache(array) {\n    var index = -1,\n        length = array.length,\n        first = array[0],\n        mid = array[(length / 2) | 0],\n        last = array[length - 1];\n\n    if (first && typeof first == 'object' &&\n        mid && typeof mid == 'object' && last && typeof last == 'object') {\n      return false;\n    }\n    var cache = getObject();\n    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;\n\n    var result = getObject();\n    result.array = array;\n    result.cache = cache;\n    result.push = cachePush;\n\n    while (++index < length) {\n      result.push(array[index]);\n    }\n    return result;\n  }\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} match The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  /**\n   * Gets an object from the object pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Object} The object from the pool.\n   */\n  function getObject() {\n    return objectPool.pop() || {\n      'array': null,\n      'cache': null,\n      'criteria': null,\n      'false': false,\n      'index': 0,\n      'null': false,\n      'number': null,\n      'object': null,\n      'push': null,\n      'string': null,\n      'true': false,\n      'undefined': false,\n      'value': null\n    };\n  }\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  /**\n   * Releases the given object back to the object pool.\n   *\n   * @private\n   * @param {Object} [object] The object to release.\n   */\n  function releaseObject(object) {\n    var cache = object.cache;\n    if (cache) {\n      releaseObject(cache);\n    }\n    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;\n    if (objectPool.length < maxPoolSize) {\n      objectPool.push(object);\n    }\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new `lodash` function using the given context object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns the `lodash` function.\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See http://es5.github.io/#x11.1.5.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references */\n    var Array = context.Array,\n        Boolean = context.Boolean,\n        Date = context.Date,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /**\n     * Used for `Array` method references.\n     *\n     * Normally `Array.prototype` would suffice, however, using an array literal\n     * avoids issues in Narwhal.\n     */\n    var arrayRef = [];\n\n    /** Used for native method references */\n    var objectProto = Object.prototype;\n\n    /** Used to restore the original `_` reference in `noConflict` */\n    var oldDash = context._;\n\n    /** Used to resolve the internal [[Class]] of values */\n    var toString = objectProto.toString;\n\n    /** Used to detect if a method is native */\n    var reNative = RegExp('^' +\n      String(toString)\n        .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n        .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n    );\n\n    /** Native method shortcuts */\n    var ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        fnToString = Function.prototype.toString,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        hasOwnProperty = objectProto.hasOwnProperty,\n        push = arrayRef.push,\n        setTimeout = context.setTimeout,\n        splice = arrayRef.splice,\n        unshift = arrayRef.unshift;\n\n    /** Used to set meta data on functions */\n    var defineProperty = (function() {\n      // IE 8 only accepts DOM elements\n      try {\n        var o = {},\n            func = isNative(func = Object.defineProperty) && func,\n            result = func(o, o, o) && func;\n      } catch(e) { }\n      return result;\n    }());\n\n    /* Native method shortcuts for methods with the same name as other `lodash` methods */\n    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeIsFinite = context.isFinite,\n        nativeIsNaN = context.isNaN,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used to lookup a built-in constructor by [[Class]] */\n    var ctorByClass = {};\n    ctorByClass[arrayClass] = Array;\n    ctorByClass[boolClass] = Boolean;\n    ctorByClass[dateClass] = Date;\n    ctorByClass[funcClass] = Function;\n    ctorByClass[objectClass] = Object;\n    ctorByClass[numberClass] = Number;\n    ctorByClass[regexpClass] = RegExp;\n    ctorByClass[stringClass] = String;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps the given value to enable intuitive\n     * method chaining.\n     *\n     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n     * and `unshift`\n     *\n     * Chaining is supported in custom builds as long as the `value` method is\n     * implicitly or explicitly included in the build.\n     *\n     * The chainable wrapper functions are:\n     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n     * and `zip`\n     *\n     * The non-chainable wrapper functions are:\n     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n     * `template`, `unescape`, `uniqueId`, and `value`\n     *\n     * The wrapper functions `first` and `last` return wrapped values when `n` is\n     * provided, otherwise they return unwrapped values.\n     *\n     * Explicit chaining can be enabled by using the `_.chain` method.\n     *\n     * @name _\n     * @constructor\n     * @category Chaining\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns a `lodash` instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(num) {\n     *   return num * num;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor\n      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))\n       ? value\n       : new lodashWrapper(value);\n    }\n\n    /**\n     * A fast path for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @param {boolean} chainAll A flag to enable chaining for all methods\n     * @returns {Object} Returns a `lodash` instance.\n     */\n    function lodashWrapper(value, chainAll) {\n      this.__chain__ = !!chainAll;\n      this.__wrapped__ = value;\n    }\n    // ensure `new lodashWrapper` is an instance of `lodash`\n    lodashWrapper.prototype = lodash.prototype;\n\n    /**\n     * An object used to flag environments features.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * By default, the template delimiters used by Lo-Dash are similar to those in\n     * embedded Ruby (ERB). Change the following template settings to use alternative\n     * delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': /<%-([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': /<%([\\s\\S]+?)%>/g,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The base implementation of `_.bind` that creates the bound function and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new bound function.\n     */\n    function baseBind(bindData) {\n      var func = bindData[0],\n          partialArgs = bindData[2],\n          thisArg = bindData[4];\n\n      function bound() {\n        // `Function#bind` spec\n        // http://es5.github.io/#x15.3.4.5\n        if (partialArgs) {\n          // avoid `arguments` object deoptimizations by using `slice` instead\n          // of `Array.prototype.slice.call` and not assigning `arguments` to a\n          // variable as a ternary expression\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        // mimic the constructor's `return` behavior\n        // http://es5.github.io/#x13.2.2\n        if (this instanceof bound) {\n          // ensure `new bound` is an instance of `func`\n          var thisBinding = baseCreate(func.prototype),\n              result = func.apply(thisBinding, args || arguments);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisArg, args || arguments);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.clone` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, callback, stackA, stackB) {\n      if (callback) {\n        var result = callback(value);\n        if (typeof result != 'undefined') {\n          return result;\n        }\n      }\n      // inspect [[Class]]\n      var isObj = isObject(value);\n      if (isObj) {\n        var className = toString.call(value);\n        if (!cloneableClasses[className]) {\n          return value;\n        }\n        var ctor = ctorByClass[className];\n        switch (className) {\n          case boolClass:\n          case dateClass:\n            return new ctor(+value);\n\n          case numberClass:\n          case stringClass:\n            return new ctor(value);\n\n          case regexpClass:\n            result = ctor(value.source, reFlags.exec(value));\n            result.lastIndex = value.lastIndex;\n            return result;\n        }\n      } else {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isDeep) {\n        // check for circular references and return corresponding clone\n        var initedStack = !stackA;\n        stackA || (stackA = getArray());\n        stackB || (stackB = getArray());\n\n        var length = stackA.length;\n        while (length--) {\n          if (stackA[length] == value) {\n            return stackB[length];\n          }\n        }\n        result = isArr ? ctor(value.length) : {};\n      }\n      else {\n        result = isArr ? slice(value) : assign({}, value);\n      }\n      // add array properties assigned by `RegExp#exec`\n      if (isArr) {\n        if (hasOwnProperty.call(value, 'index')) {\n          result.index = value.index;\n        }\n        if (hasOwnProperty.call(value, 'input')) {\n          result.input = value.input;\n        }\n      }\n      // exit for shallow clone\n      if (!isDeep) {\n        return result;\n      }\n      // add the source value to the stack of traversed objects\n      // and associate it with its clone\n      stackA.push(value);\n      stackB.push(result);\n\n      // recursively populate clone (susceptible to call stack limits)\n      (isArr ? forEach : forOwn)(value, function(objValue, key) {\n        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n      });\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(prototype, properties) {\n      return isObject(prototype) ? nativeCreate(prototype) : {};\n    }\n    // fallback for browsers without `Object.create`\n    if (!nativeCreate) {\n      baseCreate = (function() {\n        function Object() {}\n        return function(prototype) {\n          if (isObject(prototype)) {\n            Object.prototype = prototype;\n            var result = new Object;\n            Object.prototype = null;\n          }\n          return result || context.Object();\n        };\n      }());\n    }\n\n    /**\n     * The base implementation of `_.createCallback` without support for creating\n     * \"_.pluck\" or \"_.where\" style callbacks.\n     *\n     * @private\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     */\n    function baseCreateCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      // exit early for no `thisArg` or already bound by `Function#bind`\n      if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n        return func;\n      }\n      var bindData = func.__bindData__;\n      if (typeof bindData == 'undefined') {\n        if (support.funcNames) {\n          bindData = !func.name;\n        }\n        bindData = bindData || !support.funcDecomp;\n        if (!bindData) {\n          var source = fnToString.call(func);\n          if (!support.funcNames) {\n            bindData = !reFuncName.test(source);\n          }\n          if (!bindData) {\n            // checks if `func` references the `this` keyword and stores the result\n            bindData = reThis.test(source);\n            setBindData(func, bindData);\n          }\n        }\n      }\n      // exit early if there are no `this` references or `func` is bound\n      if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 2: return function(a, b) {\n          return func.call(thisArg, a, b);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n      }\n      return bind(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `createWrapper` that creates the wrapper and\n     * sets its meta data.\n     *\n     * @private\n     * @param {Array} bindData The bind data array.\n     * @returns {Function} Returns the new function.\n     */\n    function baseCreateWrapper(bindData) {\n      var func = bindData[0],\n          bitmask = bindData[1],\n          partialArgs = bindData[2],\n          partialRightArgs = bindData[3],\n          thisArg = bindData[4],\n          arity = bindData[5];\n\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          key = func;\n\n      function bound() {\n        var thisBinding = isBind ? thisArg : this;\n        if (partialArgs) {\n          var args = slice(partialArgs);\n          push.apply(args, arguments);\n        }\n        if (partialRightArgs || isCurry) {\n          args || (args = slice(arguments));\n          if (partialRightArgs) {\n            push.apply(args, partialRightArgs);\n          }\n          if (isCurry && args.length < arity) {\n            bitmask |= 16 & ~32;\n            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n          }\n        }\n        args || (args = arguments);\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (this instanceof bound) {\n          thisBinding = baseCreate(func.prototype);\n          var result = func.apply(thisBinding, args);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisBinding, args);\n      }\n      setBindData(bound, bindData);\n      return bound;\n    }\n\n    /**\n     * The base implementation of `_.difference` that accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {Array} [values] The array of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          isLarge = length >= largeArraySize && indexOf === baseIndexOf,\n          result = [];\n\n      if (isLarge) {\n        var cache = createCache(values);\n        if (cache) {\n          indexOf = cacheIndexOf;\n          values = cache;\n        } else {\n          isLarge = false;\n        }\n      }\n      while (++index < length) {\n        var value = array[index];\n        if (indexOf(values, value) < 0) {\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseObject(values);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` without support for callback\n     * shorthands or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n     * @param {number} [fromIndex=0] The index to start from.\n     * @returns {Array} Returns a new flattened array.\n     */\n    function baseFlatten(array, isShallow, isStrict, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (value && typeof value == 'object' && typeof value.length == 'number'\n            && (isArray(value) || isArguments(value))) {\n          // recursively flatten arrays (susceptible to call stack limits)\n          if (!isShallow) {\n            value = baseFlatten(value, isShallow, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length,\n              resIndex = result.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[resIndex++] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n     * that allows partial \"_.where\" style comparisons.\n     *\n     * @private\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n      // used to indicate that when comparing objects, `a` has at least the properties of `b`\n      if (callback) {\n        var result = callback(a, b);\n        if (typeof result != 'undefined') {\n          return !!result;\n        }\n      }\n      // exit early for identical values\n      if (a === b) {\n        // treat `+0` vs. `-0` as not equal\n        return a !== 0 || (1 / a == 1 / b);\n      }\n      var type = typeof a,\n          otherType = typeof b;\n\n      // exit early for unlike primitive values\n      if (a === a &&\n          !(a && objectTypes[type]) &&\n          !(b && objectTypes[otherType])) {\n        return false;\n      }\n      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n      // http://es5.github.io/#x15.3.4.4\n      if (a == null || b == null) {\n        return a === b;\n      }\n      // compare [[Class]] names\n      var className = toString.call(a),\n          otherClass = toString.call(b);\n\n      if (className == argsClass) {\n        className = objectClass;\n      }\n      if (otherClass == argsClass) {\n        otherClass = objectClass;\n      }\n      if (className != otherClass) {\n        return false;\n      }\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          // coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n          return +a == +b;\n\n        case numberClass:\n          // treat `NaN` vs. `NaN` as equal\n          return (a != +a)\n            ? b != +b\n            // but treat `+0` vs. `-0` as not equal\n            : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n        case regexpClass:\n        case stringClass:\n          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n          // treat string primitives and their corresponding object instances as equal\n          return a == String(b);\n      }\n      var isArr = className == arrayClass;\n      if (!isArr) {\n        // unwrap any `lodash` wrapped values\n        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n            bWrapped = hasOwnProperty.call(b, '__wrapped__');\n\n        if (aWrapped || bWrapped) {\n          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n        }\n        // exit for functions and DOM nodes\n        if (className != objectClass) {\n          return false;\n        }\n        // in older versions of Opera, `arguments` objects have `Array` constructors\n        var ctorA = a.constructor,\n            ctorB = b.constructor;\n\n        // non `Object` object instances with different constructors are not equal\n        if (ctorA != ctorB &&\n              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&\n              ('constructor' in a && 'constructor' in b)\n            ) {\n          return false;\n        }\n      }\n      // assume cyclic structures are equal\n      // the algorithm for detecting cyclic structures is adapted from ES 5.1\n      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == a) {\n          return stackB[length] == b;\n        }\n      }\n      var size = 0;\n      result = true;\n\n      // add `a` and `b` to the stack of traversed objects\n      stackA.push(a);\n      stackB.push(b);\n\n      // recursively compare objects and arrays (susceptible to call stack limits)\n      if (isArr) {\n        // compare lengths to determine if a deep comparison is necessary\n        length = a.length;\n        size = b.length;\n        result = size == length;\n\n        if (result || isWhere) {\n          // deep compare the contents, ignoring non-numeric properties\n          while (size--) {\n            var index = length,\n                value = b[size];\n\n            if (isWhere) {\n              while (index--) {\n                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {\n                  break;\n                }\n              }\n            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n              break;\n            }\n          }\n        }\n      }\n      else {\n        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n        // which, in this case, is more costly\n        forIn(b, function(value, key, b) {\n          if (hasOwnProperty.call(b, key)) {\n            // count the number of properties.\n            size++;\n            // deep compare each property value.\n            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));\n          }\n        });\n\n        if (result && !isWhere) {\n          // ensure both objects have the same number of properties\n          forIn(a, function(value, key, a) {\n            if (hasOwnProperty.call(a, key)) {\n              // `size` will be `-1` if `a` has more properties than `b`\n              return (result = --size > -1);\n            }\n          });\n        }\n      }\n      stackA.pop();\n      stackB.pop();\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.merge` without argument juggling or support\n     * for `thisArg` binding.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     */\n    function baseMerge(object, source, callback, stackA, stackB) {\n      (isArray(source) ? forEach : forOwn)(source, function(source, key) {\n        var found,\n            isArr,\n            result = source,\n            value = object[key];\n\n        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n          // avoid merging previously merged cyclic sources\n          var stackLength = stackA.length;\n          while (stackLength--) {\n            if ((found = stackA[stackLength] == source)) {\n              value = stackB[stackLength];\n              break;\n            }\n          }\n          if (!found) {\n            var isShallow;\n            if (callback) {\n              result = callback(value, source);\n              if ((isShallow = typeof result != 'undefined')) {\n                value = result;\n              }\n            }\n            if (!isShallow) {\n              value = isArr\n                ? (isArray(value) ? value : [])\n                : (isPlainObject(value) ? value : {});\n            }\n            // add `source` and associated `value` to the stack of traversed objects\n            stackA.push(source);\n            stackB.push(value);\n\n            // recursively merge objects and arrays (susceptible to call stack limits)\n            if (!isShallow) {\n              baseMerge(value, source, callback, stackA, stackB);\n            }\n          }\n        }\n        else {\n          if (callback) {\n            result = callback(value, source);\n            if (typeof result == 'undefined') {\n              result = source;\n            }\n          }\n          if (typeof result != 'undefined') {\n            value = result;\n          }\n        }\n        object[key] = value;\n      });\n    }\n\n    /**\n     * The base implementation of `_.random` without argument juggling or support\n     * for returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns a random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * or `thisArg` binding.\n     *\n     * @private\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function} [callback] The function called per iteration.\n     * @returns {Array} Returns a duplicate-value-free array.\n     */\n    function baseUniq(array, isSorted, callback) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array ? array.length : 0,\n          result = [];\n\n      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,\n          seen = (callback || isLarge) ? getArray() : result;\n\n      if (isLarge) {\n        var cache = createCache(seen);\n        indexOf = cacheIndexOf;\n        seen = cache;\n      }\n      while (++index < length) {\n        var value = array[index],\n            computed = callback ? callback(value, index, array) : value;\n\n        if (isSorted\n              ? !index || seen[seen.length - 1] !== computed\n              : indexOf(seen, computed) < 0\n            ) {\n          if (callback || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      if (isLarge) {\n        releaseArray(seen.array);\n        releaseObject(seen);\n      } else if (callback) {\n        releaseArray(seen);\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an object composed\n     * of keys generated from the results of running each element of the collection\n     * through a callback. The given `setter` function sets the keys and values\n     * of the composed object.\n     *\n     * @private\n     * @param {Function} setter The setter function.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter) {\n      return function(collection, callback, thisArg) {\n        var result = {};\n        callback = lodash.createCallback(callback, thisArg, 3);\n\n        var index = -1,\n            length = collection ? collection.length : 0;\n\n        if (typeof length == 'number') {\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, callback(value, index, collection), collection);\n          }\n        } else {\n          forOwn(collection, function(value, key, collection) {\n            setter(result, value, callback(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, either curries or invokes `func`\n     * with an optional `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of method flags to compose.\n     *  The bitmask may be composed of the following flags:\n     *  1 - `_.bind`\n     *  2 - `_.bindKey`\n     *  4 - `_.curry`\n     *  8 - `_.curry` (bound)\n     *  16 - `_.partial`\n     *  32 - `_.partialRight`\n     * @param {Array} [partialArgs] An array of arguments to prepend to those\n     *  provided to the new function.\n     * @param {Array} [partialRightArgs] An array of arguments to append to those\n     *  provided to the new function.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new function.\n     */\n    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          isPartial = bitmask & 16,\n          isPartialRight = bitmask & 32;\n\n      if (!isBindKey && !isFunction(func)) {\n        throw new TypeError;\n      }\n      if (isPartial && !partialArgs.length) {\n        bitmask &= ~16;\n        isPartial = partialArgs = false;\n      }\n      if (isPartialRight && !partialRightArgs.length) {\n        bitmask &= ~32;\n        isPartialRight = partialRightArgs = false;\n      }\n      var bindData = func && func.__bindData__;\n      if (bindData && bindData !== true) {\n        // clone `bindData`\n        bindData = slice(bindData);\n        if (bindData[2]) {\n          bindData[2] = slice(bindData[2]);\n        }\n        if (bindData[3]) {\n          bindData[3] = slice(bindData[3]);\n        }\n        // set `thisBinding` is not previously bound\n        if (isBind && !(bindData[1] & 1)) {\n          bindData[4] = thisArg;\n        }\n        // set if previously bound but not currently (subsequent curried functions)\n        if (!isBind && bindData[1] & 1) {\n          bitmask |= 8;\n        }\n        // set curried arity if not yet set\n        if (isCurry && !(bindData[1] & 4)) {\n          bindData[5] = arity;\n        }\n        // append partial left arguments\n        if (isPartial) {\n          push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n        }\n        // append partial right arguments\n        if (isPartialRight) {\n          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n        }\n        // merge flags\n        bindData[1] |= bitmask;\n        return createWrapper.apply(null, bindData);\n      }\n      // fast path for `_.bind`\n      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n    }\n\n    /**\n     * Used by `escape` to convert characters to HTML entities.\n     *\n     * @private\n     * @param {string} match The matched character to escape.\n     * @returns {string} Returns the escaped character.\n     */\n    function escapeHtmlChar(match) {\n      return htmlEscapes[match];\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized, this method returns the custom method, otherwise it returns\n     * the `baseIndexOf` function.\n     *\n     * @private\n     * @returns {Function} Returns the \"indexOf\" function.\n     */\n    function getIndexOf() {\n      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n     */\n    function isNative(value) {\n      return typeof value == 'function' && reNative.test(value);\n    }\n\n    /**\n     * Sets `this` binding data on a given function.\n     *\n     * @private\n     * @param {Function} func The function to set data on.\n     * @param {Array} value The data array to set.\n     */\n    var setBindData = !defineProperty ? noop : function(func, value) {\n      descriptor.value = value;\n      defineProperty(func, '__bindData__', descriptor);\n    };\n\n    /**\n     * A fallback implementation of `isPlainObject` which checks if a given value\n     * is an object created by the `Object` constructor, assuming objects created\n     * by the `Object` constructor have no inherited enumerable properties and that\n     * there are no `Object.prototype` extensions.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var ctor,\n          result;\n\n      // avoid non Object objects, `arguments` objects, and DOM elements\n      if (!(value && toString.call(value) == objectClass) ||\n          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {\n        return false;\n      }\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      forIn(value, function(value, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Used by `unescape` to convert HTML entities to characters.\n     *\n     * @private\n     * @param {string} match The matched character to unescape.\n     * @returns {string} Returns the unescaped character.\n     */\n    function unescapeHtmlChar(match) {\n      return htmlUnescapes[match];\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `value` is an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n     * @example\n     *\n     * (function() { return _.isArguments(arguments); })(1, 2, 3);\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == argsClass || false;\n    }\n\n    /**\n     * Checks if `value` is an array.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n     * @example\n     *\n     * (function() { return _.isArray(arguments); })();\n     * // => false\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     */\n    var isArray = nativeIsArray || function(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        toString.call(value) == arrayClass || false;\n    };\n\n    /**\n     * A fallback implementation of `Object.keys` which produces an array of the\n     * given object's own enumerable property names.\n     *\n     * @private\n     * @type Function\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     */\n    var shimKeys = function(object) {\n      var index, iterable = object, result = [];\n      if (!iterable) return result;\n      if (!(objectTypes[typeof object])) return result;\n        for (index in iterable) {\n          if (hasOwnProperty.call(iterable, index)) {\n            result.push(index);\n          }\n        }\n      return result\n    };\n\n    /**\n     * Creates an array composed of the own enumerable property names of an object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names.\n     * @example\n     *\n     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (!isObject(object)) {\n        return [];\n      }\n      return nativeKeys(object);\n    };\n\n    /**\n     * Used to convert characters to HTML entities:\n     *\n     * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n     * don't require escaping in HTML and have no special meaning unless they're part\n     * of a tag or an unquoted attribute value.\n     * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n     */\n    var htmlEscapes = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    };\n\n    /** Used to convert HTML entities to characters */\n    var htmlUnescapes = invert(htmlEscapes);\n\n    /** Used to match HTML entities and HTML characters */\n    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),\n        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources will overwrite property assignments of previous\n     * sources. If a callback is provided it will be executed to produce the\n     * assigned values. The callback is bound to `thisArg` and invoked with two\n     * arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @alias extend\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n     * // => { 'name': 'fred', 'employer': 'slate' }\n     *\n     * var defaults = _.partialRight(_.assign, function(a, b) {\n     *   return typeof a == 'undefined' ? b : a;\n     * });\n     *\n     * var object = { 'name': 'barney' };\n     * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var assign = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n        callback = args[--argsLength];\n      }\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n     * be cloned, otherwise they will be assigned by reference. If a callback\n     * is provided it will be executed to produce the cloned values. If the\n     * callback returns `undefined` cloning will be handled by the method instead.\n     * The callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep=false] Specify a deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var shallow = _.clone(characters);\n     * shallow[0] === characters[0];\n     * // => true\n     *\n     * var deep = _.clone(characters, true);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * _.mixin({\n     *   'clone': _.partialRight(_.clone, function(value) {\n     *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n     *   })\n     * });\n     *\n     * var clone = _.clone(document.body);\n     * clone.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, callback, thisArg) {\n      // allows working with \"Collections\" methods without using their `index`\n      // and `collection` arguments for `isDeep` and `callback`\n      if (typeof isDeep != 'boolean' && isDeep != null) {\n        thisArg = callback;\n        callback = isDeep;\n        isDeep = false;\n      }\n      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates a deep clone of `value`. If a callback is provided it will be\n     * executed to produce the cloned values. If the callback returns `undefined`\n     * cloning will be handled by the method instead. The callback is bound to\n     * `thisArg` and invoked with one argument; (value).\n     *\n     * Note: This method is loosely based on the structured clone algorithm. Functions\n     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n     * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to deep clone.\n     * @param {Function} [callback] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * var deep = _.cloneDeep(characters);\n     * deep[0] === characters[0];\n     * // => false\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'node': element\n     * };\n     *\n     * var clone = _.cloneDeep(view, function(value) {\n     *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n     * });\n     *\n     * clone.node == view.node;\n     * // => false\n     */\n    function cloneDeep(value, callback, thisArg) {\n      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n    }\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? assign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional defaults of the same property will be ignored.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param- {Object} [guard] Allows working with `_.reduce` without using its\n     *  `key` and `object` arguments as sources.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var object = { 'name': 'barney' };\n     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });\n     * // => { 'name': 'barney', 'employer': 'slate' }\n     */\n    var defaults = function(object, source, guard) {\n      var index, iterable = object, result = iterable;\n      if (!iterable) return result;\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = typeof guard == 'number' ? 2 : args.length;\n      while (++argsIndex < argsLength) {\n        iterable = args[argsIndex];\n        if (iterable && objectTypes[typeof iterable]) {\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (typeof result[index] == 'undefined') result[index] = iterable[index];\n        }\n        }\n      }\n      return result\n    };\n\n    /**\n     * This method is like `_.findIndex` except that it returns the key of the\n     * first element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': false },\n     *   'fred': {    'age': 40, 'blocked': true },\n     *   'pebbles': { 'age': 1,  'blocked': false }\n     * };\n     *\n     * _.findKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (property order is not guaranteed across environments)\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findKey(characters, { 'age': 1 });\n     * // => 'pebbles'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findKey(characters, 'blocked');\n     * // => 'fred'\n     */\n    function findKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwn(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [callback=identity] The function called per\n     *  iteration. If a property name or object is provided it will be used to\n     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n     * @example\n     *\n     * var characters = {\n     *   'barney': {  'age': 36, 'blocked': true },\n     *   'fred': {    'age': 40, 'blocked': false },\n     *   'pebbles': { 'age': 1,  'blocked': true }\n     * };\n     *\n     * _.findLastKey(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles`, assuming `_.findKey` returns `barney`\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastKey(characters, { 'age': 40 });\n     * // => 'fred'\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastKey(characters, 'blocked');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forOwnRight(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result = key;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object,\n     * executing the callback for each property. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, key, object). Callbacks may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forIn(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n     */\n    var forIn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        for (index in iterable) {\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forIn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * Shape.prototype.move = function(x, y) {\n     *   this.x += x;\n     *   this.y += y;\n     * };\n     *\n     * _.forInRight(new Shape, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'\n     */\n    function forInRight(object, callback, thisArg) {\n      var pairs = [];\n\n      forIn(object, function(value, key) {\n        pairs.push(key, value);\n      });\n\n      var length = pairs.length;\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(pairs[length--], pairs[length], object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object, executing the callback\n     * for each property. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, key, object). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n     */\n    var forOwn = function(collection, callback, thisArg) {\n      var index, iterable = collection, result = iterable;\n      if (!iterable) return result;\n      if (!objectTypes[typeof iterable]) return result;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n        var ownIndex = -1,\n            ownProps = objectTypes[typeof iterable] && keys(iterable),\n            length = ownProps ? ownProps.length : 0;\n\n        while (++ownIndex < length) {\n          index = ownProps[ownIndex];\n          if (callback(iterable[index], index, collection) === false) return result;\n        }\n      return result\n    };\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over elements\n     * of a `collection` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n     */\n    function forOwnRight(object, callback, thisArg) {\n      var props = keys(object),\n          length = props.length;\n\n      callback = baseCreateCallback(callback, thisArg, 3);\n      while (length--) {\n        var key = props[length];\n        if (callback(object[key], key, object) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Creates a sorted array of property names of all enumerable properties,\n     * own and inherited, of `object` that have function values.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property names that have function values.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n     */\n    function functions(object) {\n      var result = [];\n      forIn(object, function(value, key) {\n        if (isFunction(value)) {\n          result.push(key);\n        }\n      });\n      return result.sort();\n    }\n\n    /**\n     * Checks if the specified property name exists as a direct property of `object`,\n     * instead of an inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to check.\n     * @returns {boolean} Returns `true` if key is a direct property, else `false`.\n     * @example\n     *\n     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n     * // => true\n     */\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of the given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the created inverted object.\n     * @example\n     *\n     * _.invert({ 'first': 'fred', 'second': 'barney' });\n     * // => { 'fred': 'first', 'barney': 'second' }\n     */\n    function invert(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        result[object[key]] = key;\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a boolean value.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.\n     * @example\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        value && typeof value == 'object' && toString.call(value) == boolClass || false;\n    }\n\n    /**\n     * Checks if `value` is a date.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     */\n    function isDate(value) {\n      return value && typeof value == 'object' && toString.call(value) == dateClass || false;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     */\n    function isElement(value) {\n      return value && value.nodeType === 1 || false;\n    }\n\n    /**\n     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n     * length of `0` and objects with no own enumerable properties are considered\n     * \"empty\".\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({});\n     * // => true\n     *\n     * _.isEmpty('');\n     * // => true\n     */\n    function isEmpty(value) {\n      var result = true;\n      if (!value) {\n        return result;\n      }\n      var className = toString.call(value),\n          length = value.length;\n\n      if ((className == arrayClass || className == stringClass || className == argsClass ) ||\n          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n        return !length;\n      }\n      forOwn(value, function() {\n        return (result = false);\n      });\n      return result;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent to each other. If a callback is provided it will be executed\n     * to compare values. If the callback returns `undefined` comparisons will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (a, b).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} a The value to compare.\n     * @param {*} b The other value to compare.\n     * @param {Function} [callback] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var copy = { 'name': 'fred' };\n     *\n     * object == copy;\n     * // => false\n     *\n     * _.isEqual(object, copy);\n     * // => true\n     *\n     * var words = ['hello', 'goodbye'];\n     * var otherWords = ['hi', 'goodbye'];\n     *\n     * _.isEqual(words, otherWords, function(a, b) {\n     *   var reGreet = /^(?:hello|hi)$/i,\n     *       aGreet = _.isString(a) && reGreet.test(a),\n     *       bGreet = _.isString(b) && reGreet.test(b);\n     *\n     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n     * });\n     * // => true\n     */\n    function isEqual(a, b, callback, thisArg) {\n      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));\n    }\n\n    /**\n     * Checks if `value` is, or can be coerced to, a finite number.\n     *\n     * Note: This is not the same as native `isFinite` which will return true for\n     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.\n     * @example\n     *\n     * _.isFinite(-101);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => true\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite('');\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n    }\n\n    /**\n     * Checks if `value` is a function.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     */\n    function isFunction(value) {\n      return typeof value == 'function';\n    }\n\n    /**\n     * Checks if `value` is the language type of Object.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // check if the value is the ECMAScript language type of Object\n      // http://es5.github.io/#x8\n      // and avoid a V8 bug\n      // http://code.google.com/p/v8/issues/detail?id=2291\n      return !!(value && objectTypes[typeof value]);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * Note: This is not the same as native `isNaN` which will return `true` for\n     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // `NaN` as a primitive is the only value that is not equal to itself\n      // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(undefined);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is a number.\n     *\n     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4 * 5);\n     * // => true\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        value && typeof value == 'object' && toString.call(value) == numberClass || false;\n    }\n\n    /**\n     * Checks if `value` is an object created by the `Object` constructor.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * _.isPlainObject(new Shape);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && toString.call(value) == objectClass)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is a regular expression.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.\n     * @example\n     *\n     * _.isRegExp(/fred/);\n     * // => true\n     */\n    function isRegExp(value) {\n      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;\n    }\n\n    /**\n     * Checks if `value` is a string.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('fred');\n     * // => true\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        value && typeof value == 'object' && toString.call(value) == stringClass || false;\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     */\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new object with values of the results of each `callback` execution.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     *\n     * var characters = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.mapValues(characters, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 }\n     */\n    function mapValues(object, callback, thisArg) {\n      var result = {};\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      forOwn(object, function(value, key, object) {\n        result[key] = callback(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * will overwrite property assignments of previous sources. If a callback is\n     * provided it will be executed to produce the merged values of the destination\n     * and source properties. If the callback returns `undefined` merging will\n     * be handled by the method instead. The callback is bound to `thisArg` and\n     * invoked with two arguments; (objectValue, sourceValue).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The destination object.\n     * @param {...Object} [source] The source objects.\n     * @param {Function} [callback] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the destination object.\n     * @example\n     *\n     * var names = {\n     *   'characters': [\n     *     { 'name': 'barney' },\n     *     { 'name': 'fred' }\n     *   ]\n     * };\n     *\n     * var ages = {\n     *   'characters': [\n     *     { 'age': 36 },\n     *     { 'age': 40 }\n     *   ]\n     * };\n     *\n     * _.merge(names, ages);\n     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n     *\n     * var food = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var otherFood = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(food, otherFood, function(a, b) {\n     *   return _.isArray(a) ? a.concat(b) : undefined;\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n     */\n    function merge(object) {\n      var args = arguments,\n          length = 2;\n\n      if (!isObject(object)) {\n        return object;\n      }\n      // allows working with `_.reduce` and `_.reduceRight` without using\n      // their `index` and `collection` arguments\n      if (typeof args[2] != 'number') {\n        length = args.length;\n      }\n      if (length > 3 && typeof args[length - 2] == 'function') {\n        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n      } else if (length > 2 && typeof args[length - 1] == 'function') {\n        callback = args[--length];\n      }\n      var sources = slice(arguments, 1, length),\n          index = -1,\n          stackA = getArray(),\n          stackB = getArray();\n\n      while (++index < length) {\n        baseMerge(object, sources[index], callback, stackA, stackB);\n      }\n      releaseArray(stackA);\n      releaseArray(stackB);\n      return object;\n    }\n\n    /**\n     * Creates a shallow clone of `object` excluding the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` omitting the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The properties to omit or the\n     *  function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object without the omitted properties.\n     * @example\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');\n     * // => { 'name': 'fred' }\n     *\n     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {\n     *   return typeof value == 'number';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function omit(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var props = [];\n        forIn(object, function(value, key) {\n          props.push(key);\n        });\n        props = baseDifference(props, baseFlatten(arguments, true, false, 1));\n\n        var index = -1,\n            length = props.length;\n\n        while (++index < length) {\n          var key = props[index];\n          result[key] = object[key];\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (!callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates a two dimensional array of an object's key-value pairs,\n     * i.e. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a shallow clone of `object` composed of the specified properties.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If a callback is provided it will be executed for each\n     * property of `object` picking the properties the callback returns truey\n     * for. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The source object.\n     * @param {Function|...string|string[]} [callback] The function called per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns an object composed of the picked properties.\n     * @example\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');\n     * // => { 'name': 'fred' }\n     *\n     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {\n     *   return key.charAt(0) != '_';\n     * });\n     * // => { 'name': 'fred' }\n     */\n    function pick(object, callback, thisArg) {\n      var result = {};\n      if (typeof callback != 'function') {\n        var index = -1,\n            props = baseFlatten(arguments, true, false, 1),\n            length = isObject(object) ? props.length : 0;\n\n        while (++index < length) {\n          var key = props[index];\n          if (key in object) {\n            result[key] = object[key];\n          }\n        }\n      } else {\n        callback = lodash.createCallback(callback, thisArg, 3);\n        forIn(object, function(value, key, object) {\n          if (callback(value, key, object)) {\n            result[key] = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * An alternative to `_.reduce` this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable properties through a callback, with each callback execution\n     * potentially mutating the `accumulator` object. The callback is bound to\n     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).\n     * Callbacks may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {\n     *   num *= num;\n     *   if (num % 2) {\n     *     return result.push(num) < 3;\n     *   }\n     * });\n     * // => [1, 9, 25]\n     *\n     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     * });\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function transform(object, callback, accumulator, thisArg) {\n      var isArr = isArray(object);\n      if (accumulator == null) {\n        if (isArr) {\n          accumulator = [];\n        } else {\n          var ctor = object && object.constructor,\n              proto = ctor && ctor.prototype;\n\n          accumulator = baseCreate(proto);\n        }\n      }\n      if (callback) {\n        callback = lodash.createCallback(callback, thisArg, 4);\n        (isArr ? forEach : forOwn)(object, function(value, index, object) {\n          return callback(accumulator, value, index, object);\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * Creates an array composed of the own enumerable property values of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Objects\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns an array of property values.\n     * @example\n     *\n     * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => [1, 2, 3] (property order is not guaranteed across environments)\n     */\n    function values(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements from the specified indexes, or keys, of the\n     * `collection`. Indexes may be specified as individual arguments or as arrays\n     * of indexes.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`\n     *   to retrieve, specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns a new array of elements corresponding to the\n     *  provided indexes.\n     * @example\n     *\n     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n     * // => ['a', 'c', 'e']\n     *\n     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n     * // => ['fred', 'pebbles']\n     */\n    function at(collection) {\n      var args = arguments,\n          index = -1,\n          props = baseFlatten(args, true, false, 1),\n          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,\n          result = Array(length);\n\n      while(++index < length) {\n        result[index] = collection[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * Checks if a given value is present in a collection using strict equality\n     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n     * offset from the end of the collection.\n     *\n     * @static\n     * @memberOf _\n     * @alias include\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {*} target The value to check for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n     * @example\n     *\n     * _.contains([1, 2, 3], 1);\n     * // => true\n     *\n     * _.contains([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.contains('pebbles', 'eb');\n     * // => true\n     */\n    function contains(collection, target, fromIndex) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = collection ? collection.length : 0,\n          result = false;\n\n      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n      if (isArray(collection)) {\n        result = indexOf(collection, target, fromIndex) > -1;\n      } else if (typeof length == 'number') {\n        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n      } else {\n        forOwn(collection, function(value) {\n          if (++index >= fromIndex) {\n            return !(result = value === target);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through the callback. The corresponding value\n     * of each key is the number of times the key was returned by the callback.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n    });\n\n    /**\n     * Checks if the given callback returns truey value for **all** elements of\n     * a collection. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if all elements passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes']);\n     * // => false\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.every(characters, 'age');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.every(characters, { 'age': 36 });\n     * // => false\n     */\n    function every(collection, callback, thisArg) {\n      var result = true;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (!(result = !!callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return (result = !!callback(value, index, collection));\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning an array of all elements\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that passed the callback check.\n     * @example\n     *\n     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [2, 4, 6]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.filter(characters, 'blocked');\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.filter(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     */\n    function filter(collection, callback, thisArg) {\n      var result = [];\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result.push(value);\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, returning the first element that\n     * the callback returns truey for. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect, findWhere\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.find(characters, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => { 'name': 'barney', 'age': 36, 'blocked': false }\n     *\n     * // using \"_.where\" callback shorthand\n     * _.find(characters, { 'age': 1 });\n     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.find(characters, 'blocked');\n     * // => { 'name': 'fred', 'age': 40, 'blocked': true }\n     */\n    function find(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          if (callback(value, index, collection)) {\n            return value;\n          }\n        }\n      } else {\n        var result;\n        forOwn(collection, function(value, index, collection) {\n          if (callback(value, index, collection)) {\n            result = value;\n            return false;\n          }\n        });\n        return result;\n      }\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the found element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(num) {\n     *   return num % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      forEachRight(collection, function(value, index, collection) {\n        if (callback(value, index, collection)) {\n          result = value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Iterates over elements of a collection, executing the callback for each\n     * element. The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection). Callbacks may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * Note: As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n     * // => logs each number and returns '1,2,3'\n     *\n     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n     * // => logs each number and returns the object (property order is not guaranteed across environments)\n     */\n    function forEach(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if (callback(collection[index], index, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, callback);\n      }\n      return collection;\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');\n     * // => logs each number from right to left and returns '3,2,1'\n     */\n    function forEachRight(collection, callback, thisArg) {\n      var length = collection ? collection.length : 0;\n      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        while (length--) {\n          if (callback(collection[length], length, collection) === false) {\n            break;\n          }\n        }\n      } else {\n        var props = keys(collection);\n        length = props.length;\n        forOwn(collection, function(value, key, collection) {\n          key = props ? props[--length] : --length;\n          return callback(collection[key], key, collection);\n        });\n      }\n      return collection;\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of a collection through the callback. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of the collection through the given callback. The corresponding\n     * value of each key is the last element responsible for generating the key.\n     * The callback is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keys = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keys, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method named by `methodName` on each element in the `collection`\n     * returning an array of the results of each invoked method. Additional arguments\n     * will be provided to each invoked method. If `methodName` is a function it\n     * will be invoked for, and `this` bound to, each element in the `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [arg] Arguments to invoke the method with.\n     * @returns {Array} Returns a new array of the results of each invoked method.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    function invoke(collection, methodName) {\n      var args = slice(arguments, 2),\n          index = -1,\n          isFunc = typeof methodName == 'function',\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an array of values by running each element in the collection\n     * through the callback. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of the results of each `callback` execution.\n     * @example\n     *\n     * _.map([1, 2, 3], function(num) { return num * 3; });\n     * // => [3, 6, 9]\n     *\n     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n     * // => [3, 6, 9] (property order is not guaranteed across environments)\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, callback, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      if (typeof length == 'number') {\n        var result = Array(length);\n        while (++index < length) {\n          result[index] = callback(collection[index], index, collection);\n        }\n      } else {\n        result = [];\n        forOwn(collection, function(value, key, collection) {\n          result[++index] = callback(value, key, collection);\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the maximum value of a collection. If the collection is empty or\n     * falsey `-Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'fred', 'age': 40 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.max(characters, 'age');\n     * // => { 'name': 'fred', 'age': 40 };\n     */\n    function max(collection, callback, thisArg) {\n      var computed = -Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value > result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current > computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the minimum value of a collection. If the collection is empty or\n     * falsey `Infinity` is returned. If a callback is provided it will be executed\n     * for each value in the collection to generate the criterion by which the value\n     * is ranked. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(characters, function(chr) { return chr.age; });\n     * // => { 'name': 'barney', 'age': 36 };\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.min(characters, 'age');\n     * // => { 'name': 'barney', 'age': 36 };\n     */\n    function min(collection, callback, thisArg) {\n      var computed = Infinity,\n          result = computed;\n\n      // allows working with functions like `_.map` without using\n      // their `index` argument as a callback\n      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n        callback = null;\n      }\n      if (callback == null && isArray(collection)) {\n        var index = -1,\n            length = collection.length;\n\n        while (++index < length) {\n          var value = collection[index];\n          if (value < result) {\n            result = value;\n          }\n        }\n      } else {\n        callback = (callback == null && isString(collection))\n          ? charAtCallback\n          : lodash.createCallback(callback, thisArg, 3);\n\n        forEach(collection, function(value, index, collection) {\n          var current = callback(value, index, collection);\n          if (current < computed) {\n            computed = current;\n            result = value;\n          }\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Retrieves the value of a specified property from all elements in the collection.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} property The name of the property to pluck.\n     * @returns {Array} Returns a new array of property values.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(characters, 'name');\n     * // => ['barney', 'fred']\n     */\n    var pluck = map;\n\n    /**\n     * Reduces a collection to a value which is the accumulated result of running\n     * each element in the collection through the callback, where each successive\n     * callback execution consumes the return value of the previous execution. If\n     * `accumulator` is not provided the first element of the collection will be\n     * used as the initial `accumulator` value. The callback is bound to `thisArg`\n     * and invoked with four arguments; (accumulator, value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var sum = _.reduce([1, 2, 3], function(sum, num) {\n     *   return sum + num;\n     * });\n     * // => 6\n     *\n     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n     *   result[key] = num * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6, 'c': 9 }\n     */\n    function reduce(collection, callback, accumulator, thisArg) {\n      if (!collection) return accumulator;\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n\n      var index = -1,\n          length = collection.length;\n\n      if (typeof length == 'number') {\n        if (noaccum) {\n          accumulator = collection[++index];\n        }\n        while (++index < length) {\n          accumulator = callback(accumulator, collection[index], index, collection);\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          accumulator = noaccum\n            ? (noaccum = false, value)\n            : callback(accumulator, value, index, collection)\n        });\n      }\n      return accumulator;\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [callback=identity] The function called per iteration.\n     * @param {*} [accumulator] Initial value of the accumulator.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var list = [[0, 1], [2, 3], [4, 5]];\n     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, callback, accumulator, thisArg) {\n      var noaccum = arguments.length < 3;\n      callback = lodash.createCallback(callback, thisArg, 4);\n      forEachRight(collection, function(value, index, collection) {\n        accumulator = noaccum\n          ? (noaccum = false, value)\n          : callback(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The opposite of `_.filter` this method returns the elements of a\n     * collection that the callback does **not** return truey for.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of elements that failed the callback check.\n     * @example\n     *\n     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n     * // => [1, 3, 5]\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.reject(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.reject(characters, { 'age': 36 });\n     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n     */\n    function reject(collection, callback, thisArg) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n      return filter(collection, function(value, index, collection) {\n        return !callback(value, index, collection);\n      });\n    }\n\n    /**\n     * Retrieves a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Allows working with functions like `_.map`\n     *  without using their `index` arguments as `n`.\n     * @returns {Array} Returns the random sample(s) of `collection`.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (collection && typeof collection.length != 'number') {\n        collection = values(collection);\n      }\n      if (n == null || guard) {\n        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(nativeMax(0, n), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the Fisher-Yates\n     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns a new shuffled collection.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4, 5, 6]);\n     * // => [4, 1, 6, 3, 5, 2]\n     */\n    function shuffle(collection) {\n      var index = -1,\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      forEach(collection, function(value) {\n        var rand = baseRandom(0, ++index);\n        result[index] = result[rand];\n        result[rand] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the size of the `collection` by returning `collection.length` for arrays\n     * and array-like objects or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns `collection.length` or number of own enumerable properties.\n     * @example\n     *\n     * _.size([1, 2]);\n     * // => 2\n     *\n     * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n     * // => 3\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return typeof length == 'number' ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if the callback returns a truey value for **any** element of a\n     * collection. The function returns as soon as it finds a passing value and\n     * does not iterate over the entire collection. The callback is bound to\n     * `thisArg` and invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {boolean} Returns `true` if any element passed the callback check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'blocked': false },\n     *   { 'name': 'fred',   'age': 40, 'blocked': true }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.some(characters, 'blocked');\n     * // => true\n     *\n     * // using \"_.where\" callback shorthand\n     * _.some(characters, { 'age': 1 });\n     * // => false\n     */\n    function some(collection, callback, thisArg) {\n      var result;\n      callback = lodash.createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          if ((result = callback(collection[index], index, collection))) {\n            break;\n          }\n        }\n      } else {\n        forOwn(collection, function(value, index, collection) {\n          return !(result = callback(value, index, collection));\n        });\n      }\n      return !!result;\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through the callback. This method\n     * performs a stable sort, that is, it will preserve the original sort order\n     * of equal elements. The callback is bound to `thisArg` and invoked with\n     * three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an array of property names is provided for `callback` the collection\n     * will be sorted by each property value.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of sorted elements.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n     * // => [3, 1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'barney',  'age': 26 },\n     *   { 'name': 'fred',    'age': 30 }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.map(_.sortBy(characters, 'age'), _.values);\n     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]\n     *\n     * // sorting by multiple properties\n     * _.map(_.sortBy(characters, ['name', 'age']), _.values);\n     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n    function sortBy(collection, callback, thisArg) {\n      var index = -1,\n          isArr = isArray(callback),\n          length = collection ? collection.length : 0,\n          result = Array(typeof length == 'number' ? length : 0);\n\n      if (!isArr) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      forEach(collection, function(value, key, collection) {\n        var object = result[++index] = getObject();\n        if (isArr) {\n          object.criteria = map(callback, function(key) { return value[key]; });\n        } else {\n          (object.criteria = getArray())[0] = callback(value, key, collection);\n        }\n        object.index = index;\n        object.value = value;\n      });\n\n      length = result.length;\n      result.sort(compareAscending);\n      while (length--) {\n        var object = result[length];\n        result[length] = object.value;\n        if (!isArr) {\n          releaseArray(object.criteria);\n        }\n        releaseObject(object);\n      }\n      return result;\n    }\n\n    /**\n     * Converts the `collection` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to convert.\n     * @returns {Array} Returns the new converted array.\n     * @example\n     *\n     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n     * // => [2, 3, 4]\n     */\n    function toArray(collection) {\n      if (collection && typeof collection.length == 'number') {\n        return slice(collection);\n      }\n      return values(collection);\n    }\n\n    /**\n     * Performs a deep comparison of each element in a `collection` to the given\n     * `properties` object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Collections\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Object} props The object of property values to filter by.\n     * @returns {Array} Returns a new array of elements that have the given properties.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.where(characters, { 'age': 36 });\n     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]\n     *\n     * _.where(characters, { 'pets': ['dino'] });\n     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]\n     */\n    var where = filter;\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using strict\n     * equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n     * // => [1, 3, 4]\n     */\n    function difference(array) {\n      return baseDifference(array, baseFlatten(arguments, true, true, 1));\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element that passes the callback check, instead of the element itself.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': false },\n     *   { 'name': 'fred',    'age': 40, 'blocked': true },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n     * ];\n     *\n     * _.findIndex(characters, function(chr) {\n     *   return chr.age < 20;\n     * });\n     * // => 2\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findIndex(characters, 'blocked');\n     * // => 1\n     */\n    function findIndex(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0;\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        if (callback(array[index], index, array)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of a `collection` from right to left.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36, 'blocked': true },\n     *   { 'name': 'fred',    'age': 40, 'blocked': false },\n     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }\n     * ];\n     *\n     * _.findLastIndex(characters, function(chr) {\n     *   return chr.age > 30;\n     * });\n     * // => 1\n     *\n     * // using \"_.where\" callback shorthand\n     * _.findLastIndex(characters, { 'age': 36 });\n     * // => 0\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.findLastIndex(characters, 'blocked');\n     * // => 2\n     */\n    function findLastIndex(array, callback, thisArg) {\n      var length = array ? array.length : 0;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (length--) {\n        if (callback(array[length], length, array)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the first element or first `n` elements of an array. If a callback\n     * is provided elements at the beginning of the array are returned as long\n     * as the callback returns truey. The callback is bound to `thisArg` and\n     * invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head, take\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the first element(s) of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.first([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.first(characters, 'blocked');\n     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function first(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = -1;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[0] : undefined;\n        }\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, n), length));\n    }\n\n    /**\n     * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n     * is truey, the array will only be flattened a single level. If a callback\n     * is provided each element of the array is passed through the callback before\n     * flattening. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2], [3, [[4]]]]);\n     * // => [1, 2, 3, 4];\n     *\n     * _.flatten([1, [2], [3, [[4]]]], true);\n     * // => [1, 2, 3, [[4]]];\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.flatten(characters, 'pets');\n     * // => ['hoppy', 'baby puss', 'dino']\n     */\n    function flatten(array, isShallow, callback, thisArg) {\n      // juggle arguments\n      if (typeof isShallow != 'boolean' && isShallow != null) {\n        thisArg = callback;\n        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;\n        isShallow = false;\n      }\n      if (callback != null) {\n        array = map(array, callback, thisArg);\n      }\n      return baseFlatten(array, isShallow);\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found using\n     * strict equality for comparisons, i.e. `===`. If the array is already sorted\n     * providing `true` for `fromIndex` will run a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 1\n     *\n     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 4\n     *\n     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      if (typeof fromIndex == 'number') {\n        var length = array ? array.length : 0;\n        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);\n      } else if (fromIndex) {\n        var index = sortedIndex(array, value);\n        return array[index] === value ? index : -1;\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element or last `n` elements of an array. If a\n     * callback is provided elements at the end of the array are excluded from\n     * the result as long as the callback returns truey. The callback is bound\n     * to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.initial([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.initial([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [1]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.initial(characters, 'blocked');\n     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]\n     *\n     * // using \"_.where\" callback shorthand\n     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');\n     * // => ['barney', 'fred']\n     */\n    function initial(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : callback || n;\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n    }\n\n    /**\n     * Creates an array of unique values present in all provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of shared values.\n     * @example\n     *\n     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = getArray(),\n          indexOf = getIndexOf(),\n          trustIndexOf = indexOf === baseIndexOf,\n          seen = getArray();\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push(trustIndexOf && value.length >= largeArraySize &&\n            createCache(argsIndex ? args[argsIndex] : seen));\n        }\n      }\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      outer:\n      while (++index < length) {\n        var cache = caches[0];\n        value = array[index];\n\n        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {\n          argsIndex = argsLength;\n          (cache || seen).push(value);\n          while (--argsIndex) {\n            cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n      }\n      while (argsLength--) {\n        cache = caches[argsLength];\n        if (cache) {\n          releaseObject(cache);\n        }\n      }\n      releaseArray(caches);\n      releaseArray(seen);\n      return result;\n    }\n\n    /**\n     * Gets the last element or last `n` elements of an array. If a callback is\n     * provided elements at the end of the array are returned as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback] The function called\n     *  per element or the number of elements to return. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {*} Returns the last element(s) of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     *\n     * _.last([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.last([1, 2, 3], function(num) {\n     *   return num > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.last(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.last(characters, { 'employer': 'na' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function last(array, callback, thisArg) {\n      var n = 0,\n          length = array ? array.length : 0;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array ? array[length - 1] : undefined;\n        }\n      }\n      return slice(array, nativeMax(0, length - n));\n    }\n\n    /**\n     * Gets the index at which the last occurrence of `value` is found using strict\n     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n     * as the offset from the end of the collection.\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value or `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n     * // => 4\n     *\n     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var index = array ? array.length : 0;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from the given array using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {...*} [value] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull(array) {\n      var args = arguments,\n          argsIndex = 0,\n          argsLength = args.length,\n          length = array ? array.length : 0;\n\n      while (++argsIndex < argsLength) {\n        var index = -1,\n            value = args[argsIndex];\n        while (++index < length) {\n          if (array[index] === value) {\n            splice.call(array, index--, 1);\n            length--;\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to but not including `end`. If `start` is less than `stop` a\n     * zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns a new range array.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      start = +start || 0;\n      step = typeof step == 'number' ? step : (+step || 1);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      }\n      // use `Array(length)` so engines like Chakra and V8 avoid slower modes\n      // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n      var index = -1,\n          length = nativeMax(0, ceil((end - start) / (step || 1))),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Removes all elements from an array that the callback returns truey for\n     * and returns an array of removed elements. The callback is bound to `thisArg`\n     * and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4, 5, 6];\n     * var evens = _.remove(array, function(num) { return num % 2 == 0; });\n     *\n     * console.log(array);\n     * // => [1, 3, 5]\n     *\n     * console.log(evens);\n     * // => [2, 4, 6]\n     */\n    function remove(array, callback, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (callback(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.initial` this method gets all but the first element or\n     * first `n` elements of an array. If a callback function is provided elements\n     * at the beginning of the array are excluded from the result as long as the\n     * callback returns truey. The callback is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias drop, tail\n     * @category Arrays\n     * @param {Array} array The array to query.\n     * @param {Function|Object|number|string} [callback=1] The function called\n     *  per element or the number of elements to exclude. If a property name or\n     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n     *  style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.rest([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.rest([1, 2, 3], function(num) {\n     *   return num < 3;\n     * });\n     * // => [3]\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },\n     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }\n     * ];\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.pluck(_.rest(characters, 'blocked'), 'name');\n     * // => ['fred', 'pebbles']\n     *\n     * // using \"_.where\" callback shorthand\n     * _.rest(characters, { 'employer': 'slate' });\n     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n     */\n    function rest(array, callback, thisArg) {\n      if (typeof callback != 'number' && callback != null) {\n        var n = 0,\n            index = -1,\n            length = array ? array.length : 0;\n\n        callback = lodash.createCallback(callback, thisArg, 3);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n      }\n      return slice(array, n);\n    }\n\n    /**\n     * Uses a binary search to determine the smallest index at which a value\n     * should be inserted into a given sorted array in order to maintain the sort\n     * order of the array. If a callback is provided it will be executed for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * callback is bound to `thisArg` and invoked with one argument; (value).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([20, 30, 50], 40);\n     * // => 2\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 2\n     *\n     * var dict = {\n     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n     * };\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return dict.wordToNumber[word];\n     * });\n     * // => 2\n     *\n     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n     *   return this.wordToNumber[word];\n     * }, dict);\n     * // => 2\n     */\n    function sortedIndex(array, value, callback, thisArg) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      // explicitly reference `identity` for better inlining in Firefox\n      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;\n      value = callback(value);\n\n      while (low < high) {\n        var mid = (low + high) >>> 1;\n        (callback(array[mid]) < value)\n          ? low = mid + 1\n          : high = mid;\n      }\n      return low;\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * strict equality for comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of combined values.\n     * @example\n     *\n     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n     * // => [1, 2, 3, 5, 4]\n     */\n    function union() {\n      return baseUniq(baseFlatten(arguments, true, true));\n    }\n\n    /**\n     * Creates a duplicate-value-free version of an array using strict equality\n     * for comparisons, i.e. `===`. If the array is sorted, providing\n     * `true` for `isSorted` will use a faster algorithm. If a callback is provided\n     * each element of `array` is passed through the callback before uniqueness\n     * is computed. The callback is bound to `thisArg` and invoked with three\n     * arguments; (value, index, array).\n     *\n     * If a property name is provided for `callback` the created \"_.pluck\" style\n     * callback will return the property value of the given element.\n     *\n     * If an object is provided for `callback` the created \"_.where\" style callback\n     * will return `true` for elements that have the properties of the given object,\n     * else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Arrays\n     * @param {Array} array The array to process.\n     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n     * @param {Function|Object|string} [callback=identity] The function called\n     *  per iteration. If a property name or object is provided it will be used\n     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns a duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1, 3, 1]);\n     * // => [1, 2, 3]\n     *\n     * _.uniq([1, 1, 2, 2, 3], true);\n     * // => [1, 2, 3]\n     *\n     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n     * // => ['A', 'b', 'C']\n     *\n     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n     * // => [1, 2.5, 3]\n     *\n     * // using \"_.pluck\" callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, callback, thisArg) {\n      // juggle arguments\n      if (typeof isSorted != 'boolean' && isSorted != null) {\n        thisArg = callback;\n        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;\n        isSorted = false;\n      }\n      if (callback != null) {\n        callback = lodash.createCallback(callback, thisArg, 3);\n      }\n      return baseUniq(array, isSorted, callback);\n    }\n\n    /**\n     * Creates an array excluding all provided values using strict equality for\n     * comparisons, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {Array} array The array to filter.\n     * @param {...*} [value] The values to exclude.\n     * @returns {Array} Returns a new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n     * // => [2, 3, 4]\n     */\n    function without(array) {\n      return baseDifference(array, slice(arguments, 1));\n    }\n\n    /**\n     * Creates an array that is the symmetric difference of the provided arrays.\n     * See http://en.wikipedia.org/wiki/Symmetric_difference.\n     *\n     * @static\n     * @memberOf _\n     * @category Arrays\n     * @param {...Array} [array] The arrays to inspect.\n     * @returns {Array} Returns an array of values.\n     * @example\n     *\n     * _.xor([1, 2, 3], [5, 2, 1, 4]);\n     * // => [3, 5, 4]\n     *\n     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n     * // => [1, 4, 5]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))\n            : array;\n        }\n      }\n      return result || [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second\n     * elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @alias unzip\n     * @category Arrays\n     * @param {...Array} [array] Arrays to process.\n     * @returns {Array} Returns a new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    function zip() {\n      var array = arguments.length > 1 ? arguments : arguments[0],\n          index = -1,\n          length = array ? max(pluck(array, 'length')) : 0,\n          result = Array(length < 0 ? 0 : length);\n\n      while (++index < length) {\n        result[index] = pluck(array, index);\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed from arrays of `keys` and `values`. Provide\n     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`\n     * or two arrays, one of `keys` and one of corresponding `values`.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Arrays\n     * @param {Array} keys The array of keys.\n     * @param {Array} [values=[]] The array of values.\n     * @returns {Object} Returns an object composed of the given keys and\n     *  corresponding values.\n     * @example\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(keys, values) {\n      var index = -1,\n          length = keys ? keys.length : 0,\n          result = {};\n\n      if (!values && length && !isArray(keys[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = keys[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that executes `func`, with  the `this` binding and\n     * arguments of the created function, only after being called `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {number} n The number of times the function must be called before\n     *  `func` is executed.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('Done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'Done saving!', after all saves have completed\n     */\n    function after(n, func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with the `this`\n     * binding of `thisArg` and prepends any additional `bind` arguments to those\n     * provided to the bound function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var func = function(greeting) {\n     *   return greeting + ' ' + this.name;\n     * };\n     *\n     * func = _.bind(func, { 'name': 'fred' }, 'hi');\n     * func();\n     * // => 'hi fred'\n     */\n    function bind(func, thisArg) {\n      return arguments.length > 2\n        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n        : createWrapper(func, 1, null, null, thisArg);\n    }\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all the function properties\n     * of `object` will be bound.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...string} [methodName] The object method names to\n     *  bind, specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() { console.log('clicked ' + this.label); }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs', when the button is clicked\n     */\n    function bindAll(object) {\n      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),\n          index = -1,\n          length = funcs.length;\n\n      while (++index < length) {\n        var key = funcs[index];\n        object[key] = createWrapper(object[key], 1, null, null, object);\n      }\n      return object;\n    }\n\n    /**\n     * Creates a function that, when called, invokes the method at `object[key]`\n     * and prepends any additional `bindKey` arguments to those provided to the bound\n     * function. This method differs from `_.bind` by allowing bound functions to\n     * reference methods that will be redefined or don't yet exist.\n     * See http://michaux.ca/articles/lazy-function-definition-pattern.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'name': 'fred',\n     *   'greet': function(greeting) {\n     *     return greeting + ' ' + this.name;\n     *   }\n     * };\n     *\n     * var func = _.bindKey(object, 'greet', 'hi');\n     * func();\n     * // => 'hi fred'\n     *\n     * object.greet = function(greeting) {\n     *   return greeting + 'ya ' + this.name + '!';\n     * };\n     *\n     * func();\n     * // => 'hiya fred!'\n     */\n    function bindKey(object, key) {\n      return arguments.length > 2\n        ? createWrapper(key, 19, slice(arguments, 2), null, object)\n        : createWrapper(key, 3, null, null, object);\n    }\n\n    /**\n     * Creates a function that is the composition of the provided functions,\n     * where each function consumes the return value of the function that follows.\n     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {...Function} [func] Functions to compose.\n     * @returns {Function} Returns the new composed function.\n     * @example\n     *\n     * var realNameMap = {\n     *   'pebbles': 'penelope'\n     * };\n     *\n     * var format = function(name) {\n     *   name = realNameMap[name.toLowerCase()] || name;\n     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n     * };\n     *\n     * var greet = function(formatted) {\n     *   return 'Hiya ' + formatted + '!';\n     * };\n     *\n     * var welcome = _.compose(greet, format);\n     * welcome('pebbles');\n     * // => 'Hiya Penelope!'\n     */\n    function compose() {\n      var funcs = arguments,\n          length = funcs.length;\n\n      while (length--) {\n        if (!isFunction(funcs[length])) {\n          throw new TypeError;\n        }\n      }\n      return function() {\n        var args = arguments,\n            length = funcs.length;\n\n        while (length--) {\n          args = [funcs[length].apply(this, args)];\n        }\n        return args[0];\n      };\n    }\n\n    /**\n     * Creates a function which accepts one or more arguments of `func` that when\n     * invoked either executes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` can be specified\n     * if `func.length` is not sufficient.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var curried = _.curry(function(a, b, c) {\n     *   console.log(a + b + c);\n     * });\n     *\n     * curried(1)(2)(3);\n     * // => 6\n     *\n     * curried(1, 2)(3);\n     * // => 6\n     *\n     * curried(1, 2, 3);\n     * // => 6\n     */\n    function curry(func, arity) {\n      arity = typeof arity == 'number' ? arity : (+arity || func.length);\n      return createWrapper(func, 4, null, null, null, arity);\n    }\n\n    /**\n     * Creates a function that will delay the execution of `func` until after\n     * `wait` milliseconds have elapsed since the last time it was invoked.\n     * Provide an options object to indicate that `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls\n     * to the debounced function will return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to debounce.\n     * @param {number} wait The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * var lazyLayout = _.debounce(calculateLayout, 150);\n     * jQuery(window).on('resize', lazyLayout);\n     *\n     * // execute `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * });\n     *\n     * // ensure `batchLog` is executed once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * source.addEventListener('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }, false);\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      wait = nativeMax(0, wait) || 0;\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      var delayed = function() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      };\n\n      var maxDelayed = function() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      };\n\n      return function() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Defers executing the `func` function until the current call stack has cleared.\n     * Additional arguments will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to defer.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) { console.log(text); }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    function defer(func) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 1);\n      return setTimeout(function() { func.apply(undefined, args); }, 1);\n    }\n\n    /**\n     * Executes the `func` function after `wait` milliseconds. Additional arguments\n     * will be provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay execution.\n     * @param {...*} [arg] Arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) { console.log(text); }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    function delay(func, wait) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var args = slice(arguments, 2);\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it will be used to determine the cache key for storing the result\n     * based on the arguments provided to the memoized function. By default, the\n     * first argument provided to the memoized function is used as the cache key.\n     * The `func` is executed with the `this` binding of the memoized function.\n     * The result cache is exposed as the `cache` property on the memoized function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] A function used to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var fibonacci = _.memoize(function(n) {\n     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n     * });\n     *\n     * fibonacci(9)\n     * // => 34\n     *\n     * var data = {\n     *   'fred': { 'name': 'fred', 'age': 40 },\n     *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // modifying the result cache\n     * var get = _.memoize(function(name) { return data[name]; }, _.identity);\n     * get('pebbles');\n     * // => { 'name': 'pebbles', 'age': 1 }\n     *\n     * get.cache.pebbles.name = 'penelope';\n     * get('pebbles');\n     * // => { 'name': 'penelope', 'age': 1 }\n     */\n    function memoize(func, resolver) {\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      var memoized = function() {\n        var cache = memoized.cache,\n            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];\n\n        return hasOwnProperty.call(cache, key)\n          ? cache[key]\n          : (cache[key] = func.apply(this, arguments));\n      }\n      memoized.cache = {};\n      return memoized;\n    }\n\n    /**\n     * Creates a function that is restricted to execute `func` once. Repeat calls to\n     * the function will return the value of the first call. The `func` is executed\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` executes `createApplication` once\n     */\n    function once(func) {\n      var ran,\n          result;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      return function() {\n        if (ran) {\n          return result;\n        }\n        ran = true;\n        result = func.apply(this, arguments);\n\n        // clear the `func` variable so the function may be garbage collected\n        func = null;\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that, when called, invokes `func` with any additional\n     * `partial` arguments prepended to those provided to the new function. This\n     * method is similar to `_.bind` except it does **not** alter the `this` binding.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) { return greeting + ' ' + name; };\n     * var hi = _.partial(greet, 'hi');\n     * hi('fred');\n     * // => 'hi fred'\n     */\n    function partial(func) {\n      return createWrapper(func, 16, slice(arguments, 1));\n    }\n\n    /**\n     * This method is like `_.partial` except that `partial` arguments are\n     * appended to those provided to the new function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [arg] Arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n     *\n     * var options = {\n     *   'variable': 'data',\n     *   'imports': { 'jq': $ }\n     * };\n     *\n     * defaultsDeep(options, _.templateSettings);\n     *\n     * options.variable\n     * // => 'data'\n     *\n     * options.imports\n     * // => { '_': _, 'jq': $ }\n     */\n    function partialRight(func) {\n      return createWrapper(func, 32, null, slice(arguments, 1));\n    }\n\n    /**\n     * Creates a function that, when executed, will only call the `func` function\n     * at most once per every `wait` milliseconds. Provide an options object to\n     * indicate that `func` should be invoked on the leading and/or trailing edge\n     * of the `wait` timeout. Subsequent calls to the throttled function will\n     * return the result of the last `func` call.\n     *\n     * Note: If `leading` and `trailing` options are `true` `func` will be called\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {Function} func The function to throttle.\n     * @param {number} wait The number of milliseconds to throttle executions to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * var throttled = _.throttle(updatePosition, 100);\n     * jQuery(window).on('scroll', throttled);\n     *\n     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (!isFunction(func)) {\n        throw new TypeError;\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? options.leading : leading;\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = wait;\n      debounceOptions.trailing = trailing;\n\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Additional arguments provided to the function are appended\n     * to those provided to the wrapper function. The wrapper is executed with\n     * the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Functions\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('Fred, Wilma, & Pebbles');\n     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return createWrapper(wrapper, 16, [value]);\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * var getter = _.constant(object);\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Produces a callback bound to an optional `thisArg`. If `func` is a property\n     * name the created callback will return the property value for a given element.\n     * If `func` is an object the created callback will return `true` for elements\n     * that contain the equivalent object properties, otherwise it will return `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} [func=identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of the created callback.\n     * @param {number} [argCount] The number of arguments the callback accepts.\n     * @returns {Function} Returns a callback function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n     *   return !match ? func(callback, thisArg) : function(object) {\n     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(characters, 'age__gt38');\n     * // => [{ 'name': 'fred', 'age': 40 }]\n     */\n    function createCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (func == null || type == 'function') {\n        return baseCreateCallback(func, thisArg, argCount);\n      }\n      // handle \"_.pluck\" style callback shorthands\n      if (type != 'object') {\n        return property(func);\n      }\n      var props = keys(func),\n          key = props[0],\n          a = func[key];\n\n      // handle \"_.where\" style callback shorthands\n      if (props.length == 1 && a === a && !isObject(a)) {\n        // fast path the common case of providing an object with a single\n        // property containing a primitive value\n        return function(object) {\n          var b = object[key];\n          return a === b && (a !== 0 || (1 / a == 1 / b));\n        };\n      }\n      return function(object) {\n        var length = props.length,\n            result = false;\n\n        while (length--) {\n          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n            break;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n     * corresponding HTML entities.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('Fred, Wilma, & Pebbles');\n     * // => 'Fred, Wilma, &amp; Pebbles'\n     */\n    function escape(string) {\n      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Adds function properties of a source object to the destination object.\n     * If `object` is a function methods will be added to its prototype as well.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Function|Object} [object=lodash] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.\n     * @example\n     *\n     * function capitalize(string) {\n     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n     * }\n     *\n     * _.mixin({ 'capitalize': capitalize });\n     * _.capitalize('fred');\n     * // => 'Fred'\n     *\n     * _('fred').capitalize().value();\n     * // => 'Fred'\n     *\n     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });\n     * _('fred').capitalize();\n     * // => 'Fred'\n     */\n    function mixin(object, source, options) {\n      var chain = true,\n          methodNames = source && functions(source);\n\n      if (!source || (!options && !methodNames.length)) {\n        if (options == null) {\n          options = source;\n        }\n        ctor = lodashWrapper;\n        source = object;\n        object = lodash;\n        methodNames = functions(source);\n      }\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      var ctor = object,\n          isFunc = isFunction(ctor);\n\n      forEach(methodNames, function(methodName) {\n        var func = object[methodName] = source[methodName];\n        if (isFunc) {\n          ctor.prototype[methodName] = function() {\n            var chainAll = this.__chain__,\n                value = this.__wrapped__,\n                args = [value];\n\n            push.apply(args, arguments);\n            var result = func.apply(object, args);\n            if (chain || chainAll) {\n              if (value === result && isObject(result)) {\n                return this;\n              }\n              result = new ctor(result);\n              result.__chain__ = chainAll;\n            }\n            return result;\n          };\n        }\n      });\n    }\n\n    /**\n     * Reverts the '_' variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var object = { 'name': 'fred' };\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // no operation performed\n    }\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @example\n     *\n     * var stamp = _.now();\n     * _.defer(function() { console.log(_.now() - stamp); });\n     * // => logs the number of milliseconds it took for the deferred function to be called\n     */\n    var now = isNative(now = Date.now) && now || function() {\n      return new Date().getTime();\n    };\n\n    /**\n     * Converts the given value into an integer of the specified radix.\n     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the\n     * `value` is a hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * Note: This method avoids differences in native ES3 and ES5 `parseInt`\n     * implementations. See http://es5.github.io/#E.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} value The value to parse.\n     * @param {number} [radix] The radix used to interpret the value to parse.\n     * @returns {number} Returns the new integer value.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     */\n    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {\n      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`\n      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);\n    };\n\n    /**\n     * Creates a \"_.pluck\" style function, which returns the `key` value of a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} key The name of the property to retrieve.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'fred',   'age': 40 },\n     *   { 'name': 'barney', 'age': 36 }\n     * ];\n     *\n     * var getName = _.property('name');\n     *\n     * _.map(characters, getName);\n     * // => ['barney', 'fred']\n     *\n     * _.sortBy(characters, getName);\n     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n     */\n    function property(key) {\n      return function(object) {\n        return object[key];\n      };\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number will be\n     * returned. If `floating` is truey or either `min` or `max` are floats a\n     * floating-point number will be returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating=false] Specify returning a floating-point number.\n     * @returns {number} Returns a random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (typeof min == 'boolean' && noMax) {\n          floating = min;\n          min = 1;\n        }\n        else if (!noMax && typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /**\n     * Resolves the value of property `key` on `object`. If `key` is a function\n     * it will be invoked with the `this` binding of `object` and its result returned,\n     * else the property value is returned. If `object` is falsey then `undefined`\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Object} object The object to inspect.\n     * @param {string} key The name of the property to resolve.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = {\n     *   'cheese': 'crumpets',\n     *   'stuff': function() {\n     *     return 'nonsense';\n     *   }\n     * };\n     *\n     * _.result(object, 'cheese');\n     * // => 'crumpets'\n     *\n     * _.result(object, 'stuff');\n     * // => 'nonsense'\n     */\n    function result(object, key) {\n      if (object) {\n        var value = object[key];\n        return isFunction(value) ? object[key]() : value;\n      }\n    }\n\n    /**\n     * A micro-templating method that handles arbitrary delimiters, preserves\n     * whitespace, and correctly escapes quotes within interpolated code.\n     *\n     * Note: In the development build, `_.template` utilizes sourceURLs for easier\n     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n     *\n     * For more information on precompiling templates see:\n     * http://lodash.com/custom-builds\n     *\n     * For more information on Chrome extension sandboxes see:\n     * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} text The template text.\n     * @param {Object} data The data object used to populate the text.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as local variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [variable] The data object variable name.\n     * @returns {Function|string} Returns a compiled function when no `data` object\n     *  is given, else it returns the interpolated text.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= name %>');\n     * compiled({ 'name': 'fred' });\n     * // => 'hello fred'\n     *\n     * // using the \"escape\" delimiter to escape HTML in data property values\n     * _.template('<b><%- value %></b>', { 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to generate HTML\n     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n     * _.template('hello ${ name }', { 'name': 'pebbles' });\n     * // => 'hello pebbles'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * _.template('<% print(\"hello \" + name); %>!', { 'name': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using a custom template delimiters\n     * _.templateSettings = {\n     *   'interpolate': /{{([\\s\\S]+?)}}/g\n     * };\n     *\n     * _.template('hello {{ name }}!', { 'name': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using the `imports` option to import jQuery\n     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';\n     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     *   var __t, __p = '', __e = _.escape;\n     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n     *   return __p;\n     * }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(text, data, options) {\n      // based on John Resig's `tmpl` implementation\n      // http://ejohn.org/blog/javascript-micro-templating/\n      // and Laura Doktorova's doT.js\n      // https://github.com/olado/doT\n      var settings = lodash.templateSettings;\n      text = String(text || '');\n\n      // avoid missing dependencies when `iteratorTemplate` is not defined\n      options = defaults({}, options, settings);\n\n      var imports = defaults({}, options.imports, settings.imports),\n          importsKeys = keys(imports),\n          importsValues = values(imports);\n\n      var isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // compile the regexp to match each delimiter\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // escape characters that cannot be included in string literals\n        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // replace delimiters with snippets\n        if (escapeValue) {\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // the JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // if `variable` is not specified, wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain\n      var variable = options.variable,\n          hasVariable = variable;\n\n      if (!hasVariable) {\n        variable = 'obj';\n        source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n      }\n      // cleanup code by stripping empty strings\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // frame code as the function body\n      source = 'function(' + variable + ') {\\n' +\n        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n        \"var __t, __p = '', __e = _.escape\" +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      // Use a sourceURL for easier debugging.\n      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n      var sourceURL = '\\n/*\\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n\n      try {\n        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n      } catch(e) {\n        e.source = source;\n        throw e;\n      }\n      if (data) {\n        return result(data);\n      }\n      // provide the compiled function's source by its `toString` method, in\n      // supported environments, or the `source` property as a convenience for\n      // inlining compiled templates during the build process\n      result.source = source;\n      return result;\n    }\n\n    /**\n     * Executes the callback `n` times, returning an array of the results\n     * of each callback execution. The callback is bound to `thisArg` and invoked\n     * with one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {number} n The number of times to execute the callback.\n     * @param {Function} callback The function called per iteration.\n     * @param {*} [thisArg] The `this` binding of `callback`.\n     * @returns {Array} Returns an array of the results of each `callback` execution.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) { mage.castSpell(n); });\n     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) { this.cast(n); }, mage);\n     * // => also calls `mage.castSpell(n)` three times\n     */\n    function times(n, callback, thisArg) {\n      n = (n = +n) > -1 ? n : 0;\n      var index = -1,\n          result = Array(n);\n\n      callback = baseCreateCallback(callback, thisArg, 1);\n      while (++index < n) {\n        result[index] = callback(index);\n      }\n      return result;\n    }\n\n    /**\n     * The inverse of `_.escape` this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n     * corresponding characters.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} string The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('Fred, Barney &amp; Pebbles');\n     * // => 'Fred, Barney & Pebbles'\n     */\n    function unescape(string) {\n      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return String(prefix == null ? '' : prefix) + id;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps the given value with explicit\n     * method chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney',  'age': 36 },\n     *   { 'name': 'fred',    'age': 40 },\n     *   { 'name': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(characters)\n     *     .sortBy('age')\n     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })\n     *     .first()\n     *     .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      value = new lodashWrapper(value);\n      value.__chain__ = true;\n      return value;\n    }\n\n    /**\n     * Invokes `interceptor` with the `value` as the first argument and then\n     * returns `value`. The purpose of this method is to \"tap into\" a method\n     * chain in order to perform operations on intermediate results within\n     * the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chaining\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3, 4])\n     *  .tap(function(array) { array.pop(); })\n     *  .reverse()\n     *  .value();\n     * // => [3, 2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chaining\n     * @returns {*} Returns the wrapper object.\n     * @example\n     *\n     * var characters = [\n     *   { 'name': 'barney', 'age': 36 },\n     *   { 'name': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(characters).first();\n     * // => { 'name': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(characters).chain()\n     *   .first()\n     *   .pick('age')\n     *   .value();\n     * // => { 'age': 36 }\n     */\n    function wrapperChain() {\n      this.__chain__ = true;\n      return this;\n    }\n\n    /**\n     * Produces the `toString` result of the wrapped value.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chaining\n     * @returns {string} Returns the string result.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return String(this.__wrapped__);\n    }\n\n    /**\n     * Extracts the wrapped value.\n     *\n     * @name valueOf\n     * @memberOf _\n     * @alias value\n     * @category Chaining\n     * @returns {*} Returns the wrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).valueOf();\n     * // => [1, 2, 3]\n     */\n    function wrapperValueOf() {\n      return this.__wrapped__;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return wrapped values when chaining\n    lodash.after = after;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.chain = chain;\n    lodash.compact = compact;\n    lodash.compose = compose;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.createCallback = createCallback;\n    lodash.curry = curry;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.max = max;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.min = min;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.pull = pull;\n    lodash.range = range;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.shuffle = shuffle;\n    lodash.sortBy = sortBy;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.values = values;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // add aliases\n    lodash.collect = map;\n    lodash.drop = rest;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n    lodash.unzip = zip;\n\n    // add functions to `lodash.prototype`\n    mixin(lodash);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions that return unwrapped values when chaining\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.contains = contains;\n    lodash.escape = escape;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.indexOf = indexOf;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isNaN = isNaN;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isUndefined = isUndefined;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.mixin = mixin;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.template = template;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n\n    // add aliases\n    lodash.all = every;\n    lodash.any = some;\n    lodash.detect = find;\n    lodash.findWhere = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.include = contains;\n    lodash.inject = reduce;\n\n    mixin(function() {\n      var source = {}\n      forOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }(), false);\n\n    /*--------------------------------------------------------------------------*/\n\n    // add functions capable of returning wrapped and unwrapped values when chaining\n    lodash.first = first;\n    lodash.last = last;\n    lodash.sample = sample;\n\n    // add aliases\n    lodash.take = first;\n    lodash.head = first;\n\n    forOwn(lodash, function(func, methodName) {\n      var callbackable = methodName !== 'sample';\n      if (!lodash.prototype[methodName]) {\n        lodash.prototype[methodName]= function(n, guard) {\n          var chainAll = this.__chain__,\n              result = func(this.__wrapped__, n, guard);\n\n          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))\n            ? result\n            : new lodashWrapper(result, chainAll);\n        };\n      }\n    });\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = '2.4.1';\n\n    // add \"Chaining\" functions to the wrapper\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.value = wrapperValueOf;\n    lodash.prototype.valueOf = wrapperValueOf;\n\n    // add `Array` functions that return unwrapped values\n    forEach(['join', 'pop', 'shift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        var chainAll = this.__chain__,\n            result = func.apply(this.__wrapped__, arguments);\n\n        return chainAll\n          ? new lodashWrapper(result, chainAll)\n          : result;\n      };\n    });\n\n    // add `Array` functions that return the existing wrapped value\n    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        func.apply(this.__wrapped__, arguments);\n        return this;\n      };\n    });\n\n    // add `Array` functions that return new wrapped values\n    forEach(['concat', 'slice', 'splice'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);\n      };\n    });\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose Lo-Dash\n  var _ = runInContext();\n\n  // some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash is loaded with a RequireJS shim config.\n    // See http://requirejs.org/docs/api.html#config-shim\n    root._ = _;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define(function() {\n      return _;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // in Narwhal or Rhino -require\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // in a browser or Rhino\n    root._ = _;\n  }\n}.call(this));\n","import {View} from 'backbone';\nimport _ from 'lodash';\n\nexport default class Editor extends View {\n  render() {\n    this.editor = ace.edit(this.el);\n    this.renderer = this.editor.renderer;\n    this.session = this.editor.getSession();\n    this.document = this.session.getDocument();\n\n    this.editor.setTheme('ace/theme/tomorrow');\n    this.editor.setShowPrintMargin(false);\n    this.$el.css({\n      fontFamily: 'Menlo, Monaco, Consolas, \"Courier New\", monospace',\n      lineHeight: 'inherit'\n    });\n\n    this.session.setMode('ace/mode/javascript');\n    this.session.setUseSoftTabs(true);\n    this.session.setTabSize(2);\n\n    return this;\n  }\n\n  setReadOnly() {\n    this.editor.setReadOnly(true);\n    this.editor.setHighlightActiveLine(false);\n    this.editor.setHighlightGutterLine(false);\n  }\n\n  getHeight() {\n    return this.renderer.lineHeight * this.document.getLength();\n  }\n}","import {View} from 'backbone';\nimport $ from 'jquery';\n\nexport default class ScrollSpy extends View {\n  get el() {\n    return $(document.body)\n  }\n\n  render() {\n    this.$el.scrollspy({\n      target: '.sidebar',\n      offset: 50\n    });\n\n    return this;\n  }\n}","import {View} from 'backbone';\nimport $ from 'jquery';\nimport _ from 'lodash';\n\nexport default class Sidebar extends View {\n  get el() {\n    return $('.sidebar');\n  }\n\n  render() {\n    var headings = this.collectHeadings();\n    var template = this.renderHeadings(headings);\n\n    this.$('.nav').html(template);\n\n    this.$el.affix({\n      offset: {\n        top: _.memoize(_.bind(this.calculateTop, this)),\n        bottom: _.memoize(_.bind(this.calculateBottom, this))\n      }\n    });\n\n    return this;\n  }\n\n  collectHeadings() {\n    var headings = [];\n    var current;\n    $('h2, h3').each(function(index, heading) {\n      var value = {\n        id: heading.id,\n        text: heading.textContent,\n        children: []\n      };\n\n      if (heading.tagName.toUpperCase() === 'H2') {\n        headings.push(value);\n        current = value;\n      } else {\n        current.children.push(value);\n      }\n    });\n    return headings;\n  }\n\n  renderHeadings(headings) {\n    var template = '';\n    _.each(headings, function(heading) {\n      template += `<li><a href=\"#${heading.id}\">${heading.text}</a>`;\n      if (heading.children.length) {\n        template += `<ul class=\"nav\">${this.renderHeadings(heading.children)}</ul>`;\n      }\n      template += '</li>';\n    }, this);\n    return template;\n  }\n\n  calculateTop() {\n    let offsetTop = this.$el.offset().top;\n    let navbarOuterHeight = $('.navbar').height();\n    let sidebarMargin = parseInt(this.$el.children(0).css('margin-top'), 10);\n\n    return offsetTop - navbarOuterHeight - sidebarMargin;\n  }\n\n  calculateBottom() {\n    return $('.footer').outerHeight(true);\n  }\n}","import {View, Model} from 'backbone';\n\nexport default class Toolbar extends View {\n  initialize(options = {}) {\n    this.settings = new Model(options.settings || {\n      experimental : 'true',\n      playground   : 'true'\n    });\n  }\n\n  render() {\n    this.ui = {\n      experimental : this.$('#experimental'),\n      playground   : this.$('#playground')\n    };\n    this.deserialize();\n    return this;\n  }\n\n  get events() {\n    return {\n      'change input': 'serialize'\n    };\n  }\n\n  deserialize() {\n    this.ui.experimental.prop('checked', this.settings.get('experimental') === 'true');\n    this.ui.playground.prop('checked', this.settings.get('playground') === 'true');\n  }\n\n  serialize() {\n    this.settings.set('experimental', this.ui.experimental.prop('checked').toString());\n    this.settings.set('playground', this.ui.playground.prop('checked').toString());\n  }\n}","import {View} from 'backbone';\nimport $ from 'jquery';\nimport ScrollSpy from '../components/scrollspy';\nimport Sidebar from '../components/sidebar';\n\nexport default class Docs extends View {\n  get el() {\n    return $(document.body);\n  }\n\n  render() {\n    this.sidebar = new Sidebar({ el: this.$('.sidebar') }).render();\n    this.scrollspy = new ScrollSpy({ el: this.$el }).render();\n    return this;\n  }\n}","\"use strict\";\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIvVXNlcnMvdGhlamFtZXNreWxlL2dpdC9lczYvNnRvNS5naXRodWIuaW8vc3JjL3NjcmlwdHMvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6W119","\"use strict\";\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIvVXNlcnMvdGhlamFtZXNreWxlL2dpdC9lczYvNnRvNS5naXRodWIuaW8vc3JjL3NjcmlwdHMvcGFnZXMvcGx1Z2lucy5qcyIsInNvdXJjZXNDb250ZW50IjpbXX0=","import {View, history} from 'backbone';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport to5 from '6to5/lib/6to5/browser';\nimport '6to5/browser-polyfill';\nimport Editor from '../components/editor';\nimport Toolbar from '../components/toolbar';\n\nexport default class Repl extends View {\n  get el() {\n    return $(document.body);\n  }\n\n  render() {\n    this.toolbar = new Toolbar({\n      el: this.$('.repl-options'),\n      settings: this._getHash()\n    }).render();\n\n    this.listenTo(this.toolbar.settings, 'change', function() {\n      this._updateHash();\n    });\n\n    this.input = new Editor({\n      el: this.$('.repl-input .editor')\n    }).render();\n\n    this.output = new Editor({\n      el: this.$('.repl-output .editor')\n    }).render();\n\n    this.output.setReadOnly();\n\n    this.input.session.on('changeScrollTop', _.bind(this._updateOutputScroll, this));\n    this.output.session.on('changeScrollTop', _.bind(this._updateInputScroll, this));\n\n    this.input.on('change', this._updateCode);\n\n    return this;\n  }\n\n  _updateInputScroll(scrollTop) {\n    this._updateScroll(this.output, this.input, scrollTop);\n  }\n\n  _updateOutputScroll(scrollTop) {\n    this._updateScroll(this.input, this.output, scrollTop);\n  }\n\n  _updateScroll(from, to, scrollTop) {\n    if (this._isChanging) return;\n    this._isChanging = true;\n    var position = (scrollTop / from.getHeight()) * to.getHeight();\n    to.session.setScrollTop(position);\n    this._isChanging = false;\n  }\n\n  _getHash() {\n    var hash = history.getHash().replace(/^\\?/, '').split('&');\n    return _.transform(hash, function(accumulator, item) {\n      var parts = item.split('=');\n      accumulator[parts[0]] = decodeURIComponent(parts[1]);\n    }, {});\n  }\n\n  _updateHash() {\n    var query = _.map(this.toolbar.settings.attributes, function(value, name) {\n      return `${name}=${value}`;\n    });\n    query.push('code=' + encodeURIComponent(this.input.editor.getValue()));\n    history._updateHash(history.location, '?' + query.join('&'), true);\n  }\n\n  _updateCode() {\n\n  }\n}\n","import {Router} from 'backbone';\nimport IndexPage from './pages/index';\nimport PluginsPage from './pages/plugins';\nimport DocsPage from './pages/docs';\nimport ReplPage from './pages/repl';\n\nexport default class PageRouter extends Router {\n  get routes() {\n    return {\n      '6to5.github.io/dist/index.html'      : 'index',\n      '6to5.github.io/dist/plugins.html'    : 'plugins',\n      '6to5.github.io/dist/repl.html'       : 'repl',\n      '6to5.github.io/dist/tour.html'       : 'docs',\n      '6to5.github.io/dist/usage.html'      : 'docs',\n      '6to5.github.io/dist/compare.html'    : 'docs',\n      '6to5.github.io/dist/caveats.html'    : 'docs',\n      '6to5.github.io/dist/docs/:name.html' : 'docs'\n    };\n  }\n\n  index() {\n    new IndexPage().render();\n  }\n\n  plugins() {\n    new PluginsPage().render();\n  }\n\n  repl() {\n    new ReplPage().render();\n  }\n\n  docs() {\n    new DocsPage().render();\n  }\n}"]}